
*******************************************************************************
after parsing
FormCreate(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (85,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (88,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (88,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (88,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (88,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (88,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (88,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 5
            )

         )
         (callparan, resultdef = <nil>, pos = (88,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (88,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (89,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (89,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (89,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (89,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (89,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (89,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
            )

         )
         (callparan, resultdef = <nil>, pos = (89,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (89,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (90,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (90,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (90,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (90,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (90,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (90,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 5
            )

         )
         (callparan, resultdef = <nil>, pos = (90,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (90,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (91,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (91,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (91,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (91,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (91,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (91,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
            )

         )
         (callparan, resultdef = <nil>, pos = (91,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (91,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (92,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (92,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (92,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (92,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (92,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (92,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (92,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (92,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (93,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (93,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (93,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (93,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (93,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (93,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
            )

         )
         (callparan, resultdef = <nil>, pos = (93,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (93,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (94,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (94,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (94,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (94,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (94,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (94,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 6
            )

         )
         (callparan, resultdef = <nil>, pos = (94,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (94,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (95,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (95,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (95,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (95,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (95,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (95,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
            )

         )
         (callparan, resultdef = <nil>, pos = (95,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (95,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (97,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (97,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (subscriptn, resultdef = Single = "Single", pos = (97,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (97,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         (realconstn, resultdef = Single = "Single", pos = (97,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            value =  1.0000000000000000E+000         )
      )

   )
   (statementn, resultdef = <nil>, pos = (98,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (98,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = TBitmap = "TBitmap", pos = (98,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = BITMAPGRID
         )
         (calln, resultdef = TBitmap = "TBitmap", pos = (98,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = constructor Create(<TCustomBitmap>;<Class Of TCustomBitmap>);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (98,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (typen, resultdef = TBitmap = "TBitmap", pos = (98,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (98,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (98,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (98,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (98,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (99,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (99,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = SetSize(<TCustomBitmap>;LongInt;LongInt);
         methodpointer =
         (loadn, resultdef = TBitmap = "TBitmap", pos = (99,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = BITMAPGRID
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (99,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (99,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (99,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (99,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (99,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (99,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (99,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (99,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (100,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (100,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetPixelFormat(<TRasterImage>;TPixelFormat);
         methodpointer =
         (loadn, resultdef = TBitmap = "TBitmap", pos = (100,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = BITMAPGRID
         )
         left =
         (callparan, resultdef = TPixelFormat = "<enumeration type>", pos = (100,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TPixelFormat = "<enumeration type>", pos = (100,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 6
            )

         )
         (callparan, resultdef = <nil>, pos = (100,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (100,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (101,73), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (101,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = RenderGrid(TCanvas;LongInt;LongInt;LongInt;TGraphicsColor;TGraphicsColor);
         left =
         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (101,72), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (101,72), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 8421504
            )

         )
         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (101,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (101,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 16777215
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (101,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (101,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 40
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (101,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (101,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (101,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = TCanvas = "TCanvas", pos = (101,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = TCanvas = "TCanvas", pos = (101,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetCanvas(<TRasterImage>):TCanvas;
               methodpointer =
               (loadn, resultdef = TBitmap = "TBitmap", pos = (101,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = BITMAPGRID
               )
               left =
               (callparan, resultdef = <nil>, pos = (101,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (nothingn, resultdef = $void = "untyped", pos = (101,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  )

               )
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
FormCreate(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (88,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (88,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (88,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (88,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (88,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TPanel = "TPanel", pos = (88,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (88,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (88,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (88,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 5
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (89,58), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (89,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (89,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (89,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (89,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TPanel = "TPanel", pos = (89,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (89,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (89,58), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (89,58), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
               nil
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (90,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (90,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (90,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (90,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (90,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (90,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (90,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (90,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (90,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 5
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (91,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (91,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (91,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (91,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (91,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (91,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (91,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (91,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (91,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
               nil
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (92,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (92,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (92,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (92,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (92,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TPanel = "TPanel", pos = (92,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (92,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (92,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (92,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (93,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (93,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (93,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (93,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (93,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TPanel = "TPanel", pos = (93,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (93,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (93,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (93,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
               nil
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (94,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (94,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (94,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (94,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (94,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (94,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (94,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (94,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (94,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 6
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (95,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (95,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (95,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (95,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (95,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (95,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (95,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (95,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (95,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
               nil
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (97,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (97,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (subscriptn, resultdef = Single = "Single", pos = (97,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (97,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         (realconstn, resultdef = Single = "Single", pos = (97,17), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
            value =  1.0000000000000000E+000         )
      )

   )
   (statementn, resultdef = <nil>, pos = (98,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (98,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = TBitmap = "TBitmap", pos = (98,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = BITMAPGRID
         )
         (calln, resultdef = TBitmap = "TBitmap", pos = (98,22), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
            proc = constructor Create(<TCustomBitmap>;<Class Of TCustomBitmap>);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (98,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
               (typen, resultdef = TBitmap = "TBitmap", pos = (98,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (98,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (pointerconstn, resultdef = Pointer = "^untyped", pos = (98,22), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = $0000000000000001
               )

            )
            (callparan, resultdef = <nil>, pos = (98,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (98,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TBitmap = "TBitmap", pos = (98,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (99,45), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (99,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = SetSize(<TCustomBitmap>;LongInt;LongInt);
         methodpointer =
         (loadn, resultdef = TBitmap = "TBitmap", pos = (99,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = BITMAPGRID
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (99,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (99,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (99,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (99,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (99,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (99,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (99,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TBitmap = "TBitmap", pos = (99,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = BITMAPGRID
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (100,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (100,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetPixelFormat(<TRasterImage>;TPixelFormat);
         methodpointer =
         (loadn, resultdef = TBitmap = "TBitmap", pos = (100,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = BITMAPGRID
         )
         left =
         (callparan, resultdef = <nil>, pos = (100,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TBitmap = "TBitmap", pos = (100,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = BITMAPGRID
            )

         )
         (callparan, resultdef = TPixelFormat = "<enumeration type>", pos = (100,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TPixelFormat = "<enumeration type>", pos = (100,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 6
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (101,73), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (101,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = RenderGrid(TCanvas;LongInt;LongInt;LongInt;TGraphicsColor;TGraphicsColor);
         left =
         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (101,72), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (101,72), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 8421504
            )

         )
         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (101,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (101,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 16777215
            )

         )
         (callparan, resultdef = TCanvas = "TCanvas", pos = (101,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            (calln, resultdef = TCanvas = "TCanvas", pos = (101,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetCanvas(<TRasterImage>):TCanvas;
               methodpointer =
               (loadn, resultdef = TBitmap = "TBitmap", pos = (101,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = BITMAPGRID
               )
               left =
               (callparan, resultdef = <nil>, pos = (101,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TBitmap = "TBitmap", pos = (101,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BITMAPGRID
                  )

               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (101,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (101,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (101,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (101,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (101,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 40
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
FormCreate(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (85,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (88,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (88,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetAlign(<TControl>;TAlign);
               methodpointer =
               (subscriptn, resultdef = TPanel = "TPanel", pos = (88,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (88,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (88,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (88,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (88,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TAlign = "<enumeration type>", pos = (88,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (88,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 5
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (89,58), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (89,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetAnchors(<TControl>;const TAnchors);
               methodpointer =
               (subscriptn, resultdef = TPanel = "TPanel", pos = (89,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (89,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (89,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (89,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (89,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (89,58), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (89,58), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
                     nil
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (90,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (90,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetAlign(<TControl>;TAlign);
               methodpointer =
               (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (90,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (90,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (90,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (90,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (90,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TAlign = "<enumeration type>", pos = (90,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (90,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 5
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (91,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (91,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetAnchors(<TControl>;const TAnchors);
               methodpointer =
               (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (91,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (91,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (91,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (91,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (91,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (91,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (91,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
                     nil
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (92,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (92,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetAlign(<TControl>;TAlign);
               methodpointer =
               (subscriptn, resultdef = TPanel = "TPanel", pos = (92,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (92,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (92,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (92,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (92,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TAlign = "<enumeration type>", pos = (92,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (92,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (93,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (93,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetAnchors(<TControl>;const TAnchors);
               methodpointer =
               (subscriptn, resultdef = TPanel = "TPanel", pos = (93,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (93,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (93,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (93,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (93,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (93,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (93,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
                     nil
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (94,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (94,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetAlign(<TControl>;TAlign);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (94,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (94,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (94,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (94,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (94,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TAlign = "<enumeration type>", pos = (94,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (94,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 6
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (95,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (95,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetAnchors(<TControl>;const TAnchors);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (95,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (95,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (95,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (95,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (95,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (95,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (95,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
                     nil
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (97,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (97,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (subscriptn, resultdef = Single = "Single", pos = (97,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (97,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               (realconstn, resultdef = Single = "Single", pos = (97,17), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                  value =  1.0000000000000000E+000               )
            )

         )
         (statementn, resultdef = <nil>, pos = (98,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (98,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = TBitmap = "TBitmap", pos = (98,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = BITMAPGRID
               )
               (calln, resultdef = TBitmap = "TBitmap", pos = (98,22), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                  proc = constructor Create(<TCustomBitmap>;<Class Of TCustomBitmap>);
                  methodpointer =
                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (98,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                     (typen, resultdef = TBitmap = "TBitmap", pos = (98,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     )
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (98,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (pointerconstn, resultdef = Pointer = "^untyped", pos = (98,22), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = $0000000000000001
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (98,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (98,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TBitmap = "TBitmap", pos = (98,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )

                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (99,45), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (99,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = SetSize(<TCustomBitmap>;LongInt;LongInt);
               methodpointer =
               (loadn, resultdef = TBitmap = "TBitmap", pos = (99,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = BITMAPGRID
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (99,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (99,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (99,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (99,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (99,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (99,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (99,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TBitmap = "TBitmap", pos = (99,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BITMAPGRID
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (100,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (100,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetPixelFormat(<TRasterImage>;TPixelFormat);
               methodpointer =
               (loadn, resultdef = TBitmap = "TBitmap", pos = (100,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = BITMAPGRID
               )
               left =
               (callparan, resultdef = <nil>, pos = (100,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TBitmap = "TBitmap", pos = (100,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BITMAPGRID
                  )

               )
               (callparan, resultdef = TPixelFormat = "<enumeration type>", pos = (100,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TPixelFormat = "<enumeration type>", pos = (100,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 6
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (101,73), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (101,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = RenderGrid(TCanvas;LongInt;LongInt;LongInt;TGraphicsColor;TGraphicsColor);
               left =
               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (101,72), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (101,72), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 8421504
                  )

               )
               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (101,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (101,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 16777215
                  )

               )
               (callparan, resultdef = TCanvas = "TCanvas", pos = (101,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                  (calln, resultdef = TCanvas = "TCanvas", pos = (101,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TRasterImage>):TCanvas;
                     methodpointer =
                     (loadn, resultdef = TBitmap = "TBitmap", pos = (101,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = BITMAPGRID
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (101,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TBitmap = "TBitmap", pos = (101,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = BITMAPGRID
                        )

                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (101,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (101,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (101,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (101,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (101,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 40
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (102,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (102,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (102,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (102,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (102,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (102,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
FormShow(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
FormShow(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
FormShow(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (107,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (107,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (107,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (107,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (107,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (107,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
Image1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
Image1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
Image1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (112,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (112,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (112,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (112,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (112,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (112,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
MenuItemEmbossHighlightClick(TObject);
*******************************************************************************
(blockn, resultdef = TImage = "TImage", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (116,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = TImage = "TImage", pos = (116,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = EmbossHighlight(TImage;Boolean):TImage;
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (116,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (116,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = TImage = "TImage", pos = (116,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (116,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (116,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
MenuItemEmbossHighlightClick(TObject);
*******************************************************************************
(blockn, resultdef = TImage = "TImage", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (116,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = TImage = "TImage", pos = (116,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = EmbossHighlight(TImage;Boolean):TImage;
         left =
         (callparan, resultdef = TImage = "TImage", pos = (116,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (116,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (116,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = Boolean = "Boolean", pos = (116,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (116,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
MenuItemEmbossHighlightClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = TImage = "TImage", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (116,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = TImage = "TImage", pos = (116,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = EmbossHighlight(TImage;Boolean):TImage;
               left =
               (callparan, resultdef = TImage = "TImage", pos = (116,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (116,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (116,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = Boolean = "Boolean", pos = (116,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (116,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (117,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (117,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (117,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (117,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (117,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (117,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
MenuItemErodeBorderClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (120,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (121,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (121,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = ErodeBorderEffect(TImage);
         left =
         (callparan, resultdef = TImage = "TImage", pos = (121,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (121,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (121,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
MenuItemErodeBorderClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (121,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (121,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = ErodeBorderEffect(TImage);
         left =
         (callparan, resultdef = TImage = "TImage", pos = (121,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (121,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (121,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
MenuItemErodeBorderClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (120,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (121,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (121,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = ErodeBorderEffect(TImage);
               left =
               (callparan, resultdef = TImage = "TImage", pos = (121,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (121,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (121,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (122,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (122,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (122,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (122,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (122,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (122,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
MenuItemPixelateClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (125,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (126,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (126,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (subscriptn, resultdef = TImage = "TImage", pos = (126,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (126,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         (calln, resultdef = TImage = "TImage", pos = (126,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = Pixelate(TImage;LongInt):TImage;
            left =
            (callparan, resultdef = LongInt = "LongInt", pos = (126,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (ordconstn, resultdef = LongInt = "LongInt", pos = (126,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  value = 10
               )

            )
            (callparan, resultdef = TImage = "TImage", pos = (126,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
               (subscriptn, resultdef = TImage = "TImage", pos = (126,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (126,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )

            )
         )
      )

   )
)

*******************************************************************************
after the firstpass
MenuItemPixelateClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (126,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (126,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (subscriptn, resultdef = TImage = "TImage", pos = (126,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (126,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         (calln, resultdef = TImage = "TImage", pos = (126,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
            proc = Pixelate(TImage;LongInt):TImage;
            left =
            (callparan, resultdef = TImage = "TImage", pos = (126,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
               (subscriptn, resultdef = TImage = "TImage", pos = (126,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (126,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )

            )
            (callparan, resultdef = LongInt = "LongInt", pos = (126,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (ordconstn, resultdef = LongInt = "LongInt", pos = (126,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 10
               )

            )
         )
      )

   )
)

*******************************************************************************
right before code generation
MenuItemPixelateClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (125,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (126,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (126,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (subscriptn, resultdef = TImage = "TImage", pos = (126,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (126,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               (calln, resultdef = TImage = "TImage", pos = (126,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                  proc = Pixelate(TImage;LongInt):TImage;
                  left =
                  (callparan, resultdef = TImage = "TImage", pos = (126,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TImage = "TImage", pos = (126,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (126,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (126,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (126,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 10
                     )

                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (127,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (127,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (127,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (127,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (127,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (127,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ScrollBox1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (130,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
ScrollBox1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
ScrollBox1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (130,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (132,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (132,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (132,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (132,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (132,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (132,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
Timer1Timer(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (136,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (141,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (138,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (subscriptn, resultdef = Boolean = "Boolean", pos = (138,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (138,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         (calln, resultdef = $void = "untyped", pos = (139,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = NewImage(<TFormDocument>);
            methodpointer =
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (140,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
            left =
            (callparan, resultdef = <nil>, pos = (140,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (140,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         (calln, resultdef = $void = "untyped", pos = (141,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = LoadImage(<TFormDocument>);
            methodpointer =
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (141,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
            left =
            (callparan, resultdef = <nil>, pos = (141,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (141,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (143,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (143,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (143,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEBUTTON
         )
         (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (143,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 5
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (144,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (144,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (144,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (144,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 1281104
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (145,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (145,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (subscriptn, resultdef = Single = "Single", pos = (145,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (145,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         (realconstn, resultdef = Single = "Single", pos = (145,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            value =  1.0000000000000000E+000         )
      )

   )
   (statementn, resultdef = <nil>, pos = (146,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (146,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (146,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = SCALEFACTOR
         )
         (realconstn, resultdef = Single = "Single", pos = (146,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            value =  1.0000000000000000E+000         )
      )

   )
   (statementn, resultdef = <nil>, pos = (149,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (149,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetEnabled(<TCustomTimer>;Boolean);
         methodpointer =
         (subscriptn, resultdef = TTimer = "TTimer", pos = (149,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (149,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (149,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (149,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (149,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (149,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
Timer1Timer(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (141,14), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (138,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (subscriptn, resultdef = Boolean = "Boolean", pos = (138,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (138,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         (calln, resultdef = $void = "untyped", pos = (139,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            proc = NewImage(<TFormDocument>);
            methodpointer =
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (140,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
            left =
            (callparan, resultdef = <nil>, pos = (140,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (140,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )

            )
         )
         (calln, resultdef = $void = "untyped", pos = (141,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            proc = LoadImage(<TFormDocument>);
            methodpointer =
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (141,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
            left =
            (callparan, resultdef = <nil>, pos = (141,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (141,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )

            )
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (143,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (143,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (143,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = HMOUSEBUTTON
         )
         (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (143,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 5
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (144,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (144,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (144,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (144,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 1281104
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (145,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (145,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (subscriptn, resultdef = Single = "Single", pos = (145,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (145,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         (realconstn, resultdef = Single = "Single", pos = (145,17), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
            value =  1.0000000000000000E+000         )
      )

   )
   (statementn, resultdef = <nil>, pos = (146,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (146,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (146,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = SCALEFACTOR
         )
         (realconstn, resultdef = Single = "Single", pos = (146,18), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
            value =  1.0000000000000000E+000         )
      )

   )
   (statementn, resultdef = <nil>, pos = (149,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (149,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetEnabled(<TCustomTimer>;Boolean);
         methodpointer =
         (subscriptn, resultdef = TTimer = "TTimer", pos = (149,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (149,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (149,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TTimer = "TTimer", pos = (149,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (149,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = Boolean = "Boolean", pos = (149,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (149,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
Timer1Timer(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (136,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (141,14), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (138,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (subscriptn, resultdef = Boolean = "Boolean", pos = (138,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (138,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               (calln, resultdef = $void = "untyped", pos = (139,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = NewImage(<TFormDocument>);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (140,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (140,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (140,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )

                  )
               )
               (calln, resultdef = $void = "untyped", pos = (141,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = LoadImage(<TFormDocument>);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (141,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (141,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (141,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )

                  )
               )
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (143,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (143,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (143,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = HMOUSEBUTTON
               )
               (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (143,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 5
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (144,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (144,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = LongInt = "LongInt", pos = (144,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = HMOUSEEVENT
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (144,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 1281104
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (145,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (145,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (subscriptn, resultdef = Single = "Single", pos = (145,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (145,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               (realconstn, resultdef = Single = "Single", pos = (145,17), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                  value =  1.0000000000000000E+000               )
            )

         )
         (statementn, resultdef = <nil>, pos = (146,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (146,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = Single = "Single", pos = (146,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = SCALEFACTOR
               )
               (realconstn, resultdef = Single = "Single", pos = (146,18), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                  value =  1.0000000000000000E+000               )
            )

         )
         (statementn, resultdef = <nil>, pos = (149,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (149,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetEnabled(<TCustomTimer>;Boolean);
               methodpointer =
               (subscriptn, resultdef = TTimer = "TTimer", pos = (149,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (149,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (149,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TTimer = "TTimer", pos = (149,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (149,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = Boolean = "Boolean", pos = (149,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (149,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (150,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (150,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (150,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (150,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (150,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (150,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
Anim;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (153,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (154,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (154,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
         (loadn, resultdef = Boolean = "Boolean", pos = (154,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = ANIMRUN
         )
         (notn, resultdef = Boolean = "Boolean", pos = (154,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = Boolean = "Boolean", pos = (154,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = ANIMRUN
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (158,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = Boolean = "Boolean", pos = (155,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = ANIMRUN
         )
         (blockn, resultdef = $void = "untyped", pos = (156,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (157,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (157,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = doAnim(TImage);
                  left =
                  (callparan, resultdef = TImage = "TImage", pos = (157,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                     (subscriptn, resultdef = TImage = "TImage", pos = (157,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (157,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = FORMDOCUMENT
                        )
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
after the firstpass
Anim;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (154,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (154,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
         (loadn, resultdef = Boolean = "Boolean", pos = (154,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = ANIMRUN
         )
         (notn, resultdef = Boolean = "Boolean", pos = (154,14), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 2
            (loadn, resultdef = Boolean = "Boolean", pos = (154,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = ANIMRUN
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (158,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = Boolean = "Boolean", pos = (155,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = ANIMRUN
         )
         (blockn, resultdef = $void = "untyped", pos = (156,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (157,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (157,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = doAnim(TImage);
                  left =
                  (callparan, resultdef = TImage = "TImage", pos = (157,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TImage = "TImage", pos = (157,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (157,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = FORMDOCUMENT
                        )
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
right before code generation
Anim;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (153,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (154,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (154,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
               (loadn, resultdef = Boolean = "Boolean", pos = (154,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = ANIMRUN
               )
               (notn, resultdef = Boolean = "Boolean", pos = (154,14), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 2
                  (loadn, resultdef = Boolean = "Boolean", pos = (154,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = ANIMRUN
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (158,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = Boolean = "Boolean", pos = (155,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = ANIMRUN
               )
               (blockn, resultdef = $void = "untyped", pos = (156,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (157,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (157,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = doAnim(TImage);
                        left =
                        (callparan, resultdef = TImage = "TImage", pos = (157,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (157,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (157,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = FORMDOCUMENT
                              )
                           )

                        )
                     )

                  )
               )
               nil
               nil
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (160,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (160,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (160,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (160,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (160,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (160,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
NewImage;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (165,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (168,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = BMP1
         )
         (calln, resultdef = TBGRABitmap = "TBGRABitmap", pos = (168,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = constructor Create(<TGenericUniversalBitmap$2$crcA6578794>;<Class Of TGenericUniversalBitmap$2$crcA6578794>;LongInt;LongInt;const TBGRAPixel);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBGRABitmap", pos = (168,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (typen, resultdef = TBGRABitmap = "TBGRABitmap", pos = (168,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = TBGRAPixel = "<record type>", pos = (168,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
               (loadn, resultdef = TBGRAPixel = "<record type>", pos = (168,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = BGRAWHITE
               )

            )
            (callparan, resultdef = LongInt = "LongInt", pos = (168,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (ordconstn, resultdef = LongInt = "LongInt", pos = (168,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  value = 300
               )

            )
            (callparan, resultdef = LongInt = "LongInt", pos = (168,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (ordconstn, resultdef = LongInt = "LongInt", pos = (168,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  value = 300
               )

            )
            (callparan, resultdef = <nil>, pos = (168,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (168,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (168,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (168,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (169,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Draw(<TBGRAWinBitmap>;TCanvas;LongInt;LongInt;Boolean=`TRUE`);
         methodpointer =
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = BMP1
         )
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (169,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (169,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (169,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (169,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (169,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (169,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = TCanvas = "TCanvas", pos = (169,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = TCanvas = "TCanvas", pos = (169,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetCanvas(<TCustomImage>):TCanvas;
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (169,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (169,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (169,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (nothingn, resultdef = $void = "untyped", pos = (169,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (169,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (169,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (170,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Free(<TObject>);
         methodpointer =
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = BMP1
         )
         left =
         (callparan, resultdef = <nil>, pos = (170,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (170,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (172,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (172,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (172,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (172,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (172,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (172,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (172,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (172,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (172,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (173,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (173,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (173,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (173,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (173,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (173,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (173,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (173,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (173,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (174,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (174,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetTop(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (174,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (174,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (174,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (174,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (174,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (174,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (175,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (175,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetLeft(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (175,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (175,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (175,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (175,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (175,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (175,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (176,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = SetSize(<TCustomBitmap>;LongInt;LongInt);
         methodpointer =
         (calln, resultdef = TBitmap = "TBitmap", pos = (176,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetBitmap(<TPicture>):TBitmap;
            methodpointer =
            (subscriptn, resultdef = TPicture = "TPicture", pos = (176,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (176,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (176,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (176,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (176,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
            (subscriptn, resultdef = LongInt = "LongInt", pos = (176,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (176,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (176,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (176,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
            (subscriptn, resultdef = LongInt = "LongInt", pos = (176,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (176,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (176,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (176,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (176,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (177,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Clear(<TFPCustomCanvas>);
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (177,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetCanvas(<TCustomImage>):TCanvas;
            methodpointer =
            (subscriptn, resultdef = TImage = "TImage", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (177,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (177,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (177,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (177,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (177,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (178,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Clear(<TFPCustomCanvas>);
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (178,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetCanvas(<TCustomImage>):TCanvas;
            methodpointer =
            (subscriptn, resultdef = TImage = "TImage", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (178,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (178,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (178,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (178,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (178,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (179,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (179,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (179,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (179,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (179,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
            (subscriptn, resultdef = LongInt = "LongInt", pos = (179,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (179,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (179,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (179,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (179,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (180,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (180,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (180,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (180,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (180,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
            (subscriptn, resultdef = LongInt = "LongInt", pos = (180,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (180,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (180,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (180,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (180,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (181,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetPixelFormat(<TRasterImage>;TPixelFormat);
         methodpointer =
         (calln, resultdef = TBitmap = "TBitmap", pos = (181,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetBitmap(<TPicture>):TBitmap;
            methodpointer =
            (subscriptn, resultdef = TPicture = "TPicture", pos = (181,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (181,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (181,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (181,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = TPixelFormat = "<enumeration type>", pos = (181,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TPixelFormat = "<enumeration type>", pos = (181,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 6
            )

         )
         (callparan, resultdef = <nil>, pos = (181,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (181,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (182,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetTransparentColor(<TRasterImage>;TGraphicsColor);
         methodpointer =
         (calln, resultdef = TBitmap = "TBitmap", pos = (182,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetBitmap(<TPicture>):TBitmap;
            methodpointer =
            (subscriptn, resultdef = TPicture = "TPicture", pos = (182,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (182,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (182,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (182,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (182,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (182,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (182,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (182,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (183,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetTransparentMode(<TRasterImage>;TTransparentMode);
         methodpointer =
         (calln, resultdef = TBitmap = "TBitmap", pos = (183,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetBitmap(<TPicture>):TBitmap;
            methodpointer =
            (subscriptn, resultdef = TPicture = "TPicture", pos = (183,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (183,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (183,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (183,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = TTransparentMode = "<enumeration type>", pos = (183,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TTransparentMode = "<enumeration type>", pos = (183,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = <nil>, pos = (183,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (183,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (184,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetTransparent(<TGraphic>;Boolean);
         methodpointer =
         (calln, resultdef = TBitmap = "TBitmap", pos = (184,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetBitmap(<TPicture>):TBitmap;
            methodpointer =
            (subscriptn, resultdef = TPicture = "TPicture", pos = (184,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (184,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (184,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (184,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (184,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (184,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = <nil>, pos = (184,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (184,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (186,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetPixelFormat(<TRasterImage>;TPixelFormat);
         methodpointer =
         (calln, resultdef = TBitmap = "TBitmap", pos = (186,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetBitmap(<TPicture>):TBitmap;
            methodpointer =
            (subscriptn, resultdef = TPicture = "TPicture", pos = (186,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (186,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (186,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (186,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = TPixelFormat = "<enumeration type>", pos = (186,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TPixelFormat = "<enumeration type>", pos = (186,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 6
            )

         )
         (callparan, resultdef = <nil>, pos = (186,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (186,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (187,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetTransparentColor(<TRasterImage>;TGraphicsColor);
         methodpointer =
         (calln, resultdef = TBitmap = "TBitmap", pos = (187,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetBitmap(<TPicture>):TBitmap;
            methodpointer =
            (subscriptn, resultdef = TPicture = "TPicture", pos = (187,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (187,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (187,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (187,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (187,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (187,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (187,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (187,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (188,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetTransparentMode(<TRasterImage>;TTransparentMode);
         methodpointer =
         (calln, resultdef = TBitmap = "TBitmap", pos = (188,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetBitmap(<TPicture>):TBitmap;
            methodpointer =
            (subscriptn, resultdef = TPicture = "TPicture", pos = (188,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (188,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (188,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (188,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = TTransparentMode = "<enumeration type>", pos = (188,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TTransparentMode = "<enumeration type>", pos = (188,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = <nil>, pos = (188,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (188,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (189,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetTransparent(<TGraphic>;Boolean);
         methodpointer =
         (calln, resultdef = TBitmap = "TBitmap", pos = (189,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetBitmap(<TPicture>):TBitmap;
            methodpointer =
            (subscriptn, resultdef = TPicture = "TPicture", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (189,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (189,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (189,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (189,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (189,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = <nil>, pos = (189,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (189,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (196,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (196,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Hide(<TControl>);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (196,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (196,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (196,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (196,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (197,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
      (assignn, resultdef = $void = "untyped", pos = (197,2), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (subscriptn, resultdef = Single = "Single", pos = (197,2), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (197,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         (realconstn, resultdef = Single = "Single", pos = (197,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            value =  1.0000000000000000E+000         )
      )

   )
)

*******************************************************************************
after the firstpass
NewImage;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (168,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = BMP1
         )
         (calln, resultdef = TBGRABitmap = "TBGRABitmap", pos = (168,22), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
            proc = constructor Create(<TGenericUniversalBitmap$2$crcA6578794>;<Class Of TGenericUniversalBitmap$2$crcA6578794>;LongInt;LongInt;const TBGRAPixel);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBGRABitmap", pos = (168,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
               (typen, resultdef = TBGRABitmap = "TBGRABitmap", pos = (168,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = TBGRAPixel = "<record type>", pos = (168,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TBGRAPixel = "<record type>", pos = (168,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 1
                  nil
                  symbol = BGRAWHITE
               )

            )
            (callparan, resultdef = LongInt = "LongInt", pos = (168,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (ordconstn, resultdef = LongInt = "LongInt", pos = (168,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 300
               )

            )
            (callparan, resultdef = LongInt = "LongInt", pos = (168,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (ordconstn, resultdef = LongInt = "LongInt", pos = (168,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 300
               )

            )
            (callparan, resultdef = <nil>, pos = (168,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (pointerconstn, resultdef = Pointer = "^untyped", pos = (168,22), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = $0000000000000001
               )

            )
            (callparan, resultdef = <nil>, pos = (168,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBGRABitmap", pos = (168,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TBGRABitmap = "TBGRABitmap", pos = (168,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (169,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Draw(<TBGRAWinBitmap>;TCanvas;LongInt;LongInt;Boolean=`TRUE`);
         methodpointer =
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = BMP1
         )
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (169,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (169,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = TCanvas = "TCanvas", pos = (169,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            (calln, resultdef = TCanvas = "TCanvas", pos = (169,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetCanvas(<TCustomImage>):TCanvas;
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (169,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (169,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (169,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (169,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (169,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (169,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = BMP1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (169,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (169,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (169,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (169,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (170,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Free(<TObject>);
         methodpointer =
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = BMP1
         )
         left =
         (callparan, resultdef = <nil>, pos = (170,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = BMP1
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (172,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (172,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (172,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (172,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (172,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (172,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (172,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (172,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (172,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (172,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (173,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (173,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (173,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (173,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (173,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (173,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (173,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (173,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (173,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (173,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (174,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (174,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetTop(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (174,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (174,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (174,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (174,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (174,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (174,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (174,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (175,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (175,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetLeft(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (175,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (175,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (175,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (175,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (175,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (175,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (175,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (176,61), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = SetSize(<TCustomBitmap>;LongInt;LongInt);
         methodpointer =
         (temprefn, resultdef = TBitmap = "TBitmap", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940CB0
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TBitmap = "TBitmap", pos = (176,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetBitmap(<TPicture>):TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (176,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (176,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (176,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (176,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (176,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940CB0
               )

            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (176,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
            (subscriptn, resultdef = LongInt = "LongInt", pos = (176,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (176,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (176,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (176,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
            (subscriptn, resultdef = LongInt = "LongInt", pos = (176,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (176,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (176,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (176,61), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TBitmap = "TBitmap", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (177,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Clear(<TFPCustomCanvas>);
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000008E940DB0
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (177,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (177,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (177,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (177,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000008E940DB0
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (177,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (178,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Clear(<TFPCustomCanvas>);
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940E30 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000008E940E30
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940E30 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (178,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (178,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (178,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (178,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000008E940E30
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (178,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940E30 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (179,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (179,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (179,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (179,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (179,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
            (subscriptn, resultdef = LongInt = "LongInt", pos = (179,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (179,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (179,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (179,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (179,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (179,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (180,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (180,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (180,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (180,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (180,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
            (subscriptn, resultdef = LongInt = "LongInt", pos = (180,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (180,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (180,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (180,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (180,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (180,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (181,45), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetPixelFormat(<TRasterImage>;TPixelFormat);
         methodpointer =
         (temprefn, resultdef = TBitmap = "TBitmap", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940EB0
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TBitmap = "TBitmap", pos = (181,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetBitmap(<TPicture>):TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (181,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (181,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (181,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (181,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (181,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940EB0
               )

            )
         )
         left =
         (callparan, resultdef = TPixelFormat = "<enumeration type>", pos = (181,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TPixelFormat = "<enumeration type>", pos = (181,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 6
            )

         )
         (callparan, resultdef = <nil>, pos = (181,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TBitmap = "TBitmap", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (182,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetTransparentColor(<TRasterImage>;TGraphicsColor);
         methodpointer =
         (temprefn, resultdef = TBitmap = "TBitmap", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940F30
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TBitmap = "TBitmap", pos = (182,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetBitmap(<TPicture>):TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (182,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (182,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (182,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (182,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (182,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940F30
               )

            )
         )
         left =
         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (182,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (182,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (182,41), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TBitmap = "TBitmap", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (183,49), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetTransparentMode(<TRasterImage>;TTransparentMode);
         methodpointer =
         (temprefn, resultdef = TBitmap = "TBitmap", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940FB0
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TBitmap = "TBitmap", pos = (183,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetBitmap(<TPicture>):TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (183,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (183,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (183,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (183,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (183,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940FB0
               )

            )
         )
         left =
         (callparan, resultdef = TTransparentMode = "<enumeration type>", pos = (183,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TTransparentMode = "<enumeration type>", pos = (183,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = <nil>, pos = (183,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TBitmap = "TBitmap", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (184,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetTransparent(<TGraphic>;Boolean);
         methodpointer =
         (temprefn, resultdef = TBitmap = "TBitmap", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941030 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E941030
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941030 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TBitmap = "TBitmap", pos = (184,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetBitmap(<TPicture>):TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (184,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (184,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (184,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (184,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (184,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E941030
               )

            )
         )
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (184,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (184,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = <nil>, pos = (184,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TBitmap = "TBitmap", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941030 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (186,45), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetPixelFormat(<TRasterImage>;TPixelFormat);
         methodpointer =
         (temprefn, resultdef = TBitmap = "TBitmap", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E9410B0
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TBitmap = "TBitmap", pos = (186,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetBitmap(<TPicture>):TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (186,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (186,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (186,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (186,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (186,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E9410B0
               )

            )
         )
         left =
         (callparan, resultdef = TPixelFormat = "<enumeration type>", pos = (186,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TPixelFormat = "<enumeration type>", pos = (186,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 6
            )

         )
         (callparan, resultdef = <nil>, pos = (186,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TBitmap = "TBitmap", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (187,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetTransparentColor(<TRasterImage>;TGraphicsColor);
         methodpointer =
         (temprefn, resultdef = TBitmap = "TBitmap", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941130 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E941130
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941130 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TBitmap = "TBitmap", pos = (187,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetBitmap(<TPicture>):TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (187,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (187,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (187,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (187,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (187,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E941130
               )

            )
         )
         left =
         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (187,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (187,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (187,41), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TBitmap = "TBitmap", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941130 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (188,49), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetTransparentMode(<TRasterImage>;TTransparentMode);
         methodpointer =
         (temprefn, resultdef = TBitmap = "TBitmap", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9411B0 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E9411B0
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9411B0 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TBitmap = "TBitmap", pos = (188,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetBitmap(<TPicture>):TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (188,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (188,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (188,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (188,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (188,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E9411B0
               )

            )
         )
         left =
         (callparan, resultdef = TTransparentMode = "<enumeration type>", pos = (188,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TTransparentMode = "<enumeration type>", pos = (188,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = <nil>, pos = (188,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TBitmap = "TBitmap", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9411B0 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (189,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetTransparent(<TGraphic>;Boolean);
         methodpointer =
         (temprefn, resultdef = TBitmap = "TBitmap", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941230 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E941230
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941230 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TBitmap = "TBitmap", pos = (189,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetBitmap(<TPicture>):TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (189,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (189,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (189,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E941230
               )

            )
         )
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (189,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (189,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = <nil>, pos = (189,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TBitmap = "TBitmap", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941230 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (196,14), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (196,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Hide(<TControl>);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (196,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (196,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (196,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (196,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (196,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (197,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef = $void = "untyped", pos = (197,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (subscriptn, resultdef = Single = "Single", pos = (197,2), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (197,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         (realconstn, resultdef = Single = "Single", pos = (197,16), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
            value =  1.0000000000000000E+000         )
      )

   )
)

*******************************************************************************
right before code generation
NewImage;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (165,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (168,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = BMP1
               )
               (calln, resultdef = TBGRABitmap = "TBGRABitmap", pos = (168,22), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                  proc = constructor Create(<TGenericUniversalBitmap$2$crcA6578794>;<Class Of TGenericUniversalBitmap$2$crcA6578794>;LongInt;LongInt;const TBGRAPixel);
                  methodpointer =
                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBGRABitmap", pos = (168,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                     (typen, resultdef = TBGRABitmap = "TBGRABitmap", pos = (168,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     )
                  )
                  left =
                  (callparan, resultdef = TBGRAPixel = "<record type>", pos = (168,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TBGRAPixel = "<record type>", pos = (168,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 1
                        nil
                        symbol = BGRAWHITE
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (168,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (168,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 300
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (168,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (168,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 300
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (168,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (pointerconstn, resultdef = Pointer = "^untyped", pos = (168,22), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = $0000000000000001
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (168,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBGRABitmap", pos = (168,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TBGRABitmap = "TBGRABitmap", pos = (168,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )

                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (169,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Draw(<TBGRAWinBitmap>;TCanvas;LongInt;LongInt;Boolean=`TRUE`);
               methodpointer =
               (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = BMP1
               )
               left =
               (callparan, resultdef = Boolean = "Boolean", pos = (169,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (169,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )

               )
               (callparan, resultdef = TCanvas = "TCanvas", pos = (169,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                  (calln, resultdef = TCanvas = "TCanvas", pos = (169,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (169,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (169,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (169,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (169,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (169,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (169,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BMP1
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (169,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (169,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (169,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (169,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (170,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Free(<TObject>);
               methodpointer =
               (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = BMP1
               )
               left =
               (callparan, resultdef = <nil>, pos = (170,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BMP1
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (172,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (172,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetWidth(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (172,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (172,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (172,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (172,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (172,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (172,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (172,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (172,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (173,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (173,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetHeight(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (173,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (173,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (173,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (173,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (173,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (173,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (173,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (173,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (174,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (174,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetTop(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (174,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (174,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (174,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (174,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (174,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (174,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (174,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (175,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (175,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetLeft(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (175,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (175,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (175,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (175,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (175,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (175,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (175,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (176,61), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = SetSize(<TCustomBitmap>;LongInt;LongInt);
               methodpointer =
               (temprefn, resultdef = TBitmap = "TBitmap", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940CB0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TBitmap = "TBitmap", pos = (176,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (176,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (176,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (176,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (176,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (176,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940CB0
                     )

                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (176,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (176,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (176,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (176,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (176,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (176,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (176,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (176,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (176,61), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (176,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (177,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Clear(<TFPCustomCanvas>);
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000008E940DB0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (177,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetCanvas(<TCustomImage>):TCanvas;
                           methodpointer =
                           (subscriptn, resultdef = TImage = "TImage", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (177,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (177,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                              (subscriptn, resultdef = TImage = "TImage", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (177,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000008E940DB0
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (177,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (178,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Clear(<TFPCustomCanvas>);
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940E30 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000008E940E30
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940E30 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (178,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetCanvas(<TCustomImage>):TCanvas;
                           methodpointer =
                           (subscriptn, resultdef = TImage = "TImage", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (178,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (178,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                              (subscriptn, resultdef = TImage = "TImage", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (178,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000008E940E30
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (178,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940E30 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (179,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (179,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetWidth(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (179,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (179,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (179,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (179,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (179,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (179,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (179,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (179,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (179,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (180,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (180,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetHeight(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (180,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (180,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (180,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (180,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (180,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (180,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (180,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (180,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (180,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (181,45), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetPixelFormat(<TRasterImage>;TPixelFormat);
               methodpointer =
               (temprefn, resultdef = TBitmap = "TBitmap", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940EB0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TBitmap = "TBitmap", pos = (181,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (181,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (181,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (181,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (181,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (181,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940EB0
                     )

                  )
               )
               left =
               (callparan, resultdef = TPixelFormat = "<enumeration type>", pos = (181,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TPixelFormat = "<enumeration type>", pos = (181,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 6
                  )

               )
               (callparan, resultdef = <nil>, pos = (181,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (181,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (182,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetTransparentColor(<TRasterImage>;TGraphicsColor);
               methodpointer =
               (temprefn, resultdef = TBitmap = "TBitmap", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940F30
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TBitmap = "TBitmap", pos = (182,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (182,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (182,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (182,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (182,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (182,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940F30
                     )

                  )
               )
               left =
               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (182,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (182,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = <nil>, pos = (182,41), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (182,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (183,49), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetTransparentMode(<TRasterImage>;TTransparentMode);
               methodpointer =
               (temprefn, resultdef = TBitmap = "TBitmap", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940FB0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TBitmap = "TBitmap", pos = (183,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (183,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (183,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (183,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (183,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (183,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940FB0
                     )

                  )
               )
               left =
               (callparan, resultdef = TTransparentMode = "<enumeration type>", pos = (183,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TTransparentMode = "<enumeration type>", pos = (183,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )

               )
               (callparan, resultdef = <nil>, pos = (183,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (183,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (184,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetTransparent(<TGraphic>;Boolean);
               methodpointer =
               (temprefn, resultdef = TBitmap = "TBitmap", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941030 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E941030
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941030 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TBitmap = "TBitmap", pos = (184,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (184,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (184,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (184,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (184,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (184,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E941030
                     )

                  )
               )
               left =
               (callparan, resultdef = Boolean = "Boolean", pos = (184,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (184,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )

               )
               (callparan, resultdef = <nil>, pos = (184,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (184,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941030 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (186,45), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetPixelFormat(<TRasterImage>;TPixelFormat);
               methodpointer =
               (temprefn, resultdef = TBitmap = "TBitmap", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E9410B0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TBitmap = "TBitmap", pos = (186,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (186,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (186,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (186,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (186,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (186,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E9410B0
                     )

                  )
               )
               left =
               (callparan, resultdef = TPixelFormat = "<enumeration type>", pos = (186,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TPixelFormat = "<enumeration type>", pos = (186,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 6
                  )

               )
               (callparan, resultdef = <nil>, pos = (186,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (187,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetTransparentColor(<TRasterImage>;TGraphicsColor);
               methodpointer =
               (temprefn, resultdef = TBitmap = "TBitmap", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941130 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E941130
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941130 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TBitmap = "TBitmap", pos = (187,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (187,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (187,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (187,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (187,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (187,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E941130
                     )

                  )
               )
               left =
               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (187,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (187,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = <nil>, pos = (187,41), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (187,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941130 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (188,49), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetTransparentMode(<TRasterImage>;TTransparentMode);
               methodpointer =
               (temprefn, resultdef = TBitmap = "TBitmap", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9411B0 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E9411B0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9411B0 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TBitmap = "TBitmap", pos = (188,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (188,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (188,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (188,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (188,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (188,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E9411B0
                     )

                  )
               )
               left =
               (callparan, resultdef = TTransparentMode = "<enumeration type>", pos = (188,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TTransparentMode = "<enumeration type>", pos = (188,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )

               )
               (callparan, resultdef = <nil>, pos = (188,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (188,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9411B0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (189,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetTransparent(<TGraphic>;Boolean);
               methodpointer =
               (temprefn, resultdef = TBitmap = "TBitmap", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941230 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E941230
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941230 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TBitmap = "TBitmap", pos = (189,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (189,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (189,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (189,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E941230
                     )

                  )
               )
               left =
               (callparan, resultdef = Boolean = "Boolean", pos = (189,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (189,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )

               )
               (callparan, resultdef = <nil>, pos = (189,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941230 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (196,14), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (196,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Hide(<TControl>);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (196,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (196,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (196,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (196,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (196,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (197,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
            (assignn, resultdef = $void = "untyped", pos = (197,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (subscriptn, resultdef = Single = "Single", pos = (197,2), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (197,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               (realconstn, resultdef = Single = "Single", pos = (197,16), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                  value =  1.0000000000000000E+000               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (198,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (198,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (198,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (198,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (198,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (198,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
AssignEmptyImage(TImage;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (202,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (203,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (203,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetBitmap(<TPicture>;TBitmap);
         methodpointer =
         (subscriptn, resultdef = TPicture = "TPicture", pos = (203,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
            (loadn, resultdef = TImage = "TImage", pos = (203,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = _IMAGE
            )
         )
         left =
         (callparan, resultdef = TBitmap = "TBitmap", pos = (203,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = TBitmap = "TBitmap", pos = (203,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               proc = constructor Create(<TCustomBitmap>;<Class Of TCustomBitmap>);
               methodpointer =
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (203,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (typen, resultdef = TBitmap = "TBitmap", pos = (203,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (203,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (nothingn, resultdef = $void = "untyped", pos = (203,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  )

               )
               (callparan, resultdef = <nil>, pos = (203,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (nothingn, resultdef = $void = "untyped", pos = (203,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (203,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (203,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (204,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (blockn, resultdef = $void = "untyped", pos = (218,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (212,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetWidth(<TGraphic>;LongInt);
                  methodpointer =
                  (calln, resultdef = TBitmap = "TBitmap", pos = (212,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetBitmap(<TPicture>):TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (212,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                        (loadn, resultdef = TImage = "TImage", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = _IMAGE
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (212,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (212,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (212,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (212,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = _WIDTH
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (212,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (212,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (213,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetHeight(<TGraphic>;LongInt);
                  methodpointer =
                  (calln, resultdef = TBitmap = "TBitmap", pos = (213,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetBitmap(<TPicture>):TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (213,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                        (loadn, resultdef = TImage = "TImage", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = _IMAGE
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (213,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (213,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (213,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (213,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = _HEIGHT
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (213,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (213,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (214,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TBrush>;TGraphicsColor);
                  methodpointer =
                  (subscriptn, resultdef = TBrush = "TBrush", pos = (214,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     (calln, resultdef = TCanvas = "TCanvas", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetCanvas(<TRasterImage>):TCanvas;
                        methodpointer =
                        (calln, resultdef = TBitmap = "TBitmap", pos = (214,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (214,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                              (loadn, resultdef = TImage = "TImage", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = _IMAGE
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (214,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (214,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (214,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                  )
                  left =
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (214,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (214,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 16777215
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (214,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (214,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (215,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetStyle(<TFPCustomBrush>;TFPBrushStyle);
                  methodpointer =
                  (subscriptn, resultdef = TBrush = "TBrush", pos = (215,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     (calln, resultdef = TCanvas = "TCanvas", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetCanvas(<TRasterImage>):TCanvas;
                        methodpointer =
                        (calln, resultdef = TBitmap = "TBitmap", pos = (215,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (215,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                              (loadn, resultdef = TImage = "TImage", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = _IMAGE
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (215,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (215,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (215,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                  )
                  left =
                  (callparan, resultdef = TFPBrushStyle = "<enumeration type>", pos = (215,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = TFPBrushStyle = "<enumeration type>", pos = (215,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 0
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (215,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (215,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (216,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = FillRect(<TCanvas>;LongInt;LongInt;LongInt;LongInt);
                  methodpointer =
                  (calln, resultdef = TCanvas = "TCanvas", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TRasterImage>):TCanvas;
                     methodpointer =
                     (calln, resultdef = TBitmap = "TBitmap", pos = (216,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetBitmap(<TPicture>):TBitmap;
                        methodpointer =
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (216,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                           (loadn, resultdef = TImage = "TImage", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = _IMAGE
                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (216,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (216,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (216,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (216,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (216,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = _HEIGHT
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (216,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (216,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = _WIDTH
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (216,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (216,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 0
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (216,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (216,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 0
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (216,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (216,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
         )
         (blockn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            nil
         )
      )

   )
)

*******************************************************************************
after the firstpass
AssignEmptyImage(TImage;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (203,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (203,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetBitmap(<TPicture>;TBitmap);
         methodpointer =
         (subscriptn, resultdef = TPicture = "TPicture", pos = (203,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
            (loadn, resultdef = TImage = "TImage", pos = (203,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = _IMAGE
            )
         )
         left =
         (callparan, resultdef = TBitmap = "TBitmap", pos = (203,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            (calln, resultdef = TBitmap = "TBitmap", pos = (203,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
               proc = constructor Create(<TCustomBitmap>;<Class Of TCustomBitmap>);
               methodpointer =
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (203,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TBitmap = "TBitmap", pos = (203,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (203,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (pointerconstn, resultdef = Pointer = "^untyped", pos = (203,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = $0000000000000001
                  )

               )
               (callparan, resultdef = <nil>, pos = (203,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (203,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                     (typen, resultdef = TBitmap = "TBitmap", pos = (203,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     )
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (203,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TPicture = "TPicture", pos = (203,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
               (loadn, resultdef = TImage = "TImage", pos = (203,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = _IMAGE
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (204,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (blockn, resultdef = $void = "untyped", pos = (218,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (212,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetWidth(<TGraphic>;LongInt);
                  methodpointer =
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                  )
                  callinitblock =
                  (blockn, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (tempcreaten, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E9410B0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (temprefn, resultdef = TBitmap = "TBitmap", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                           )
                           (calln, resultdef = TBitmap = "TBitmap", pos = (212,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetBitmap(<TPicture>):TBitmap;
                              methodpointer =
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (212,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                 (loadn, resultdef = TImage = "TImage", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = _IMAGE
                                 )
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (212,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                 (subscriptn, resultdef = TPicture = "TPicture", pos = (212,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                    (loadn, resultdef = TImage = "TImage", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = _IMAGE
                                    )
                                 )

                              )
                           )
                        )

                     )
                  )
                  callcleanupblock =
                  (blockn, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     (statementn, resultdef = <nil>, pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempdeleten, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E9410B0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (212,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (212,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = _WIDTH
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (212,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     (temprefn, resultdef = TBitmap = "TBitmap", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                        temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (213,44), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetHeight(<TGraphic>;LongInt);
                  methodpointer =
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941030 flags = [ti_may_be_in_reg])
                  )
                  callinitblock =
                  (blockn, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (tempcreaten, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E941030
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (temprefn, resultdef = TBitmap = "TBitmap", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941030 flags = [ti_may_be_in_reg])
                           )
                           (calln, resultdef = TBitmap = "TBitmap", pos = (213,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetBitmap(<TPicture>):TBitmap;
                              methodpointer =
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (213,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                 (loadn, resultdef = TImage = "TImage", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = _IMAGE
                                 )
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (213,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                 (subscriptn, resultdef = TPicture = "TPicture", pos = (213,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                    (loadn, resultdef = TImage = "TImage", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = _IMAGE
                                    )
                                 )

                              )
                           )
                        )

                     )
                  )
                  callcleanupblock =
                  (blockn, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     (statementn, resultdef = <nil>, pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempdeleten, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E941030
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (213,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (213,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = _HEIGHT
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (213,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     (temprefn, resultdef = TBitmap = "TBitmap", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                        temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941030 flags = [ti_may_be_in_reg])
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (214,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetColor(<TBrush>;TGraphicsColor);
                  methodpointer =
                  (temprefn, resultdef = TBrush = "TBrush", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBrush = "TBrush", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
                  )
                  callinitblock =
                  (blockn, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (tempcreaten, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           size = 8, temptypedef = TBrush = "TBrush", tempinfo = $000000008E940FB0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (temprefn, resultdef = TBrush = "TBrush", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              temptypedef = TBrush = "TBrush", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
                           )
                           (subscriptn, resultdef = TBrush = "TBrush", pos = (214,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                              (calln, resultdef = TCanvas = "TCanvas", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetCanvas(<TRasterImage>):TCanvas;
                                 methodpointer =
                                 (temprefn, resultdef = TBitmap = "TBitmap", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                                 )
                                 callinitblock =
                                 (blockn, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (statementn, resultdef = <nil>, pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (tempcreaten, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                          size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940F30
                                          [ti_may_be_in_reg]
                                          tempinit =
                                          nil
                                       )

                                    )
                                    (statementn, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (assignn, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (temprefn, resultdef = TBitmap = "TBitmap", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                                          )
                                          (calln, resultdef = TBitmap = "TBitmap", pos = (214,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                             proc = GetBitmap(<TPicture>):TBitmap;
                                             methodpointer =
                                             (subscriptn, resultdef = TPicture = "TPicture", pos = (214,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                (loadn, resultdef = TImage = "TImage", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = _IMAGE
                                                )
                                             )
                                             left =
                                             (callparan, resultdef = <nil>, pos = (214,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                (subscriptn, resultdef = TPicture = "TPicture", pos = (214,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                   (loadn, resultdef = TImage = "TImage", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = _IMAGE
                                                   )
                                                )

                                             )
                                          )
                                       )

                                    )
                                 )
                                 callcleanupblock =
                                 (blockn, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    (statementn, resultdef = <nil>, pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (tempdeleten, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                          release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940F30
                                       )

                                    )
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (214,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                    (temprefn, resultdef = TBitmap = "TBitmap", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                       temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                                    )

                                 )
                              )
                           )
                        )

                     )
                  )
                  callcleanupblock =
                  (blockn, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     (statementn, resultdef = <nil>, pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempdeleten, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: FALSE, temptypedef = TBrush = "TBrush", temptype = tt_persistent, tempinfo = $000000008E940FB0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (214,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (214,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 16777215
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (214,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     (temprefn, resultdef = TBrush = "TBrush", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                        temptypedef = TBrush = "TBrush", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (215,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetStyle(<TFPCustomBrush>;TFPBrushStyle);
                  methodpointer =
                  (temprefn, resultdef = TBrush = "TBrush", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TBrush = "TBrush", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                  )
                  callinitblock =
                  (blockn, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (tempcreaten, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           size = 8, temptypedef = TBrush = "TBrush", tempinfo = $000000008E940EB0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (temprefn, resultdef = TBrush = "TBrush", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              temptypedef = TBrush = "TBrush", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                           )
                           (subscriptn, resultdef = TBrush = "TBrush", pos = (215,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                              (calln, resultdef = TCanvas = "TCanvas", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetCanvas(<TRasterImage>):TCanvas;
                                 methodpointer =
                                 (temprefn, resultdef = TBitmap = "TBitmap", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940E30 flags = [ti_may_be_in_reg])
                                 )
                                 callinitblock =
                                 (blockn, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (statementn, resultdef = <nil>, pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (tempcreaten, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                          size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940E30
                                          [ti_may_be_in_reg]
                                          tempinit =
                                          nil
                                       )

                                    )
                                    (statementn, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (assignn, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (temprefn, resultdef = TBitmap = "TBitmap", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940E30 flags = [ti_may_be_in_reg])
                                          )
                                          (calln, resultdef = TBitmap = "TBitmap", pos = (215,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                             proc = GetBitmap(<TPicture>):TBitmap;
                                             methodpointer =
                                             (subscriptn, resultdef = TPicture = "TPicture", pos = (215,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                (loadn, resultdef = TImage = "TImage", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = _IMAGE
                                                )
                                             )
                                             left =
                                             (callparan, resultdef = <nil>, pos = (215,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                (subscriptn, resultdef = TPicture = "TPicture", pos = (215,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                   (loadn, resultdef = TImage = "TImage", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = _IMAGE
                                                   )
                                                )

                                             )
                                          )
                                       )

                                    )
                                 )
                                 callcleanupblock =
                                 (blockn, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    (statementn, resultdef = <nil>, pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (tempdeleten, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                          release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940E30
                                       )

                                    )
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (215,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                    (temprefn, resultdef = TBitmap = "TBitmap", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                       temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940E30 flags = [ti_may_be_in_reg])
                                    )

                                 )
                              )
                           )
                        )

                     )
                  )
                  callcleanupblock =
                  (blockn, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     (statementn, resultdef = <nil>, pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempdeleten, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: FALSE, temptypedef = TBrush = "TBrush", temptype = tt_persistent, tempinfo = $000000008E940EB0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = TFPBrushStyle = "<enumeration type>", pos = (215,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = TFPBrushStyle = "<enumeration type>", pos = (215,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 0
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (215,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     (temprefn, resultdef = TBrush = "TBrush", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                        temptypedef = TBrush = "TBrush", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (216,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = FillRect(<TCanvas>;LongInt;LongInt;LongInt;LongInt);
                  methodpointer =
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                  )
                  callinitblock =
                  (blockn, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (tempcreaten, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000008E940DB0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (temprefn, resultdef = TCanvas = "TCanvas", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                           )
                           (calln, resultdef = TCanvas = "TCanvas", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetCanvas(<TRasterImage>):TCanvas;
                              methodpointer =
                              (temprefn, resultdef = TBitmap = "TBitmap", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                 temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                              )
                              callinitblock =
                              (blockn, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (statementn, resultdef = <nil>, pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (tempcreaten, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940CB0
                                       [ti_may_be_in_reg]
                                       tempinit =
                                       nil
                                    )

                                 )
                                 (statementn, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (assignn, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (temprefn, resultdef = TBitmap = "TBitmap", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                          temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                       )
                                       (calln, resultdef = TBitmap = "TBitmap", pos = (216,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetBitmap(<TPicture>):TBitmap;
                                          methodpointer =
                                          (subscriptn, resultdef = TPicture = "TPicture", pos = (216,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                             (loadn, resultdef = TImage = "TImage", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = _IMAGE
                                             )
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (216,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                             (subscriptn, resultdef = TPicture = "TPicture", pos = (216,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                (loadn, resultdef = TImage = "TImage", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = _IMAGE
                                                )
                                             )

                                          )
                                       )
                                    )

                                 )
                              )
                              callcleanupblock =
                              (blockn, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 (statementn, resultdef = <nil>, pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                    (tempdeleten, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940CB0
                                    )

                                 )
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (216,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                 (temprefn, resultdef = TBitmap = "TBitmap", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                 )

                              )
                           )
                        )

                     )
                  )
                  callcleanupblock =
                  (blockn, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     (statementn, resultdef = <nil>, pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempdeleten, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000008E940DB0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (216,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (216,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = _HEIGHT
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (216,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (216,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = _WIDTH
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (216,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (216,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 0
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (216,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (216,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 0
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (216,64), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     (temprefn, resultdef = TCanvas = "TCanvas", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                        temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                     )

                  )
               )

            )
         )
         (calln, resultdef = $void = "untyped", pos = (204,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            proc = $fin$00000154(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (204,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (204,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  nil
               )

            )
         )
      )

   )
)

*******************************************************************************
right before code generation
AssignEmptyImage(TImage;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (202,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (203,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (203,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetBitmap(<TPicture>;TBitmap);
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (203,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                  (loadn, resultdef = TImage = "TImage", pos = (203,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = _IMAGE
                  )
               )
               left =
               (callparan, resultdef = TBitmap = "TBitmap", pos = (203,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                  (calln, resultdef = TBitmap = "TBitmap", pos = (203,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = constructor Create(<TCustomBitmap>;<Class Of TCustomBitmap>);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (203,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TBitmap = "TBitmap", pos = (203,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (203,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (203,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (203,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (203,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                           (typen, resultdef = TBitmap = "TBitmap", pos = (203,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           )
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (203,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TPicture = "TPicture", pos = (203,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                     (loadn, resultdef = TImage = "TImage", pos = (203,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = _IMAGE
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (tryfinallyn, resultdef = $void = "untyped", pos = (204,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (blockn, resultdef = $void = "untyped", pos = (218,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (212,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetWidth(<TGraphic>;LongInt);
                        methodpointer =
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                        )
                        callinitblock =
                        (blockn, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (tempcreaten, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E9410B0
                                 [ti_may_be_in_reg]
                                 tempinit =
                                 nil
                              )

                           )
                           (statementn, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (temprefn, resultdef = TBitmap = "TBitmap", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                                 )
                                 (calln, resultdef = TBitmap = "TBitmap", pos = (212,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    proc = GetBitmap(<TPicture>):TBitmap;
                                    methodpointer =
                                    (subscriptn, resultdef = TPicture = "TPicture", pos = (212,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                       (loadn, resultdef = TImage = "TImage", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = _IMAGE
                                       )
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (212,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                       (subscriptn, resultdef = TPicture = "TPicture", pos = (212,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                          (loadn, resultdef = TImage = "TImage", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = _IMAGE
                                          )
                                       )

                                    )
                                 )
                              )

                           )
                        )
                        callcleanupblock =
                        (blockn, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           (statementn, resultdef = <nil>, pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (tempdeleten, resultdef = $void = "untyped", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E9410B0
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (212,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (212,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = _WIDTH
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (212,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                           (temprefn, resultdef = TBitmap = "TBitmap", pos = (212,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (213,44), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetHeight(<TGraphic>;LongInt);
                        methodpointer =
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941030 flags = [ti_may_be_in_reg])
                        )
                        callinitblock =
                        (blockn, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (tempcreaten, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E941030
                                 [ti_may_be_in_reg]
                                 tempinit =
                                 nil
                              )

                           )
                           (statementn, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (temprefn, resultdef = TBitmap = "TBitmap", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941030 flags = [ti_may_be_in_reg])
                                 )
                                 (calln, resultdef = TBitmap = "TBitmap", pos = (213,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    proc = GetBitmap(<TPicture>):TBitmap;
                                    methodpointer =
                                    (subscriptn, resultdef = TPicture = "TPicture", pos = (213,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                       (loadn, resultdef = TImage = "TImage", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = _IMAGE
                                       )
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (213,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                       (subscriptn, resultdef = TPicture = "TPicture", pos = (213,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                          (loadn, resultdef = TImage = "TImage", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = _IMAGE
                                          )
                                       )

                                    )
                                 )
                              )

                           )
                        )
                        callcleanupblock =
                        (blockn, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           (statementn, resultdef = <nil>, pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (tempdeleten, resultdef = $void = "untyped", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E941030
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (213,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (213,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = _HEIGHT
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (213,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                           (temprefn, resultdef = TBitmap = "TBitmap", pos = (213,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E941030 flags = [ti_may_be_in_reg])
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (214,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetColor(<TBrush>;TGraphicsColor);
                        methodpointer =
                        (temprefn, resultdef = TBrush = "TBrush", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                           temptypedef = TBrush = "TBrush", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
                        )
                        callinitblock =
                        (blockn, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (tempcreaten, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 size = 8, temptypedef = TBrush = "TBrush", tempinfo = $000000008E940FB0
                                 [ti_may_be_in_reg]
                                 tempinit =
                                 nil
                              )

                           )
                           (statementn, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (temprefn, resultdef = TBrush = "TBrush", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    temptypedef = TBrush = "TBrush", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
                                 )
                                 (subscriptn, resultdef = TBrush = "TBrush", pos = (214,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    (calln, resultdef = TCanvas = "TCanvas", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetCanvas(<TRasterImage>):TCanvas;
                                       methodpointer =
                                       (temprefn, resultdef = TBitmap = "TBitmap", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                          temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                                       )
                                       callinitblock =
                                       (blockn, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (tempcreaten, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940F30
                                                [ti_may_be_in_reg]
                                                tempinit =
                                                nil
                                             )

                                          )
                                          (statementn, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (temprefn, resultdef = TBitmap = "TBitmap", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                                                )
                                                (calln, resultdef = TBitmap = "TBitmap", pos = (214,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                   proc = GetBitmap(<TPicture>):TBitmap;
                                                   methodpointer =
                                                   (subscriptn, resultdef = TPicture = "TPicture", pos = (214,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                      (loadn, resultdef = TImage = "TImage", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = _IMAGE
                                                      )
                                                   )
                                                   left =
                                                   (callparan, resultdef = <nil>, pos = (214,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                      (subscriptn, resultdef = TPicture = "TPicture", pos = (214,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                         (loadn, resultdef = TImage = "TImage", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = _IMAGE
                                                         )
                                                      )

                                                   )
                                                )
                                             )

                                          )
                                       )
                                       callcleanupblock =
                                       (blockn, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                          (statementn, resultdef = <nil>, pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             (tempdeleten, resultdef = $void = "untyped", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940F30
                                             )

                                          )
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (214,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                          (temprefn, resultdef = TBitmap = "TBitmap", pos = (214,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                             temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                                          )

                                       )
                                    )
                                 )
                              )

                           )
                        )
                        callcleanupblock =
                        (blockn, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           (statementn, resultdef = <nil>, pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (tempdeleten, resultdef = $void = "untyped", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 release_to_normal: FALSE, temptypedef = TBrush = "TBrush", temptype = tt_persistent, tempinfo = $000000008E940FB0
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = TGraphicsColor = "LongInt", pos = (214,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (214,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 16777215
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (214,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                           (temprefn, resultdef = TBrush = "TBrush", pos = (214,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = TBrush = "TBrush", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (215,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetStyle(<TFPCustomBrush>;TFPBrushStyle);
                        methodpointer =
                        (temprefn, resultdef = TBrush = "TBrush", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                           temptypedef = TBrush = "TBrush", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                        )
                        callinitblock =
                        (blockn, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (tempcreaten, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 size = 8, temptypedef = TBrush = "TBrush", tempinfo = $000000008E940EB0
                                 [ti_may_be_in_reg]
                                 tempinit =
                                 nil
                              )

                           )
                           (statementn, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (temprefn, resultdef = TBrush = "TBrush", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    temptypedef = TBrush = "TBrush", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                                 )
                                 (subscriptn, resultdef = TBrush = "TBrush", pos = (215,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    (calln, resultdef = TCanvas = "TCanvas", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetCanvas(<TRasterImage>):TCanvas;
                                       methodpointer =
                                       (temprefn, resultdef = TBitmap = "TBitmap", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                          temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940E30 flags = [ti_may_be_in_reg])
                                       )
                                       callinitblock =
                                       (blockn, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (tempcreaten, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940E30
                                                [ti_may_be_in_reg]
                                                tempinit =
                                                nil
                                             )

                                          )
                                          (statementn, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (temprefn, resultdef = TBitmap = "TBitmap", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940E30 flags = [ti_may_be_in_reg])
                                                )
                                                (calln, resultdef = TBitmap = "TBitmap", pos = (215,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                   proc = GetBitmap(<TPicture>):TBitmap;
                                                   methodpointer =
                                                   (subscriptn, resultdef = TPicture = "TPicture", pos = (215,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                      (loadn, resultdef = TImage = "TImage", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = _IMAGE
                                                      )
                                                   )
                                                   left =
                                                   (callparan, resultdef = <nil>, pos = (215,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                      (subscriptn, resultdef = TPicture = "TPicture", pos = (215,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                         (loadn, resultdef = TImage = "TImage", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = _IMAGE
                                                         )
                                                      )

                                                   )
                                                )
                                             )

                                          )
                                       )
                                       callcleanupblock =
                                       (blockn, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                          (statementn, resultdef = <nil>, pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             (tempdeleten, resultdef = $void = "untyped", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940E30
                                             )

                                          )
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (215,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                          (temprefn, resultdef = TBitmap = "TBitmap", pos = (215,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                             temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940E30 flags = [ti_may_be_in_reg])
                                          )

                                       )
                                    )
                                 )
                              )

                           )
                        )
                        callcleanupblock =
                        (blockn, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           (statementn, resultdef = <nil>, pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (tempdeleten, resultdef = $void = "untyped", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 release_to_normal: FALSE, temptypedef = TBrush = "TBrush", temptype = tt_persistent, tempinfo = $000000008E940EB0
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = TFPBrushStyle = "<enumeration type>", pos = (215,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = TFPBrushStyle = "<enumeration type>", pos = (215,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (215,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                           (temprefn, resultdef = TBrush = "TBrush", pos = (215,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = TBrush = "TBrush", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (216,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = FillRect(<TCanvas>;LongInt;LongInt;LongInt;LongInt);
                        methodpointer =
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                        )
                        callinitblock =
                        (blockn, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (tempcreaten, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000008E940DB0
                                 [ti_may_be_in_reg]
                                 tempinit =
                                 nil
                              )

                           )
                           (statementn, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (temprefn, resultdef = TCanvas = "TCanvas", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                                 )
                                 (calln, resultdef = TCanvas = "TCanvas", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    proc = GetCanvas(<TRasterImage>):TCanvas;
                                    methodpointer =
                                    (temprefn, resultdef = TBitmap = "TBitmap", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                       temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                    )
                                    callinitblock =
                                    (blockn, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (statementn, resultdef = <nil>, pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (tempcreaten, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $000000008E940CB0
                                             [ti_may_be_in_reg]
                                             tempinit =
                                             nil
                                          )

                                       )
                                       (statementn, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (assignn, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                             (temprefn, resultdef = TBitmap = "TBitmap", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                             )
                                             (calln, resultdef = TBitmap = "TBitmap", pos = (216,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                proc = GetBitmap(<TPicture>):TBitmap;
                                                methodpointer =
                                                (subscriptn, resultdef = TPicture = "TPicture", pos = (216,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                   (loadn, resultdef = TImage = "TImage", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = _IMAGE
                                                   )
                                                )
                                                left =
                                                (callparan, resultdef = <nil>, pos = (216,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                   (subscriptn, resultdef = TPicture = "TPicture", pos = (216,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                      (loadn, resultdef = TImage = "TImage", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = _IMAGE
                                                      )
                                                   )

                                                )
                                             )
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       (statementn, resultdef = <nil>, pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          (tempdeleten, resultdef = $void = "untyped", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $000000008E940CB0
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (216,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                       (temprefn, resultdef = TBitmap = "TBitmap", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                          temptypedef = TBitmap = "TBitmap", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                       )

                                    )
                                 )
                              )

                           )
                        )
                        callcleanupblock =
                        (blockn, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           (statementn, resultdef = <nil>, pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (tempdeleten, resultdef = $void = "untyped", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000008E940DB0
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (216,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (216,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = _HEIGHT
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (216,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (216,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = _WIDTH
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (216,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (216,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (216,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (216,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (216,64), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                           (temprefn, resultdef = TCanvas = "TCanvas", pos = (216,4), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                           )

                        )
                     )

                  )
               )
               (calln, resultdef = $void = "untyped", pos = (204,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = $fin$00000154(<^untyped>) is nested; Register;
                  left =
                  (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (204,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (204,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        nil
                     )

                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after the firstpass
$fin$00000154 is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
$fin$00000154 is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (220,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
LoadImage;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (224,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (225,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (225,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = LoadFromFile(<TPicture>;const AnsiString);
         methodpointer =
         (subscriptn, resultdef = TPicture = "TPicture", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
            (subscriptn, resultdef = TImage = "TImage", pos = (225,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (225,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
         )
         left =
         (callparan, resultdef = AnsiString = "AnsiString", pos = (225,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (subscriptn, resultdef = AnsiString = "AnsiString", pos = (225,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (225,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (225,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (225,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (226,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (226,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (226,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (226,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (226,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = LongInt = "LongInt", pos = (226,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetWidth(<TPicture>):LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (226,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (226,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (226,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (226,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (nothingn, resultdef = $void = "untyped", pos = (226,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (226,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (226,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (227,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (227,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (227,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (227,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = LongInt = "LongInt", pos = (227,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetHeight(<TPicture>):LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (227,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (227,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (227,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (nothingn, resultdef = $void = "untyped", pos = (227,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (227,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (227,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (228,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (228,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (228,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (228,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (228,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = LongInt = "LongInt", pos = (228,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetWidth(<TPicture>):LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (228,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (228,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (228,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (228,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (nothingn, resultdef = $void = "untyped", pos = (228,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (228,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (228,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (229,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (229,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (229,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (229,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (229,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = LongInt = "LongInt", pos = (229,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetHeight(<TPicture>):LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (229,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (229,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (229,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (229,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (nothingn, resultdef = $void = "untyped", pos = (229,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (229,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (229,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
LoadImage;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (225,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (225,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = LoadFromFile(<TPicture>;const AnsiString);
         methodpointer =
         (subscriptn, resultdef = TPicture = "TPicture", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
            (subscriptn, resultdef = TImage = "TImage", pos = (225,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (225,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (225,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
            (subscriptn, resultdef = TPicture = "TPicture", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (225,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (225,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
         (callparan, resultdef = AnsiString = "AnsiString", pos = (225,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = AnsiString = "AnsiString", pos = (225,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (225,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (226,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (226,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (226,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (226,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (226,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            (calln, resultdef = LongInt = "LongInt", pos = (226,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetWidth(<TPicture>):LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (226,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (226,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (226,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (226,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                  (subscriptn, resultdef = TPicture = "TPicture", pos = (226,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (226,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (226,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (226,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (226,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (226,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (227,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (227,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (227,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (227,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            (calln, resultdef = LongInt = "LongInt", pos = (227,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetHeight(<TPicture>):LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (227,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (227,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (227,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                  (subscriptn, resultdef = TPicture = "TPicture", pos = (227,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (227,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (227,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (227,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (228,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (228,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (228,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (228,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (228,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            (calln, resultdef = LongInt = "LongInt", pos = (228,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetWidth(<TPicture>):LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (228,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (228,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (228,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (228,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                  (subscriptn, resultdef = TPicture = "TPicture", pos = (228,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (228,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (228,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (228,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (228,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (228,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (229,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (229,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (229,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (229,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (229,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            (calln, resultdef = LongInt = "LongInt", pos = (229,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetHeight(<TPicture>):LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (229,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (229,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (229,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (229,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                  (subscriptn, resultdef = TPicture = "TPicture", pos = (229,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (229,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (229,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (229,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (229,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (229,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
LoadImage;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (224,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (225,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (225,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = LoadFromFile(<TPicture>;const AnsiString);
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (225,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (225,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (225,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                  (subscriptn, resultdef = TPicture = "TPicture", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (225,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (225,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
               (callparan, resultdef = AnsiString = "AnsiString", pos = (225,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = AnsiString = "AnsiString", pos = (225,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (225,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (226,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (226,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetWidth(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (226,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (226,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (226,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                  (calln, resultdef = LongInt = "LongInt", pos = (226,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetWidth(<TPicture>):LongInt;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (226,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (226,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (226,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (226,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (226,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (226,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (226,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (226,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (226,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (226,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (227,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (227,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetHeight(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (227,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (227,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                  (calln, resultdef = LongInt = "LongInt", pos = (227,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetHeight(<TPicture>):LongInt;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (227,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (227,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (227,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (227,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (227,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (227,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (227,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (228,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (228,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetWidth(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (228,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (228,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (228,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                  (calln, resultdef = LongInt = "LongInt", pos = (228,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetWidth(<TPicture>):LongInt;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (228,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (228,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (228,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (228,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (228,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (228,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (228,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (228,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (228,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (228,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (229,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (229,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetHeight(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (229,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (229,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (229,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                  (calln, resultdef = LongInt = "LongInt", pos = (229,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetHeight(<TPicture>):LongInt;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (229,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (229,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (229,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (229,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (229,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (229,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (229,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (229,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (229,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (229,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (231,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (231,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (231,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (231,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (231,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (231,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
SetZoom(TPoint);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (236,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (239,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (239,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (239,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 19
            (typeconvn, resultdef = LongInt = "LongInt", pos = (239,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 18, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (239,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 17, inlinenumber = in_round_real
                  (typeconvn, resultdef = Double = "Double", pos = (239,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 16, convtype = tc_real_2_real, convnodeflags = []
                     (muln, resultdef = Single = "Single", pos = (239,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 15
                        (typeconvn, resultdef = Single = "Single", pos = (239,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_real, convnodeflags = []
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (239,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (239,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (239,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                        )
                        (subscriptn, resultdef = Single = "Single", pos = (239,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (239,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (239,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (239,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (241,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (241,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (241,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (241,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (241,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 19
            (typeconvn, resultdef = LongInt = "LongInt", pos = (241,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 18, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (241,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 17, inlinenumber = in_round_real
                  (typeconvn, resultdef = Double = "Double", pos = (241,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 16, convtype = tc_real_2_real, convnodeflags = []
                     (muln, resultdef = Single = "Single", pos = (241,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 15
                        (typeconvn, resultdef = Single = "Single", pos = (241,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_real, convnodeflags = []
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (241,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (241,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (241,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                        )
                        (subscriptn, resultdef = Single = "Single", pos = (241,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (241,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (241,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (241,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (242,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Refresh(<TControl>);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (242,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (242,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (242,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (244,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (244,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = MyResize(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (244,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (244,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TPoint = "<record type>", pos = (244,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = MOUSEPOINT
            )

         )
         (callparan, resultdef = <nil>, pos = (244,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (244,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
SetZoom(TPoint);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (239,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (239,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (239,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 18
            (typeconvn, resultdef = LongInt = "LongInt", pos = (239,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 17, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (239,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 16, inlinenumber = in_round_real
                  (muln, resultdef = Single = "Single", pos = (239,50), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 15
                     (typeconvn, resultdef = Single = "Single", pos = (239,31), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_real, convnodeflags = []
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (239,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (239,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (239,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                     )
                     (subscriptn, resultdef = Single = "Single", pos = (239,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (239,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (239,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (239,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (241,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (241,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (241,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (241,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (241,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 18
            (typeconvn, resultdef = LongInt = "LongInt", pos = (241,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 17, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (241,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 16, inlinenumber = in_round_real
                  (muln, resultdef = Single = "Single", pos = (241,52), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 15
                     (typeconvn, resultdef = Single = "Single", pos = (241,32), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_real, convnodeflags = []
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (241,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TImage = "TImage", pos = (241,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (241,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                     )
                     (subscriptn, resultdef = Single = "Single", pos = (241,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (241,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (241,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (241,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (241,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (242,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Refresh(<TControl>);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (242,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (242,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (242,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (244,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (244,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = MyResize(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (244,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (244,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TPoint = "<record type>", pos = (244,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = MOUSEPOINT
            )

         )
         (callparan, resultdef = <nil>, pos = (244,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (244,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
SetZoom(TPoint);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (236,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (239,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetWidth(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (239,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (239,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 18
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (239,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 17, convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (239,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 16, inlinenumber = in_round_real
                        (muln, resultdef = Single = "Single", pos = (239,50), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 15
                           (typeconvn, resultdef = Single = "Single", pos = (239,31), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_real, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (239,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (239,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (239,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                           (subscriptn, resultdef = Single = "Single", pos = (239,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (239,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (239,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (239,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (241,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (241,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetHeight(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (241,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (241,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (241,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 18
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (241,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 17, convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (241,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 16, inlinenumber = in_round_real
                        (muln, resultdef = Single = "Single", pos = (241,52), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 15
                           (typeconvn, resultdef = Single = "Single", pos = (241,32), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_real, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (241,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (241,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (241,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                           (subscriptn, resultdef = Single = "Single", pos = (241,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (241,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (241,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (241,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (241,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (242,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Refresh(<TControl>);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (242,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (242,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (242,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (244,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (244,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = MyResize(<TFormDocument>;TPoint);
               methodpointer =
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (244,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (244,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TPoint = "<record type>", pos = (244,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = MOUSEPOINT
                  )

               )
               (callparan, resultdef = <nil>, pos = (244,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (244,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ZoomIn;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (250,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (251,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (251,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (subscriptn, resultdef = Single = "Single", pos = (251,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (251,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         (muln, resultdef = Double = "Double", pos = (251,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (typeconvn, resultdef = Double = "Double", pos = (251,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4, convtype = tc_real_2_real, convnodeflags = []
               (subscriptn, resultdef = Single = "Single", pos = (251,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (251,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (251,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
               value =  1.2000000000000000E+000            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (252,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (252,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = SetZoom(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (252,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               proc = Point(LongInt;LongInt):<record type>;
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (252,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (252,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (252,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (252,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (252,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (252,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
ZoomIn;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (251,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (251,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (subscriptn, resultdef = Single = "Single", pos = (251,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (251,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         (muln, resultdef = Double = "Double", pos = (251,28), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 2
            (typeconvn, resultdef = Double = "Double", pos = (251,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_real_2_real, convnodeflags = []
               (subscriptn, resultdef = Single = "Single", pos = (251,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (251,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (251,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
               value =  1.2000000000000000E+000            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (252,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (252,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = SetZoom(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (252,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 6
            (blockn, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 5
               (statementn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (tempcreaten, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                     size = 8, temptypedef = TPoint = "<record type>", tempinfo = $000000008E940CB0
                     [ti_may_be_in_reg]
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (blockn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_block_with_exit], cmplx = 4
                     (statementn, resultdef = <nil>, pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                        (assignn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                 )
                              )
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (252,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                        (assignn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                 )
                              )
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (252,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )

                     )
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (tempdeleten, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $000000008E940CB0
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                     temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (252,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (252,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
ZoomIn;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (250,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (251,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (251,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (subscriptn, resultdef = Single = "Single", pos = (251,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (251,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               (muln, resultdef = Double = "Double", pos = (251,28), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 2
                  (typeconvn, resultdef = Double = "Double", pos = (251,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_real_2_real, convnodeflags = []
                     (subscriptn, resultdef = Single = "Single", pos = (251,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (251,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (251,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                     value =  1.2000000000000000E+000                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (252,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (252,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = SetZoom(<TFormDocument>;TPoint);
               methodpointer =
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (252,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 6
                  (blockn, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 5
                     (statementn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                        (tempcreaten, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                           size = 8, temptypedef = TPoint = "<record type>", tempinfo = $000000008E940CB0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                        (blockn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_block_with_exit], cmplx = 4
                           (statementn, resultdef = <nil>, pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                              (assignn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                          temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (252,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                              (assignn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                          temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (252,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                              )

                           )
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                        (tempdeleten, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $000000008E940CB0
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                        (temprefn, resultdef = TPoint = "<record type>", pos = (252,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                           temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (252,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (252,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (253,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (253,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (253,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (253,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (253,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (253,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ZoomOut;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (257,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (257,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (subscriptn, resultdef = Single = "Single", pos = (257,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         (slashn, resultdef = Double = "Double", pos = (257,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (typeconvn, resultdef = Double = "Double", pos = (257,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4, convtype = tc_real_2_real, convnodeflags = []
               (subscriptn, resultdef = Single = "Single", pos = (257,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (257,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
               value =  1.2000000000000000E+000            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (258,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (258,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = SetZoom(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (258,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               proc = Point(LongInt;LongInt):<record type>;
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (258,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (258,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (258,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (258,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (258,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (258,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
ZoomOut;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (257,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (257,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (subscriptn, resultdef = Single = "Single", pos = (257,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         (slashn, resultdef = Double = "Double", pos = (257,28), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
            (typeconvn, resultdef = Double = "Double", pos = (257,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_real_2_real, convnodeflags = []
               (subscriptn, resultdef = Single = "Single", pos = (257,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (257,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
               value =  1.2000000000000000E+000            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (258,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (258,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = SetZoom(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (258,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 6
            (blockn, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 5
               (statementn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (tempcreaten, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                     size = 8, temptypedef = TPoint = "<record type>", tempinfo = $000000008E940DB0
                     [ti_may_be_in_reg]
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (blockn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_block_with_exit], cmplx = 4
                     (statementn, resultdef = <nil>, pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                        (assignn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                                 )
                              )
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (258,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                        (assignn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                                 )
                              )
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (258,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )

                     )
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (tempdeleten, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $000000008E940DB0
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                     temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (258,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (258,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
ZoomOut;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (257,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (257,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (subscriptn, resultdef = Single = "Single", pos = (257,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               (slashn, resultdef = Double = "Double", pos = (257,28), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Double = "Double", pos = (257,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_real_2_real, convnodeflags = []
                     (subscriptn, resultdef = Single = "Single", pos = (257,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (257,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                     value =  1.2000000000000000E+000                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (258,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (258,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = SetZoom(<TFormDocument>;TPoint);
               methodpointer =
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (258,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 6
                  (blockn, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 5
                     (statementn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                        (tempcreaten, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                           size = 8, temptypedef = TPoint = "<record type>", tempinfo = $000000008E940DB0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                        (blockn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_block_with_exit], cmplx = 4
                           (statementn, resultdef = <nil>, pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                              (assignn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                          temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (258,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                              (assignn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                          temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (258,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                              )

                           )
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                        (tempdeleten, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $000000008E940DB0
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                        (temprefn, resultdef = TPoint = "<record type>", pos = (258,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                           temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (258,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (258,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ZoomReset;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (262,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (263,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (263,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (subscriptn, resultdef = Single = "Single", pos = (263,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (263,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         (realconstn, resultdef = Single = "Single", pos = (263,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            value =  1.0000000000000000E+000         )
      )

   )
   (statementn, resultdef = <nil>, pos = (264,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (264,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = SetZoom(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (264,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               proc = Point(LongInt;LongInt):<record type>;
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (264,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (264,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (264,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (264,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (264,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (264,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
ZoomReset;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (263,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (263,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (subscriptn, resultdef = Single = "Single", pos = (263,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (263,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         (realconstn, resultdef = Single = "Single", pos = (263,17), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
            value =  1.0000000000000000E+000         )
      )

   )
   (statementn, resultdef = <nil>, pos = (264,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (264,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = SetZoom(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (264,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 6
            (blockn, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 5
               (statementn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (tempcreaten, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                     size = 8, temptypedef = TPoint = "<record type>", tempinfo = $000000008E940CB0
                     [ti_may_be_in_reg]
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (blockn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_block_with_exit], cmplx = 4
                     (statementn, resultdef = <nil>, pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                        (assignn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                 )
                              )
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (264,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                        (assignn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                 )
                              )
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (264,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )

                     )
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (tempdeleten, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $000000008E940CB0
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                     temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (264,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (264,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
ZoomReset;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (262,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (263,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (263,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (subscriptn, resultdef = Single = "Single", pos = (263,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (263,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               (realconstn, resultdef = Single = "Single", pos = (263,17), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                  value =  1.0000000000000000E+000               )
            )

         )
         (statementn, resultdef = <nil>, pos = (264,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (264,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = SetZoom(<TFormDocument>;TPoint);
               methodpointer =
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (264,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 6
                  (blockn, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 5
                     (statementn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                        (tempcreaten, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                           size = 8, temptypedef = TPoint = "<record type>", tempinfo = $000000008E940CB0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                        (blockn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_block_with_exit], cmplx = 4
                           (statementn, resultdef = <nil>, pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                              (assignn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                          temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (264,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                              (assignn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                          temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (264,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                              )

                           )
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                        (tempdeleten, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $000000008E940CB0
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                        (temprefn, resultdef = TPoint = "<record type>", pos = (264,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                           temptypedef = TPoint = "<record type>", (tempinfo = $000000008E940CB0 flags = [ti_may_be_in_reg])
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (264,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (264,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (265,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (265,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (265,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (265,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (265,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (265,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
MyResize(TPoint);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (274,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (278,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (278,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = Single = "Single", pos = (278,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = SCALEFACTOR
         )
         (slashn, resultdef = Double = "Double", pos = (278,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (typeconvn, resultdef = Double = "Double", pos = (278,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4, convtype = tc_int_2_real, convnodeflags = []
               (subscriptn, resultdef = LongInt = "LongInt", pos = (278,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                  (loadn, resultdef = TScreen = "TScreen", pos = (278,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = SCREEN
                  )
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (278,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
               value =  9.6000000000000000E+001            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (279,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (279,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (279,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = PX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (279,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (279,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
               (typeconvn, resultdef = Double = "Double", pos = (279,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                  (slashn, resultdef = Single = "Single", pos = (279,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (typeconvn, resultdef = Single = "Single", pos = (279,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                        (inlinen, resultdef = Int64 = "Int64", pos = (279,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                           (typeconvn, resultdef = Double = "Double", pos = (279,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                              (slashn, resultdef = Single = "Single", pos = (279,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (279,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_real, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (279,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                       (loadn, resultdef = TPoint = "<record type>", pos = (279,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = MOUSEPOINT
                                       )
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (279,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (279,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (loadn, resultdef = Single = "Single", pos = (279,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = SCALEFACTOR
                     )
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (280,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (280,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (280,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = PY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (280,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (280,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
               (typeconvn, resultdef = Double = "Double", pos = (280,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                  (slashn, resultdef = Single = "Single", pos = (280,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (typeconvn, resultdef = Single = "Single", pos = (280,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                        (inlinen, resultdef = Int64 = "Int64", pos = (280,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                           (typeconvn, resultdef = Double = "Double", pos = (280,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                              (slashn, resultdef = Single = "Single", pos = (280,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (280,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_real, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (280,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                       (loadn, resultdef = TPoint = "<record type>", pos = (280,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = MOUSEPOINT
                                       )
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (280,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (280,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (loadn, resultdef = Single = "Single", pos = (280,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = SCALEFACTOR
                     )
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (282,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (282,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (282,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = BORDER
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (282,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (282,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
               (slashn, resultdef = Double = "Double", pos = (282,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (typeconvn, resultdef = Double = "Double", pos = (282,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                     (calln, resultdef = LongInt = "LongInt", pos = (282,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        proc = max(LongInt;LongInt):LongInt;
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (282,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (282,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (282,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (282,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (282,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (282,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (282,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (282,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )

                        )
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (282,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     value =  5.0000000000000000E+001                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (283,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (283,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetLeft(<TControlBorderSpacing>;const LongInt);
         methodpointer =
         (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (283,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
            (subscriptn, resultdef = TPanel = "TPanel", pos = (283,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (283,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (283,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (typeconvn, resultdef = LongInt = "LongInt", pos = (283,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (283,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                  (slashn, resultdef = Double = "Double", pos = (283,75), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (typeconvn, resultdef = Double = "Double", pos = (283,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 14, convtype = tc_int_2_real, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (283,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 13
                           (typeconvn, resultdef = Int64 = "Int64", pos = (283,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (283,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (283,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (283,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                           (typeconvn, resultdef = Int64 = "Int64", pos = (283,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (283,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (283,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (283,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (realconstn, resultdef = Double = "Double", pos = (283,74), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                        value =  2.0000000000000000E+000                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (283,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (283,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (284,77), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (284,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetTop(<TControlBorderSpacing>;const LongInt);
         methodpointer =
         (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (284,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
            (subscriptn, resultdef = TPanel = "TPanel", pos = (284,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (284,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (284,77), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (typeconvn, resultdef = LongInt = "LongInt", pos = (284,77), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (284,77), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                  (slashn, resultdef = Double = "Double", pos = (284,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (typeconvn, resultdef = Double = "Double", pos = (284,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 14, convtype = tc_int_2_real, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (284,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 13
                           (typeconvn, resultdef = Int64 = "Int64", pos = (284,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (284,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (284,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (284,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                           (typeconvn, resultdef = Int64 = "Int64", pos = (284,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (284,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (284,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (284,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (realconstn, resultdef = Double = "Double", pos = (284,75), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                        value =  2.0000000000000000E+000                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (284,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (284,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (285,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (285,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetLeft(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (285,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (285,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (285,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (285,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = BORDER
            )

         )
         (callparan, resultdef = <nil>, pos = (285,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (285,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (286,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (286,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetTop(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (286,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (286,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (286,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (286,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = BORDER
            )

         )
         (callparan, resultdef = <nil>, pos = (286,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (286,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (288,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (288,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (288,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (288,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (288,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 17
            (typeconvn, resultdef = LongInt = "LongInt", pos = (288,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 16, convtype = tc_int_2_int, convnodeflags = []
               (addn, resultdef = Int64 = "Int64", pos = (288,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 15
                  (typeconvn, resultdef = Int64 = "Int64", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (288,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                  )
                  (muln, resultdef = Int64 = "Int64", pos = (288,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 8
                     (typeconvn, resultdef = Int64 = "Int64", pos = (288,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                        (loadn, resultdef = LongInt = "LongInt", pos = (288,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = BORDER
                        )
                     )
                     (ordconstn, resultdef = Int64 = "Int64", pos = (288,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 2
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (288,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (288,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (289,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (289,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (289,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (289,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (289,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 17
            (typeconvn, resultdef = LongInt = "LongInt", pos = (289,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 16, convtype = tc_int_2_int, convnodeflags = []
               (addn, resultdef = Int64 = "Int64", pos = (289,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 15
                  (typeconvn, resultdef = Int64 = "Int64", pos = (289,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (289,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (289,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (289,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                  )
                  (muln, resultdef = Int64 = "Int64", pos = (289,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 8
                     (typeconvn, resultdef = Int64 = "Int64", pos = (289,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                        (loadn, resultdef = LongInt = "LongInt", pos = (289,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = BORDER
                        )
                     )
                     (ordconstn, resultdef = Int64 = "Int64", pos = (289,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 2
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (289,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (289,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (296,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (290,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (orn, resultdef = Boolean = "Boolean", pos = (290,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
            (unequaln, resultdef = Boolean = "Boolean", pos = (290,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (subscriptn, resultdef = LongInt = "LongInt", pos = (290,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = TPoint = "<record type>", pos = (290,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = MOUSEPOINT
                  )
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (290,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  value = 0
               )
            )
            (unequaln, resultdef = Boolean = "Boolean", pos = (290,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (subscriptn, resultdef = LongInt = "LongInt", pos = (290,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = TPoint = "<record type>", pos = (290,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = MOUSEPOINT
                  )
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (290,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  value = 0
               )
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (291,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 8
            (statementn, resultdef = <nil>, pos = (292,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 8
               (assignn, resultdef = $void = "untyped", pos = (292,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                  (loadn, resultdef = LongInt = "LongInt", pos = (292,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = SCROLLPOSX
                  )
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (292,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = TPoint = "<record type>", pos = (292,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = MOUSEPOINT
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (293,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
               (assignn, resultdef = $void = "untyped", pos = (293,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                  (loadn, resultdef = LongInt = "LongInt", pos = (293,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = SCROLLPOSY
                  )
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (293,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = TPoint = "<record type>", pos = (293,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = MOUSEPOINT
                     )
                  )
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (299,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = UpdateScrollbars(<TScrollingWinControl>);
         methodpointer =
         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (299,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (299,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (299,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
MyResize(TPoint);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (278,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (278,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = Single = "Single", pos = (278,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = SCALEFACTOR
         )
         (slashn, resultdef = Double = "Double", pos = (278,39), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
            (typeconvn, resultdef = Double = "Double", pos = (278,24), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_int_2_real, convnodeflags = []
               (subscriptn, resultdef = LongInt = "LongInt", pos = (278,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                  (loadn, resultdef = TScreen = "TScreen", pos = (278,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SCREEN
                  )
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (278,41), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
               value =  9.6000000000000000E+001            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (279,62), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (279,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (279,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = PX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (279,62), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (279,62), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (279,61), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Single = "Single", pos = (279,48), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (279,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (279,46), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Single = "Single", pos = (279,31), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_real, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (279,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                 (loadn, resultdef = TPoint = "<record type>", pos = (279,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = MOUSEPOINT
                                 )
                              )
                           )
                           (subscriptn, resultdef = Single = "Single", pos = (279,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (279,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (279,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (280,62), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (280,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (280,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = PY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (280,62), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (280,62), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (280,61), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Single = "Single", pos = (280,48), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (280,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (280,46), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Single = "Single", pos = (280,31), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_real, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (280,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                 (loadn, resultdef = TPoint = "<record type>", pos = (280,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = MOUSEPOINT
                                 )
                              )
                           )
                           (subscriptn, resultdef = Single = "Single", pos = (280,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (280,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (280,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (282,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (282,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (282,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = BORDER
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (282,57), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (282,57), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
               (slashn, resultdef = Double = "Double", pos = (282,56), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Double = "Double", pos = (282,19), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                     (calln, resultdef = LongInt = "LongInt", pos = (282,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                        proc = max(LongInt;LongInt):LongInt;
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (282,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (282,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (282,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (282,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (282,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (282,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (282,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (282,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )

                        )
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (282,54), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                     value =  5.0000000000000000E+001                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (283,76), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (283,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetLeft(<TControlBorderSpacing>;const LongInt);
         methodpointer =
         (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (283,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
            (subscriptn, resultdef = TPanel = "TPanel", pos = (283,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (283,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (283,76), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            (typeconvn, resultdef = LongInt = "LongInt", pos = (283,76), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (283,76), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                  (slashn, resultdef = Double = "Double", pos = (283,75), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                     (typeconvn, resultdef = Double = "Double", pos = (283,38), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 14, convtype = tc_int_2_real, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (283,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 13
                           (typeconvn, resultdef = Int64 = "Int64", pos = (283,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (283,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (283,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (283,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                           (typeconvn, resultdef = Int64 = "Int64", pos = (283,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (283,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (283,58), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (283,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (realconstn, resultdef = Double = "Double", pos = (283,74), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                        value =  2.0000000000000000E+000                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (283,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
            (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (283,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TPanel = "TPanel", pos = (283,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (283,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (284,77), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (284,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetTop(<TControlBorderSpacing>;const LongInt);
         methodpointer =
         (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (284,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
            (subscriptn, resultdef = TPanel = "TPanel", pos = (284,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (284,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (284,77), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            (typeconvn, resultdef = LongInt = "LongInt", pos = (284,77), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (284,77), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                  (slashn, resultdef = Double = "Double", pos = (284,76), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                     (typeconvn, resultdef = Double = "Double", pos = (284,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 14, convtype = tc_int_2_real, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (284,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 13
                           (typeconvn, resultdef = Int64 = "Int64", pos = (284,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (284,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (284,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (284,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                           (typeconvn, resultdef = Int64 = "Int64", pos = (284,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (284,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TImage = "TImage", pos = (284,58), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (284,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (realconstn, resultdef = Double = "Double", pos = (284,75), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                        value =  2.0000000000000000E+000                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (284,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
            (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (284,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TPanel = "TPanel", pos = (284,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (284,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (285,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (285,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetLeft(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (285,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (285,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (285,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (285,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (285,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (285,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (285,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = BORDER
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (286,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (286,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetTop(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (286,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (286,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (286,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TImage = "TImage", pos = (286,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (286,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (286,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (286,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = BORDER
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (288,46), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (288,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (288,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (288,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (288,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 17
            (typeconvn, resultdef = LongInt = "LongInt", pos = (288,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 16, convtype = tc_int_2_int, convnodeflags = []
               (addn, resultdef = Int64 = "Int64", pos = (288,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 15
                  (typeconvn, resultdef = Int64 = "Int64", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (288,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                  )
                  (muln, resultdef = Int64 = "Int64", pos = (288,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 8
                     (typeconvn, resultdef = Int64 = "Int64", pos = (288,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                        (loadn, resultdef = LongInt = "LongInt", pos = (288,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = BORDER
                        )
                     )
                     (ordconstn, resultdef = Int64 = "Int64", pos = (288,44), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 2
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (288,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TPanel = "TPanel", pos = (288,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (288,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (289,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (289,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (289,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (289,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (289,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 17
            (typeconvn, resultdef = LongInt = "LongInt", pos = (289,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 16, convtype = tc_int_2_int, convnodeflags = []
               (addn, resultdef = Int64 = "Int64", pos = (289,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 15
                  (typeconvn, resultdef = Int64 = "Int64", pos = (289,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (289,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (289,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (289,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                  )
                  (muln, resultdef = Int64 = "Int64", pos = (289,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 8
                     (typeconvn, resultdef = Int64 = "Int64", pos = (289,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                        (loadn, resultdef = LongInt = "LongInt", pos = (289,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = BORDER
                        )
                     )
                     (ordconstn, resultdef = Int64 = "Int64", pos = (289,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 2
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (289,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TPanel = "TPanel", pos = (289,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (289,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (296,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (290,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (orn, resultdef = Boolean = "Boolean", pos = (290,26), loc = LOC_INVALID, expectloc = LOC_JUMP, flags = [nf_pass1_done], cmplx = 7
            (unequaln, resultdef = Boolean = "Boolean", pos = (290,6), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 3
               (subscriptn, resultdef = LongInt = "LongInt", pos = (290,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                  (loadn, resultdef = TPoint = "<record type>", pos = (290,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = MOUSEPOINT
                  )
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (290,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 0
               )
            )
            (unequaln, resultdef = Boolean = "Boolean", pos = (290,29), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 3
               (subscriptn, resultdef = LongInt = "LongInt", pos = (290,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                  (loadn, resultdef = TPoint = "<record type>", pos = (290,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = MOUSEPOINT
                  )
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (290,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 0
               )
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (291,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 8
            (statementn, resultdef = <nil>, pos = (292,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 8
               (assignn, resultdef = $void = "untyped", pos = (292,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                  (loadn, resultdef = LongInt = "LongInt", pos = (292,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = SCROLLPOSX
                  )
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (292,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                     (loadn, resultdef = TPoint = "<record type>", pos = (292,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = MOUSEPOINT
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (293,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
               (assignn, resultdef = $void = "untyped", pos = (293,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                  (loadn, resultdef = LongInt = "LongInt", pos = (293,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = SCROLLPOSY
                  )
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (293,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                     (loadn, resultdef = TPoint = "<record type>", pos = (293,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = MOUSEPOINT
                     )
                  )
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (299,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = UpdateScrollbars(<TScrollingWinControl>);
         methodpointer =
         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (299,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (299,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (299,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
MyResize(TPoint);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (274,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (278,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (278,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = Single = "Single", pos = (278,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = SCALEFACTOR
               )
               (slashn, resultdef = Double = "Double", pos = (278,39), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Double = "Double", pos = (278,24), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_int_2_real, convnodeflags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (278,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                        (loadn, resultdef = TScreen = "TScreen", pos = (278,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = SCREEN
                        )
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (278,41), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                     value =  9.6000000000000000E+001                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (279,62), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (279,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = LongInt = "LongInt", pos = (279,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = PX
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (279,62), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (279,62), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                     (slashn, resultdef = Single = "Single", pos = (279,61), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                        (typeconvn, resultdef = Single = "Single", pos = (279,48), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (279,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (279,46), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (279,31), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_real, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (279,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                       (loadn, resultdef = TPoint = "<record type>", pos = (279,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = MOUSEPOINT
                                       )
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (279,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (279,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = Single = "Single", pos = (279,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = SCALEFACTOR
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (280,62), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (280,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = LongInt = "LongInt", pos = (280,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = PY
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (280,62), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (280,62), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                     (slashn, resultdef = Single = "Single", pos = (280,61), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                        (typeconvn, resultdef = Single = "Single", pos = (280,48), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (280,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (280,46), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (280,31), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_real, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (280,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                       (loadn, resultdef = TPoint = "<record type>", pos = (280,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = MOUSEPOINT
                                       )
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (280,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (280,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = Single = "Single", pos = (280,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = SCALEFACTOR
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (282,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (282,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = LongInt = "LongInt", pos = (282,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = BORDER
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (282,57), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (282,57), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                     (slashn, resultdef = Double = "Double", pos = (282,56), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                        (typeconvn, resultdef = Double = "Double", pos = (282,19), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (282,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                              proc = max(LongInt;LongInt):LongInt;
                              left =
                              (callparan, resultdef = LongInt = "LongInt", pos = (282,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (282,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                    (subscriptn, resultdef = TImage = "TImage", pos = (282,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (282,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (282,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (282,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                    (subscriptn, resultdef = TImage = "TImage", pos = (282,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (282,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )
                                 )

                              )
                           )
                        )
                        (realconstn, resultdef = Double = "Double", pos = (282,54), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                           value =  5.0000000000000000E+001                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (283,76), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (283,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetLeft(<TControlBorderSpacing>;const LongInt);
               methodpointer =
               (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (283,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (283,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (283,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (283,76), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (283,76), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (283,76), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Double = "Double", pos = (283,75), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Double = "Double", pos = (283,38), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 14, convtype = tc_int_2_real, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (283,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 13
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (283,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (283,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                       (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (283,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (283,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )
                                       )
                                    )
                                 )
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (283,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (283,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                       (subscriptn, resultdef = TImage = "TImage", pos = (283,58), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (283,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (realconstn, resultdef = Double = "Double", pos = (283,74), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                              value =  2.0000000000000000E+000                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (283,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                  (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (283,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TPanel = "TPanel", pos = (283,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (283,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (284,77), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (284,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetTop(<TControlBorderSpacing>;const LongInt);
               methodpointer =
               (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (284,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (284,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (284,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (284,77), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (284,77), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (284,77), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Double = "Double", pos = (284,76), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Double = "Double", pos = (284,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 14, convtype = tc_int_2_real, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (284,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 13
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (284,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (284,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                       (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (284,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (284,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )
                                       )
                                    )
                                 )
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (284,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (284,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                       (subscriptn, resultdef = TImage = "TImage", pos = (284,58), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (284,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (realconstn, resultdef = Double = "Double", pos = (284,75), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                              value =  2.0000000000000000E+000                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (284,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                  (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (284,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TPanel = "TPanel", pos = (284,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (284,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (285,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (285,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetLeft(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (285,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (285,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (285,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (285,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (285,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (285,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (285,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BORDER
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (286,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (286,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetTop(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (286,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (286,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (286,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (286,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (286,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (286,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (286,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BORDER
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (288,46), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (288,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetWidth(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TPanel = "TPanel", pos = (288,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (288,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (288,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 17
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (288,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 16, convtype = tc_int_2_int, convnodeflags = []
                     (addn, resultdef = Int64 = "Int64", pos = (288,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 15
                        (typeconvn, resultdef = Int64 = "Int64", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (288,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                        )
                        (muln, resultdef = Int64 = "Int64", pos = (288,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 8
                           (typeconvn, resultdef = Int64 = "Int64", pos = (288,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (288,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = BORDER
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (288,44), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 2
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (288,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (288,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (288,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (289,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (289,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetHeight(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TPanel = "TPanel", pos = (289,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (289,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (289,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 17
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (289,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 16, convtype = tc_int_2_int, convnodeflags = []
                     (addn, resultdef = Int64 = "Int64", pos = (289,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 15
                        (typeconvn, resultdef = Int64 = "Int64", pos = (289,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (289,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TImage = "TImage", pos = (289,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (289,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                        )
                        (muln, resultdef = Int64 = "Int64", pos = (289,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 8
                           (typeconvn, resultdef = Int64 = "Int64", pos = (289,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (289,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = BORDER
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (289,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 2
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (289,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (289,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (289,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (296,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (290,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (orn, resultdef = Boolean = "Boolean", pos = (290,26), loc = LOC_INVALID, expectloc = LOC_JUMP, flags = [nf_pass1_done], cmplx = 7
                  (unequaln, resultdef = Boolean = "Boolean", pos = (290,6), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 3
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (290,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                        (loadn, resultdef = TPoint = "<record type>", pos = (290,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = MOUSEPOINT
                        )
                     )
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (290,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 0
                     )
                  )
                  (unequaln, resultdef = Boolean = "Boolean", pos = (290,29), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 3
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (290,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                        (loadn, resultdef = TPoint = "<record type>", pos = (290,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = MOUSEPOINT
                        )
                     )
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (290,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 0
                     )
                  )
               )
               (blockn, resultdef = $void = "untyped", pos = (291,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 8
                  (statementn, resultdef = <nil>, pos = (292,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 8
                     (assignn, resultdef = $void = "untyped", pos = (292,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                        (loadn, resultdef = LongInt = "LongInt", pos = (292,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = SCROLLPOSX
                        )
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (292,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                           (loadn, resultdef = TPoint = "<record type>", pos = (292,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = MOUSEPOINT
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (293,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                     (assignn, resultdef = $void = "untyped", pos = (293,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                        (loadn, resultdef = LongInt = "LongInt", pos = (293,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = SCROLLPOSY
                        )
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (293,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                           (loadn, resultdef = TPoint = "<record type>", pos = (293,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = MOUSEPOINT
                           )
                        )
                     )

                  )
               )
               nil
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (299,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = UpdateScrollbars(<TScrollingWinControl>);
               methodpointer =
               (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (299,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (299,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (299,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (303,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (303,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (303,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (303,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (303,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (303,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
Image1MouseDown(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (310,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (312,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (312,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = Single = "Single", pos = (312,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = SCALEFACTOR
         )
         (slashn, resultdef = Double = "Double", pos = (312,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (typeconvn, resultdef = Double = "Double", pos = (312,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4, convtype = tc_int_2_real, convnodeflags = []
               (subscriptn, resultdef = LongInt = "LongInt", pos = (312,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                  (loadn, resultdef = TScreen = "TScreen", pos = (312,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = SCREEN
                  )
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (312,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
               value =  9.6000000000000000E+001            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (313,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (313,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (313,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = OLDX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
               (typeconvn, resultdef = Double = "Double", pos = (313,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                  (slashn, resultdef = Single = "Single", pos = (313,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (typeconvn, resultdef = Single = "Single", pos = (313,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                        (inlinen, resultdef = Int64 = "Int64", pos = (313,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                           (typeconvn, resultdef = Double = "Double", pos = (313,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                              (slashn, resultdef = Single = "Single", pos = (313,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = X
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (313,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (313,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (loadn, resultdef = Single = "Single", pos = (313,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = SCALEFACTOR
                     )
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (314,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (314,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (314,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = OLDY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
               (typeconvn, resultdef = Double = "Double", pos = (314,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                  (slashn, resultdef = Single = "Single", pos = (314,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (typeconvn, resultdef = Single = "Single", pos = (314,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                        (inlinen, resultdef = Int64 = "Int64", pos = (314,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                           (typeconvn, resultdef = Double = "Double", pos = (314,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                              (slashn, resultdef = Single = "Single", pos = (314,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (314,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (314,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = Y
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (314,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (314,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (loadn, resultdef = Single = "Single", pos = (314,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = SCALEFACTOR
                     )
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (317,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (317,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (317,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (317,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 1281101
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (343,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (320,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (equaln, resultdef = Boolean = "Boolean", pos = (320,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (320,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = BUTTON
            )
            (ordconstn, resultdef = TMouseButton = "<enumeration type>", pos = (320,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (321,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (322,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (322,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (322,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = HMOUSEBUTTON
                  )
                  (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (322,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (323,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetWidth(<TFPCustomPen>;LongInt);
                  methodpointer =
                  (subscriptn, resultdef = TPen = "TPen", pos = (323,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     (calln, resultdef = TCanvas = "TCanvas", pos = (323,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetCanvas(<TCustomImage>):TCanvas;
                        methodpointer =
                        (subscriptn, resultdef = TImage = "TImage", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (323,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (323,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (323,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (323,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (323,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = PENWIDTH
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (323,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (323,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (324,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TPen>;TGraphicsColor);
                  methodpointer =
                  (subscriptn, resultdef = TPen = "TPen", pos = (324,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     (calln, resultdef = TCanvas = "TCanvas", pos = (324,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetCanvas(<TCustomImage>):TCanvas;
                        methodpointer =
                        (subscriptn, resultdef = TImage = "TImage", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (324,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (324,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (324,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                  )
                  left =
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (324,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = TGraphicsColor = "LongInt", pos = (324,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = FORECOLOR
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (324,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (324,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (330,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (330,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (330,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (330,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = SHIFT
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (331,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (331,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (331,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = PX
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (331,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (331,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                        (typeconvn, resultdef = Double = "Double", pos = (331,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                           (slashn, resultdef = Single = "Single", pos = (331,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (typeconvn, resultdef = Single = "Single", pos = (331,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                                 (inlinen, resultdef = Int64 = "Int64", pos = (331,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                                    (typeconvn, resultdef = Double = "Double", pos = (331,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                                       (slashn, resultdef = Single = "Single", pos = (331,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                          (typeconvn, resultdef = Single = "Single", pos = (331,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (331,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = X
                                             )
                                          )
                                          (subscriptn, resultdef = Single = "Single", pos = (331,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (331,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = self
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (loadn, resultdef = Single = "Single", pos = (331,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = SCALEFACTOR
                              )
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (332,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (332,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (332,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = PY
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (332,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (332,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                        (typeconvn, resultdef = Double = "Double", pos = (332,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                           (slashn, resultdef = Single = "Single", pos = (332,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (typeconvn, resultdef = Single = "Single", pos = (332,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                                 (inlinen, resultdef = Int64 = "Int64", pos = (332,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                                    (typeconvn, resultdef = Double = "Double", pos = (332,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                                       (slashn, resultdef = Single = "Single", pos = (332,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                          (typeconvn, resultdef = Single = "Single", pos = (332,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (332,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = Y
                                             )
                                          )
                                          (subscriptn, resultdef = Single = "Single", pos = (332,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (332,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = self
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (loadn, resultdef = Single = "Single", pos = (332,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = SCALEFACTOR
                              )
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (342,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (casen, resultdef = $void = "untyped", pos = (334,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = TToolType = "<enumeration type>", pos = (334,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = HCTOOL
                  )
                  (caseblock blockid: 0
                     (calln, resultdef = $void = "untyped", pos = (335,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (335,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (335,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (335,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (335,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (335,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (335,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (335,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (335,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (335,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                     )
                  )
                  (caseblock blockid: 1
                     (calln, resultdef = $void = "untyped", pos = (336,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (336,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (336,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (336,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (336,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (336,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (336,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (336,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (336,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (336,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (336,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (336,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (336,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                     )
                  )
                  (caseblock blockid: 2
                     (calln, resultdef = $void = "untyped", pos = (337,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (337,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (337,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (337,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (337,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (337,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (337,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (337,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (337,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (337,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                     )
                  )
                  (caseblock blockid: 3
                     (calln, resultdef = $void = "untyped", pos = (338,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        proc = hc_Fill(TImage;TImage;TMouseButton;TShiftState;LongInt;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (338,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (338,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = HMOUSEEVENT
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (338,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (338,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (338,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (338,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (338,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (338,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )

                        )
                        (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (338,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (338,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = BUTTON
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (338,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (338,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (338,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (338,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (338,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (338,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                     )
                  )
                  (else: 3
                     (blockn, resultdef = $void = "untyped", pos = (342,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        nil
                     )
                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
after the firstpass
Image1MouseDown(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (312,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (312,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = Single = "Single", pos = (312,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = SCALEFACTOR
         )
         (slashn, resultdef = Double = "Double", pos = (312,39), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
            (typeconvn, resultdef = Double = "Double", pos = (312,24), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_int_2_real, convnodeflags = []
               (subscriptn, resultdef = LongInt = "LongInt", pos = (312,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                  (loadn, resultdef = TScreen = "TScreen", pos = (312,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SCREEN
                  )
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (312,41), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
               value =  9.6000000000000000E+001            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (313,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (313,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (313,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = OLDX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (313,52), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Single = "Single", pos = (313,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (313,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (313,37), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Single = "Single", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = X
                              )
                           )
                           (subscriptn, resultdef = Single = "Single", pos = (313,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (313,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (313,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (314,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (314,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (314,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = OLDY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (314,52), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Single = "Single", pos = (314,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (314,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (314,37), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Single = "Single", pos = (314,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (314,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = Y
                              )
                           )
                           (subscriptn, resultdef = Single = "Single", pos = (314,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (314,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (314,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (317,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (317,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (317,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (317,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 1281101
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (343,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (320,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (equaln, resultdef = Boolean = "Boolean", pos = (320,13), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 2
            (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (320,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = BUTTON
            )
            (ordconstn, resultdef = TMouseButton = "<enumeration type>", pos = (320,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (321,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (322,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (322,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                  (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (322,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = HMOUSEBUTTON
                  )
                  (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (322,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (323,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetWidth(<TFPCustomPen>;LongInt);
                  methodpointer =
                  (temprefn, resultdef = TPen = "TPen", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TPen = "TPen", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                  )
                  callinitblock =
                  (blockn, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (tempcreaten, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           size = 8, temptypedef = TPen = "TPen", tempinfo = $000000008E940DB0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (temprefn, resultdef = TPen = "TPen", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              temptypedef = TPen = "TPen", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                           )
                           (subscriptn, resultdef = TPen = "TPen", pos = (323,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                              (calln, resultdef = TCanvas = "TCanvas", pos = (323,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetCanvas(<TCustomImage>):TCanvas;
                                 methodpointer =
                                 (subscriptn, resultdef = TImage = "TImage", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (323,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (323,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                    (subscriptn, resultdef = TImage = "TImage", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (323,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )

                                 )
                              )
                           )
                        )

                     )
                  )
                  callcleanupblock =
                  (blockn, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     (statementn, resultdef = <nil>, pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempdeleten, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: FALSE, temptypedef = TPen = "TPen", temptype = tt_persistent, tempinfo = $000000008E940DB0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (323,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (323,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = PENWIDTH
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (323,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     (temprefn, resultdef = TPen = "TPen", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                        temptypedef = TPen = "TPen", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (324,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetColor(<TPen>;TGraphicsColor);
                  methodpointer =
                  (temprefn, resultdef = TPen = "TPen", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TPen = "TPen", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                  )
                  callinitblock =
                  (blockn, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (tempcreaten, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           size = 8, temptypedef = TPen = "TPen", tempinfo = $000000008E940EB0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (temprefn, resultdef = TPen = "TPen", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              temptypedef = TPen = "TPen", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                           )
                           (subscriptn, resultdef = TPen = "TPen", pos = (324,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                              (calln, resultdef = TCanvas = "TCanvas", pos = (324,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetCanvas(<TCustomImage>):TCanvas;
                                 methodpointer =
                                 (subscriptn, resultdef = TImage = "TImage", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (324,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (324,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                    (subscriptn, resultdef = TImage = "TImage", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (324,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )

                                 )
                              )
                           )
                        )

                     )
                  )
                  callcleanupblock =
                  (blockn, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     (statementn, resultdef = <nil>, pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempdeleten, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: FALSE, temptypedef = TPen = "TPen", temptype = tt_persistent, tempinfo = $000000008E940EB0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (324,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TGraphicsColor = "LongInt", pos = (324,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = FORECOLOR
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (324,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     (temprefn, resultdef = TPen = "TPen", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                        temptypedef = TPen = "TPen", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (330,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (330,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (330,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (330,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SHIFT
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (331,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (331,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (331,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = PX
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (331,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (331,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (331,52), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Single = "Single", pos = (331,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                              (inlinen, resultdef = Int64 = "Int64", pos = (331,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                                 (slashn, resultdef = Single = "Single", pos = (331,37), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                    (typeconvn, resultdef = Single = "Single", pos = (331,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (331,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = X
                                       )
                                    )
                                    (subscriptn, resultdef = Single = "Single", pos = (331,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (331,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )
                                 )
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (331,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = SCALEFACTOR
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (332,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (332,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (332,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = PY
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (332,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (332,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (332,52), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Single = "Single", pos = (332,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                              (inlinen, resultdef = Int64 = "Int64", pos = (332,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                                 (slashn, resultdef = Single = "Single", pos = (332,37), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                    (typeconvn, resultdef = Single = "Single", pos = (332,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (332,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = Y
                                       )
                                    )
                                    (subscriptn, resultdef = Single = "Single", pos = (332,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (332,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )
                                 )
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (332,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = SCALEFACTOR
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (342,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (casen, resultdef = $void = "untyped", pos = (334,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = TToolType = "<enumeration type>", pos = (334,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = HCTOOL
                  )
                  (caseblock blockid: 0
                     (calln, resultdef = $void = "untyped", pos = (335,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = TImage = "TImage", pos = (335,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (335,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (335,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (335,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (335,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (335,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (335,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (335,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (335,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )

                        )
                     )
                  )
                  (caseblock blockid: 1
                     (calln, resultdef = $void = "untyped", pos = (336,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (336,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (336,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (336,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (336,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (336,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (336,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (336,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (336,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (336,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (336,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (336,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (336,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )

                        )
                     )
                  )
                  (caseblock blockid: 2
                     (calln, resultdef = $void = "untyped", pos = (337,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (337,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (337,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (337,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (337,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (337,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (337,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (337,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (337,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (337,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )

                        )
                     )
                  )
                  (caseblock blockid: 3
                     (calln, resultdef = $void = "untyped", pos = (338,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = hc_Fill(TImage;TImage;TMouseButton;TShiftState;LongInt;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (338,78), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (338,78), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = HMOUSEEVENT
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (338,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (338,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (338,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (338,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (338,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (338,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (338,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (338,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (338,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (338,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (338,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (338,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )

                        )
                        (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (338,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (338,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = BUTTON
                           )

                        )
                     )
                  )
                  (else: 3
                     (blockn, resultdef = $void = "untyped", pos = (342,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        nil
                     )
                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
right before code generation
Image1MouseDown(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (310,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (312,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (312,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = Single = "Single", pos = (312,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = SCALEFACTOR
               )
               (slashn, resultdef = Double = "Double", pos = (312,39), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Double = "Double", pos = (312,24), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_int_2_real, convnodeflags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (312,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                        (loadn, resultdef = TScreen = "TScreen", pos = (312,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = SCREEN
                        )
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (312,41), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                     value =  9.6000000000000000E+001                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (313,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (313,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = LongInt = "LongInt", pos = (313,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = OLDX
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                     (slashn, resultdef = Single = "Single", pos = (313,52), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                        (typeconvn, resultdef = Single = "Single", pos = (313,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (313,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (313,37), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = X
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (313,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (313,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = Single = "Single", pos = (313,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = SCALEFACTOR
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (314,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (314,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = LongInt = "LongInt", pos = (314,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = OLDY
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                     (slashn, resultdef = Single = "Single", pos = (314,52), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                        (typeconvn, resultdef = Single = "Single", pos = (314,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (314,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (314,37), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (314,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (314,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = Y
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (314,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (314,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = Single = "Single", pos = (314,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = SCALEFACTOR
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (317,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (317,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = LongInt = "LongInt", pos = (317,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = HMOUSEEVENT
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (317,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 1281101
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (343,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (320,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (equaln, resultdef = Boolean = "Boolean", pos = (320,13), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 2
                  (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (320,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BUTTON
                  )
                  (ordconstn, resultdef = TMouseButton = "<enumeration type>", pos = (320,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )
               )
               (blockn, resultdef = $void = "untyped", pos = (321,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (322,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (322,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                        (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (322,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = HMOUSEBUTTON
                        )
                        (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (322,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = 0
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (323,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetWidth(<TFPCustomPen>;LongInt);
                        methodpointer =
                        (temprefn, resultdef = TPen = "TPen", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                           temptypedef = TPen = "TPen", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                        )
                        callinitblock =
                        (blockn, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (tempcreaten, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 size = 8, temptypedef = TPen = "TPen", tempinfo = $000000008E940DB0
                                 [ti_may_be_in_reg]
                                 tempinit =
                                 nil
                              )

                           )
                           (statementn, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (temprefn, resultdef = TPen = "TPen", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    temptypedef = TPen = "TPen", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                                 )
                                 (subscriptn, resultdef = TPen = "TPen", pos = (323,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    (calln, resultdef = TCanvas = "TCanvas", pos = (323,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetCanvas(<TCustomImage>):TCanvas;
                                       methodpointer =
                                       (subscriptn, resultdef = TImage = "TImage", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (323,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (323,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                          (subscriptn, resultdef = TImage = "TImage", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (323,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = self
                                             )
                                          )

                                       )
                                    )
                                 )
                              )

                           )
                        )
                        callcleanupblock =
                        (blockn, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           (statementn, resultdef = <nil>, pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (tempdeleten, resultdef = $void = "untyped", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 release_to_normal: FALSE, temptypedef = TPen = "TPen", temptype = tt_persistent, tempinfo = $000000008E940DB0
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (323,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (323,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PENWIDTH
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (323,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                           (temprefn, resultdef = TPen = "TPen", pos = (323,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = TPen = "TPen", (tempinfo = $000000008E940DB0 flags = [ti_may_be_in_reg])
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (324,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetColor(<TPen>;TGraphicsColor);
                        methodpointer =
                        (temprefn, resultdef = TPen = "TPen", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                           temptypedef = TPen = "TPen", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                        )
                        callinitblock =
                        (blockn, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (tempcreaten, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 size = 8, temptypedef = TPen = "TPen", tempinfo = $000000008E940EB0
                                 [ti_may_be_in_reg]
                                 tempinit =
                                 nil
                              )

                           )
                           (statementn, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (temprefn, resultdef = TPen = "TPen", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    temptypedef = TPen = "TPen", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                                 )
                                 (subscriptn, resultdef = TPen = "TPen", pos = (324,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    (calln, resultdef = TCanvas = "TCanvas", pos = (324,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetCanvas(<TCustomImage>):TCanvas;
                                       methodpointer =
                                       (subscriptn, resultdef = TImage = "TImage", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (324,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (324,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                          (subscriptn, resultdef = TImage = "TImage", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (324,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = self
                                             )
                                          )

                                       )
                                    )
                                 )
                              )

                           )
                        )
                        callcleanupblock =
                        (blockn, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           (statementn, resultdef = <nil>, pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (tempdeleten, resultdef = $void = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 release_to_normal: FALSE, temptypedef = TPen = "TPen", temptype = tt_persistent, tempinfo = $000000008E940EB0
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = TGraphicsColor = "LongInt", pos = (324,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TGraphicsColor = "LongInt", pos = (324,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = FORECOLOR
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (324,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                           (temprefn, resultdef = TPen = "TPen", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = TPen = "TPen", (tempinfo = $000000008E940EB0 flags = [ti_may_be_in_reg])
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (330,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (330,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (330,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = HCSHIFT
                        )
                        (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (330,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = SHIFT
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (331,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (331,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (loadn, resultdef = LongInt = "LongInt", pos = (331,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = PX
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (331,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (331,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (331,52), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (331,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                                    (inlinen, resultdef = Int64 = "Int64", pos = (331,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                                       (slashn, resultdef = Single = "Single", pos = (331,37), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                          (typeconvn, resultdef = Single = "Single", pos = (331,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (331,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = X
                                             )
                                          )
                                          (subscriptn, resultdef = Single = "Single", pos = (331,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (331,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = self
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (loadn, resultdef = Single = "Single", pos = (331,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = SCALEFACTOR
                                 )
                              )
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (332,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (332,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (loadn, resultdef = LongInt = "LongInt", pos = (332,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = PY
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (332,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (332,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (332,52), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (332,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                                    (inlinen, resultdef = Int64 = "Int64", pos = (332,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                                       (slashn, resultdef = Single = "Single", pos = (332,37), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                          (typeconvn, resultdef = Single = "Single", pos = (332,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (332,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = Y
                                             )
                                          )
                                          (subscriptn, resultdef = Single = "Single", pos = (332,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (332,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = self
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (loadn, resultdef = Single = "Single", pos = (332,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = SCALEFACTOR
                                 )
                              )
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (342,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (casen, resultdef = $void = "untyped", pos = (334,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (loadn, resultdef = TToolType = "<enumeration type>", pos = (334,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = HCTOOL
                        )
                        (caseblock blockid: 0
                           (calln, resultdef = $void = "untyped", pos = (335,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                              left =
                              (callparan, resultdef = TImage = "TImage", pos = (335,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                 (subscriptn, resultdef = TImage = "TImage", pos = (335,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (335,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (335,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (335,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = PY
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (335,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (335,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = PX
                                 )

                              )
                              (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (335,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (335,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = HCSHIFT
                                 )

                              )
                           )
                        )
                        (caseblock blockid: 1
                           (calln, resultdef = $void = "untyped", pos = (336,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                              left =
                              (callparan, resultdef = LongInt = "LongInt", pos = (336,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (336,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = PY
                                 )

                              )
                              (callparan, resultdef = TImage = "TImage", pos = (336,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                 (subscriptn, resultdef = TImage = "TImage", pos = (336,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (336,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )

                              )
                              (callparan, resultdef = TImage = "TImage", pos = (336,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                 (subscriptn, resultdef = TImage = "TImage", pos = (336,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (336,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (336,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (336,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = PX
                                 )

                              )
                              (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (336,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (336,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = HCSHIFT
                                 )

                              )
                           )
                        )
                        (caseblock blockid: 2
                           (calln, resultdef = $void = "untyped", pos = (337,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                              left =
                              (callparan, resultdef = LongInt = "LongInt", pos = (337,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (337,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = PY
                                 )

                              )
                              (callparan, resultdef = TImage = "TImage", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                 (subscriptn, resultdef = TImage = "TImage", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )

                              )
                              (callparan, resultdef = TImage = "TImage", pos = (337,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                 (subscriptn, resultdef = TImage = "TImage", pos = (337,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (337,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (337,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (337,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = PX
                                 )

                              )
                              (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (337,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (337,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = HCSHIFT
                                 )

                              )
                           )
                        )
                        (caseblock blockid: 3
                           (calln, resultdef = $void = "untyped", pos = (338,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              proc = hc_Fill(TImage;TImage;TMouseButton;TShiftState;LongInt;LongInt;LongInt);
                              left =
                              (callparan, resultdef = LongInt = "LongInt", pos = (338,78), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (338,78), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = HMOUSEEVENT
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (338,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (338,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = PY
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (338,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (338,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = PX
                                 )

                              )
                              (callparan, resultdef = TImage = "TImage", pos = (338,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                 (subscriptn, resultdef = TImage = "TImage", pos = (338,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (338,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )

                              )
                              (callparan, resultdef = TImage = "TImage", pos = (338,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                 (subscriptn, resultdef = TImage = "TImage", pos = (338,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (338,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )

                              )
                              (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (338,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (338,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = HCSHIFT
                                 )

                              )
                              (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (338,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (338,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = BUTTON
                                 )

                              )
                           )
                        )
                        (else: 3
                           (blockn, resultdef = $void = "untyped", pos = (342,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              nil
                           )
                        )
                     )

                  )
               )
               nil
               nil
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (345,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (345,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (345,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (345,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (345,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (345,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
Image1MouseMove(TObject;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (350,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (350,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (350,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (350,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 1281102
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (351,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (351,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (351,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = PX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (351,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (351,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
               (typeconvn, resultdef = Double = "Double", pos = (351,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                  (slashn, resultdef = Single = "Single", pos = (351,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (typeconvn, resultdef = Single = "Single", pos = (351,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                        (inlinen, resultdef = Int64 = "Int64", pos = (351,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                           (typeconvn, resultdef = Double = "Double", pos = (351,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                              (slashn, resultdef = Single = "Single", pos = (351,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (351,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (351,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = X
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (351,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (351,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (loadn, resultdef = Single = "Single", pos = (351,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = SCALEFACTOR
                     )
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (352,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (352,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (352,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = PY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (352,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (352,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
               (typeconvn, resultdef = Double = "Double", pos = (352,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                  (slashn, resultdef = Single = "Single", pos = (352,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (typeconvn, resultdef = Single = "Single", pos = (352,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                        (inlinen, resultdef = Int64 = "Int64", pos = (352,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                           (typeconvn, resultdef = Double = "Double", pos = (352,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                              (slashn, resultdef = Single = "Single", pos = (352,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (352,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (352,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = Y
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (352,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (352,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (loadn, resultdef = Single = "Single", pos = (352,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = SCALEFACTOR
                     )
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (382,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (354,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (equaln, resultdef = Boolean = "Boolean", pos = (354,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (354,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = HMOUSEBUTTON
            )
            (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (354,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (355,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (356,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (356,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (356,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (356,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = SHIFT
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (368,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (casen, resultdef = $void = "untyped", pos = (359,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = TToolType = "<enumeration type>", pos = (359,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = HCTOOL
                  )
                  (caseblock blockid: 0
                     (calln, resultdef = $void = "untyped", pos = (360,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (360,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (360,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (360,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (360,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (360,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (360,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = SHIFT
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (360,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (360,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (360,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                     )
                  )
                  (caseblock blockid: 1
                     (calln, resultdef = $void = "untyped", pos = (361,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (361,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (361,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (361,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (361,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (361,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (361,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = SHIFT
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (361,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (361,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (361,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (361,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                     )
                  )
                  (caseblock blockid: 2
                     (calln, resultdef = $void = "untyped", pos = (362,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (362,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (362,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (362,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (362,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (362,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (362,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = SHIFT
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (362,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (362,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (362,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (362,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                     )
                  )
                  (caseblock blockid: 3
                     (nothingn, resultdef = $void = "untyped", pos = (363,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )
                  )
                  (else: 3
                     (blockn, resultdef = $void = "untyped", pos = (368,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        nil
                     )
                  )
               )

            )
         )
         (ifn, resultdef = $void = "untyped", pos = (370,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (equaln, resultdef = Boolean = "Boolean", pos = (370,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
               (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (370,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = HMOUSEBUTTON
               )
               (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (370,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  value = 1
               )
            )
            (blockn, resultdef = $void = "untyped", pos = (371,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               nil
            )
            (ifn, resultdef = $void = "untyped", pos = (374,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (equaln, resultdef = Boolean = "Boolean", pos = (374,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (374,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = SHIFT
                  )
                  (setconstn, resultdef = <no type symbol> = "Set Of TShiftStateEnum", pos = (374,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                  )
               )
               (blockn, resultdef = $void = "untyped", pos = (375,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (379,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                        proc = SetPosition(<TControlScrollBar>;const LongInt);
                        methodpointer =
                        (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (379,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (379,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (typeconvn, resultdef = LongInt = "LongInt", pos = (379,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (379,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (379,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                    (calln, resultdef = LongInt = "LongInt", pos = (379,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetPosition(<TControlScrollBar>):LongInt;
                                       methodpointer =
                                       (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (379,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                                          (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (379,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = self
                                             )
                                          )
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (379,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (nothingn, resultdef = $void = "untyped", pos = (379,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          )

                                       )
                                    )
                                 )
                                 (subn, resultdef = Int64 = "Int64", pos = (379,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (379,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (379,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = PX
                                       )
                                    )
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (379,84), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (379,84), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = OLDX
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (379,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (379,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (380,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                        proc = SetPosition(<TControlScrollBar>;const LongInt);
                        methodpointer =
                        (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (380,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (380,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (typeconvn, resultdef = LongInt = "LongInt", pos = (380,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (380,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (380,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                    (calln, resultdef = LongInt = "LongInt", pos = (380,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetPosition(<TControlScrollBar>):LongInt;
                                       methodpointer =
                                       (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (380,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                                          (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (380,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = self
                                             )
                                          )
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (380,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (nothingn, resultdef = $void = "untyped", pos = (380,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          )

                                       )
                                    )
                                 )
                                 (subn, resultdef = Int64 = "Int64", pos = (380,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (380,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (380,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = PY
                                       )
                                    )
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (380,84), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (380,84), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = OLDY
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (380,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (380,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )

                  )
               )
               nil
               nil
            )
            nil
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (389,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (384,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = UpdateText(AnsiString);
         left =
         (callparan, resultdef = AnsiString = "AnsiString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (addn, resultdef = AnsiString = "AnsiString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (addn, resultdef = AnsiString = "AnsiString", pos = (388,86), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (addn, resultdef = AnsiString = "AnsiString", pos = (388,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (addn, resultdef = AnsiString = "AnsiString", pos = (388,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (addn, resultdef = AnsiString = "AnsiString", pos = (387,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (addn, resultdef = AnsiString = "AnsiString", pos = (387,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (addn, resultdef = AnsiString = "AnsiString", pos = (387,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (addn, resultdef = AnsiString = "AnsiString", pos = (387,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                    (addn, resultdef = AnsiString = "AnsiString", pos = (386,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                       (addn, resultdef = AnsiString = "AnsiString", pos = (386,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                          (addn, resultdef = AnsiString = "AnsiString", pos = (386,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                             (addn, resultdef = AnsiString = "AnsiString", pos = (386,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                (addn, resultdef = AnsiString = "AnsiString", pos = (385,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                   (addn, resultdef = AnsiString = "AnsiString", pos = (385,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                      (addn, resultdef = AnsiString = "AnsiString", pos = (385,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                         (addn, resultdef = AnsiString = "AnsiString", pos = (385,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                            (addn, resultdef = AnsiString = "AnsiString", pos = (385,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                               (addn, resultdef = AnsiString = "AnsiString", pos = (385,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                  (addn, resultdef = AnsiString = "AnsiString", pos = (384,69), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                     (addn, resultdef = AnsiString = "AnsiString", pos = (384,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                        (addn, resultdef = AnsiString = "AnsiString", pos = (384,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                           (addn, resultdef = AnsiString = "AnsiString", pos = (384,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                              (addn, resultdef = AnsiString = "AnsiString", pos = (384,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                 (addn, resultdef = AnsiString = "AnsiString", pos = (384,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                    (stringconstn, resultdef = AnsiString = "AnsiString", pos = (384,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                                    )
                                                                                    (calln, resultdef = AnsiString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                       proc = ToString(<var LongInt>;<var AnsiString>):AnsiString;
                                                                                       methodpointer =
                                                                                       (loadn, resultdef = LongInt = "LongInt", pos = (384,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                                          nil
                                                                                          symbol = X
                                                                                       )
                                                                                       left =
                                                                                       (callparan, resultdef = <nil>, pos = (384,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                                          (nothingn, resultdef = $void = "untyped", pos = (384,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = <nil>, pos = (384,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                                          (nothingn, resultdef = $void = "untyped", pos = (384,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                                                          )

                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (stringconstn, resultdef = AnsiString = "AnsiString", pos = (384,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                                 )
                                                                              )
                                                                              (stringconstn, resultdef = AnsiString = "AnsiString", pos = (384,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                              )
                                                                           )
                                                                           (calln, resultdef = AnsiString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                              proc = ToString(<var LongInt>;<var AnsiString>):AnsiString;
                                                                              methodpointer =
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (384,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                                 nil
                                                                                 symbol = Y
                                                                              )
                                                                              left =
                                                                              (callparan, resultdef = <nil>, pos = (384,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                                 (nothingn, resultdef = $void = "untyped", pos = (384,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                                                 )

                                                                              )
                                                                              (callparan, resultdef = <nil>, pos = (384,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                                 (nothingn, resultdef = $void = "untyped", pos = (384,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                                                 )

                                                                              )
                                                                           )
                                                                        )
                                                                        (stringconstn, resultdef = AnsiString = "AnsiString", pos = (384,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                        )
                                                                     )
                                                                     (stringconstn, resultdef = AnsiString = "AnsiString", pos = (385,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                     )
                                                                  )
                                                                  (calln, resultdef = AnsiString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                     proc = ToString(<var LongInt>;<var AnsiString>):AnsiString;
                                                                     methodpointer =
                                                                     (loadn, resultdef = LongInt = "LongInt", pos = (385,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                        nil
                                                                        symbol = PX
                                                                     )
                                                                     left =
                                                                     (callparan, resultdef = <nil>, pos = (385,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                        (nothingn, resultdef = $void = "untyped", pos = (385,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = <nil>, pos = (385,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                                        (nothingn, resultdef = $void = "untyped", pos = (385,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                                        )

                                                                     )
                                                                  )
                                                               )
                                                               (stringconstn, resultdef = AnsiString = "AnsiString", pos = (385,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                               )
                                                            )
                                                            (stringconstn, resultdef = AnsiString = "AnsiString", pos = (385,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                            )
                                                         )
                                                         (calln, resultdef = AnsiString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                            proc = ToString(<var LongInt>;<var AnsiString>):AnsiString;
                                                            methodpointer =
                                                            (loadn, resultdef = LongInt = "LongInt", pos = (385,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                               nil
                                                               symbol = PY
                                                            )
                                                            left =
                                                            (callparan, resultdef = <nil>, pos = (385,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                               (nothingn, resultdef = $void = "untyped", pos = (385,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                               )

                                                            )
                                                            (callparan, resultdef = <nil>, pos = (385,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                               (nothingn, resultdef = $void = "untyped", pos = (385,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                               )

                                                            )
                                                         )
                                                      )
                                                      (stringconstn, resultdef = AnsiString = "AnsiString", pos = (385,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                      )
                                                   )
                                                   (stringconstn, resultdef = AnsiString = "AnsiString", pos = (386,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                   )
                                                )
                                                (stringconstn, resultdef = AnsiString = "AnsiString", pos = (386,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                )
                                             )
                                             (calln, resultdef = AnsiString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                proc = ToString(<var LongInt>;<var AnsiString>):AnsiString;
                                                methodpointer =
                                                (subscriptn, resultdef = LongInt = "LongInt", pos = (386,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                                                   (subscriptn, resultdef = TImage = "TImage", pos = (386,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                                      (loadn, resultdef = TFormDocument = "TFormDocument", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                         nil
                                                         symbol = self
                                                      )
                                                   )
                                                )
                                                left =
                                                (callparan, resultdef = <nil>, pos = (386,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                   (nothingn, resultdef = $void = "untyped", pos = (386,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                   )

                                                )
                                                (callparan, resultdef = <nil>, pos = (386,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                   (nothingn, resultdef = $void = "untyped", pos = (386,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                   )

                                                )
                                             )
                                          )
                                          (stringconstn, resultdef = AnsiString = "AnsiString", pos = (386,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          )
                                       )
                                       (calln, resultdef = AnsiString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                          proc = ToString(<var LongInt>;<var AnsiString>):AnsiString;
                                          methodpointer =
                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (387,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                                             (subscriptn, resultdef = TImage = "TImage", pos = (387,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                                (loadn, resultdef = TFormDocument = "TFormDocument", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                   nil
                                                   symbol = self
                                                )
                                             )
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (387,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             (nothingn, resultdef = $void = "untyped", pos = (387,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (387,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             (nothingn, resultdef = $void = "untyped", pos = (387,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                             )

                                          )
                                       )
                                    )
                                    (calln, resultdef = AnsiString = "AnsiString", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                       proc = ToString(<var Single>;<var AnsiString>):AnsiString;
                                       methodpointer =
                                       (loadn, resultdef = Single = "Single", pos = (387,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = SCALEFACTOR
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (387,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (nothingn, resultdef = $void = "untyped", pos = (387,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (387,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (nothingn, resultdef = $void = "untyped", pos = (387,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          )

                                       )
                                    )
                                 )
                                 (stringconstn, resultdef = AnsiString = "AnsiString", pos = (387,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 )
                              )
                              (stringconstn, resultdef = AnsiString = "AnsiString", pos = (387,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              )
                           )
                           (calln, resultdef = AnsiString = "AnsiString", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              proc = ToString(<var Single>;<var AnsiString>):AnsiString;
                              methodpointer =
                              (subscriptn, resultdef = Single = "Single", pos = (388,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (388,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (388,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (388,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (388,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                           )
                        )
                        (stringconstn, resultdef = AnsiString = "AnsiString", pos = (388,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        )
                     )
                     (calln, resultdef = AnsiString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        proc = ToString(<var LongInt>;<var AnsiString>):AnsiString;
                        methodpointer =
                        (calln, resultdef = LongInt = "LongInt", pos = (388,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetPosition(<TControlScrollBar>):LongInt;
                           methodpointer =
                           (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (388,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (388,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (388,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (388,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (388,86), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (388,86), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (388,86), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (388,86), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                  )
                  (stringconstn, resultdef = AnsiString = "AnsiString", pos = (389,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  )
               )
               (calln, resultdef = AnsiString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = ToString(<var LongInt>;<var AnsiString>):AnsiString;
                  methodpointer =
                  (calln, resultdef = LongInt = "LongInt", pos = (389,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetPosition(<TControlScrollBar>):LongInt;
                     methodpointer =
                     (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (389,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (389,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (389,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (389,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
Image1MouseMove(TObject;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (350,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (350,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (350,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (350,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 1281102
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (351,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (351,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (351,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = PX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (351,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (351,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (351,50), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Single = "Single", pos = (351,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (351,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (351,35), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Single = "Single", pos = (351,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (351,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = X
                              )
                           )
                           (subscriptn, resultdef = Single = "Single", pos = (351,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (351,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (351,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (352,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (352,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (352,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = PY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (352,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (352,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (352,50), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Single = "Single", pos = (352,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (352,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (352,35), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Single = "Single", pos = (352,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (352,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = Y
                              )
                           )
                           (subscriptn, resultdef = Single = "Single", pos = (352,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (352,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (352,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (382,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (354,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (equaln, resultdef = Boolean = "Boolean", pos = (354,19), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 2
            (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (354,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = HMOUSEBUTTON
            )
            (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (354,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (355,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (356,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (356,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (356,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (356,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SHIFT
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (368,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (casen, resultdef = $void = "untyped", pos = (359,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = TToolType = "<enumeration type>", pos = (359,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = HCTOOL
                  )
                  (caseblock blockid: 0
                     (calln, resultdef = $void = "untyped", pos = (360,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = TImage = "TImage", pos = (360,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (360,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (360,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (360,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (360,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (360,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (360,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (360,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (360,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = SHIFT
                           )

                        )
                     )
                  )
                  (caseblock blockid: 1
                     (calln, resultdef = $void = "untyped", pos = (361,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (361,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (361,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (361,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (361,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (361,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (361,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (361,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (361,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (361,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (361,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = SHIFT
                           )

                        )
                     )
                  )
                  (caseblock blockid: 2
                     (calln, resultdef = $void = "untyped", pos = (362,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (362,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (362,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (362,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (362,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (362,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (362,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (362,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (362,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (362,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (362,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = SHIFT
                           )

                        )
                     )
                  )
                  (caseblock blockid: 3
                     (nothingn, resultdef = $void = "untyped", pos = (363,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     )
                  )
                  (else: 3
                     (blockn, resultdef = $void = "untyped", pos = (368,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        nil
                     )
                  )
               )

            )
         )
         (ifn, resultdef = $void = "untyped", pos = (370,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (equaln, resultdef = Boolean = "Boolean", pos = (370,24), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (370,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = HMOUSEBUTTON
               )
               (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (370,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 1
               )
            )
            (blockn, resultdef = $void = "untyped", pos = (371,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
               nil
            )
            (ifn, resultdef = $void = "untyped", pos = (374,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (equaln, resultdef = Boolean = "Boolean", pos = (374,17), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 1
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (374,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SHIFT
                  )
                  (setconstn, resultdef = <no type symbol> = "Set Of TShiftStateEnum", pos = (374,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
                     nil
                  )
               )
               (blockn, resultdef = $void = "untyped", pos = (375,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (379,89), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetPosition(<TControlScrollBar>;const LongInt);
                        methodpointer =
                        (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (379,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (379,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                           (typeconvn, resultdef = LongInt = "LongInt", pos = (379,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (379,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (379,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                    (calln, resultdef = LongInt = "LongInt", pos = (379,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetPosition(<TControlScrollBar>):LongInt;
                                       methodpointer =
                                       (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (379,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                          (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (379,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = self
                                             )
                                          )
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (379,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                          (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (379,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                             (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (379,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = self
                                                )
                                             )
                                          )

                                       )
                                    )
                                 )
                                 (subn, resultdef = Int64 = "Int64", pos = (379,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (379,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (379,79), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = PX
                                       )
                                    )
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (379,84), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (379,84), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = OLDX
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (379,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                           (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (379,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (380,89), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetPosition(<TControlScrollBar>;const LongInt);
                        methodpointer =
                        (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (380,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                           (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (380,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                           (typeconvn, resultdef = LongInt = "LongInt", pos = (380,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (380,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (380,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                    (calln, resultdef = LongInt = "LongInt", pos = (380,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetPosition(<TControlScrollBar>):LongInt;
                                       methodpointer =
                                       (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (380,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                          (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (380,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = self
                                             )
                                          )
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (380,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                          (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (380,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                             (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (380,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = self
                                                )
                                             )
                                          )

                                       )
                                    )
                                 )
                                 (subn, resultdef = Int64 = "Int64", pos = (380,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (380,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (380,79), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = PY
                                       )
                                    )
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (380,84), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (380,84), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = OLDY
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (380,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                           (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (380,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                              (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )

                        )
                     )

                  )
               )
               nil
               nil
            )
            nil
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (389,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (384,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = UpdateText(AnsiString);
         left =
         (callparan, resultdef = AnsiString = "AnsiString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
            (blockn, resultdef = AnsiString = "AnsiString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
               (statementn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (nothingn, resultdef = $void = "untyped", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  )

               )
               (statementn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (tempcreaten, resultdef = $void = "untyped", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     size = 8, temptypedef = AnsiString = "AnsiString", tempinfo = $000000008E940DB0
                     []
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (calln, resultdef = $void = "untyped", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     proc = $fpc_ansistr_concat_multi(var RawByteString;const {Open} Array Of RawByteString;<const Int64>;Word);
                     left =
                     (callparan, resultdef = <no type symbol> = "{Open} Array Of RawByteString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 255
                        (typeconvn, resultdef = <no type symbol> = "{Array Of Const/Constant Open} Array of RawByteString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 255, convtype = tc_equal, convnodeflags = []
                           (arrayconstructn, resultdef = <no type symbol> = "{Array Of Const/Constant Open} Array of RawByteString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done,nf_novariaallowed], cmplx = 255
                              (stringconstn, resultdef = AnsiString = "AnsiString", pos = (384,14), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (blockn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                    (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (tempcreaten, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                          size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E940FB0
                                          [ti_addr_taken,ti_nofini]
                                          tempinit =
                                          nil
                                       )

                                    )
                                    (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                       (blockn, resultdef = AnsiString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                          (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (calln, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                callinitblock =
                                                (blockn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                   (statementn, resultdef = <nil>, pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (tempcreaten, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                         size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E940F30
                                                         [ti_may_be_in_reg]
                                                         tempinit =
                                                         nil
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (assignn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                         (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                            temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                                                         )
                                                         (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                            (addrn, resultdef = Pointer = "^untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                               (typeconvn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                  (typeconvn, resultdef = AnsiString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                     (temprefn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                        temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E940FB0 flags = [ti_addr_taken,ti_nofini])
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         proc = $fpc_ansistr_decr_ref(var Pointer);
                                                         left =
                                                         (callparan, resultdef = Pointer = "^untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                            (typeconvn, resultdef = Pointer = "^untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                               (derefn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                     temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                                                                  )
                                                               )
                                                            )

                                                         )
                                                      )

                                                   )
                                                )
                                                callcleanupblock =
                                                (blockn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                   (statementn, resultdef = <nil>, pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                      (tempdeleten, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                         release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E940F30
                                                      )

                                                   )
                                                )
                                                left =
                                                (callparan, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                   (derefn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                         temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = Int64 = "Int64", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 3
                                                   (typeconvn, resultdef = Int64 = "Int64", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                      (loadn, resultdef = LongInt = "LongInt", pos = (384,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = X
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = Word = "Word", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                   (ordconstn, resultdef = Word = "Word", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                      value = 0
                                                   )

                                                )
                                                (callparan, resultdef = Int64 = "Int64", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                   (ordconstn, resultdef = Int64 = "Int64", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                      value = -1
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                             (typeconvn, resultdef = AnsiString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                (temprefn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                   temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E940FB0 flags = [ti_addr_taken,ti_nofini])
                                                )
                                             )

                                          )
                                       )

                                    )
                                    (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                       (tempdeleten, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                          release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E940FB0
                                       )

                                    )
                                    (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       (temprefn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                          temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E940FB0 flags = [ti_addr_taken,ti_nofini])
                                       )

                                    )
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                    (stringconstn, resultdef = AnsiString = "AnsiString", pos = (384,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                    )
                                    (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                       (stringconstn, resultdef = AnsiString = "AnsiString", pos = (384,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                       )
                                       (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                          (blockn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                             (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                (tempcreaten, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                   size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941030
                                                   [ti_addr_taken,ti_nofini]
                                                   tempinit =
                                                   nil
                                                )

                                             )
                                             (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                (blockn, resultdef = AnsiString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                   (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                         callinitblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (statementn, resultdef = <nil>, pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E9410B0
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (assignn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                  (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                     temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                     (addrn, resultdef = Pointer = "^untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                        (typeconvn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                           (typeconvn, resultdef = AnsiString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                              (temprefn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                 temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941030 flags = [ti_addr_taken,ti_nofini])
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (calln, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                  left =
                                                                  (callparan, resultdef = Pointer = "^untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                     (typeconvn, resultdef = Pointer = "^untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                        (derefn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                              temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            (statementn, resultdef = <nil>, pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                               (tempdeleten, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E9410B0
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                            (derefn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                  temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = Int64 = "Int64", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 3
                                                            (typeconvn, resultdef = Int64 = "Int64", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (384,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = Y
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = Word = "Word", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                            (ordconstn, resultdef = Word = "Word", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                               value = 0
                                                            )

                                                         )
                                                         (callparan, resultdef = Int64 = "Int64", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                            (ordconstn, resultdef = Int64 = "Int64", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                               value = -1
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                      (typeconvn, resultdef = AnsiString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                         (temprefn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                            temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941030 flags = [ti_addr_taken,ti_nofini])
                                                         )
                                                      )

                                                   )
                                                )

                                             )
                                             (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                (tempdeleten, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                   release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941030
                                                )

                                             )
                                             (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                (temprefn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                   temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941030 flags = [ti_addr_taken,ti_nofini])
                                                )

                                             )
                                          )
                                          (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                             (stringconstn, resultdef = AnsiString = "AnsiString", pos = (384,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                             )
                                             (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                (stringconstn, resultdef = AnsiString = "AnsiString", pos = (385,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                )
                                                (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                   (blockn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                      (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                         (tempcreaten, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                            size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941530
                                                            [ti_addr_taken,ti_nofini]
                                                            tempinit =
                                                            nil
                                                         )

                                                      )
                                                      (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                         (blockn, resultdef = AnsiString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                            (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E9415B0
                                                                  []
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (assignn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                                                                  (temprefn, resultdef = LongInt = "LongInt", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                     temptypedef = LongInt = "LongInt", (tempinfo = $000000008E9415B0 flags = [])
                                                                  )
                                                                  (loadn, resultdef = LongInt = "LongInt", pos = (385,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = PX
                                                                  )
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (calln, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                  callinitblock =
                                                                  (blockn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                     (statementn, resultdef = <nil>, pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                        (tempcreaten, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E941630
                                                                           [ti_may_be_in_reg]
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (assignn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                           (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941630 flags = [ti_may_be_in_reg])
                                                                           )
                                                                           (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                              (addrn, resultdef = Pointer = "^untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                 (typeconvn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                    (typeconvn, resultdef = AnsiString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                       (temprefn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                          temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941530 flags = [ti_addr_taken,ti_nofini])
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (calln, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                           proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                           left =
                                                                           (callparan, resultdef = Pointer = "^untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                              (typeconvn, resultdef = Pointer = "^untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                 (derefn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                       temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941630 flags = [ti_may_be_in_reg])
                                                                                    )
                                                                                 )
                                                                              )

                                                                           )
                                                                        )

                                                                     )
                                                                  )
                                                                  callcleanupblock =
                                                                  (blockn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     (statementn, resultdef = <nil>, pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E941630
                                                                        )

                                                                     )
                                                                  )
                                                                  left =
                                                                  (callparan, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                     (derefn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                           temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941630 flags = [ti_may_be_in_reg])
                                                                        )
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = Word = "Word", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                     (ordconstn, resultdef = Word = "Word", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = 0
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = Int64 = "Int64", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = -1
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = Int64 = "Int64", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                     (typeconvn, resultdef = Int64 = "Int64", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                        (temprefn, resultdef = LongInt = "LongInt", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           temptypedef = LongInt = "LongInt", (tempinfo = $000000008E9415B0 flags = [])
                                                                        )
                                                                     )

                                                                  )
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                               (tempdeleten, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E9415B0
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                               (typeconvn, resultdef = AnsiString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                  (temprefn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                     temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941530 flags = [ti_addr_taken,ti_nofini])
                                                                  )
                                                               )

                                                            )
                                                         )

                                                      )
                                                      (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                         (tempdeleten, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941530
                                                         )

                                                      )
                                                      (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                         (temprefn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                            temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941530 flags = [ti_addr_taken,ti_nofini])
                                                         )

                                                      )
                                                   )
                                                   (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                      (stringconstn, resultdef = AnsiString = "AnsiString", pos = (385,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                      )
                                                      (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                         (stringconstn, resultdef = AnsiString = "AnsiString", pos = (385,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                         )
                                                         (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                            (blockn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                               (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                     size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E9416B0
                                                                     [ti_addr_taken,ti_nofini]
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                  (blockn, resultdef = AnsiString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                     (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                        (tempcreaten, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941730
                                                                           []
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                        (assignn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941730 flags = [])
                                                                           )
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (385,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = PY
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                        (calln, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                           proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                           callinitblock =
                                                                           (blockn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                              (statementn, resultdef = <nil>, pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                 (tempcreaten, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                    size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E9417B0
                                                                                    [ti_may_be_in_reg]
                                                                                    tempinit =
                                                                                    nil
                                                                                 )

                                                                              )
                                                                              (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                 (assignn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                    (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                       temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9417B0 flags = [ti_may_be_in_reg])
                                                                                    )
                                                                                    (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                       (addrn, resultdef = Pointer = "^untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                          (typeconvn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                             (typeconvn, resultdef = AnsiString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                (temprefn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                   temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E9416B0 flags = [ti_addr_taken,ti_nofini])
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )

                                                                              )
                                                                              (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                 (calln, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                    proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                                    left =
                                                                                    (callparan, resultdef = Pointer = "^untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                       (typeconvn, resultdef = Pointer = "^untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                          (derefn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                             (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9417B0 flags = [ti_may_be_in_reg])
                                                                                             )
                                                                                          )
                                                                                       )

                                                                                    )
                                                                                 )

                                                                              )
                                                                           )
                                                                           callcleanupblock =
                                                                           (blockn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                              (statementn, resultdef = <nil>, pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                 (tempdeleten, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                    release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E9417B0
                                                                                 )

                                                                              )
                                                                           )
                                                                           left =
                                                                           (callparan, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                              (derefn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                    temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9417B0 flags = [ti_may_be_in_reg])
                                                                                 )
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Word = "Word", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                              (ordconstn, resultdef = Word = "Word", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                 value = 0
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Int64 = "Int64", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                              (ordconstn, resultdef = Int64 = "Int64", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                 value = -1
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Int64 = "Int64", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                              (typeconvn, resultdef = Int64 = "Int64", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (temprefn, resultdef = LongInt = "LongInt", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941730 flags = [])
                                                                                 )
                                                                              )

                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941730
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                        (typeconvn, resultdef = AnsiString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                           (temprefn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                              temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E9416B0 flags = [ti_addr_taken,ti_nofini])
                                                                           )
                                                                        )

                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                  (tempdeleten, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E9416B0
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                     temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E9416B0 flags = [ti_addr_taken,ti_nofini])
                                                                  )

                                                               )
                                                            )
                                                            (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                               (stringconstn, resultdef = AnsiString = "AnsiString", pos = (385,59), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                               )
                                                               (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                  (stringconstn, resultdef = AnsiString = "AnsiString", pos = (386,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                  )
                                                                  (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                     (stringconstn, resultdef = AnsiString = "AnsiString", pos = (386,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                     )
                                                                     (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                        (blockn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                           (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                              (tempcreaten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                                 size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941830
                                                                                 [ti_addr_taken,ti_nofini]
                                                                                 tempinit =
                                                                                 nil
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                              (tempcreaten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                 size = 8, temptypedef = <no type symbol> = "^LongInt", tempinfo = $000000008E9418B0
                                                                                 [ti_may_be_in_reg]
                                                                                 tempinit =
                                                                                 nil
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                              (assignn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 8
                                                                                 (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                    temptypedef = <no type symbol> = "^LongInt", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                                                                 )
                                                                                 (addrn, resultdef = <no type symbol> = "^LongInt", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 6, addrnodeflags = [anf_typedaddr]
                                                                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (386,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                                       (subscriptn, resultdef = TImage = "TImage", pos = (386,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                             nil
                                                                                             symbol = self
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                              (blockn, resultdef = AnsiString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                 (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (tempcreaten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                       size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941930
                                                                                       []
                                                                                       tempinit =
                                                                                       nil
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (assignn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                       (temprefn, resultdef = LongInt = "LongInt", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                          temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941930 flags = [])
                                                                                       )
                                                                                       (derefn, resultdef = LongInt = "LongInt", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                          (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                             temptypedef = <no type symbol> = "^LongInt", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                                                                          )
                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (calln, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                       proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                                       callinitblock =
                                                                                       (blockn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                          (statementn, resultdef = <nil>, pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                             (tempcreaten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E9419B0
                                                                                                [ti_may_be_in_reg]
                                                                                                tempinit =
                                                                                                nil
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                             (assignn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                                (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                   temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9419B0 flags = [ti_may_be_in_reg])
                                                                                                )
                                                                                                (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                   (addrn, resultdef = Pointer = "^untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                                      (typeconvn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                         (typeconvn, resultdef = AnsiString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                            (temprefn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                               temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941830 flags = [ti_addr_taken,ti_nofini])
                                                                                                            )
                                                                                                         )
                                                                                                      )
                                                                                                   )
                                                                                                )
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                             (calln, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                                                left =
                                                                                                (callparan, resultdef = Pointer = "^untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                   (typeconvn, resultdef = Pointer = "^untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                      (derefn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                         (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                            temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9419B0 flags = [ti_may_be_in_reg])
                                                                                                         )
                                                                                                      )
                                                                                                   )

                                                                                                )
                                                                                             )

                                                                                          )
                                                                                       )
                                                                                       callcleanupblock =
                                                                                       (blockn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                          (statementn, resultdef = <nil>, pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                             (tempdeleten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E9419B0
                                                                                             )

                                                                                          )
                                                                                       )
                                                                                       left =
                                                                                       (callparan, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                          (derefn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                             (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9419B0 flags = [ti_may_be_in_reg])
                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = Word = "Word", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                          (ordconstn, resultdef = Word = "Word", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                             value = 0
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = Int64 = "Int64", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                          (ordconstn, resultdef = Int64 = "Int64", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                             value = -1
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = Int64 = "Int64", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                                          (typeconvn, resultdef = Int64 = "Int64", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                             (temprefn, resultdef = LongInt = "LongInt", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941930 flags = [])
                                                                                             )
                                                                                          )

                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                    (tempdeleten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                       release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941930
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                    (typeconvn, resultdef = AnsiString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                       (temprefn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                          temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941830 flags = [ti_addr_taken,ti_nofini])
                                                                                       )
                                                                                    )

                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                              (tempdeleten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                 release_to_normal: FALSE, temptypedef = <no type symbol> = "^LongInt", temptype = tt_persistent, tempinfo = $000000008E9418B0
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                              (tempdeleten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                 release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941830
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                              (temprefn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                                 temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941830 flags = [ti_addr_taken,ti_nofini])
                                                                              )

                                                                           )
                                                                        )
                                                                        (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                           (stringconstn, resultdef = AnsiString = "AnsiString", pos = (386,60), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                           )
                                                                           (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                              (blockn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                 (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (tempcreaten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                                       size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941A30
                                                                                       [ti_addr_taken,ti_nofini]
                                                                                       tempinit =
                                                                                       nil
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (tempcreaten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                       size = 8, temptypedef = <no type symbol> = "^LongInt", tempinfo = $000000008E941AB0
                                                                                       [ti_may_be_in_reg]
                                                                                       tempinit =
                                                                                       nil
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (assignn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 8
                                                                                       (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                          temptypedef = <no type symbol> = "^LongInt", (tempinfo = $000000008E941AB0 flags = [ti_may_be_in_reg])
                                                                                       )
                                                                                       (addrn, resultdef = <no type symbol> = "^LongInt", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 6, addrnodeflags = [anf_typedaddr]
                                                                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (387,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                                             (subscriptn, resultdef = TImage = "TImage", pos = (387,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                                (loadn, resultdef = TFormDocument = "TFormDocument", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                   nil
                                                                                                   symbol = self
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                    (blockn, resultdef = AnsiString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                       (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (tempcreaten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                             size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941B30
                                                                                             []
                                                                                             tempinit =
                                                                                             nil
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (assignn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                             (temprefn, resultdef = LongInt = "LongInt", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941B30 flags = [])
                                                                                             )
                                                                                             (derefn, resultdef = LongInt = "LongInt", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                   temptypedef = <no type symbol> = "^LongInt", (tempinfo = $000000008E941AB0 flags = [ti_may_be_in_reg])
                                                                                                )
                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (calln, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                             proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                                             callinitblock =
                                                                                             (blockn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                (statementn, resultdef = <nil>, pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                   (tempcreaten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                      size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E941BB0
                                                                                                      [ti_may_be_in_reg]
                                                                                                      tempinit =
                                                                                                      nil
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                   (assignn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                                      (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                         temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941BB0 flags = [ti_may_be_in_reg])
                                                                                                      )
                                                                                                      (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                         (addrn, resultdef = Pointer = "^untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                                            (typeconvn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                               (typeconvn, resultdef = AnsiString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                  (temprefn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                                     temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941A30 flags = [ti_addr_taken,ti_nofini])
                                                                                                                  )
                                                                                                               )
                                                                                                            )
                                                                                                         )
                                                                                                      )
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                   (calln, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                      proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                                                      left =
                                                                                                      (callparan, resultdef = Pointer = "^untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                         (typeconvn, resultdef = Pointer = "^untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                            (derefn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                               (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                                  temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941BB0 flags = [ti_may_be_in_reg])
                                                                                                               )
                                                                                                            )
                                                                                                         )

                                                                                                      )
                                                                                                   )

                                                                                                )
                                                                                             )
                                                                                             callcleanupblock =
                                                                                             (blockn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                (statementn, resultdef = <nil>, pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                                   (tempdeleten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                      release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E941BB0
                                                                                                   )

                                                                                                )
                                                                                             )
                                                                                             left =
                                                                                             (callparan, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                (derefn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                   (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                      temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941BB0 flags = [ti_may_be_in_reg])
                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Word = "Word", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                (ordconstn, resultdef = Word = "Word", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                   value = 0
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Int64 = "Int64", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                (ordconstn, resultdef = Int64 = "Int64", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                   value = -1
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Int64 = "Int64", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                                                (typeconvn, resultdef = Int64 = "Int64", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                                   (temprefn, resultdef = LongInt = "LongInt", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                      temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941B30 flags = [])
                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                          (tempdeleten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                             release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941B30
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                          (typeconvn, resultdef = AnsiString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                             (temprefn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941A30 flags = [ti_addr_taken,ti_nofini])
                                                                                             )
                                                                                          )

                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                    (tempdeleten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                       release_to_normal: FALSE, temptypedef = <no type symbol> = "^LongInt", temptype = tt_persistent, tempinfo = $000000008E941AB0
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                    (tempdeleten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                       release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941A30
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                    (temprefn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                                       temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941A30 flags = [ti_addr_taken,ti_nofini])
                                                                                    )

                                                                                 )
                                                                              )
                                                                              (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                 (blockn, resultdef = RawByteString = "AnsiString", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                    (statementn, resultdef = $void = "untyped", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                       (tempcreaten, resultdef = $void = "untyped", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                                          size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941C30
                                                                                          [ti_nofini]
                                                                                          tempinit =
                                                                                          nil
                                                                                       )

                                                                                    )
                                                                                    (statementn, resultdef = $void = "untyped", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                       (calln, resultdef = AnsiString = "AnsiString", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
                                                                                          proc = FloatToStr(<var AnsiString>;Single;const TFormatSettings):AnsiString;
                                                                                          left =
                                                                                          (callparan, resultdef = TFormatSettings = "<record type>", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                             (loadn, resultdef = TFormatSettings = "<record type>", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 1
                                                                                                nil
                                                                                                symbol = DEFAULTFORMATSETTINGS
                                                                                             )

                                                                                          )
                                                                                          (callparan, resultdef = Single = "Single", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                             (loadn, resultdef = Single = "Single", pos = (387,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                nil
                                                                                                symbol = SCALEFACTOR
                                                                                             )

                                                                                          )
                                                                                          (callparan, resultdef = <nil>, pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                             (typeconvn, resultdef = AnsiString = "AnsiString", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                (temprefn, resultdef = RawByteString = "AnsiString", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                   temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941C30 flags = [ti_nofini])
                                                                                                )
                                                                                             )

                                                                                          )
                                                                                       )

                                                                                    )
                                                                                    (statementn, resultdef = $void = "untyped", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                       (tempdeleten, resultdef = $void = "untyped", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                          release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941C30
                                                                                       )

                                                                                    )
                                                                                    (statementn, resultdef = $void = "untyped", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                       (temprefn, resultdef = RawByteString = "AnsiString", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                                          temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941C30 flags = [ti_nofini])
                                                                                       )

                                                                                    )
                                                                                 )
                                                                                 (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                    (stringconstn, resultdef = AnsiString = "AnsiString", pos = (387,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                                    )
                                                                                    (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                       (stringconstn, resultdef = AnsiString = "AnsiString", pos = (387,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                                       )
                                                                                       (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                          (blockn, resultdef = RawByteString = "AnsiString", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                             (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                (tempcreaten, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                                                   size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941CB0
                                                                                                   [ti_nofini]
                                                                                                   tempinit =
                                                                                                   nil
                                                                                                )

                                                                                             )
                                                                                             (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                (tempcreaten, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                   size = 8, temptypedef = <no type symbol> = "^Single", tempinfo = $000000008E941D30
                                                                                                   [ti_may_be_in_reg]
                                                                                                   tempinit =
                                                                                                   nil
                                                                                                )

                                                                                             )
                                                                                             (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                (assignn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                                                                                                   (temprefn, resultdef = <no type symbol> = "^Single", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                      temptypedef = <no type symbol> = "^Single", (tempinfo = $000000008E941D30 flags = [ti_may_be_in_reg])
                                                                                                   )
                                                                                                   (addrn, resultdef = <no type symbol> = "^Single", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 4, addrnodeflags = [anf_typedaddr]
                                                                                                      (subscriptn, resultdef = Single = "Single", pos = (388,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 3
                                                                                                         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                            nil
                                                                                                            symbol = self
                                                                                                         )
                                                                                                      )
                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                (calln, resultdef = AnsiString = "AnsiString", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
                                                                                                   proc = FloatToStr(<var AnsiString>;Single;const TFormatSettings):AnsiString;
                                                                                                   left =
                                                                                                   (callparan, resultdef = TFormatSettings = "<record type>", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                                      (loadn, resultdef = TFormatSettings = "<record type>", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 1
                                                                                                         nil
                                                                                                         symbol = DEFAULTFORMATSETTINGS
                                                                                                      )

                                                                                                   )
                                                                                                   (callparan, resultdef = Single = "Single", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                      (derefn, resultdef = Single = "Single", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                         (temprefn, resultdef = <no type symbol> = "^Single", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                            temptypedef = <no type symbol> = "^Single", (tempinfo = $000000008E941D30 flags = [ti_may_be_in_reg])
                                                                                                         )
                                                                                                      )

                                                                                                   )
                                                                                                   (callparan, resultdef = <nil>, pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                      (typeconvn, resultdef = AnsiString = "AnsiString", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                         (temprefn, resultdef = RawByteString = "AnsiString", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                            temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941CB0 flags = [ti_nofini])
                                                                                                         )
                                                                                                      )

                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                                (tempdeleten, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                   release_to_normal: FALSE, temptypedef = <no type symbol> = "^Single", temptype = tt_persistent, tempinfo = $000000008E941D30
                                                                                                )

                                                                                             )
                                                                                             (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                                (tempdeleten, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                   release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941CB0
                                                                                                )

                                                                                             )
                                                                                             (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                (temprefn, resultdef = RawByteString = "AnsiString", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                                                   temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941CB0 flags = [ti_nofini])
                                                                                                )

                                                                                             )
                                                                                          )
                                                                                          (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                             (stringconstn, resultdef = AnsiString = "AnsiString", pos = (388,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                                             )
                                                                                             (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                                (blockn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                                   (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                      (blockn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                         (statementn, resultdef = <nil>, pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                            (tempcreaten, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                               size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941E30
                                                                                                               []
                                                                                                               tempinit =
                                                                                                               nil
                                                                                                            )

                                                                                                         )
                                                                                                         (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                            (assignn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                               (temprefn, resultdef = LongInt = "LongInt", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                                  temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941E30 flags = [])
                                                                                                               )
                                                                                                               (calln, resultdef = LongInt = "LongInt", pos = (388,76), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                                                                  proc = GetPosition(<TControlScrollBar>):LongInt;
                                                                                                                  methodpointer =
                                                                                                                  (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (388,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                                                                     (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (388,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                                                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                           nil
                                                                                                                           symbol = self
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                                  left =
                                                                                                                  (callparan, resultdef = <nil>, pos = (388,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                                                                                     (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (388,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                                                                        (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (388,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                                                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                              nil
                                                                                                                              symbol = self
                                                                                                                           )
                                                                                                                        )
                                                                                                                     )

                                                                                                                  )
                                                                                                               )
                                                                                                            )

                                                                                                         )
                                                                                                         (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                            (tempcreaten, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                                                               size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941EB0
                                                                                                               [ti_addr_taken,ti_nofini]
                                                                                                               tempinit =
                                                                                                               nil
                                                                                                            )

                                                                                                         )
                                                                                                      )

                                                                                                   )
                                                                                                   (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                      (blockn, resultdef = AnsiString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                                         (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                            (calln, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                               proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                                                               callinitblock =
                                                                                                               (blockn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                  (statementn, resultdef = <nil>, pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                        size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E941F30
                                                                                                                        [ti_may_be_in_reg]
                                                                                                                        tempinit =
                                                                                                                        nil
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                     (assignn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                                                        (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                                           temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941F30 flags = [ti_may_be_in_reg])
                                                                                                                        )
                                                                                                                        (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                           (addrn, resultdef = Pointer = "^untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                                                              (typeconvn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                 (typeconvn, resultdef = AnsiString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                    (temprefn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                                                       temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941EB0 flags = [ti_addr_taken,ti_nofini])
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                              )
                                                                                                                           )
                                                                                                                        )
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                     (calln, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                        proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                                                                        left =
                                                                                                                        (callparan, resultdef = Pointer = "^untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                                           (typeconvn, resultdef = Pointer = "^untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                              (derefn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                 (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                    temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941F30 flags = [ti_may_be_in_reg])
                                                                                                                                 )
                                                                                                                              )
                                                                                                                           )

                                                                                                                        )
                                                                                                                     )

                                                                                                                  )
                                                                                                               )
                                                                                                               callcleanupblock =
                                                                                                               (blockn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                  (statementn, resultdef = <nil>, pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                                                     (tempdeleten, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                        release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E941F30
                                                                                                                     )

                                                                                                                  )
                                                                                                               )
                                                                                                               left =
                                                                                                               (callparan, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                                  (derefn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                     (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                                        temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941F30 flags = [ti_may_be_in_reg])
                                                                                                                     )
                                                                                                                  )

                                                                                                               )
                                                                                                               (callparan, resultdef = Word = "Word", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                                  (ordconstn, resultdef = Word = "Word", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                                     value = 0
                                                                                                                  )

                                                                                                               )
                                                                                                               (callparan, resultdef = Int64 = "Int64", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                                  (ordconstn, resultdef = Int64 = "Int64", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                                     value = -1
                                                                                                                  )

                                                                                                               )
                                                                                                               (callparan, resultdef = Int64 = "Int64", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                                                                  (typeconvn, resultdef = Int64 = "Int64", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                                                     (temprefn, resultdef = LongInt = "LongInt", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                        temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941E30 flags = [])
                                                                                                                     )
                                                                                                                  )

                                                                                                               )
                                                                                                            )

                                                                                                         )
                                                                                                         (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                            (typeconvn, resultdef = AnsiString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                               (temprefn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                                  temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941EB0 flags = [ti_addr_taken,ti_nofini])
                                                                                                               )
                                                                                                            )

                                                                                                         )
                                                                                                      )

                                                                                                   )
                                                                                                   (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                                      (blockn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                         (statementn, resultdef = <nil>, pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                                            (tempdeleten, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                               release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941E30
                                                                                                            )

                                                                                                         )
                                                                                                         (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                            (tempdeleten, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                               release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941EB0
                                                                                                            )

                                                                                                         )
                                                                                                      )

                                                                                                   )
                                                                                                   (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                      (temprefn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                                                         temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941EB0 flags = [ti_addr_taken,ti_nofini])
                                                                                                      )

                                                                                                   )
                                                                                                )
                                                                                                (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                                   (stringconstn, resultdef = AnsiString = "AnsiString", pos = (389,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                                                   )
                                                                                                   (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                                      (blockn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                                         (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                            (blockn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                               (statementn, resultdef = <nil>, pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                     size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941FB0
                                                                                                                     []
                                                                                                                     tempinit =
                                                                                                                     nil
                                                                                                                  )

                                                                                                               )
                                                                                                               (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                  (assignn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                     (temprefn, resultdef = LongInt = "LongInt", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                                        temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941FB0 flags = [])
                                                                                                                     )
                                                                                                                     (calln, resultdef = LongInt = "LongInt", pos = (389,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                                                                        proc = GetPosition(<TControlScrollBar>):LongInt;
                                                                                                                        methodpointer =
                                                                                                                        (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (389,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                                                                           (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (389,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                                                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                 nil
                                                                                                                                 symbol = self
                                                                                                                              )
                                                                                                                           )
                                                                                                                        )
                                                                                                                        left =
                                                                                                                        (callparan, resultdef = <nil>, pos = (389,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                                                                                           (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (389,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                                                                              (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (389,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                                                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                    nil
                                                                                                                                    symbol = self
                                                                                                                                 )
                                                                                                                              )
                                                                                                                           )

                                                                                                                        )
                                                                                                                     )
                                                                                                                  )

                                                                                                               )
                                                                                                               (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                                                                     size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E942030
                                                                                                                     [ti_addr_taken,ti_nofini]
                                                                                                                     tempinit =
                                                                                                                     nil
                                                                                                                  )

                                                                                                               )
                                                                                                            )

                                                                                                         )
                                                                                                         (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                            (blockn, resultdef = AnsiString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                                               (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                                  (calln, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                     proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                                                                     callinitblock =
                                                                                                                     (blockn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                        (statementn, resultdef = <nil>, pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                                           (tempcreaten, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                              size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E9420B0
                                                                                                                              [ti_may_be_in_reg]
                                                                                                                              tempinit =
                                                                                                                              nil
                                                                                                                           )

                                                                                                                        )
                                                                                                                        (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                           (assignn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                                                              (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                                                 temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9420B0 flags = [ti_may_be_in_reg])
                                                                                                                              )
                                                                                                                              (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                 (addrn, resultdef = Pointer = "^untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                                                                    (typeconvn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                       (typeconvn, resultdef = AnsiString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                          (temprefn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                                                             temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E942030 flags = [ti_addr_taken,ti_nofini])
                                                                                                                                          )
                                                                                                                                       )
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                              )
                                                                                                                           )

                                                                                                                        )
                                                                                                                        (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                           (calln, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                              proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                                                                              left =
                                                                                                                              (callparan, resultdef = Pointer = "^untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                                                 (typeconvn, resultdef = Pointer = "^untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                    (derefn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                       (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                          temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9420B0 flags = [ti_may_be_in_reg])
                                                                                                                                       )
                                                                                                                                    )
                                                                                                                                 )

                                                                                                                              )
                                                                                                                           )

                                                                                                                        )
                                                                                                                     )
                                                                                                                     callcleanupblock =
                                                                                                                     (blockn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                        (statementn, resultdef = <nil>, pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                                                           (tempdeleten, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                              release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E9420B0
                                                                                                                           )

                                                                                                                        )
                                                                                                                     )
                                                                                                                     left =
                                                                                                                     (callparan, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                                        (derefn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                           (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                                              temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9420B0 flags = [ti_may_be_in_reg])
                                                                                                                           )
                                                                                                                        )

                                                                                                                     )
                                                                                                                     (callparan, resultdef = Word = "Word", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                                        (ordconstn, resultdef = Word = "Word", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                                           value = 0
                                                                                                                        )

                                                                                                                     )
                                                                                                                     (callparan, resultdef = Int64 = "Int64", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                                        (ordconstn, resultdef = Int64 = "Int64", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                                           value = -1
                                                                                                                        )

                                                                                                                     )
                                                                                                                     (callparan, resultdef = Int64 = "Int64", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                                                                        (typeconvn, resultdef = Int64 = "Int64", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941FB0 flags = [])
                                                                                                                           )
                                                                                                                        )

                                                                                                                     )
                                                                                                                  )

                                                                                                               )
                                                                                                               (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                                  (typeconvn, resultdef = AnsiString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                     (temprefn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                                        temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E942030 flags = [ti_addr_taken,ti_nofini])
                                                                                                                     )
                                                                                                                  )

                                                                                                               )
                                                                                                            )

                                                                                                         )
                                                                                                         (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                                            (blockn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                               (statementn, resultdef = <nil>, pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                                                  (tempdeleten, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                     release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941FB0
                                                                                                                  )

                                                                                                               )
                                                                                                               (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                  (tempdeleten, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                     release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E942030
                                                                                                                  )

                                                                                                               )
                                                                                                            )

                                                                                                         )
                                                                                                         (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                            (temprefn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                                                               temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E942030 flags = [ti_addr_taken,ti_nofini])
                                                                                                            )

                                                                                                         )
                                                                                                      )
                                                                                                      nil
                                                                                                   )
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )

                     )
                     (callparan, resultdef = Word = "Word", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (ordconstn, resultdef = Word = "Word", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = 0
                        )

                     )
                     (callparan, resultdef = Int64 = "Int64", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (ordconstn, resultdef = Int64 = "Int64", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit], cmplx = 0
                           value = 24
                        )

                     )
                     (callparan, resultdef = RawByteString = "AnsiString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        (temprefn, resultdef = RawByteString = "AnsiString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           temptypedef = AnsiString = "AnsiString", (tempinfo = $000000008E940DB0 flags = [])
                        )

                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (tempdeleten, resultdef = $void = "untyped", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E940DB0
                  )

               )
               (statementn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  (temprefn, resultdef = AnsiString = "AnsiString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = AnsiString = "AnsiString", (tempinfo = $000000008E940DB0 flags = [])
                  )

               )
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
Image1MouseMove(TObject;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (blockn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
            (statementn, resultdef = <nil>, pos = (350,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (350,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (350,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = HMOUSEEVENT
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (350,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1281102
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (351,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (351,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (351,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = PX
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (351,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (351,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (351,50), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Single = "Single", pos = (351,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                              (inlinen, resultdef = Int64 = "Int64", pos = (351,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                                 (slashn, resultdef = Single = "Single", pos = (351,35), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                    (typeconvn, resultdef = Single = "Single", pos = (351,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (351,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = X
                                       )
                                    )
                                    (subscriptn, resultdef = Single = "Single", pos = (351,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (351,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )
                                 )
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (351,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = SCALEFACTOR
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (352,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (352,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (352,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = PY
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (352,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (352,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (352,50), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Single = "Single", pos = (352,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                              (inlinen, resultdef = Int64 = "Int64", pos = (352,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                                 (slashn, resultdef = Single = "Single", pos = (352,35), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                    (typeconvn, resultdef = Single = "Single", pos = (352,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (352,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = Y
                                       )
                                    )
                                    (subscriptn, resultdef = Single = "Single", pos = (352,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (352,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )
                                 )
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (352,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = SCALEFACTOR
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (382,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (ifn, resultdef = $void = "untyped", pos = (354,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (equaln, resultdef = Boolean = "Boolean", pos = (354,19), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 2
                     (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (354,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = HMOUSEBUTTON
                     )
                     (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (354,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 0
                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (355,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (356,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (356,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (356,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (356,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = SHIFT
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (368,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (casen, resultdef = $void = "untyped", pos = (359,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (loadn, resultdef = TToolType = "<enumeration type>", pos = (359,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = HCTOOL
                           )
                           (caseblock blockid: 0
                              (calln, resultdef = $void = "untyped", pos = (360,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                                 left =
                                 (callparan, resultdef = TImage = "TImage", pos = (360,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                    (subscriptn, resultdef = TImage = "TImage", pos = (360,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (360,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )

                                 )
                                 (callparan, resultdef = LongInt = "LongInt", pos = (360,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = LongInt = "LongInt", pos = (360,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = PY
                                    )

                                 )
                                 (callparan, resultdef = LongInt = "LongInt", pos = (360,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = LongInt = "LongInt", pos = (360,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = PX
                                    )

                                 )
                                 (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (360,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (360,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = SHIFT
                                    )

                                 )
                              )
                           )
                           (caseblock blockid: 1
                              (calln, resultdef = $void = "untyped", pos = (361,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (361,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = LongInt = "LongInt", pos = (361,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = PY
                                    )

                                 )
                                 (callparan, resultdef = TImage = "TImage", pos = (361,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                    (subscriptn, resultdef = TImage = "TImage", pos = (361,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )

                                 )
                                 (callparan, resultdef = TImage = "TImage", pos = (361,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                    (subscriptn, resultdef = TImage = "TImage", pos = (361,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )

                                 )
                                 (callparan, resultdef = LongInt = "LongInt", pos = (361,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = LongInt = "LongInt", pos = (361,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = PX
                                    )

                                 )
                                 (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (361,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (361,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = SHIFT
                                    )

                                 )
                              )
                           )
                           (caseblock blockid: 2
                              (calln, resultdef = $void = "untyped", pos = (362,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (362,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = LongInt = "LongInt", pos = (362,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = PY
                                    )

                                 )
                                 (callparan, resultdef = TImage = "TImage", pos = (362,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                    (subscriptn, resultdef = TImage = "TImage", pos = (362,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )

                                 )
                                 (callparan, resultdef = TImage = "TImage", pos = (362,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                    (subscriptn, resultdef = TImage = "TImage", pos = (362,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )

                                 )
                                 (callparan, resultdef = LongInt = "LongInt", pos = (362,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = LongInt = "LongInt", pos = (362,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = PX
                                    )

                                 )
                                 (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (362,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (362,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = SHIFT
                                    )

                                 )
                              )
                           )
                           (caseblock blockid: 3
                              (nothingn, resultdef = $void = "untyped", pos = (363,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              )
                           )
                           (else: 3
                              (blockn, resultdef = $void = "untyped", pos = (368,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 nil
                              )
                           )
                        )

                     )
                  )
                  (ifn, resultdef = $void = "untyped", pos = (370,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (equaln, resultdef = Boolean = "Boolean", pos = (370,24), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 2
                        (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (370,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = HMOUSEBUTTON
                        )
                        (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (370,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = 1
                        )
                     )
                     (blockn, resultdef = $void = "untyped", pos = (371,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        nil
                     )
                     (ifn, resultdef = $void = "untyped", pos = (374,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (equaln, resultdef = Boolean = "Boolean", pos = (374,17), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 1
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (374,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = SHIFT
                           )
                           (setconstn, resultdef = <no type symbol> = "Set Of TShiftStateEnum", pos = (374,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
                              nil
                           )
                        )
                        (blockn, resultdef = $void = "untyped", pos = (375,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (379,89), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (calln, resultdef = $void = "untyped", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                 proc = SetPosition(<TControlScrollBar>;const LongInt);
                                 methodpointer =
                                 (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (379,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                    (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )
                                 )
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (379,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                    (typeconvn, resultdef = LongInt = "LongInt", pos = (379,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                       (subn, resultdef = Int64 = "Int64", pos = (379,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                          (typeconvn, resultdef = Int64 = "Int64", pos = (379,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                             (calln, resultdef = LongInt = "LongInt", pos = (379,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                proc = GetPosition(<TControlScrollBar>):LongInt;
                                                methodpointer =
                                                (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (379,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                   (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (379,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                      (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = self
                                                      )
                                                   )
                                                )
                                                left =
                                                (callparan, resultdef = <nil>, pos = (379,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                   (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (379,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                      (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (379,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = self
                                                         )
                                                      )
                                                   )

                                                )
                                             )
                                          )
                                          (subn, resultdef = Int64 = "Int64", pos = (379,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                             (typeconvn, resultdef = Int64 = "Int64", pos = (379,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                (loadn, resultdef = LongInt = "LongInt", pos = (379,79), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = PX
                                                )
                                             )
                                             (typeconvn, resultdef = Int64 = "Int64", pos = (379,84), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                (loadn, resultdef = LongInt = "LongInt", pos = (379,84), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = OLDX
                                                )
                                             )
                                          )
                                       )
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (379,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                    (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (379,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                       (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )
                                       )
                                    )

                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (380,89), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (calln, resultdef = $void = "untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                 proc = SetPosition(<TControlScrollBar>;const LongInt);
                                 methodpointer =
                                 (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (380,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                    (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )
                                 )
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (380,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                    (typeconvn, resultdef = LongInt = "LongInt", pos = (380,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                       (subn, resultdef = Int64 = "Int64", pos = (380,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                          (typeconvn, resultdef = Int64 = "Int64", pos = (380,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                             (calln, resultdef = LongInt = "LongInt", pos = (380,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                proc = GetPosition(<TControlScrollBar>):LongInt;
                                                methodpointer =
                                                (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (380,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                   (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (380,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                      (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = self
                                                      )
                                                   )
                                                )
                                                left =
                                                (callparan, resultdef = <nil>, pos = (380,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                   (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (380,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                      (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (380,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = self
                                                         )
                                                      )
                                                   )

                                                )
                                             )
                                          )
                                          (subn, resultdef = Int64 = "Int64", pos = (380,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                             (typeconvn, resultdef = Int64 = "Int64", pos = (380,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                (loadn, resultdef = LongInt = "LongInt", pos = (380,79), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = PY
                                                )
                                             )
                                             (typeconvn, resultdef = Int64 = "Int64", pos = (380,84), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                (loadn, resultdef = LongInt = "LongInt", pos = (380,84), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = OLDY
                                                )
                                             )
                                          )
                                       )
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (380,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                    (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (380,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                       (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )
                                       )
                                    )

                                 )
                              )

                           )
                        )
                        nil
                        nil
                     )
                     nil
                  )
                  nil
               )

            )
            (statementn, resultdef = <nil>, pos = (389,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (384,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = UpdateText(AnsiString);
                  left =
                  (callparan, resultdef = AnsiString = "AnsiString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                     (blockn, resultdef = AnsiString = "AnsiString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
                        (statementn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (nothingn, resultdef = $void = "untyped", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (tempcreaten, resultdef = $void = "untyped", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              size = 8, temptypedef = AnsiString = "AnsiString", tempinfo = $000000008E940DB0
                              []
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (calln, resultdef = $void = "untyped", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              proc = $fpc_ansistr_concat_multi(var RawByteString;const {Open} Array Of RawByteString;<const Int64>;Word);
                              left =
                              (callparan, resultdef = <no type symbol> = "{Open} Array Of RawByteString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 255
                                 (typeconvn, resultdef = <no type symbol> = "{Array Of Const/Constant Open} Array of RawByteString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                    (arrayconstructn, resultdef = <no type symbol> = "{Array Of Const/Constant Open} Array of RawByteString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done,nf_novariaallowed], cmplx = 255
                                       (stringconstn, resultdef = AnsiString = "AnsiString", pos = (384,14), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                       )
                                       (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                          (blockn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                             (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                (tempcreaten, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                   size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E940FB0
                                                   [ti_addr_taken,ti_nofini]
                                                   tempinit =
                                                   nil
                                                )

                                             )
                                             (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                (blockn, resultdef = AnsiString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                   (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                         callinitblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (statementn, resultdef = <nil>, pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E940F30
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (assignn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                  (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                     temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                     (addrn, resultdef = Pointer = "^untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                        (typeconvn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                           (typeconvn, resultdef = AnsiString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                              (temprefn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                 temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E940FB0 flags = [ti_addr_taken,ti_nofini])
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (calln, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                  left =
                                                                  (callparan, resultdef = Pointer = "^untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                     (typeconvn, resultdef = Pointer = "^untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                        (derefn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                              temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            (statementn, resultdef = <nil>, pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                               (tempdeleten, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E940F30
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                            (derefn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                  temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E940F30 flags = [ti_may_be_in_reg])
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = Int64 = "Int64", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 3
                                                            (typeconvn, resultdef = Int64 = "Int64", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (384,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = X
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = Word = "Word", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                            (ordconstn, resultdef = Word = "Word", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                               value = 0
                                                            )

                                                         )
                                                         (callparan, resultdef = Int64 = "Int64", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                            (ordconstn, resultdef = Int64 = "Int64", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                               value = -1
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                      (typeconvn, resultdef = AnsiString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                         (temprefn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                            temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E940FB0 flags = [ti_addr_taken,ti_nofini])
                                                         )
                                                      )

                                                   )
                                                )

                                             )
                                             (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                (tempdeleten, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                   release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E940FB0
                                                )

                                             )
                                             (statementn, resultdef = $void = "untyped", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                (temprefn, resultdef = RawByteString = "AnsiString", pos = (384,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                   temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E940FB0 flags = [ti_addr_taken,ti_nofini])
                                                )

                                             )
                                          )
                                          (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                             (stringconstn, resultdef = AnsiString = "AnsiString", pos = (384,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                             )
                                             (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                (stringconstn, resultdef = AnsiString = "AnsiString", pos = (384,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                )
                                                (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                   (blockn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                      (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                         (tempcreaten, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                            size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941030
                                                            [ti_addr_taken,ti_nofini]
                                                            tempinit =
                                                            nil
                                                         )

                                                      )
                                                      (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                         (blockn, resultdef = AnsiString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                            (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (calln, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                  callinitblock =
                                                                  (blockn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                     (statementn, resultdef = <nil>, pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                        (tempcreaten, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E9410B0
                                                                           [ti_may_be_in_reg]
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (assignn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                           (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                                                                           )
                                                                           (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                              (addrn, resultdef = Pointer = "^untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                 (typeconvn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                    (typeconvn, resultdef = AnsiString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                       (temprefn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                          temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941030 flags = [ti_addr_taken,ti_nofini])
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (calln, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                           proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                           left =
                                                                           (callparan, resultdef = Pointer = "^untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                              (typeconvn, resultdef = Pointer = "^untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                 (derefn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                       temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                                                                                    )
                                                                                 )
                                                                              )

                                                                           )
                                                                        )

                                                                     )
                                                                  )
                                                                  callcleanupblock =
                                                                  (blockn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     (statementn, resultdef = <nil>, pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E9410B0
                                                                        )

                                                                     )
                                                                  )
                                                                  left =
                                                                  (callparan, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                     (derefn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                           temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9410B0 flags = [ti_may_be_in_reg])
                                                                        )
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = Int64 = "Int64", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 3
                                                                     (typeconvn, resultdef = Int64 = "Int64", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                        (loadn, resultdef = LongInt = "LongInt", pos = (384,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = Y
                                                                        )
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = Word = "Word", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                     (ordconstn, resultdef = Word = "Word", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = 0
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = Int64 = "Int64", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = -1
                                                                     )

                                                                  )
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                               (typeconvn, resultdef = AnsiString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                  (temprefn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                     temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941030 flags = [ti_addr_taken,ti_nofini])
                                                                  )
                                                               )

                                                            )
                                                         )

                                                      )
                                                      (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                         (tempdeleten, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941030
                                                         )

                                                      )
                                                      (statementn, resultdef = $void = "untyped", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                         (temprefn, resultdef = RawByteString = "AnsiString", pos = (384,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                            temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941030 flags = [ti_addr_taken,ti_nofini])
                                                         )

                                                      )
                                                   )
                                                   (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                      (stringconstn, resultdef = AnsiString = "AnsiString", pos = (384,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                      )
                                                      (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                         (stringconstn, resultdef = AnsiString = "AnsiString", pos = (385,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                         )
                                                         (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                            (blockn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                               (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                     size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941530
                                                                     [ti_addr_taken,ti_nofini]
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                  (blockn, resultdef = AnsiString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                     (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                        (tempcreaten, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E9415B0
                                                                           []
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                        (assignn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000008E9415B0 flags = [])
                                                                           )
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (385,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = PX
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                        (calln, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                           proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                           callinitblock =
                                                                           (blockn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                              (statementn, resultdef = <nil>, pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                 (tempcreaten, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                    size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E941630
                                                                                    [ti_may_be_in_reg]
                                                                                    tempinit =
                                                                                    nil
                                                                                 )

                                                                              )
                                                                              (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                 (assignn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                    (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                       temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941630 flags = [ti_may_be_in_reg])
                                                                                    )
                                                                                    (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                       (addrn, resultdef = Pointer = "^untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                          (typeconvn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                             (typeconvn, resultdef = AnsiString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                (temprefn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                   temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941530 flags = [ti_addr_taken,ti_nofini])
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )

                                                                              )
                                                                              (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                 (calln, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                    proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                                    left =
                                                                                    (callparan, resultdef = Pointer = "^untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                       (typeconvn, resultdef = Pointer = "^untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                          (derefn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                             (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941630 flags = [ti_may_be_in_reg])
                                                                                             )
                                                                                          )
                                                                                       )

                                                                                    )
                                                                                 )

                                                                              )
                                                                           )
                                                                           callcleanupblock =
                                                                           (blockn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                              (statementn, resultdef = <nil>, pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                 (tempdeleten, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                    release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E941630
                                                                                 )

                                                                              )
                                                                           )
                                                                           left =
                                                                           (callparan, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                              (derefn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                    temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941630 flags = [ti_may_be_in_reg])
                                                                                 )
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Word = "Word", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                              (ordconstn, resultdef = Word = "Word", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                 value = 0
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Int64 = "Int64", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                              (ordconstn, resultdef = Int64 = "Int64", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                 value = -1
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Int64 = "Int64", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                              (typeconvn, resultdef = Int64 = "Int64", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (temprefn, resultdef = LongInt = "LongInt", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000008E9415B0 flags = [])
                                                                                 )
                                                                              )

                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E9415B0
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                        (typeconvn, resultdef = AnsiString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                           (temprefn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                              temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941530 flags = [ti_addr_taken,ti_nofini])
                                                                           )
                                                                        )

                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                  (tempdeleten, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941530
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = RawByteString = "AnsiString", pos = (385,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                     temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941530 flags = [ti_addr_taken,ti_nofini])
                                                                  )

                                                               )
                                                            )
                                                            (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                               (stringconstn, resultdef = AnsiString = "AnsiString", pos = (385,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                               )
                                                               (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                  (stringconstn, resultdef = AnsiString = "AnsiString", pos = (385,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                  )
                                                                  (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                     (blockn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                        (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                           (tempcreaten, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                              size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E9416B0
                                                                              [ti_addr_taken,ti_nofini]
                                                                              tempinit =
                                                                              nil
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                           (blockn, resultdef = AnsiString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                              (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                 (tempcreaten, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                    size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941730
                                                                                    []
                                                                                    tempinit =
                                                                                    nil
                                                                                 )

                                                                              )
                                                                              (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                 (assignn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                                                                                    (temprefn, resultdef = LongInt = "LongInt", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                       temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941730 flags = [])
                                                                                    )
                                                                                    (loadn, resultdef = LongInt = "LongInt", pos = (385,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = PY
                                                                                    )
                                                                                 )

                                                                              )
                                                                              (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                 (calln, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                    proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                                    callinitblock =
                                                                                    (blockn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                       (statementn, resultdef = <nil>, pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (tempcreaten, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                             size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E9417B0
                                                                                             [ti_may_be_in_reg]
                                                                                             tempinit =
                                                                                             nil
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                          (assignn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                             (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9417B0 flags = [ti_may_be_in_reg])
                                                                                             )
                                                                                             (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                (addrn, resultdef = Pointer = "^untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                                   (typeconvn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                      (typeconvn, resultdef = AnsiString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                         (temprefn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                            temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E9416B0 flags = [ti_addr_taken,ti_nofini])
                                                                                                         )
                                                                                                      )
                                                                                                   )
                                                                                                )
                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                          (calln, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                             proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                                             left =
                                                                                             (callparan, resultdef = Pointer = "^untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                (typeconvn, resultdef = Pointer = "^untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                   (derefn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                      (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                         temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9417B0 flags = [ti_may_be_in_reg])
                                                                                                      )
                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                          )

                                                                                       )
                                                                                    )
                                                                                    callcleanupblock =
                                                                                    (blockn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                       (statementn, resultdef = <nil>, pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                          (tempdeleten, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                             release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E9417B0
                                                                                          )

                                                                                       )
                                                                                    )
                                                                                    left =
                                                                                    (callparan, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                       (derefn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                          (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                             temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9417B0 flags = [ti_may_be_in_reg])
                                                                                          )
                                                                                       )

                                                                                    )
                                                                                    (callparan, resultdef = Word = "Word", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                       (ordconstn, resultdef = Word = "Word", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                          value = 0
                                                                                       )

                                                                                    )
                                                                                    (callparan, resultdef = Int64 = "Int64", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                       (ordconstn, resultdef = Int64 = "Int64", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                          value = -1
                                                                                       )

                                                                                    )
                                                                                    (callparan, resultdef = Int64 = "Int64", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                                       (typeconvn, resultdef = Int64 = "Int64", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                          (temprefn, resultdef = LongInt = "LongInt", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                             temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941730 flags = [])
                                                                                          )
                                                                                       )

                                                                                    )
                                                                                 )

                                                                              )
                                                                              (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                 (tempdeleten, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                    release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941730
                                                                                 )

                                                                              )
                                                                              (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                 (typeconvn, resultdef = AnsiString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                    (temprefn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                       temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E9416B0 flags = [ti_addr_taken,ti_nofini])
                                                                                    )
                                                                                 )

                                                                              )
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                           (tempdeleten, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                              release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E9416B0
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                           (temprefn, resultdef = RawByteString = "AnsiString", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                              temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E9416B0 flags = [ti_addr_taken,ti_nofini])
                                                                           )

                                                                        )
                                                                     )
                                                                     (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                        (stringconstn, resultdef = AnsiString = "AnsiString", pos = (385,59), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                        )
                                                                        (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                           (stringconstn, resultdef = AnsiString = "AnsiString", pos = (386,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                           )
                                                                           (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                              (stringconstn, resultdef = AnsiString = "AnsiString", pos = (386,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                              )
                                                                              (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                 (blockn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                    (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                       (tempcreaten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                                          size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941830
                                                                                          [ti_addr_taken,ti_nofini]
                                                                                          tempinit =
                                                                                          nil
                                                                                       )

                                                                                    )
                                                                                    (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                       (tempcreaten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                          size = 8, temptypedef = <no type symbol> = "^LongInt", tempinfo = $000000008E9418B0
                                                                                          [ti_may_be_in_reg]
                                                                                          tempinit =
                                                                                          nil
                                                                                       )

                                                                                    )
                                                                                    (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                       (assignn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 8
                                                                                          (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                             temptypedef = <no type symbol> = "^LongInt", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                                                                          )
                                                                                          (addrn, resultdef = <no type symbol> = "^LongInt", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 6, addrnodeflags = [anf_typedaddr]
                                                                                             (subscriptn, resultdef = LongInt = "LongInt", pos = (386,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                                                (subscriptn, resultdef = TImage = "TImage", pos = (386,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                                   (loadn, resultdef = TFormDocument = "TFormDocument", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                      nil
                                                                                                      symbol = self
                                                                                                   )
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )

                                                                                    )
                                                                                    (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                       (blockn, resultdef = AnsiString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                          (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                             (tempcreaten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941930
                                                                                                []
                                                                                                tempinit =
                                                                                                nil
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                             (assignn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                                (temprefn, resultdef = LongInt = "LongInt", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                   temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941930 flags = [])
                                                                                                )
                                                                                                (derefn, resultdef = LongInt = "LongInt", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                   (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                      temptypedef = <no type symbol> = "^LongInt", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                                                                                   )
                                                                                                )
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                             (calln, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                                                callinitblock =
                                                                                                (blockn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                   (statementn, resultdef = <nil>, pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                      (tempcreaten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                         size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E9419B0
                                                                                                         [ti_may_be_in_reg]
                                                                                                         tempinit =
                                                                                                         nil
                                                                                                      )

                                                                                                   )
                                                                                                   (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                      (assignn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                                         (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                            temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9419B0 flags = [ti_may_be_in_reg])
                                                                                                         )
                                                                                                         (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                            (addrn, resultdef = Pointer = "^untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                                               (typeconvn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                  (typeconvn, resultdef = AnsiString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                     (temprefn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                                        temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941830 flags = [ti_addr_taken,ti_nofini])
                                                                                                                     )
                                                                                                                  )
                                                                                                               )
                                                                                                            )
                                                                                                         )
                                                                                                      )

                                                                                                   )
                                                                                                   (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                      (calln, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                         proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                                                         left =
                                                                                                         (callparan, resultdef = Pointer = "^untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                            (typeconvn, resultdef = Pointer = "^untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                               (derefn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                  (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                                     temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9419B0 flags = [ti_may_be_in_reg])
                                                                                                                  )
                                                                                                               )
                                                                                                            )

                                                                                                         )
                                                                                                      )

                                                                                                   )
                                                                                                )
                                                                                                callcleanupblock =
                                                                                                (blockn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                   (statementn, resultdef = <nil>, pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                                      (tempdeleten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                         release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E9419B0
                                                                                                      )

                                                                                                   )
                                                                                                )
                                                                                                left =
                                                                                                (callparan, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                   (derefn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                      (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                         temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9419B0 flags = [ti_may_be_in_reg])
                                                                                                      )
                                                                                                   )

                                                                                                )
                                                                                                (callparan, resultdef = Word = "Word", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                   (ordconstn, resultdef = Word = "Word", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                      value = 0
                                                                                                   )

                                                                                                )
                                                                                                (callparan, resultdef = Int64 = "Int64", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                   (ordconstn, resultdef = Int64 = "Int64", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                      value = -1
                                                                                                   )

                                                                                                )
                                                                                                (callparan, resultdef = Int64 = "Int64", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                                                   (typeconvn, resultdef = Int64 = "Int64", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                                      (temprefn, resultdef = LongInt = "LongInt", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                         temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941930 flags = [])
                                                                                                      )
                                                                                                   )

                                                                                                )
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                             (tempdeleten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941930
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                             (typeconvn, resultdef = AnsiString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                (temprefn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                   temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941830 flags = [ti_addr_taken,ti_nofini])
                                                                                                )
                                                                                             )

                                                                                          )
                                                                                       )

                                                                                    )
                                                                                    (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                       (tempdeleten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                          release_to_normal: FALSE, temptypedef = <no type symbol> = "^LongInt", temptype = tt_persistent, tempinfo = $000000008E9418B0
                                                                                       )

                                                                                    )
                                                                                    (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                       (tempdeleten, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                          release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941830
                                                                                       )

                                                                                    )
                                                                                    (statementn, resultdef = $void = "untyped", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                       (temprefn, resultdef = RawByteString = "AnsiString", pos = (386,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                                          temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941830 flags = [ti_addr_taken,ti_nofini])
                                                                                       )

                                                                                    )
                                                                                 )
                                                                                 (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                    (stringconstn, resultdef = AnsiString = "AnsiString", pos = (386,60), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                                    )
                                                                                    (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                       (blockn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                          (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                             (tempcreaten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                                                size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941A30
                                                                                                [ti_addr_taken,ti_nofini]
                                                                                                tempinit =
                                                                                                nil
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                             (tempcreaten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                size = 8, temptypedef = <no type symbol> = "^LongInt", tempinfo = $000000008E941AB0
                                                                                                [ti_may_be_in_reg]
                                                                                                tempinit =
                                                                                                nil
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                             (assignn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 8
                                                                                                (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                   temptypedef = <no type symbol> = "^LongInt", (tempinfo = $000000008E941AB0 flags = [ti_may_be_in_reg])
                                                                                                )
                                                                                                (addrn, resultdef = <no type symbol> = "^LongInt", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 6, addrnodeflags = [anf_typedaddr]
                                                                                                   (subscriptn, resultdef = LongInt = "LongInt", pos = (387,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                                                      (subscriptn, resultdef = TImage = "TImage", pos = (387,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                                         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                            nil
                                                                                                            symbol = self
                                                                                                         )
                                                                                                      )
                                                                                                   )
                                                                                                )
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                             (blockn, resultdef = AnsiString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                                (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                   (tempcreaten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                      size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941B30
                                                                                                      []
                                                                                                      tempinit =
                                                                                                      nil
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                   (assignn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                                      (temprefn, resultdef = LongInt = "LongInt", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                         temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941B30 flags = [])
                                                                                                      )
                                                                                                      (derefn, resultdef = LongInt = "LongInt", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                         (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                            temptypedef = <no type symbol> = "^LongInt", (tempinfo = $000000008E941AB0 flags = [ti_may_be_in_reg])
                                                                                                         )
                                                                                                      )
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                   (calln, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                      proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                                                      callinitblock =
                                                                                                      (blockn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                         (statementn, resultdef = <nil>, pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                            (tempcreaten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                               size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E941BB0
                                                                                                               [ti_may_be_in_reg]
                                                                                                               tempinit =
                                                                                                               nil
                                                                                                            )

                                                                                                         )
                                                                                                         (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                            (assignn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                                               (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                                  temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941BB0 flags = [ti_may_be_in_reg])
                                                                                                               )
                                                                                                               (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                  (addrn, resultdef = Pointer = "^untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                                                     (typeconvn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                        (typeconvn, resultdef = AnsiString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                           (temprefn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                                              temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941A30 flags = [ti_addr_taken,ti_nofini])
                                                                                                                           )
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                               )
                                                                                                            )

                                                                                                         )
                                                                                                         (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                            (calln, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                               proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                                                               left =
                                                                                                               (callparan, resultdef = Pointer = "^untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                                  (typeconvn, resultdef = Pointer = "^untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                     (derefn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                        (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                                           temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941BB0 flags = [ti_may_be_in_reg])
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )

                                                                                                               )
                                                                                                            )

                                                                                                         )
                                                                                                      )
                                                                                                      callcleanupblock =
                                                                                                      (blockn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                         (statementn, resultdef = <nil>, pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                                            (tempdeleten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                               release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E941BB0
                                                                                                            )

                                                                                                         )
                                                                                                      )
                                                                                                      left =
                                                                                                      (callparan, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                         (derefn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                            (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                               temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941BB0 flags = [ti_may_be_in_reg])
                                                                                                            )
                                                                                                         )

                                                                                                      )
                                                                                                      (callparan, resultdef = Word = "Word", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                         (ordconstn, resultdef = Word = "Word", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                            value = 0
                                                                                                         )

                                                                                                      )
                                                                                                      (callparan, resultdef = Int64 = "Int64", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                            value = -1
                                                                                                         )

                                                                                                      )
                                                                                                      (callparan, resultdef = Int64 = "Int64", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                                                         (typeconvn, resultdef = Int64 = "Int64", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                                            (temprefn, resultdef = LongInt = "LongInt", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                               temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941B30 flags = [])
                                                                                                            )
                                                                                                         )

                                                                                                      )
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                                   (tempdeleten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                      release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941B30
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                   (typeconvn, resultdef = AnsiString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                      (temprefn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                         temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941A30 flags = [ti_addr_taken,ti_nofini])
                                                                                                      )
                                                                                                   )

                                                                                                )
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                             (tempdeleten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                release_to_normal: FALSE, temptypedef = <no type symbol> = "^LongInt", temptype = tt_persistent, tempinfo = $000000008E941AB0
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                             (tempdeleten, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941A30
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef = $void = "untyped", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                             (temprefn, resultdef = RawByteString = "AnsiString", pos = (387,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                                                temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941A30 flags = [ti_addr_taken,ti_nofini])
                                                                                             )

                                                                                          )
                                                                                       )
                                                                                       (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                          (blockn, resultdef = RawByteString = "AnsiString", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                             (statementn, resultdef = $void = "untyped", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                (tempcreaten, resultdef = $void = "untyped", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                                                   size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941C30
                                                                                                   [ti_nofini]
                                                                                                   tempinit =
                                                                                                   nil
                                                                                                )

                                                                                             )
                                                                                             (statementn, resultdef = $void = "untyped", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                (calln, resultdef = AnsiString = "AnsiString", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
                                                                                                   proc = FloatToStr(<var AnsiString>;Single;const TFormatSettings):AnsiString;
                                                                                                   left =
                                                                                                   (callparan, resultdef = TFormatSettings = "<record type>", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                                      (loadn, resultdef = TFormatSettings = "<record type>", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 1
                                                                                                         nil
                                                                                                         symbol = DEFAULTFORMATSETTINGS
                                                                                                      )

                                                                                                   )
                                                                                                   (callparan, resultdef = Single = "Single", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                                      (loadn, resultdef = Single = "Single", pos = (387,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                         nil
                                                                                                         symbol = SCALEFACTOR
                                                                                                      )

                                                                                                   )
                                                                                                   (callparan, resultdef = <nil>, pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                      (typeconvn, resultdef = AnsiString = "AnsiString", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                         (temprefn, resultdef = RawByteString = "AnsiString", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                            temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941C30 flags = [ti_nofini])
                                                                                                         )
                                                                                                      )

                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (statementn, resultdef = $void = "untyped", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                                (tempdeleten, resultdef = $void = "untyped", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                   release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941C30
                                                                                                )

                                                                                             )
                                                                                             (statementn, resultdef = $void = "untyped", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                (temprefn, resultdef = RawByteString = "AnsiString", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                                                   temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941C30 flags = [ti_nofini])
                                                                                                )

                                                                                             )
                                                                                          )
                                                                                          (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                             (stringconstn, resultdef = AnsiString = "AnsiString", pos = (387,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                                             )
                                                                                             (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                                (stringconstn, resultdef = AnsiString = "AnsiString", pos = (387,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                                                )
                                                                                                (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                                   (blockn, resultdef = RawByteString = "AnsiString", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                                      (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                         (tempcreaten, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                                                            size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941CB0
                                                                                                            [ti_nofini]
                                                                                                            tempinit =
                                                                                                            nil
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                         (tempcreaten, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                            size = 8, temptypedef = <no type symbol> = "^Single", tempinfo = $000000008E941D30
                                                                                                            [ti_may_be_in_reg]
                                                                                                            tempinit =
                                                                                                            nil
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                         (assignn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                                                                                                            (temprefn, resultdef = <no type symbol> = "^Single", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                               temptypedef = <no type symbol> = "^Single", (tempinfo = $000000008E941D30 flags = [ti_may_be_in_reg])
                                                                                                            )
                                                                                                            (addrn, resultdef = <no type symbol> = "^Single", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 4, addrnodeflags = [anf_typedaddr]
                                                                                                               (subscriptn, resultdef = Single = "Single", pos = (388,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 3
                                                                                                                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                     nil
                                                                                                                     symbol = self
                                                                                                                  )
                                                                                                               )
                                                                                                            )
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                         (calln, resultdef = AnsiString = "AnsiString", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
                                                                                                            proc = FloatToStr(<var AnsiString>;Single;const TFormatSettings):AnsiString;
                                                                                                            left =
                                                                                                            (callparan, resultdef = TFormatSettings = "<record type>", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                                               (loadn, resultdef = TFormatSettings = "<record type>", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 1
                                                                                                                  nil
                                                                                                                  symbol = DEFAULTFORMATSETTINGS
                                                                                                               )

                                                                                                            )
                                                                                                            (callparan, resultdef = Single = "Single", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                               (derefn, resultdef = Single = "Single", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                  (temprefn, resultdef = <no type symbol> = "^Single", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                                     temptypedef = <no type symbol> = "^Single", (tempinfo = $000000008E941D30 flags = [ti_may_be_in_reg])
                                                                                                                  )
                                                                                                               )

                                                                                                            )
                                                                                                            (callparan, resultdef = <nil>, pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                               (typeconvn, resultdef = AnsiString = "AnsiString", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                  (temprefn, resultdef = RawByteString = "AnsiString", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                                     temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941CB0 flags = [ti_nofini])
                                                                                                                  )
                                                                                                               )

                                                                                                            )
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                                         (tempdeleten, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                            release_to_normal: FALSE, temptypedef = <no type symbol> = "^Single", temptype = tt_persistent, tempinfo = $000000008E941D30
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                                         (tempdeleten, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                            release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941CB0
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef = $void = "untyped", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                         (temprefn, resultdef = RawByteString = "AnsiString", pos = (388,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                                                            temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941CB0 flags = [ti_nofini])
                                                                                                         )

                                                                                                      )
                                                                                                   )
                                                                                                   (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                                      (stringconstn, resultdef = AnsiString = "AnsiString", pos = (388,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                                                      )
                                                                                                      (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                                         (blockn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                                            (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                               (blockn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                  (statementn, resultdef = <nil>, pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                        size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941E30
                                                                                                                        []
                                                                                                                        tempinit =
                                                                                                                        nil
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                     (assignn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                        (temprefn, resultdef = LongInt = "LongInt", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                                           temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941E30 flags = [])
                                                                                                                        )
                                                                                                                        (calln, resultdef = LongInt = "LongInt", pos = (388,76), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                                                                           proc = GetPosition(<TControlScrollBar>):LongInt;
                                                                                                                           methodpointer =
                                                                                                                           (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (388,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                                                                              (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (388,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                                                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                    nil
                                                                                                                                    symbol = self
                                                                                                                                 )
                                                                                                                              )
                                                                                                                           )
                                                                                                                           left =
                                                                                                                           (callparan, resultdef = <nil>, pos = (388,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                                                                                              (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (388,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                                                                                 (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (388,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                                                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                       nil
                                                                                                                                       symbol = self
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                              )

                                                                                                                           )
                                                                                                                        )
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                                                                        size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E941EB0
                                                                                                                        [ti_addr_taken,ti_nofini]
                                                                                                                        tempinit =
                                                                                                                        nil
                                                                                                                     )

                                                                                                                  )
                                                                                                               )

                                                                                                            )
                                                                                                            (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                               (blockn, resultdef = AnsiString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                                                  (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                                     (calln, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                        proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                                                                        callinitblock =
                                                                                                                        (blockn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                           (statementn, resultdef = <nil>, pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                                              (tempcreaten, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                                 size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E941F30
                                                                                                                                 [ti_may_be_in_reg]
                                                                                                                                 tempinit =
                                                                                                                                 nil
                                                                                                                              )

                                                                                                                           )
                                                                                                                           (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                              (assignn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                 (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                                                    temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941F30 flags = [ti_may_be_in_reg])
                                                                                                                                 )
                                                                                                                                 (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                    (addrn, resultdef = Pointer = "^untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                                                                       (typeconvn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                          (typeconvn, resultdef = AnsiString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                             (temprefn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                                                                temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941EB0 flags = [ti_addr_taken,ti_nofini])
                                                                                                                                             )
                                                                                                                                          )
                                                                                                                                       )
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                              )

                                                                                                                           )
                                                                                                                           (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                              (calln, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                                 proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                                                                                 left =
                                                                                                                                 (callparan, resultdef = Pointer = "^untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                                                    (typeconvn, resultdef = Pointer = "^untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                       (derefn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                          (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                             temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941F30 flags = [ti_may_be_in_reg])
                                                                                                                                          )
                                                                                                                                       )
                                                                                                                                    )

                                                                                                                                 )
                                                                                                                              )

                                                                                                                           )
                                                                                                                        )
                                                                                                                        callcleanupblock =
                                                                                                                        (blockn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                           (statementn, resultdef = <nil>, pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                                                              (tempdeleten, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                                 release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E941F30
                                                                                                                              )

                                                                                                                           )
                                                                                                                        )
                                                                                                                        left =
                                                                                                                        (callparan, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                                           (derefn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                              (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                 temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E941F30 flags = [ti_may_be_in_reg])
                                                                                                                              )
                                                                                                                           )

                                                                                                                        )
                                                                                                                        (callparan, resultdef = Word = "Word", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                                           (ordconstn, resultdef = Word = "Word", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                                              value = 0
                                                                                                                           )

                                                                                                                        )
                                                                                                                        (callparan, resultdef = Int64 = "Int64", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                                           (ordconstn, resultdef = Int64 = "Int64", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                                              value = -1
                                                                                                                           )

                                                                                                                        )
                                                                                                                        (callparan, resultdef = Int64 = "Int64", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                                                                           (typeconvn, resultdef = Int64 = "Int64", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                                                              (temprefn, resultdef = LongInt = "LongInt", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                 temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941E30 flags = [])
                                                                                                                              )
                                                                                                                           )

                                                                                                                        )
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                                     (typeconvn, resultdef = AnsiString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                        (temprefn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                                           temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941EB0 flags = [ti_addr_taken,ti_nofini])
                                                                                                                        )
                                                                                                                     )

                                                                                                                  )
                                                                                                               )

                                                                                                            )
                                                                                                            (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                                               (blockn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                  (statementn, resultdef = <nil>, pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                                                     (tempdeleten, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                        release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941E30
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                     (tempdeleten, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                        release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E941EB0
                                                                                                                     )

                                                                                                                  )
                                                                                                               )

                                                                                                            )
                                                                                                            (statementn, resultdef = $void = "untyped", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                               (temprefn, resultdef = RawByteString = "AnsiString", pos = (388,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                                                                  temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E941EB0 flags = [ti_addr_taken,ti_nofini])
                                                                                                               )

                                                                                                            )
                                                                                                         )
                                                                                                         (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                                            (stringconstn, resultdef = AnsiString = "AnsiString", pos = (389,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                                                                            )
                                                                                                            (arrayconstructn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                                                               (blockn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                                                  (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                                     (blockn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                        (statementn, resultdef = <nil>, pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                                           (tempcreaten, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941FB0
                                                                                                                              []
                                                                                                                              tempinit =
                                                                                                                              nil
                                                                                                                           )

                                                                                                                        )
                                                                                                                        (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                           (assignn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                              (temprefn, resultdef = LongInt = "LongInt", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                                                 temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941FB0 flags = [])
                                                                                                                              )
                                                                                                                              (calln, resultdef = LongInt = "LongInt", pos = (389,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                                                                                 proc = GetPosition(<TControlScrollBar>):LongInt;
                                                                                                                                 methodpointer =
                                                                                                                                 (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (389,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                                                                                    (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (389,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                                                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                          nil
                                                                                                                                          symbol = self
                                                                                                                                       )
                                                                                                                                    )
                                                                                                                                 )
                                                                                                                                 left =
                                                                                                                                 (callparan, resultdef = <nil>, pos = (389,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                                                                                                    (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (389,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                                                                                       (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (389,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                                                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                             nil
                                                                                                                                             symbol = self
                                                                                                                                          )
                                                                                                                                       )
                                                                                                                                    )

                                                                                                                                 )
                                                                                                                              )
                                                                                                                           )

                                                                                                                        )
                                                                                                                        (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                           (tempcreaten, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                                                                              size = 8, temptypedef = RawByteString = "AnsiString", tempinfo = $000000008E942030
                                                                                                                              [ti_addr_taken,ti_nofini]
                                                                                                                              tempinit =
                                                                                                                              nil
                                                                                                                           )

                                                                                                                        )
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                                     (blockn, resultdef = AnsiString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                                                                                        (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                                           (calln, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                              proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                                                                                              callinitblock =
                                                                                                                              (blockn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                                 (statementn, resultdef = <nil>, pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                                                    (tempcreaten, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                                       size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000008E9420B0
                                                                                                                                       [ti_may_be_in_reg]
                                                                                                                                       tempinit =
                                                                                                                                       nil
                                                                                                                                    )

                                                                                                                                 )
                                                                                                                                 (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                                    (assignn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                       (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                                                          temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9420B0 flags = [ti_may_be_in_reg])
                                                                                                                                       )
                                                                                                                                       (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                          (addrn, resultdef = Pointer = "^untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                                                                                             (typeconvn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                                (typeconvn, resultdef = AnsiString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                                   (temprefn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                                                                      temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E942030 flags = [ti_addr_taken,ti_nofini])
                                                                                                                                                   )
                                                                                                                                                )
                                                                                                                                             )
                                                                                                                                          )
                                                                                                                                       )
                                                                                                                                    )

                                                                                                                                 )
                                                                                                                                 (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                                    (calln, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                                                                       proc = $fpc_ansistr_decr_ref(var Pointer);
                                                                                                                                       left =
                                                                                                                                       (callparan, resultdef = Pointer = "^untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                                                          (typeconvn, resultdef = Pointer = "^untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                                             (derefn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                                (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                                   temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9420B0 flags = [ti_may_be_in_reg])
                                                                                                                                                )
                                                                                                                                             )
                                                                                                                                          )

                                                                                                                                       )
                                                                                                                                    )

                                                                                                                                 )
                                                                                                                              )
                                                                                                                              callcleanupblock =
                                                                                                                              (blockn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                                 (statementn, resultdef = <nil>, pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                                                                    (tempdeleten, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                                       release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000008E9420B0
                                                                                                                                    )

                                                                                                                                 )
                                                                                                                              )
                                                                                                                              left =
                                                                                                                              (callparan, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                                                 (derefn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                    (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                       temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000008E9420B0 flags = [ti_may_be_in_reg])
                                                                                                                                    )
                                                                                                                                 )

                                                                                                                              )
                                                                                                                              (callparan, resultdef = Word = "Word", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                                                 (ordconstn, resultdef = Word = "Word", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                                                    value = 0
                                                                                                                                 )

                                                                                                                              )
                                                                                                                              (callparan, resultdef = Int64 = "Int64", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                                                                                 (ordconstn, resultdef = Int64 = "Int64", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                                                                    value = -1
                                                                                                                                 )

                                                                                                                              )
                                                                                                                              (callparan, resultdef = Int64 = "Int64", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                                                                                 (typeconvn, resultdef = Int64 = "Int64", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                                                                    (temprefn, resultdef = LongInt = "LongInt", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                                                       temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941FB0 flags = [])
                                                                                                                                    )
                                                                                                                                 )

                                                                                                                              )
                                                                                                                           )

                                                                                                                        )
                                                                                                                        (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                                           (typeconvn, resultdef = AnsiString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                                              (temprefn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                                                                 temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E942030 flags = [ti_addr_taken,ti_nofini])
                                                                                                                              )
                                                                                                                           )

                                                                                                                        )
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                                                     (blockn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                        (statementn, resultdef = <nil>, pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                                                           (tempdeleten, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941FB0
                                                                                                                           )

                                                                                                                        )
                                                                                                                        (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                           (tempdeleten, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                                                              release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E942030
                                                                                                                           )

                                                                                                                        )
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (statementn, resultdef = $void = "untyped", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                                     (temprefn, resultdef = RawByteString = "AnsiString", pos = (389,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                                                                        temptypedef = RawByteString = "AnsiString", (tempinfo = $000000008E942030 flags = [ti_addr_taken,ti_nofini])
                                                                                                                     )

                                                                                                                  )
                                                                                                               )
                                                                                                               nil
                                                                                                            )
                                                                                                         )
                                                                                                      )
                                                                                                   )
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )

                              )
                              (callparan, resultdef = Word = "Word", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                 (ordconstn, resultdef = Word = "Word", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )

                              )
                              (callparan, resultdef = Int64 = "Int64", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                 (ordconstn, resultdef = Int64 = "Int64", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit], cmplx = 0
                                    value = 24
                                 )

                              )
                              (callparan, resultdef = RawByteString = "AnsiString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                 (temprefn, resultdef = RawByteString = "AnsiString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = AnsiString = "AnsiString", (tempinfo = $000000008E940DB0 flags = [])
                                 )

                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                           (tempdeleten, resultdef = $void = "untyped", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString", temptype = tt_persistent, tempinfo = $000000008E940DB0
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (389,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (temprefn, resultdef = AnsiString = "AnsiString", pos = (389,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = AnsiString = "AnsiString", (tempinfo = $000000008E940DB0 flags = [])
                           )

                        )
                     )

                  )
               )

            )
         )
         (calln, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            proc = $fin$00000155(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  nil
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
      (blockn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
)

*******************************************************************************
after the firstpass
$fin$00000155 is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
right before code generation
$fin$00000155 is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (nothingn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (asmn, resultdef = $void = "untyped", pos = (390,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
Image1MouseUp(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (398,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (398,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (398,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (398,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 1281103
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (399,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (399,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (399,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = PX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (399,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (399,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
               (typeconvn, resultdef = Double = "Double", pos = (399,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                  (slashn, resultdef = Single = "Single", pos = (399,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (typeconvn, resultdef = Single = "Single", pos = (399,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                        (inlinen, resultdef = Int64 = "Int64", pos = (399,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                           (typeconvn, resultdef = Double = "Double", pos = (399,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                              (slashn, resultdef = Single = "Single", pos = (399,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (399,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (399,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = X
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (399,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (399,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (loadn, resultdef = Single = "Single", pos = (399,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = SCALEFACTOR
                     )
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (400,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (400,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (400,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = PY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (400,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (400,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
               (typeconvn, resultdef = Double = "Double", pos = (400,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                  (slashn, resultdef = Single = "Single", pos = (400,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (typeconvn, resultdef = Single = "Single", pos = (400,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                        (inlinen, resultdef = Int64 = "Int64", pos = (400,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_round_real
                           (typeconvn, resultdef = Double = "Double", pos = (400,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_real_2_real, convnodeflags = []
                              (slashn, resultdef = Single = "Single", pos = (400,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (400,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (400,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = Y
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (400,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (400,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (loadn, resultdef = Single = "Single", pos = (400,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = SCALEFACTOR
                     )
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (409,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (casen, resultdef = $void = "untyped", pos = (401,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (401,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (caseblock blockid: 0
            (calln, resultdef = $void = "untyped", pos = (402,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (402,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (402,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (402,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (402,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (402,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (402,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (402,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (402,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (402,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )
         )
         (caseblock blockid: 1
            (calln, resultdef = $void = "untyped", pos = (403,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (403,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (403,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (403,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (403,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (403,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (403,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (403,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (403,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (403,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )
         )
         (caseblock blockid: 2
            (calln, resultdef = $void = "untyped", pos = (404,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (404,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (404,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (404,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (404,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (404,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (404,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (404,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (404,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (404,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (404,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (404,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (404,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )
         )
         (caseblock blockid: 3
            (calln, resultdef = $void = "untyped", pos = (405,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               proc = hc_Fill(TImage;TImage;TMouseButton;TShiftState;LongInt;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (405,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (405,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = HMOUSEEVENT
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (405,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (405,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (405,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (405,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (405,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (405,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )

               )
               (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (405,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (405,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = BUTTON
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (405,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (405,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (405,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (405,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (405,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (405,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )
         )
         (else: 3
            (blockn, resultdef = $void = "untyped", pos = (409,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               nil
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (410,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Draw(<TCanvas>;LongInt;LongInt;TGraphic);
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (410,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetCanvas(<TCustomImage>):TCanvas;
            methodpointer =
            (subscriptn, resultdef = TImage = "TImage", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (410,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (410,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (410,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = TGraphic = "TGraphic", pos = (410,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 8
            (subscriptn, resultdef = TGraphic = "TGraphic", pos = (410,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 7
               (subscriptn, resultdef = TPicture = "TPicture", pos = (410,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (410,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (410,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (410,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (410,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (410,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (410,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (410,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (410,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (411,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
      (assignn, resultdef = $void = "untyped", pos = (411,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (411,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEBUTTON
         )
         (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (411,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 5
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (412,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
      (assignn, resultdef = $void = "untyped", pos = (412,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (412,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (412,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 1281104
         )
      )

   )
)

*******************************************************************************
after the firstpass
Image1MouseUp(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (398,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (398,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (398,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (398,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 1281103
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (399,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (399,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (399,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = PX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (399,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (399,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (399,50), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Single = "Single", pos = (399,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (399,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (399,35), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Single = "Single", pos = (399,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (399,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = X
                              )
                           )
                           (subscriptn, resultdef = Single = "Single", pos = (399,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (399,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (399,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (400,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (400,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (400,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = PY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (400,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (400,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (400,50), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Single = "Single", pos = (400,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (400,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (400,35), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Single = "Single", pos = (400,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (400,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = Y
                              )
                           )
                           (subscriptn, resultdef = Single = "Single", pos = (400,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (400,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (400,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (409,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (casen, resultdef = $void = "untyped", pos = (401,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (401,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (caseblock blockid: 0
            (calln, resultdef = $void = "untyped", pos = (402,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
               left =
               (callparan, resultdef = TImage = "TImage", pos = (402,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (402,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (402,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (402,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (402,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (402,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (402,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (402,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (402,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )

               )
            )
         )
         (caseblock blockid: 1
            (calln, resultdef = $void = "untyped", pos = (403,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (403,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (403,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (403,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (403,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (403,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (403,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (403,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (403,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (403,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )

               )
            )
         )
         (caseblock blockid: 2
            (calln, resultdef = $void = "untyped", pos = (404,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (404,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (404,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (404,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (404,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (404,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (404,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (404,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (404,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (404,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (404,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (404,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (404,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )

               )
            )
         )
         (caseblock blockid: 3
            (calln, resultdef = $void = "untyped", pos = (405,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = hc_Fill(TImage;TImage;TMouseButton;TShiftState;LongInt;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (405,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (405,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = HMOUSEEVENT
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (405,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (405,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (405,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (405,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (405,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (405,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (405,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (405,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (405,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (405,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (405,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (405,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )

               )
               (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (405,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (405,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BUTTON
                  )

               )
            )
         )
         (else: 3
            (blockn, resultdef = $void = "untyped", pos = (409,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
               nil
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (410,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Draw(<TCanvas>;LongInt;LongInt;TGraphic);
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000008E940FB0
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (410,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (410,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (410,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (410,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000008E940FB0
               )

            )
         )
         left =
         (callparan, resultdef = TGraphic = "TGraphic", pos = (410,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 8
            (subscriptn, resultdef = TGraphic = "TGraphic", pos = (410,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 7
               (subscriptn, resultdef = TPicture = "TPicture", pos = (410,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (410,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (410,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (410,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (410,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (410,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (410,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (410,51), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (411,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
      (assignn, resultdef = $void = "untyped", pos = (411,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (411,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = HMOUSEBUTTON
         )
         (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (411,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 5
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (412,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef = $void = "untyped", pos = (412,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (412,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (412,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 1281104
         )
      )

   )
)

*******************************************************************************
right before code generation
Image1MouseUp(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (398,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (398,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = LongInt = "LongInt", pos = (398,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = HMOUSEEVENT
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (398,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 1281103
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (399,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (399,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = LongInt = "LongInt", pos = (399,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = PX
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (399,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (399,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                     (slashn, resultdef = Single = "Single", pos = (399,50), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                        (typeconvn, resultdef = Single = "Single", pos = (399,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (399,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (399,35), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (399,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (399,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = X
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (399,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (399,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = Single = "Single", pos = (399,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = SCALEFACTOR
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (400,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (400,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = LongInt = "LongInt", pos = (400,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = PY
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (400,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (400,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                     (slashn, resultdef = Single = "Single", pos = (400,50), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                        (typeconvn, resultdef = Single = "Single", pos = (400,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (400,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (400,35), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                                 (typeconvn, resultdef = Single = "Single", pos = (400,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (400,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = Y
                                    )
                                 )
                                 (subscriptn, resultdef = Single = "Single", pos = (400,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (400,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = Single = "Single", pos = (400,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = SCALEFACTOR
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (409,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (casen, resultdef = $void = "untyped", pos = (401,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = TToolType = "<enumeration type>", pos = (401,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = HCTOOL
               )
               (caseblock blockid: 0
                  (calln, resultdef = $void = "untyped", pos = (402,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                     left =
                     (callparan, resultdef = TImage = "TImage", pos = (402,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (402,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (402,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (402,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (402,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = PY
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (402,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (402,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = PX
                        )

                     )
                     (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (402,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (402,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = HCSHIFT
                        )

                     )
                  )
               )
               (caseblock blockid: 1
                  (calln, resultdef = $void = "untyped", pos = (403,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (403,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (403,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = PY
                        )

                     )
                     (callparan, resultdef = TImage = "TImage", pos = (403,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (403,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (403,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                     (callparan, resultdef = TImage = "TImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (403,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (403,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = PX
                        )

                     )
                     (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (403,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (403,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = HCSHIFT
                        )

                     )
                  )
               )
               (caseblock blockid: 2
                  (calln, resultdef = $void = "untyped", pos = (404,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (404,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (404,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = PY
                        )

                     )
                     (callparan, resultdef = TImage = "TImage", pos = (404,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (404,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (404,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                     (callparan, resultdef = TImage = "TImage", pos = (404,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (404,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (404,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (404,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (404,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = PX
                        )

                     )
                     (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (404,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (404,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = HCSHIFT
                        )

                     )
                  )
               )
               (caseblock blockid: 3
                  (calln, resultdef = $void = "untyped", pos = (405,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     proc = hc_Fill(TImage;TImage;TMouseButton;TShiftState;LongInt;LongInt;LongInt);
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (405,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (405,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = HMOUSEEVENT
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (405,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (405,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = PY
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (405,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (405,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = PX
                        )

                     )
                     (callparan, resultdef = TImage = "TImage", pos = (405,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (405,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (405,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                     (callparan, resultdef = TImage = "TImage", pos = (405,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (405,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (405,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                     (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (405,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (405,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = HCSHIFT
                        )

                     )
                     (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (405,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (405,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = BUTTON
                        )

                     )
                  )
               )
               (else: 3
                  (blockn, resultdef = $void = "untyped", pos = (409,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     nil
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (410,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Draw(<TCanvas>;LongInt;LongInt;TGraphic);
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000008E940FB0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (410,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetCanvas(<TCustomImage>):TCanvas;
                           methodpointer =
                           (subscriptn, resultdef = TImage = "TImage", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (410,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (410,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                              (subscriptn, resultdef = TImage = "TImage", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (410,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000008E940FB0
                     )

                  )
               )
               left =
               (callparan, resultdef = TGraphic = "TGraphic", pos = (410,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 8
                  (subscriptn, resultdef = TGraphic = "TGraphic", pos = (410,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 7
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (410,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TImage = "TImage", pos = (410,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (410,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (410,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (410,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (410,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (410,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = <nil>, pos = (410,51), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (410,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E940FB0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (411,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
            (assignn, resultdef = $void = "untyped", pos = (411,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (411,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = HMOUSEBUTTON
               )
               (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (411,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 5
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (412,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
            (assignn, resultdef = $void = "untyped", pos = (412,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = LongInt = "LongInt", pos = (412,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = HMOUSEEVENT
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (412,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 1281104
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (414,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (414,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (414,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (414,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (414,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (414,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
Image1MouseWheelDown(TObject;TShiftState;TPoint;var Boolean);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (419,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (419,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (subscriptn, resultdef = Single = "Single", pos = (419,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (419,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         (slashn, resultdef = Double = "Double", pos = (419,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (typeconvn, resultdef = Double = "Double", pos = (419,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4, convtype = tc_real_2_real, convnodeflags = []
               (subscriptn, resultdef = Single = "Single", pos = (419,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (419,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (419,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
               value =  1.1000000000000001E+000            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (420,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (420,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = SetZoom(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (420,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (420,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TPoint = "<record type>", pos = (420,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = MOUSEPOS
            )

         )
         (callparan, resultdef = <nil>, pos = (420,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (420,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
Image1MouseWheelDown(TObject;TShiftState;TPoint;var Boolean);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (419,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (419,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (subscriptn, resultdef = Single = "Single", pos = (419,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (419,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         (slashn, resultdef = Double = "Double", pos = (419,28), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
            (typeconvn, resultdef = Double = "Double", pos = (419,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_real_2_real, convnodeflags = []
               (subscriptn, resultdef = Single = "Single", pos = (419,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (419,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (419,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
               value =  1.1000000000000001E+000            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (420,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (420,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = SetZoom(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (420,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (420,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TPoint = "<record type>", pos = (420,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = MOUSEPOS
            )

         )
         (callparan, resultdef = <nil>, pos = (420,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (420,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
Image1MouseWheelDown(TObject;TShiftState;TPoint;var Boolean);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (419,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (419,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (subscriptn, resultdef = Single = "Single", pos = (419,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (419,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               (slashn, resultdef = Double = "Double", pos = (419,28), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Double = "Double", pos = (419,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_real_2_real, convnodeflags = []
                     (subscriptn, resultdef = Single = "Single", pos = (419,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (419,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (419,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                     value =  1.1000000000000001E+000                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (420,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (420,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = SetZoom(<TFormDocument>;TPoint);
               methodpointer =
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (420,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (420,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TPoint = "<record type>", pos = (420,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = MOUSEPOS
                  )

               )
               (callparan, resultdef = <nil>, pos = (420,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (420,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (421,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (421,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (421,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (421,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (421,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (421,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
Image1MouseWheelUp(TObject;TShiftState;TPoint;var Boolean);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (426,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (subscriptn, resultdef = Single = "Single", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (426,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         (muln, resultdef = Double = "Double", pos = (426,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (typeconvn, resultdef = Double = "Double", pos = (426,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4, convtype = tc_real_2_real, convnodeflags = []
               (subscriptn, resultdef = Single = "Single", pos = (426,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (426,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (426,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
               value =  1.1000000000000001E+000            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (427,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = SetZoom(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (427,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (427,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TPoint = "<record type>", pos = (427,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = MOUSEPOS
            )

         )
         (callparan, resultdef = <nil>, pos = (427,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (427,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
Image1MouseWheelUp(TObject;TShiftState;TPoint;var Boolean);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (426,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (subscriptn, resultdef = Single = "Single", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (426,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         (muln, resultdef = Double = "Double", pos = (426,28), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 2
            (typeconvn, resultdef = Double = "Double", pos = (426,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_real_2_real, convnodeflags = []
               (subscriptn, resultdef = Single = "Single", pos = (426,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (426,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (426,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
               value =  1.1000000000000001E+000            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (427,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = SetZoom(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (427,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (427,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TPoint = "<record type>", pos = (427,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = MOUSEPOS
            )

         )
         (callparan, resultdef = <nil>, pos = (427,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (427,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
Image1MouseWheelUp(TObject;TShiftState;TPoint;var Boolean);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (426,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (subscriptn, resultdef = Single = "Single", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (426,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               (muln, resultdef = Double = "Double", pos = (426,28), loc = LOC_INVALID, expectloc = LOC_FPUREG, flags = [nf_pass1_done], cmplx = 2
                  (typeconvn, resultdef = Double = "Double", pos = (426,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_real_2_real, convnodeflags = []
                     (subscriptn, resultdef = Single = "Single", pos = (426,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (426,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (426,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done], cmplx = 2
                     value =  1.1000000000000001E+000                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (427,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = SetZoom(<TFormDocument>;TPoint);
               methodpointer =
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (427,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (427,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TPoint = "<record type>", pos = (427,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = MOUSEPOS
                  )

               )
               (callparan, resultdef = <nil>, pos = (427,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (427,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
Image1Paint(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (431,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (432,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Draw(<TCanvas>;LongInt;LongInt;TGraphic);
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (432,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetCanvas(<TCustomImage>):TCanvas;
            methodpointer =
            (subscriptn, resultdef = TImage = "TImage", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (432,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (432,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (432,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = TGraphic = "TGraphic", pos = (432,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (typeconvn, resultdef = TGraphic = "TGraphic", pos = (432,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadn, resultdef = TBitmap = "TBitmap", pos = (432,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = BITMAPGRID
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (432,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (432,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (432,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (432,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (432,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (432,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
Image1Paint(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (432,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Draw(<TCanvas>;LongInt;LongInt;TGraphic);
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E941830 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000008E941830
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E941830 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (432,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (432,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (432,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (432,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000008E941830
               )

            )
         )
         left =
         (callparan, resultdef = TGraphic = "TGraphic", pos = (432,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (typeconvn, resultdef = TGraphic = "TGraphic", pos = (432,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadn, resultdef = TBitmap = "TBitmap", pos = (432,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = BITMAPGRID
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (432,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (432,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (432,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (432,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (432,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E941830 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
Image1Paint(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (431,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (432,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Draw(<TCanvas>;LongInt;LongInt;TGraphic);
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E941830 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000008E941830
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E941830 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (432,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetCanvas(<TCustomImage>):TCanvas;
                           methodpointer =
                           (subscriptn, resultdef = TImage = "TImage", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (432,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (432,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                              (subscriptn, resultdef = TImage = "TImage", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (432,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000008E941830
                     )

                  )
               )
               left =
               (callparan, resultdef = TGraphic = "TGraphic", pos = (432,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (typeconvn, resultdef = TGraphic = "TGraphic", pos = (432,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                     (loadn, resultdef = TBitmap = "TBitmap", pos = (432,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = BITMAPGRID
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (432,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (432,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (432,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (432,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = <nil>, pos = (432,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (432,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000008E941830 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (433,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (433,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (433,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (433,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (433,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (433,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
Image1Resize(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (441,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (442,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (442,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = MyResize(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (442,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               proc = Point(LongInt;LongInt):<record type>;
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (442,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (442,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (442,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (442,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (442,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (442,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
Image1Resize(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (442,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (442,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = MyResize(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (442,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 6
            (blockn, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 5
               (statementn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (tempcreaten, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                     size = 8, temptypedef = TPoint = "<record type>", tempinfo = $000000008E9418B0
                     [ti_may_be_in_reg]
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (blockn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_block_with_exit], cmplx = 4
                     (statementn, resultdef = <nil>, pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                        (assignn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                 )
                              )
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (442,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                        (assignn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                 )
                              )
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (442,22), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )

                     )
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (tempdeleten, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $000000008E9418B0
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                     temptypedef = TPoint = "<record type>", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (442,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (442,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
Image1Resize(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (441,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (442,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (442,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = MyResize(<TFormDocument>;TPoint);
               methodpointer =
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (442,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 6
                  (blockn, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 5
                     (statementn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                        (tempcreaten, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                           size = 8, temptypedef = TPoint = "<record type>", tempinfo = $000000008E9418B0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                        (blockn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_block_with_exit], cmplx = 4
                           (statementn, resultdef = <nil>, pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                              (assignn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                          temptypedef = TPoint = "<record type>", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (442,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                              (assignn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                          temptypedef = TPoint = "<record type>", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (442,22), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                              )

                           )
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                        (tempdeleten, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $000000008E9418B0
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                        (temprefn, resultdef = TPoint = "<record type>", pos = (442,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                           temptypedef = TPoint = "<record type>", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (442,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (442,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (443,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (443,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (443,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (443,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (443,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (443,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ScrollBox1Resize(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (446,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (447,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (447,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = MyResize(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (447,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               proc = Point(LongInt;LongInt):<record type>;
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (447,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (447,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (447,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (447,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (447,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (447,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
ScrollBox1Resize(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (447,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (447,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = MyResize(<TFormDocument>;TPoint);
         methodpointer =
         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (447,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 6
            (blockn, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 5
               (statementn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (tempcreaten, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                     size = 8, temptypedef = TPoint = "<record type>", tempinfo = $000000008E941830
                     [ti_may_be_in_reg]
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (blockn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_block_with_exit], cmplx = 4
                     (statementn, resultdef = <nil>, pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                        (assignn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $000000008E941830 flags = [ti_may_be_in_reg])
                                 )
                              )
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (447,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                        (assignn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $000000008E941830 flags = [ti_may_be_in_reg])
                                 )
                              )
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (447,22), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )

                     )
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (tempdeleten, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $000000008E941830
                  )

               )
               (statementn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                     temptypedef = TPoint = "<record type>", (tempinfo = $000000008E941830 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (447,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (447,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
ScrollBox1Resize(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (446,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (447,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (447,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = MyResize(<TFormDocument>;TPoint);
               methodpointer =
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (447,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 6
                  (blockn, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 5
                     (statementn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                        (tempcreaten, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                           size = 8, temptypedef = TPoint = "<record type>", tempinfo = $000000008E941830
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                        (blockn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_block_with_exit], cmplx = 4
                           (statementn, resultdef = <nil>, pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                              (assignn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                          temptypedef = TPoint = "<record type>", (tempinfo = $000000008E941830 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (447,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                              (assignn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                          temptypedef = TPoint = "<record type>", (tempinfo = $000000008E941830 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (447,22), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                              )

                           )
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                        (tempdeleten, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $000000008E941830
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                        (temprefn, resultdef = TPoint = "<record type>", pos = (447,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                           temptypedef = TPoint = "<record type>", (tempinfo = $000000008E941830 flags = [ti_may_be_in_reg])
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (447,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (447,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (448,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (448,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (448,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (448,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (448,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (448,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
MainPanelClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
MainPanelClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
MainPanelClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (454,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (454,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (454,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (454,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (454,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (454,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
RenderGrid(TCanvas;LongInt;LongInt;LongInt;TGraphicsColor;TGraphicsColor);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (460,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (469,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (forn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (461,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = Y
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (461,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 0
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (461,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 11, convtype = tc_int_2_int, convnodeflags = []
            (divn, resultdef = Int64 = "Int64", pos = (461,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 10
               (typeconvn, resultdef = Int64 = "Int64", pos = (461,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (461,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = HEIGHT
                  )
               )
               (typeconvn, resultdef = Int64 = "Int64", pos = (461,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (461,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = SIZE
                  )
               )
            )
         )
         (forn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (loadn, resultdef = LongInt = "LongInt", pos = (462,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
               nil
               symbol = X
            )
            (ordconstn, resultdef = LongInt = "LongInt", pos = (462,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )
            (typeconvn, resultdef = LongInt = "LongInt", pos = (462,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 11, convtype = tc_int_2_int, convnodeflags = []
               (divn, resultdef = Int64 = "Int64", pos = (462,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 10
                  (typeconvn, resultdef = Int64 = "Int64", pos = (462,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                     (loadn, resultdef = LongInt = "LongInt", pos = (462,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = WIDTH
                     )
                  )
                  (typeconvn, resultdef = Int64 = "Int64", pos = (462,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                     (loadn, resultdef = LongInt = "LongInt", pos = (462,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = SIZE
                     )
                  )
               )
            )
            (blockn, resultdef = $void = "untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (statementn, resultdef = <nil>, pos = (467,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (ifn, resultdef = $void = "untyped", pos = (464,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (xorn, resultdef = Boolean = "Boolean", pos = (464,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = Boolean = "Boolean", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           proc = Odd(LongInt):Boolean;
                           left =
                           (callparan, resultdef = LongInt = "LongInt", pos = (464,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                              (loadn, resultdef = LongInt = "LongInt", pos = (464,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = X
                              )

                           )
                        )
                        (calln, resultdef = Boolean = "Boolean", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           proc = Odd(LongInt):Boolean;
                           left =
                           (callparan, resultdef = LongInt = "LongInt", pos = (464,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                              (loadn, resultdef = LongInt = "LongInt", pos = (464,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = Y
                              )

                           )
                        )
                     )
                     (calln, resultdef = $void = "untyped", pos = (465,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                        proc = SetColor(<TBrush>;TGraphicsColor);
                        methodpointer =
                        (subscriptn, resultdef = TBrush = "TBrush", pos = (465,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                           (loadn, resultdef = TCanvas = "TCanvas", pos = (465,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = CANVAS
                           )
                        )
                        left =
                        (callparan, resultdef = TGraphicsColor = "LongInt", pos = (466,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = TGraphicsColor = "LongInt", pos = (466,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = COLOR1
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (465,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (465,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                     (calln, resultdef = $void = "untyped", pos = (467,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                        proc = SetColor(<TBrush>;TGraphicsColor);
                        methodpointer =
                        (subscriptn, resultdef = TBrush = "TBrush", pos = (467,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                           (loadn, resultdef = TCanvas = "TCanvas", pos = (467,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = CANVAS
                           )
                        )
                        left =
                        (callparan, resultdef = TGraphicsColor = "LongInt", pos = (467,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                           (loadn, resultdef = TGraphicsColor = "LongInt", pos = (467,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = COLOR2
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (467,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (467,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                     nil
                  )

               )
               (statementn, resultdef = <nil>, pos = (468,69), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (calln, resultdef = $void = "untyped", pos = (468,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     proc = FillRect(<TCanvas>;const TRect);
                     methodpointer =
                     (loadn, resultdef = TCanvas = "TCanvas", pos = (468,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = CANVAS
                     )
                     left =
                     (callparan, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           proc = Rect(<var TRect>;LongInt;LongInt;LongInt;LongInt):<record type>;
                           left =
                           (callparan, resultdef = LongInt = "LongInt", pos = (468,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 13
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (468,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 12, convtype = tc_int_2_int, convnodeflags = []
                                 (muln, resultdef = Int64 = "Int64", pos = (468,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 11
                                    (addn, resultdef = Int64 = "Int64", pos = (468,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (468,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (468,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = Y
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (468,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          value = 1
                                       )
                                    )
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (468,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (468,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = SIZE
                                       )
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (468,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 13
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (468,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 12, convtype = tc_int_2_int, convnodeflags = []
                                 (muln, resultdef = Int64 = "Int64", pos = (468,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 11
                                    (addn, resultdef = Int64 = "Int64", pos = (468,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (468,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (468,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = X
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (468,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          value = 1
                                       )
                                    )
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (468,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (468,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = SIZE
                                       )
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (468,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 12
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (468,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 11, convtype = tc_int_2_int, convnodeflags = []
                                 (muln, resultdef = Int64 = "Int64", pos = (468,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 10
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (468,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (468,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = Y
                                       )
                                    )
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (468,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (468,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = SIZE
                                       )
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (468,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 12
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (468,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 11, convtype = tc_int_2_int, convnodeflags = []
                                 (muln, resultdef = Int64 = "Int64", pos = (468,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 10
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (468,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (468,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = X
                                       )
                                    )
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (468,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (468,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = SIZE
                                       )
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (468,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (468,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (468,69), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (468,69), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )

               )
            )
         )
      )

   )
)

*******************************************************************************
after the firstpass
RenderGrid(TCanvas;LongInt;LongInt;LongInt;TGraphicsColor;TGraphicsColor);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tempcreaten, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941CB0
         [ti_may_be_in_reg]
         tempinit =
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 13
         (temprefn, resultdef = LongInt = "LongInt", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
            temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941CB0 flags = [ti_may_be_in_reg])
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (461,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 11, convtype = tc_int_2_int, convnodeflags = []
            (divn, resultdef = Int64 = "Int64", pos = (461,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 10
               (typeconvn, resultdef = Int64 = "Int64", pos = (461,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (461,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = HEIGHT
                  )
               )
               (typeconvn, resultdef = Int64 = "Int64", pos = (461,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (461,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SIZE
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (lten, resultdef = Boolean = "Boolean", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (461,12), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )
            (temprefn, resultdef = LongInt = "LongInt", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941CB0 flags = [ti_may_be_in_reg])
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (nothingn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (461,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = Y
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                     value = -1
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (whilerepeatn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (gten, resultdef = Boolean = "Boolean", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                     (loadn, resultdef = LongInt = "LongInt", pos = (461,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                        nil
                        symbol = Y
                     )
                     (temprefn, resultdef = LongInt = "LongInt", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                        temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941CB0 flags = [ti_may_be_in_reg])
                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (nothingn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                           (loadn, resultdef = LongInt = "LongInt", pos = (461,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                              nil
                              symbol = Y
                           )
                           (inlinen, resultdef = LongInt = "LongInt", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                              (loadn, resultdef = LongInt = "LongInt", pos = (461,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                 nil
                                 symbol = Y
                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (blockn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (nothingn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (tempcreaten, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E9418B0
                                 [ti_may_be_in_reg]
                                 tempinit =
                                 nil
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 13
                                 (temprefn, resultdef = LongInt = "LongInt", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                 )
                                 (typeconvn, resultdef = LongInt = "LongInt", pos = (462,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 11, convtype = tc_int_2_int, convnodeflags = []
                                    (divn, resultdef = Int64 = "Int64", pos = (462,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 10
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (462,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (462,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = WIDTH
                                          )
                                       )
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (462,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (462,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = SIZE
                                          )
                                       )
                                    )
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (ifn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (lten, resultdef = Boolean = "Boolean", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                    (ordconstn, resultdef = LongInt = "LongInt", pos = (462,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 0
                                    )
                                    (temprefn, resultdef = LongInt = "LongInt", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                       temptypedef = LongInt = "LongInt", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                    )
                                 )
                                 (blockn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (nothingn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (assignn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                          (loadn, resultdef = LongInt = "LongInt", pos = (462,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = X
                                          )
                                          (ordconstn, resultdef = LongInt = "LongInt", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                             value = -1
                                          )
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (whilerepeatn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (gten, resultdef = Boolean = "Boolean", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                             (loadn, resultdef = LongInt = "LongInt", pos = (462,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                nil
                                                symbol = X
                                             )
                                             (temprefn, resultdef = LongInt = "LongInt", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                temptypedef = LongInt = "LongInt", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                             )
                                          )
                                          (blockn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                             (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                (nothingn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                )

                                             )
                                             (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                (assignn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (462,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                      nil
                                                      symbol = X
                                                   )
                                                   (inlinen, resultdef = LongInt = "LongInt", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                                      (loadn, resultdef = LongInt = "LongInt", pos = (462,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                         nil
                                                         symbol = X
                                                      )
                                                   )
                                                )

                                             )
                                             (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                (blockn, resultdef = $void = "untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                   (statementn, resultdef = <nil>, pos = (467,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (ifn, resultdef = $void = "untyped", pos = (464,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (xorn, resultdef = Boolean = "Boolean", pos = (464,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 13
                                                            (blockn, resultdef = Boolean = "Boolean", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 6
                                                               (statementn, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                     size = 1, temptypedef = Boolean = "Boolean", tempinfo = $000000008E941930
                                                                     [ti_may_be_in_reg]
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                                                                  (assignn, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 5
                                                                     (typeconvn, resultdef = Boolean = "Boolean", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                        (temprefn, resultdef = Boolean = "Boolean", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                           temptypedef = Boolean = "Boolean", (tempinfo = $000000008E941930 flags = [ti_may_be_in_reg])
                                                                        )
                                                                     )
                                                                     (typeconvn, resultdef = Boolean = "Boolean", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 3, convtype = tc_int_2_bool, convnodeflags = []
                                                                        (andn, resultdef = LongInt = "LongInt", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (464,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = X
                                                                           )
                                                                           (ordconstn, resultdef = LongInt = "LongInt", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                              value = 1
                                                                           )
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                  (tempdeleten, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     release_to_normal: TRUE, temptypedef = Boolean = "Boolean", temptype = tt_persistent, tempinfo = $000000008E941930
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = Boolean = "Boolean", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                     temptypedef = Boolean = "Boolean", (tempinfo = $000000008E941930 flags = [ti_may_be_in_reg])
                                                                  )

                                                               )
                                                            )
                                                            (blockn, resultdef = Boolean = "Boolean", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 6
                                                               (statementn, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                     size = 1, temptypedef = Boolean = "Boolean", tempinfo = $000000008E9419B0
                                                                     [ti_may_be_in_reg]
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                                                                  (assignn, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 5
                                                                     (typeconvn, resultdef = Boolean = "Boolean", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                        (temprefn, resultdef = Boolean = "Boolean", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                           temptypedef = Boolean = "Boolean", (tempinfo = $000000008E9419B0 flags = [ti_may_be_in_reg])
                                                                        )
                                                                     )
                                                                     (typeconvn, resultdef = Boolean = "Boolean", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 3, convtype = tc_int_2_bool, convnodeflags = []
                                                                        (andn, resultdef = LongInt = "LongInt", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (464,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = Y
                                                                           )
                                                                           (ordconstn, resultdef = LongInt = "LongInt", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                              value = 1
                                                                           )
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                  (tempdeleten, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     release_to_normal: TRUE, temptypedef = Boolean = "Boolean", temptype = tt_persistent, tempinfo = $000000008E9419B0
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = Boolean = "Boolean", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                     temptypedef = Boolean = "Boolean", (tempinfo = $000000008E9419B0 flags = [ti_may_be_in_reg])
                                                                  )

                                                               )
                                                            )
                                                         )
                                                         (calln, resultdef = $void = "untyped", pos = (465,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                            proc = SetColor(<TBrush>;TGraphicsColor);
                                                            methodpointer =
                                                            (subscriptn, resultdef = TBrush = "TBrush", pos = (465,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                               (loadn, resultdef = TCanvas = "TCanvas", pos = (465,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = CANVAS
                                                               )
                                                            )
                                                            left =
                                                            (callparan, resultdef = <nil>, pos = (465,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                               (subscriptn, resultdef = TBrush = "TBrush", pos = (465,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                  (loadn, resultdef = TCanvas = "TCanvas", pos = (465,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = CANVAS
                                                                  )
                                                               )

                                                            )
                                                            (callparan, resultdef = TGraphicsColor = "LongInt", pos = (466,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                               (loadn, resultdef = TGraphicsColor = "LongInt", pos = (466,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = COLOR1
                                                               )

                                                            )
                                                         )
                                                         (calln, resultdef = $void = "untyped", pos = (467,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                            proc = SetColor(<TBrush>;TGraphicsColor);
                                                            methodpointer =
                                                            (subscriptn, resultdef = TBrush = "TBrush", pos = (467,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                               (loadn, resultdef = TCanvas = "TCanvas", pos = (467,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = CANVAS
                                                               )
                                                            )
                                                            left =
                                                            (callparan, resultdef = <nil>, pos = (467,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                               (subscriptn, resultdef = TBrush = "TBrush", pos = (467,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                  (loadn, resultdef = TCanvas = "TCanvas", pos = (467,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = CANVAS
                                                                  )
                                                               )

                                                            )
                                                            (callparan, resultdef = TGraphicsColor = "LongInt", pos = (467,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                               (loadn, resultdef = TGraphicsColor = "LongInt", pos = (467,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = COLOR2
                                                               )

                                                            )
                                                         )
                                                         nil
                                                      )

                                                   )
                                                   (statementn, resultdef = <nil>, pos = (468,69), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (468,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         proc = FillRect(<TCanvas>;const TRect);
                                                         methodpointer =
                                                         (loadn, resultdef = TCanvas = "TCanvas", pos = (468,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = CANVAS
                                                         )
                                                         left =
                                                         (callparan, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 60
                                                            (blockn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 59
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 59
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                     size = 16, temptypedef = TRect = "<record type>", tempinfo = $000000008E941A30
                                                                     [ti_nofini]
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 59
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941AB0
                                                                     []
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 59
                                                                  (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 14
                                                                     (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                        temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941AB0 flags = [])
                                                                     )
                                                                     (typeconvn, resultdef = LongInt = "LongInt", pos = (468,67), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 12, convtype = tc_int_2_int, convnodeflags = []
                                                                        (muln, resultdef = Int64 = "Int64", pos = (468,67), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 11
                                                                           (addn, resultdef = Int64 = "Int64", pos = (468,57), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3
                                                                              (typeconvn, resultdef = Int64 = "Int64", pos = (468,58), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (loadn, resultdef = LongInt = "LongInt", pos = (468,58), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = Y
                                                                                 )
                                                                              )
                                                                              (ordconstn, resultdef = Int64 = "Int64", pos = (468,60), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                 value = 1
                                                                              )
                                                                           )
                                                                           (typeconvn, resultdef = Int64 = "Int64", pos = (468,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (468,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = SIZE
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 45
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941B30
                                                                     []
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 45
                                                                  (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 14
                                                                     (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                        temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941B30 flags = [])
                                                                     )
                                                                     (typeconvn, resultdef = LongInt = "LongInt", pos = (468,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 12, convtype = tc_int_2_int, convnodeflags = []
                                                                        (muln, resultdef = Int64 = "Int64", pos = (468,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 11
                                                                           (addn, resultdef = Int64 = "Int64", pos = (468,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3
                                                                              (typeconvn, resultdef = Int64 = "Int64", pos = (468,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (loadn, resultdef = LongInt = "LongInt", pos = (468,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = X
                                                                                 )
                                                                              )
                                                                              (ordconstn, resultdef = Int64 = "Int64", pos = (468,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                 value = 1
                                                                              )
                                                                           )
                                                                           (typeconvn, resultdef = Int64 = "Int64", pos = (468,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (468,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = SIZE
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941BB0
                                                                     []
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31
                                                                  (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 13
                                                                     (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                        temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941BB0 flags = [])
                                                                     )
                                                                     (typeconvn, resultdef = LongInt = "LongInt", pos = (468,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 11, convtype = tc_int_2_int, convnodeflags = []
                                                                        (muln, resultdef = Int64 = "Int64", pos = (468,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 10
                                                                           (typeconvn, resultdef = Int64 = "Int64", pos = (468,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (468,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = Y
                                                                              )
                                                                           )
                                                                           (typeconvn, resultdef = Int64 = "Int64", pos = (468,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (468,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = SIZE
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 18
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941C30
                                                                     []
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 18
                                                                  (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 13
                                                                     (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                        temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941C30 flags = [])
                                                                     )
                                                                     (typeconvn, resultdef = LongInt = "LongInt", pos = (468,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 11, convtype = tc_int_2_int, convnodeflags = []
                                                                        (muln, resultdef = Int64 = "Int64", pos = (468,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 10
                                                                           (typeconvn, resultdef = Int64 = "Int64", pos = (468,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (468,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = X
                                                                              )
                                                                           )
                                                                           (typeconvn, resultdef = Int64 = "Int64", pos = (468,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (468,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = SIZE
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                                                                  (blockn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_block_with_exit], cmplx = 4
                                                                     (statementn, resultdef = <nil>, pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                                                                        (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                           (subscriptn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              (typeconvn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                 (temprefn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                    temptypedef = TRect = "<record type>", (tempinfo = $000000008E941A30 flags = [ti_nofini])
                                                                                 )
                                                                              )
                                                                           )
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941C30 flags = [])
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = <nil>, pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3
                                                                        (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                           (subscriptn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              (typeconvn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                 (temprefn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                    temptypedef = TRect = "<record type>", (tempinfo = $000000008E941A30 flags = [ti_nofini])
                                                                                 )
                                                                              )
                                                                           )
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941BB0 flags = [])
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = <nil>, pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                                                                        (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                           (subscriptn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              (typeconvn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                 (temprefn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                    temptypedef = TRect = "<record type>", (tempinfo = $000000008E941A30 flags = [ti_nofini])
                                                                                 )
                                                                              )
                                                                           )
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941B30 flags = [])
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = <nil>, pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                        (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                           (subscriptn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              (typeconvn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                 (temprefn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                    temptypedef = TRect = "<record type>", (tempinfo = $000000008E941A30 flags = [ti_nofini])
                                                                                 )
                                                                              )
                                                                           )
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941AB0 flags = [])
                                                                           )
                                                                        )

                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                  (blockn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941AB0
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941B30
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941BB0
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941C30
                                                                        )

                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                  (tempdeleten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     release_to_normal: TRUE, temptypedef = TRect = "<record type>", temptype = tt_persistent, tempinfo = $000000008E941A30
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                     temptypedef = TRect = "<record type>", (tempinfo = $000000008E941A30 flags = [ti_nofini])
                                                                  )

                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (468,69), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                            (loadn, resultdef = TCanvas = "TCanvas", pos = (468,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               nil
                                                               symbol = CANVAS
                                                            )

                                                         )
                                                      )

                                                   )
                                                )

                                             )
                                          )
                                          nil
                                          nil
                                       )

                                    )
                                 )
                                 nil
                                 nil
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (tempdeleten, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E9418B0
                              )

                           )
                        )

                     )
                  )
                  nil
                  nil
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
      (tempdeleten, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941CB0
      )

   )
)

*******************************************************************************
right before code generation
RenderGrid(TCanvas;LongInt;LongInt;LongInt;TGraphicsColor;TGraphicsColor);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (460,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (nothingn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (tempcreaten, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
               size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941CB0
               [ti_may_be_in_reg]
               tempinit =
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 13
               (temprefn, resultdef = LongInt = "LongInt", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                  temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941CB0 flags = [ti_may_be_in_reg])
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (461,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 11, convtype = tc_int_2_int, convnodeflags = []
                  (divn, resultdef = Int64 = "Int64", pos = (461,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 10
                     (typeconvn, resultdef = Int64 = "Int64", pos = (461,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                        (loadn, resultdef = LongInt = "LongInt", pos = (461,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = HEIGHT
                        )
                     )
                     (typeconvn, resultdef = Int64 = "Int64", pos = (461,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                        (loadn, resultdef = LongInt = "LongInt", pos = (461,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = SIZE
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (lten, resultdef = Boolean = "Boolean", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (461,12), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )
                  (temprefn, resultdef = LongInt = "LongInt", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941CB0 flags = [ti_may_be_in_reg])
                  )
               )
               (blockn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (nothingn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (461,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = Y
                        )
                        (ordconstn, resultdef = LongInt = "LongInt", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                           value = -1
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (whilerepeatn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (gten, resultdef = Boolean = "Boolean", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                           (loadn, resultdef = LongInt = "LongInt", pos = (461,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                              nil
                              symbol = Y
                           )
                           (temprefn, resultdef = LongInt = "LongInt", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941CB0 flags = [ti_may_be_in_reg])
                           )
                        )
                        (blockn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (nothingn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                 (loadn, resultdef = LongInt = "LongInt", pos = (461,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    nil
                                    symbol = Y
                                 )
                                 (inlinen, resultdef = LongInt = "LongInt", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                    (loadn, resultdef = LongInt = "LongInt", pos = (461,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                       nil
                                       symbol = Y
                                    )
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (blockn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (nothingn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (tempcreaten, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E9418B0
                                       [ti_may_be_in_reg]
                                       tempinit =
                                       nil
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (assignn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 13
                                       (temprefn, resultdef = LongInt = "LongInt", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                          temptypedef = LongInt = "LongInt", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                       )
                                       (typeconvn, resultdef = LongInt = "LongInt", pos = (462,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 11, convtype = tc_int_2_int, convnodeflags = []
                                          (divn, resultdef = Int64 = "Int64", pos = (462,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 10
                                             (typeconvn, resultdef = Int64 = "Int64", pos = (462,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                (loadn, resultdef = LongInt = "LongInt", pos = (462,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = WIDTH
                                                )
                                             )
                                             (typeconvn, resultdef = Int64 = "Int64", pos = (462,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                (loadn, resultdef = LongInt = "LongInt", pos = (462,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = SIZE
                                                )
                                             )
                                          )
                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (ifn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (lten, resultdef = Boolean = "Boolean", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                          (ordconstn, resultdef = LongInt = "LongInt", pos = (462,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                             value = 0
                                          )
                                          (temprefn, resultdef = LongInt = "LongInt", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                             temptypedef = LongInt = "LongInt", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                          )
                                       )
                                       (blockn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (nothingn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                                (loadn, resultdef = LongInt = "LongInt", pos = (462,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   nil
                                                   symbol = X
                                                )
                                                (ordconstn, resultdef = LongInt = "LongInt", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                                   value = -1
                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (whilerepeatn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (gten, resultdef = Boolean = "Boolean", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (462,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                      nil
                                                      symbol = X
                                                   )
                                                   (temprefn, resultdef = LongInt = "LongInt", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                      temptypedef = LongInt = "LongInt", (tempinfo = $000000008E9418B0 flags = [ti_may_be_in_reg])
                                                   )
                                                )
                                                (blockn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                   (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (nothingn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                      )

                                                   )
                                                   (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (assignn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                                         (loadn, resultdef = LongInt = "LongInt", pos = (462,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                            nil
                                                            symbol = X
                                                         )
                                                         (inlinen, resultdef = LongInt = "LongInt", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                                            (loadn, resultdef = LongInt = "LongInt", pos = (462,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                               nil
                                                               symbol = X
                                                            )
                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (blockn, resultdef = $void = "untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (statementn, resultdef = <nil>, pos = (467,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (ifn, resultdef = $void = "untyped", pos = (464,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (xorn, resultdef = Boolean = "Boolean", pos = (464,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 13
                                                                  (blockn, resultdef = Boolean = "Boolean", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 6
                                                                     (statementn, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                                                                        (tempcreaten, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                           size = 1, temptypedef = Boolean = "Boolean", tempinfo = $000000008E941930
                                                                           [ti_may_be_in_reg]
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                                                                        (assignn, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 5
                                                                           (typeconvn, resultdef = Boolean = "Boolean", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                              (temprefn, resultdef = Boolean = "Boolean", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                 temptypedef = Boolean = "Boolean", (tempinfo = $000000008E941930 flags = [ti_may_be_in_reg])
                                                                              )
                                                                           )
                                                                           (typeconvn, resultdef = Boolean = "Boolean", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 3, convtype = tc_int_2_bool, convnodeflags = []
                                                                              (andn, resultdef = LongInt = "LongInt", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2
                                                                                 (loadn, resultdef = LongInt = "LongInt", pos = (464,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = X
                                                                                 )
                                                                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                    value = 1
                                                                                 )
                                                                              )
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: TRUE, temptypedef = Boolean = "Boolean", temptype = tt_persistent, tempinfo = $000000008E941930
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                        (temprefn, resultdef = Boolean = "Boolean", pos = (464,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                           temptypedef = Boolean = "Boolean", (tempinfo = $000000008E941930 flags = [ti_may_be_in_reg])
                                                                        )

                                                                     )
                                                                  )
                                                                  (blockn, resultdef = Boolean = "Boolean", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 6
                                                                     (statementn, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                                                                        (tempcreaten, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                           size = 1, temptypedef = Boolean = "Boolean", tempinfo = $000000008E9419B0
                                                                           [ti_may_be_in_reg]
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                                                                        (assignn, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 5
                                                                           (typeconvn, resultdef = Boolean = "Boolean", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                              (temprefn, resultdef = Boolean = "Boolean", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                 temptypedef = Boolean = "Boolean", (tempinfo = $000000008E9419B0 flags = [ti_may_be_in_reg])
                                                                              )
                                                                           )
                                                                           (typeconvn, resultdef = Boolean = "Boolean", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 3, convtype = tc_int_2_bool, convnodeflags = []
                                                                              (andn, resultdef = LongInt = "LongInt", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2
                                                                                 (loadn, resultdef = LongInt = "LongInt", pos = (464,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = Y
                                                                                 )
                                                                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                    value = 1
                                                                                 )
                                                                              )
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: TRUE, temptypedef = Boolean = "Boolean", temptype = tt_persistent, tempinfo = $000000008E9419B0
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                        (temprefn, resultdef = Boolean = "Boolean", pos = (464,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                           temptypedef = Boolean = "Boolean", (tempinfo = $000000008E9419B0 flags = [ti_may_be_in_reg])
                                                                        )

                                                                     )
                                                                  )
                                                               )
                                                               (calln, resultdef = $void = "untyped", pos = (465,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                                  proc = SetColor(<TBrush>;TGraphicsColor);
                                                                  methodpointer =
                                                                  (subscriptn, resultdef = TBrush = "TBrush", pos = (465,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                     (loadn, resultdef = TCanvas = "TCanvas", pos = (465,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = CANVAS
                                                                     )
                                                                  )
                                                                  left =
                                                                  (callparan, resultdef = <nil>, pos = (465,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                     (subscriptn, resultdef = TBrush = "TBrush", pos = (465,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                        (loadn, resultdef = TCanvas = "TCanvas", pos = (465,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = CANVAS
                                                                        )
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (466,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                     (loadn, resultdef = TGraphicsColor = "LongInt", pos = (466,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = COLOR1
                                                                     )

                                                                  )
                                                               )
                                                               (calln, resultdef = $void = "untyped", pos = (467,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                                  proc = SetColor(<TBrush>;TGraphicsColor);
                                                                  methodpointer =
                                                                  (subscriptn, resultdef = TBrush = "TBrush", pos = (467,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                     (loadn, resultdef = TCanvas = "TCanvas", pos = (467,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = CANVAS
                                                                     )
                                                                  )
                                                                  left =
                                                                  (callparan, resultdef = <nil>, pos = (467,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                     (subscriptn, resultdef = TBrush = "TBrush", pos = (467,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                        (loadn, resultdef = TCanvas = "TCanvas", pos = (467,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = CANVAS
                                                                        )
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (467,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                     (loadn, resultdef = TGraphicsColor = "LongInt", pos = (467,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = COLOR2
                                                                     )

                                                                  )
                                                               )
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (468,69), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (calln, resultdef = $void = "untyped", pos = (468,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               proc = FillRect(<TCanvas>;const TRect);
                                                               methodpointer =
                                                               (loadn, resultdef = TCanvas = "TCanvas", pos = (468,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = CANVAS
                                                               )
                                                               left =
                                                               (callparan, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 60
                                                                  (blockn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 59
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 59
                                                                        (tempcreaten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                           size = 16, temptypedef = TRect = "<record type>", tempinfo = $000000008E941A30
                                                                           [ti_nofini]
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 59
                                                                        (tempcreaten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941AB0
                                                                           []
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 59
                                                                        (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 14
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941AB0 flags = [])
                                                                           )
                                                                           (typeconvn, resultdef = LongInt = "LongInt", pos = (468,67), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 12, convtype = tc_int_2_int, convnodeflags = []
                                                                              (muln, resultdef = Int64 = "Int64", pos = (468,67), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 11
                                                                                 (addn, resultdef = Int64 = "Int64", pos = (468,57), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3
                                                                                    (typeconvn, resultdef = Int64 = "Int64", pos = (468,58), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                       (loadn, resultdef = LongInt = "LongInt", pos = (468,58), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                          nil
                                                                                          symbol = Y
                                                                                       )
                                                                                    )
                                                                                    (ordconstn, resultdef = Int64 = "Int64", pos = (468,60), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                       value = 1
                                                                                    )
                                                                                 )
                                                                                 (typeconvn, resultdef = Int64 = "Int64", pos = (468,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                    (loadn, resultdef = LongInt = "LongInt", pos = (468,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = SIZE
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 45
                                                                        (tempcreaten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941B30
                                                                           []
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 45
                                                                        (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 14
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941B30 flags = [])
                                                                           )
                                                                           (typeconvn, resultdef = LongInt = "LongInt", pos = (468,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 12, convtype = tc_int_2_int, convnodeflags = []
                                                                              (muln, resultdef = Int64 = "Int64", pos = (468,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 11
                                                                                 (addn, resultdef = Int64 = "Int64", pos = (468,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3
                                                                                    (typeconvn, resultdef = Int64 = "Int64", pos = (468,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                       (loadn, resultdef = LongInt = "LongInt", pos = (468,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                          nil
                                                                                          symbol = X
                                                                                       )
                                                                                    )
                                                                                    (ordconstn, resultdef = Int64 = "Int64", pos = (468,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                       value = 1
                                                                                    )
                                                                                 )
                                                                                 (typeconvn, resultdef = Int64 = "Int64", pos = (468,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                    (loadn, resultdef = LongInt = "LongInt", pos = (468,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = SIZE
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31
                                                                        (tempcreaten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941BB0
                                                                           []
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31
                                                                        (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 13
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941BB0 flags = [])
                                                                           )
                                                                           (typeconvn, resultdef = LongInt = "LongInt", pos = (468,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 11, convtype = tc_int_2_int, convnodeflags = []
                                                                              (muln, resultdef = Int64 = "Int64", pos = (468,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 10
                                                                                 (typeconvn, resultdef = Int64 = "Int64", pos = (468,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                    (loadn, resultdef = LongInt = "LongInt", pos = (468,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = Y
                                                                                    )
                                                                                 )
                                                                                 (typeconvn, resultdef = Int64 = "Int64", pos = (468,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                    (loadn, resultdef = LongInt = "LongInt", pos = (468,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = SIZE
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 18
                                                                        (tempcreaten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000008E941C30
                                                                           []
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 18
                                                                        (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 13
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941C30 flags = [])
                                                                           )
                                                                           (typeconvn, resultdef = LongInt = "LongInt", pos = (468,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 11, convtype = tc_int_2_int, convnodeflags = []
                                                                              (muln, resultdef = Int64 = "Int64", pos = (468,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 10
                                                                                 (typeconvn, resultdef = Int64 = "Int64", pos = (468,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                    (loadn, resultdef = LongInt = "LongInt", pos = (468,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = X
                                                                                    )
                                                                                 )
                                                                                 (typeconvn, resultdef = Int64 = "Int64", pos = (468,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                    (loadn, resultdef = LongInt = "LongInt", pos = (468,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = SIZE
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                                                                        (blockn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_block_with_exit], cmplx = 4
                                                                           (statementn, resultdef = <nil>, pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                                                                              (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                    (typeconvn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                       (temprefn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                          temptypedef = TRect = "<record type>", (tempinfo = $000000008E941A30 flags = [ti_nofini])
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941C30 flags = [])
                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = <nil>, pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3
                                                                              (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                    (typeconvn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                       (temprefn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                          temptypedef = TRect = "<record type>", (tempinfo = $000000008E941A30 flags = [ti_nofini])
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941BB0 flags = [])
                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = <nil>, pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                                                                              (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                    (typeconvn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                       (temprefn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                          temptypedef = TRect = "<record type>", (tempinfo = $000000008E941A30 flags = [ti_nofini])
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941B30 flags = [])
                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = <nil>, pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                              (assignn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                    (typeconvn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                       (temprefn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                          temptypedef = TRect = "<record type>", (tempinfo = $000000008E941A30 flags = [ti_nofini])
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (temprefn, resultdef = LongInt = "LongInt", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000008E941AB0 flags = [])
                                                                                 )
                                                                              )

                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                        (blockn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                              (tempdeleten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                 release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941AB0
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                              (tempdeleten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                 release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941B30
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                              (tempdeleten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                 release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941BB0
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                              (tempdeleten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                 release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941C30
                                                                              )

                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: TRUE, temptypedef = TRect = "<record type>", temptype = tt_persistent, tempinfo = $000000008E941A30
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                        (temprefn, resultdef = TRect = "<record type>", pos = (468,68), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                           temptypedef = TRect = "<record type>", (tempinfo = $000000008E941A30 flags = [ti_nofini])
                                                                        )

                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = <nil>, pos = (468,69), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                  (loadn, resultdef = TCanvas = "TCanvas", pos = (468,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = CANVAS
                                                                  )

                                                               )
                                                            )

                                                         )
                                                      )

                                                   )
                                                )
                                                nil
                                                nil
                                             )

                                          )
                                       )
                                       nil
                                       nil
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                    (tempdeleten, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E9418B0
                                    )

                                 )
                              )

                           )
                        )
                        nil
                        nil
                     )

                  )
               )
               nil
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
            (tempdeleten, resultdef = $void = "untyped", pos = (461,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
               release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000008E941CB0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (470,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (470,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (470,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (470,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (470,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (470,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
$UNITFORMDOCUMENT_$$_init$; Register;
*******************************************************************************
nil

*******************************************************************************
after parsing
$main; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (17,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (17,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = Boolean = "Boolean", pos = (17,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = REQUIREDERIVEDFORMRESOURCE
         )
         (ordconstn, resultdef = Boolean = "Boolean", pos = (17,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (18,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (18,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
         (subscriptn, resultdef = Boolean = "Boolean", pos = (18,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write,nf_isproperty], cmplx = 3
            (loadn, resultdef = TApplication = "TApplication", pos = (18,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = APPLICATION
            )
         )
         (ordconstn, resultdef = Boolean = "Boolean", pos = (18,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (19,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Initialize(<TApplication>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = <nil>, pos = (19,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (19,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (20,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = $formal = "<Formal type>", pos = (20,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TFormMain = "TFormMain", pos = (20,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write,nf_address_taken], cmplx = 1
               nil
               symbol = FORMMAIN
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormMain", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (typen, resultdef = TFormMain = "TFormMain", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (20,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (20,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (21,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = $formal = "<Formal type>", pos = (21,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (21,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write,nf_address_taken], cmplx = 1
               nil
               symbol = FORMNEWIMAGE
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (21,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (21,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (22,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Run(<TApplication>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = <nil>, pos = (22,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (22,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
$main; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (17,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (17,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = Boolean = "Boolean", pos = (17,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = REQUIREDERIVEDFORMRESOURCE
         )
         (ordconstn, resultdef = Boolean = "Boolean", pos = (17,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (18,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (18,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
         (subscriptn, resultdef = Boolean = "Boolean", pos = (18,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_isproperty], cmplx = 3
            (loadn, resultdef = TApplication = "TApplication", pos = (18,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = APPLICATION
            )
         )
         (ordconstn, resultdef = Boolean = "Boolean", pos = (18,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (19,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Initialize(<TApplication>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = <nil>, pos = (19,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TApplication = "TApplication", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (20,46), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = $formal = "<Formal type>", pos = (20,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormMain = "TFormMain", pos = (20,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_address_taken], cmplx = 1
               nil
               symbol = FORMMAIN
            )

         )
         (callparan, resultdef = <nil>, pos = (20,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TApplication = "TApplication", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormMain", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TFormMain = "TFormMain", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (21,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = $formal = "<Formal type>", pos = (21,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (21,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_address_taken], cmplx = 1
               nil
               symbol = FORMNEWIMAGE
            )

         )
         (callparan, resultdef = <nil>, pos = (21,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (22,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Run(<TApplication>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = <nil>, pos = (22,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
$main; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (17,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (17,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = Boolean = "Boolean", pos = (17,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = REQUIREDERIVEDFORMRESOURCE
               )
               (ordconstn, resultdef = Boolean = "Boolean", pos = (17,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 1
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (18,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (18,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
               (subscriptn, resultdef = Boolean = "Boolean", pos = (18,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_isproperty], cmplx = 3
                  (loadn, resultdef = TApplication = "TApplication", pos = (18,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = APPLICATION
                  )
               )
               (ordconstn, resultdef = Boolean = "Boolean", pos = (18,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 1
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (19,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Initialize(<TApplication>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = APPLICATION
               )
               left =
               (callparan, resultdef = <nil>, pos = (19,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TApplication = "TApplication", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = APPLICATION
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (20,46), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = APPLICATION
               )
               left =
               (callparan, resultdef = $formal = "<Formal type>", pos = (20,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (20,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_address_taken], cmplx = 1
                     nil
                     symbol = FORMMAIN
                  )

               )
               (callparan, resultdef = <nil>, pos = (20,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TApplication = "TApplication", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = APPLICATION
                  )

               )
               (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormMain", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TFormMain = "TFormMain", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (21,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = APPLICATION
               )
               left =
               (callparan, resultdef = $formal = "<Formal type>", pos = (21,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (21,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_address_taken], cmplx = 1
                     nil
                     symbol = FORMNEWIMAGE
                  )

               )
               (callparan, resultdef = <nil>, pos = (21,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = APPLICATION
                  )

               )
               (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (22,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Run(<TApplication>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = APPLICATION
               )
               left =
               (callparan, resultdef = <nil>, pos = (22,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = APPLICATION
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (23,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (23,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (23,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (23,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (23,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (23,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)
