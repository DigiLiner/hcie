
*******************************************************************************
after parsing
MouseDown(TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (260,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (260,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = MouseDown(<TControl>;TMouseButton;TShiftState;LongInt;LongInt);
         methodpointer =
         (typen, resultdef = TPageControl = "TPageControl", pos = (260,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (260,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (260,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = Y
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (260,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (260,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = X
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (260,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (260,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = SHIFT
            )

         )
         (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (260,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (260,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = BUTTON
            )

         )
         (callparan, resultdef = <nil>, pos = (260,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (260,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (268,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (261,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (equaln, resultdef = Boolean = "Boolean", pos = (261,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (261,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = BUTTON
            )
            (ordconstn, resultdef = TMouseButton = "<enumeration type>", pos = (261,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (262,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (263,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (263,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = TRect = "<record type>", pos = (263,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = R
                  )
                  (calln, resultdef = TRect = "<record type>", pos = (263,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     proc = TabRect(<TCustomTabControl>;<var TRect>;LongInt):<record type>;
                     methodpointer =
                     (loadn, resultdef = TPageControl = "TPageControl", pos = (263,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (263,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = LongInt = "LongInt", pos = (263,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetActivePageIndex(<TPageControl>):LongInt;
                           methodpointer =
                           (loadn, resultdef = TPageControl = "TPageControl", pos = (263,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (263,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (263,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (263,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (263,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (263,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (263,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (267,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (ifn, resultdef = $void = "untyped", pos = (264,4), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (calln, resultdef = Boolean = "Boolean", pos = (264,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     proc = PtInRect(const TRect;const TPoint):Boolean;
                     left =
                     (callparan, resultdef = TPoint = "<record type>", pos = (266,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = TPoint = "<record type>", pos = (266,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           proc = Point(LongInt;LongInt):<record type>;
                           left =
                           (callparan, resultdef = LongInt = "LongInt", pos = (266,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                              (loadn, resultdef = LongInt = "LongInt", pos = (266,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = Y
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (266,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                              (loadn, resultdef = LongInt = "LongInt", pos = (266,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = X
                              )

                           )
                        )

                     )
                     (callparan, resultdef = TRect = "<record type>", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = TRect = "<record type>", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           proc = Rect(<var TRect>;LongInt;LongInt;LongInt;LongInt):<record type>;
                           left =
                           (callparan, resultdef = LongInt = "LongInt", pos = (265,71), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 8
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (265,71), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (265,71), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                                    (addn, resultdef = Int64 = "Int64", pos = (265,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                       (addn, resultdef = Int64 = "Int64", pos = (265,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                          (typeconvn, resultdef = Int64 = "Int64", pos = (265,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                             (subscriptn, resultdef = LongInt = "LongInt", pos = (265,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                                (loadn, resultdef = TRect = "<record type>", pos = (265,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                   nil
                                                   symbol = R
                                                )
                                             )
                                          )
                                          (ordconstn, resultdef = Int64 = "Int64", pos = (265,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                             value = 10
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (265,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          value = 5
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (265,70), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       value = 4
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (265,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (265,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (265,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                    (addn, resultdef = Int64 = "Int64", pos = (265,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (265,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (265,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                             (loadn, resultdef = TRect = "<record type>", pos = (265,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = R
                                             )
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (265,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          value = -5
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (265,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       value = 4
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (264,71), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (264,71), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (264,71), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                    (addn, resultdef = Int64 = "Int64", pos = (264,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (264,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (264,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                             (loadn, resultdef = TRect = "<record type>", pos = (264,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = R
                                             )
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (264,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          value = 5
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (264,70), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       value = 3
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (264,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 8
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (264,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (264,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                                    (addn, resultdef = Int64 = "Int64", pos = (264,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                       (subn, resultdef = Int64 = "Int64", pos = (264,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                          (typeconvn, resultdef = Int64 = "Int64", pos = (264,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                             (subscriptn, resultdef = LongInt = "LongInt", pos = (264,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                                (loadn, resultdef = TRect = "<record type>", pos = (264,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                   nil
                                                   symbol = R
                                                )
                                             )
                                          )
                                          (ordconstn, resultdef = Int64 = "Int64", pos = (264,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                             value = 10
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (264,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          value = -5
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (264,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       value = 3
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (264,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (264,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )

                     )
                  )
                  (calln, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     proc = Free(<TObject>);
                     methodpointer =
                     (calln, resultdef = TTabSheet = "TTabSheet", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                        methodpointer =
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (267,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = self
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (267,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (267,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (267,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
                  nil
                  nil
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
after the firstpass
MouseDown(TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (260,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (260,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = MouseDown(<TControl>;TMouseButton;TShiftState;LongInt;LongInt);
         methodpointer =
         (typen, resultdef = TPageControl = "TPageControl", pos = (260,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (260,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (260,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = Y
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (260,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (260,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = X
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (260,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (260,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = SHIFT
            )

         )
         (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (260,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (260,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = BUTTON
            )

         )
         (callparan, resultdef = <nil>, pos = (260,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TPageControl = "TPageControl", pos = (260,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (268,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (261,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (equaln, resultdef = Boolean = "Boolean", pos = (261,13), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 2
            (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (261,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = BUTTON
            )
            (ordconstn, resultdef = TMouseButton = "<enumeration type>", pos = (261,15), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (262,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (263,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
               (calln, resultdef = TRect = "<record type>", pos = (263,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
                  proc = TabRect(<TCustomTabControl>;<var TRect>;LongInt):<record type>;
                  methodpointer =
                  (loadn, resultdef = TPageControl = "TPageControl", pos = (263,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (263,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                     (calln, resultdef = LongInt = "LongInt", pos = (263,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetActivePageIndex(<TPageControl>):LongInt;
                        methodpointer =
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (263,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (263,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TPageControl = "TPageControl", pos = (263,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )

                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (263,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TRect = "<record type>", pos = (263,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                        nil
                        symbol = R
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (263,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TPageControl = "TPageControl", pos = (263,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (267,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (ifn, resultdef = $void = "untyped", pos = (264,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (calln, resultdef = Boolean = "Boolean", pos = (264,7), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = PtInRect(const TRect;const TPoint):Boolean;
                     left =
                     (callparan, resultdef = TRect = "<record type>", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                        (calln, resultdef = TRect = "<record type>", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                           proc = Rect(<var TRect>;LongInt;LongInt;LongInt;LongInt):<record type>;
                           funcretnode =
                           (temprefn, resultdef = TRect = "<record type>", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                              temptypedef = TRect = "<record type>", (tempinfo = $000000009081F400 flags = [ti_nofini])
                           )
                           callinitblock =
                           (blockn, resultdef = $void = "untyped", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              (statementn, resultdef = <nil>, pos = (265,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (tempcreaten, resultdef = $void = "untyped", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                    size = 16, temptypedef = TRect = "<record type>", tempinfo = $000000009081F400
                                    [ti_nofini]
                                    tempinit =
                                    nil
                                 )

                              )
                           )
                           callcleanupblock =
                           (blockn, resultdef = $void = "untyped", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              (statementn, resultdef = <nil>, pos = (265,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (tempdeleten, resultdef = $void = "untyped", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    release_to_normal: TRUE, temptypedef = TRect = "<record type>", temptype = tt_persistent, tempinfo = $000000009081F400
                                 )

                              )
                           )
                           left =
                           (callparan, resultdef = LongInt = "LongInt", pos = (265,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 8
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (265,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (265,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6
                                    (addn, resultdef = Int64 = "Int64", pos = (265,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                       (addn, resultdef = Int64 = "Int64", pos = (265,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                          (typeconvn, resultdef = Int64 = "Int64", pos = (265,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                             (subscriptn, resultdef = LongInt = "LongInt", pos = (265,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                (loadn, resultdef = TRect = "<record type>", pos = (265,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = R
                                                )
                                             )
                                          )
                                          (ordconstn, resultdef = Int64 = "Int64", pos = (265,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                             value = 10
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (265,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                          value = 5
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (265,70), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 4
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (264,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 8
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (264,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (264,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6
                                    (addn, resultdef = Int64 = "Int64", pos = (264,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                       (subn, resultdef = Int64 = "Int64", pos = (264,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                          (typeconvn, resultdef = Int64 = "Int64", pos = (264,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                             (subscriptn, resultdef = LongInt = "LongInt", pos = (264,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                (loadn, resultdef = TRect = "<record type>", pos = (264,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = R
                                                )
                                             )
                                          )
                                          (ordconstn, resultdef = Int64 = "Int64", pos = (264,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                             value = 10
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (264,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                          value = -5
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (264,54), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 3
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (265,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (265,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (265,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                    (addn, resultdef = Int64 = "Int64", pos = (265,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (265,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (265,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                             (loadn, resultdef = TRect = "<record type>", pos = (265,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = R
                                             )
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (265,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                          value = -5
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (265,44), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 4
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (264,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (264,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (264,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                    (addn, resultdef = Int64 = "Int64", pos = (264,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (264,58), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (264,58), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                             (loadn, resultdef = TRect = "<record type>", pos = (264,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = R
                                             )
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (264,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                          value = 5
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (264,70), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 3
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (264,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              (temprefn, resultdef = TRect = "<record type>", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                 temptypedef = TRect = "<record type>", (tempinfo = $000000009081F400 flags = [ti_nofini])
                              )

                           )
                        )

                     )
                     (callparan, resultdef = TPoint = "<record type>", pos = (266,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                        (calln, resultdef = TPoint = "<record type>", pos = (266,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                           proc = Point(LongInt;LongInt):<record type>;
                           left =
                           (callparan, resultdef = LongInt = "LongInt", pos = (266,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = LongInt = "LongInt", pos = (266,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = Y
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (266,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = LongInt = "LongInt", pos = (266,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = X
                              )

                           )
                        )

                     )
                  )
                  (calln, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     proc = Free(<TObject>);
                     methodpointer =
                     (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                        temptypedef = TTabSheet = "TTabSheet", (tempinfo = $000000009081F480 flags = [ti_may_be_in_reg])
                     )
                     callinitblock =
                     (blockn, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (statementn, resultdef = <nil>, pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (tempcreaten, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              size = 8, temptypedef = TTabSheet = "TTabSheet", tempinfo = $000000009081F480
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (assignn, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                 temptypedef = TTabSheet = "TTabSheet", (tempinfo = $000000009081F480 flags = [ti_may_be_in_reg])
                              )
                              (calln, resultdef = TTabSheet = "TTabSheet", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                                 methodpointer =
                                 (loadn, resultdef = TPageControl = "TPageControl", pos = (267,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (267,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TPageControl = "TPageControl", pos = (267,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )

                                 )
                              )
                           )

                        )
                     )
                     callcleanupblock =
                     (blockn, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        (statementn, resultdef = <nil>, pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           (tempdeleten, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              release_to_normal: FALSE, temptypedef = TTabSheet = "TTabSheet", temptype = tt_persistent, tempinfo = $000000009081F480
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (267,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                        (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                           temptypedef = TTabSheet = "TTabSheet", (tempinfo = $000000009081F480 flags = [ti_may_be_in_reg])
                        )

                     )
                  )
                  nil
                  nil
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
right before code generation
MouseDown(TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (259,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (260,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (260,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = MouseDown(<TControl>;TMouseButton;TShiftState;LongInt;LongInt);
               methodpointer =
               (typen, resultdef = TPageControl = "TPageControl", pos = (260,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (260,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (260,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = Y
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (260,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (260,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = X
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (260,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (260,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SHIFT
                  )

               )
               (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (260,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (260,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BUTTON
                  )

               )
               (callparan, resultdef = <nil>, pos = (260,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TPageControl = "TPageControl", pos = (260,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (268,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (261,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (equaln, resultdef = Boolean = "Boolean", pos = (261,13), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 2
                  (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (261,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BUTTON
                  )
                  (ordconstn, resultdef = TMouseButton = "<enumeration type>", pos = (261,15), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )
               )
               (blockn, resultdef = $void = "untyped", pos = (262,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (263,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                     (calln, resultdef = TRect = "<record type>", pos = (263,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
                        proc = TabRect(<TCustomTabControl>;<var TRect>;LongInt):<record type>;
                        methodpointer =
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (263,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (263,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                           (calln, resultdef = LongInt = "LongInt", pos = (263,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetActivePageIndex(<TPageControl>):LongInt;
                              methodpointer =
                              (loadn, resultdef = TPageControl = "TPageControl", pos = (263,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (263,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TPageControl = "TPageControl", pos = (263,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )

                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (263,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TRect = "<record type>", pos = (263,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                              nil
                              symbol = R
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (263,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TPageControl = "TPageControl", pos = (263,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (267,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (ifn, resultdef = $void = "untyped", pos = (264,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (calln, resultdef = Boolean = "Boolean", pos = (264,7), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                           proc = PtInRect(const TRect;const TPoint):Boolean;
                           left =
                           (callparan, resultdef = TRect = "<record type>", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                              (calln, resultdef = TRect = "<record type>", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                                 proc = Rect(<var TRect>;LongInt;LongInt;LongInt;LongInt):<record type>;
                                 funcretnode =
                                 (temprefn, resultdef = TRect = "<record type>", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                    temptypedef = TRect = "<record type>", (tempinfo = $000000009081F400 flags = [ti_nofini])
                                 )
                                 callinitblock =
                                 (blockn, resultdef = $void = "untyped", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    (statementn, resultdef = <nil>, pos = (265,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (tempcreaten, resultdef = $void = "untyped", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                          size = 16, temptypedef = TRect = "<record type>", tempinfo = $000000009081F400
                                          [ti_nofini]
                                          tempinit =
                                          nil
                                       )

                                    )
                                 )
                                 callcleanupblock =
                                 (blockn, resultdef = $void = "untyped", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    (statementn, resultdef = <nil>, pos = (265,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (tempdeleten, resultdef = $void = "untyped", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                          release_to_normal: TRUE, temptypedef = TRect = "<record type>", temptype = tt_persistent, tempinfo = $000000009081F400
                                       )

                                    )
                                 )
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (265,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 8
                                    (typeconvn, resultdef = LongInt = "LongInt", pos = (265,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                                       (addn, resultdef = Int64 = "Int64", pos = (265,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6
                                          (addn, resultdef = Int64 = "Int64", pos = (265,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                             (addn, resultdef = Int64 = "Int64", pos = (265,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                (typeconvn, resultdef = Int64 = "Int64", pos = (265,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                   (subscriptn, resultdef = LongInt = "LongInt", pos = (265,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                      (loadn, resultdef = TRect = "<record type>", pos = (265,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = R
                                                      )
                                                   )
                                                )
                                                (ordconstn, resultdef = Int64 = "Int64", pos = (265,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                   value = 10
                                                )
                                             )
                                             (ordconstn, resultdef = Int64 = "Int64", pos = (265,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                value = 5
                                             )
                                          )
                                          (ordconstn, resultdef = Int64 = "Int64", pos = (265,70), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                             value = 4
                                          )
                                       )
                                    )

                                 )
                                 (callparan, resultdef = LongInt = "LongInt", pos = (264,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 8
                                    (typeconvn, resultdef = LongInt = "LongInt", pos = (264,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                                       (subn, resultdef = Int64 = "Int64", pos = (264,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6
                                          (addn, resultdef = Int64 = "Int64", pos = (264,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                             (subn, resultdef = Int64 = "Int64", pos = (264,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                (typeconvn, resultdef = Int64 = "Int64", pos = (264,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                   (subscriptn, resultdef = LongInt = "LongInt", pos = (264,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                      (loadn, resultdef = TRect = "<record type>", pos = (264,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = R
                                                      )
                                                   )
                                                )
                                                (ordconstn, resultdef = Int64 = "Int64", pos = (264,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                   value = 10
                                                )
                                             )
                                             (ordconstn, resultdef = Int64 = "Int64", pos = (264,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                value = -5
                                             )
                                          )
                                          (ordconstn, resultdef = Int64 = "Int64", pos = (264,54), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                             value = 3
                                          )
                                       )
                                    )

                                 )
                                 (callparan, resultdef = LongInt = "LongInt", pos = (265,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                    (typeconvn, resultdef = LongInt = "LongInt", pos = (265,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                       (addn, resultdef = Int64 = "Int64", pos = (265,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                          (addn, resultdef = Int64 = "Int64", pos = (265,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                             (typeconvn, resultdef = Int64 = "Int64", pos = (265,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                (subscriptn, resultdef = LongInt = "LongInt", pos = (265,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                   (loadn, resultdef = TRect = "<record type>", pos = (265,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = R
                                                   )
                                                )
                                             )
                                             (ordconstn, resultdef = Int64 = "Int64", pos = (265,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                value = -5
                                             )
                                          )
                                          (ordconstn, resultdef = Int64 = "Int64", pos = (265,44), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                             value = 4
                                          )
                                       )
                                    )

                                 )
                                 (callparan, resultdef = LongInt = "LongInt", pos = (264,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                    (typeconvn, resultdef = LongInt = "LongInt", pos = (264,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                       (subn, resultdef = Int64 = "Int64", pos = (264,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                          (addn, resultdef = Int64 = "Int64", pos = (264,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                             (typeconvn, resultdef = Int64 = "Int64", pos = (264,58), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                (subscriptn, resultdef = LongInt = "LongInt", pos = (264,58), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                   (loadn, resultdef = TRect = "<record type>", pos = (264,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = R
                                                   )
                                                )
                                             )
                                             (ordconstn, resultdef = Int64 = "Int64", pos = (264,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                value = 5
                                             )
                                          )
                                          (ordconstn, resultdef = Int64 = "Int64", pos = (264,70), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                             value = 3
                                          )
                                       )
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (264,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                    (temprefn, resultdef = TRect = "<record type>", pos = (265,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                       temptypedef = TRect = "<record type>", (tempinfo = $000000009081F400 flags = [ti_nofini])
                                    )

                                 )
                              )

                           )
                           (callparan, resultdef = TPoint = "<record type>", pos = (266,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                              (calln, resultdef = TPoint = "<record type>", pos = (266,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                                 proc = Point(LongInt;LongInt):<record type>;
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (266,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = LongInt = "LongInt", pos = (266,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = Y
                                    )

                                 )
                                 (callparan, resultdef = LongInt = "LongInt", pos = (266,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = LongInt = "LongInt", pos = (266,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = X
                                    )

                                 )
                              )

                           )
                        )
                        (calln, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           proc = Free(<TObject>);
                           methodpointer =
                           (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = TTabSheet = "TTabSheet", (tempinfo = $000000009081F480 flags = [ti_may_be_in_reg])
                           )
                           callinitblock =
                           (blockn, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (statementn, resultdef = <nil>, pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (tempcreaten, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    size = 8, temptypedef = TTabSheet = "TTabSheet", tempinfo = $000000009081F480
                                    [ti_may_be_in_reg]
                                    tempinit =
                                    nil
                                 )

                              )
                              (statementn, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (assignn, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                       temptypedef = TTabSheet = "TTabSheet", (tempinfo = $000000009081F480 flags = [ti_may_be_in_reg])
                                    )
                                    (calln, resultdef = TTabSheet = "TTabSheet", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                                       methodpointer =
                                       (loadn, resultdef = TPageControl = "TPageControl", pos = (267,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (267,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                          (loadn, resultdef = TPageControl = "TPageControl", pos = (267,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )

                                       )
                                    )
                                 )

                              )
                           )
                           callcleanupblock =
                           (blockn, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              (statementn, resultdef = <nil>, pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (tempdeleten, resultdef = $void = "untyped", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    release_to_normal: FALSE, temptypedef = TTabSheet = "TTabSheet", temptype = tt_persistent, tempinfo = $000000009081F480
                                 )

                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (267,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                              (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (267,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                 temptypedef = TTabSheet = "TTabSheet", (tempinfo = $000000009081F480 flags = [ti_may_be_in_reg])
                              )

                           )
                        )
                        nil
                        nil
                     )

                  )
               )
               nil
               nil
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (269,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (269,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (269,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (269,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (269,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (269,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
MouseMove(TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (280,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (281,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (281,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = MouseMove(<TControl>;TShiftState;LongInt;LongInt);
         methodpointer =
         (typen, resultdef = TPageControl = "TPageControl", pos = (281,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (281,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (281,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = Y
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (281,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (281,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = X
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (281,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (281,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = SHIFT
            )

         )
         (callparan, resultdef = <nil>, pos = (281,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (281,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (282,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (282,4), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = TRect = "<record type>", pos = (282,4), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = R
         )
         (calln, resultdef = TRect = "<record type>", pos = (282,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = TabRect(<TCustomTabControl>;<var TRect>;LongInt):<record type>;
            methodpointer =
            (loadn, resultdef = TPageControl = "TPageControl", pos = (282,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
            left =
            (callparan, resultdef = LongInt = "LongInt", pos = (282,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = LongInt = "LongInt", pos = (282,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                  proc = GetActivePageIndex(<TPageControl>):LongInt;
                  methodpointer =
                  (loadn, resultdef = TPageControl = "TPageControl", pos = (282,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (282,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (282,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (callparan, resultdef = <nil>, pos = (282,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (282,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (282,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (282,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (283,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (inlinen, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_setlength_x
         (callparan, resultdef = Int64 = "Int64", pos = (283,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (addn, resultdef = Int64 = "Int64", pos = (283,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (typeconvn, resultdef = Int64 = "Int64", pos = (283,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (calln, resultdef = LongInt = "LongInt", pos = (283,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetPageCount(<TCustomTabControl>):LongInt;
                     methodpointer =
                     (loadn, resultdef = TPageControl = "TPageControl", pos = (283,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (283,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (283,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )
               (ordconstn, resultdef = Int64 = "Int64", pos = (283,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  value = 1
               )
            )

         )
         (callparan, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (283,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (283,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TPageControl = "TPageControl", pos = (283,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (290,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (284,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (calln, resultdef = Boolean = "Boolean", pos = (284,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = PtInRect(const TRect;const TPoint):Boolean;
            left =
            (callparan, resultdef = TPoint = "<record type>", pos = (286,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = TPoint = "<record type>", pos = (286,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = Point(LongInt;LongInt):<record type>;
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (286,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (286,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = Y
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (286,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (286,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = X
                     )

                  )
               )

            )
            (callparan, resultdef = TRect = "<record type>", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = TRect = "<record type>", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = Rect(<var TRect>;LongInt;LongInt;LongInt;LongInt):<record type>;
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (285,71), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 8
                     (typeconvn, resultdef = LongInt = "LongInt", pos = (285,71), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                        (addn, resultdef = Int64 = "Int64", pos = (285,71), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                           (addn, resultdef = Int64 = "Int64", pos = (285,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                              (addn, resultdef = Int64 = "Int64", pos = (285,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (285,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (285,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                       (loadn, resultdef = TRect = "<record type>", pos = (285,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = R
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = Int64 = "Int64", pos = (285,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                    value = 10
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (285,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 value = 5
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (285,70), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              value = 4
                           )
                        )
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (285,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
                     (typeconvn, resultdef = LongInt = "LongInt", pos = (285,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                        (addn, resultdef = Int64 = "Int64", pos = (285,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                           (addn, resultdef = Int64 = "Int64", pos = (285,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                              (typeconvn, resultdef = Int64 = "Int64", pos = (285,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (285,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                    (loadn, resultdef = TRect = "<record type>", pos = (285,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = R
                                    )
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (285,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 value = -5
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (285,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              value = 4
                           )
                        )
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (284,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
                     (typeconvn, resultdef = LongInt = "LongInt", pos = (284,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (284,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                           (addn, resultdef = Int64 = "Int64", pos = (284,71), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                              (typeconvn, resultdef = Int64 = "Int64", pos = (284,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (284,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                    (loadn, resultdef = TRect = "<record type>", pos = (284,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = R
                                    )
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (284,73), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 value = 5
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (284,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              value = 3
                           )
                        )
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (284,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 8
                     (typeconvn, resultdef = LongInt = "LongInt", pos = (284,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (284,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                           (addn, resultdef = Int64 = "Int64", pos = (284,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                              (subn, resultdef = Int64 = "Int64", pos = (284,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (284,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (284,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                       (loadn, resultdef = TRect = "<record type>", pos = (284,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = R
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = Int64 = "Int64", pos = (284,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                    value = 10
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (284,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 value = -5
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (284,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              value = 3
                           )
                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (284,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (284,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
         )
         (blockn, resultdef = $void = "untyped", pos = (287,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (288,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (288,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (vecn, resultdef = Boolean = "Boolean", pos = (288,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write,nf_callunique], cmplx = 255
                     (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (288,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (288,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     (typeconvn, resultdef = QWord = "QWord", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                        (calln, resultdef = LongInt = "LongInt", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetActivePageIndex(<TPageControl>):LongInt;
                           methodpointer =
                           (loadn, resultdef = TPageControl = "TPageControl", pos = (288,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (288,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )
                     )
                  )
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (288,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 1
                  )
               )

            )
         )
         (assignn, resultdef = $void = "untyped", pos = (290,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (vecn, resultdef = Boolean = "Boolean", pos = (290,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write,nf_callunique], cmplx = 255
               (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (290,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
                  (loadn, resultdef = TPageControl = "TPageControl", pos = (290,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               (typeconvn, resultdef = QWord = "QWord", pos = (290,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (calln, resultdef = LongInt = "LongInt", pos = (290,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetActivePageIndex(<TPageControl>):LongInt;
                     methodpointer =
                     (loadn, resultdef = TPageControl = "TPageControl", pos = (290,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (290,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (290,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )
            )
            (ordconstn, resultdef = Boolean = "Boolean", pos = (290,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (292,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (292,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Repaint(<TWinControl>);
         methodpointer =
         (loadn, resultdef = TPageControl = "TPageControl", pos = (292,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = <nil>, pos = (292,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (292,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
MouseMove(TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (281,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (281,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = MouseMove(<TControl>;TShiftState;LongInt;LongInt);
         methodpointer =
         (typen, resultdef = TPageControl = "TPageControl", pos = (281,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (281,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (281,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = Y
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (281,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (281,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = X
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (281,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (281,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = SHIFT
            )

         )
         (callparan, resultdef = <nil>, pos = (281,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TPageControl = "TPageControl", pos = (281,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (282,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
      (calln, resultdef = TRect = "<record type>", pos = (282,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
         proc = TabRect(<TCustomTabControl>;<var TRect>;LongInt):<record type>;
         methodpointer =
         (loadn, resultdef = TPageControl = "TPageControl", pos = (282,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (282,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            (calln, resultdef = LongInt = "LongInt", pos = (282,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetActivePageIndex(<TPageControl>):LongInt;
               methodpointer =
               (loadn, resultdef = TPageControl = "TPageControl", pos = (282,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = <nil>, pos = (282,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TPageControl = "TPageControl", pos = (282,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (282,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TRect = "<record type>", pos = (282,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
               nil
               symbol = R
            )

         )
         (callparan, resultdef = <nil>, pos = (282,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TPageControl = "TPageControl", pos = (282,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (283,35), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (statementn, resultdef = <nil>, pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (nothingn, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (tempcreaten, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
               size = 8, temptypedef = <no type symbol> = "Array[0..0] Of Int64", tempinfo = $000000009081F400
               [ti_addr_taken]
               tempinit =
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (vecn, resultdef = Int64 = "Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_callunique], cmplx = 1
                  (temprefn, resultdef = <no type symbol> = "Array[0..0] Of Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = <no type symbol> = "Array[0..0] Of Int64", (tempinfo = $000000009081F400 flags = [ti_addr_taken])
                  )
                  (ordconstn, resultdef = <no type symbol> = "ShortInt", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )
               )
               (addn, resultdef = Int64 = "Int64", pos = (283,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                  (typeconvn, resultdef = Int64 = "Int64", pos = (283,22), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (calln, resultdef = LongInt = "LongInt", pos = (283,22), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetPageCount(<TCustomTabControl>):LongInt;
                        methodpointer =
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (283,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (283,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TPageControl = "TPageControl", pos = (283,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )

                        )
                     )
                  )
                  (ordconstn, resultdef = Int64 = "Int64", pos = (283,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = $fpc_dynarray_setlength(var Pointer;Pointer;Int64;pdynarrayindex);
               left =
               (callparan, resultdef = Pointer = "^untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                  (addrn, resultdef = Pointer = "^untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 255, addrnodeflags = []
                     (rttin, resultdef = Pointer = "^untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                     )
                  )

               )
               (callparan, resultdef = Pointer = "^untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (typeconvn, resultdef = Pointer = "^untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 3, convtype = tc_equal, convnodeflags = []
                     (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (283,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (283,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
               (callparan, resultdef = pdynarrayindex = "^Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 3
                  (typeconvn, resultdef = pdynarrayindex = "^Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_equal, convnodeflags = []
                     (addrn, resultdef = Pointer = "^untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, addrnodeflags = []
                        (vecn, resultdef = Int64 = "Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 1
                           (temprefn, resultdef = <no type symbol> = "Array[0..0] Of Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = <no type symbol> = "Array[0..0] Of Int64", (tempinfo = $000000009081F400 flags = [ti_addr_taken])
                           )
                           (ordconstn, resultdef = <no type symbol> = "ShortInt", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = Int64 = "Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = Int64 = "Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
            (tempdeleten, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
               release_to_normal: FALSE, temptypedef = <no type symbol> = "Array[0..0] Of Int64", temptype = tt_persistent, tempinfo = $000000009081F400
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (290,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (284,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (calln, resultdef = Boolean = "Boolean", pos = (284,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
            proc = PtInRect(const TRect;const TPoint):Boolean;
            left =
            (callparan, resultdef = TRect = "<record type>", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
               (calln, resultdef = TRect = "<record type>", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                  proc = Rect(<var TRect>;LongInt;LongInt;LongInt;LongInt):<record type>;
                  funcretnode =
                  (temprefn, resultdef = TRect = "<record type>", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                     temptypedef = TRect = "<record type>", (tempinfo = $000000009081F480 flags = [ti_nofini])
                  )
                  callinitblock =
                  (blockn, resultdef = $void = "untyped", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     (statementn, resultdef = <nil>, pos = (285,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempcreaten, resultdef = $void = "untyped", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                           size = 16, temptypedef = TRect = "<record type>", tempinfo = $000000009081F480
                           [ti_nofini]
                           tempinit =
                           nil
                        )

                     )
                  )
                  callcleanupblock =
                  (blockn, resultdef = $void = "untyped", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     (statementn, resultdef = <nil>, pos = (285,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempdeleten, resultdef = $void = "untyped", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: TRUE, temptypedef = TRect = "<record type>", temptype = tt_persistent, tempinfo = $000000009081F480
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (285,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 8
                     (typeconvn, resultdef = LongInt = "LongInt", pos = (285,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                        (addn, resultdef = Int64 = "Int64", pos = (285,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6
                           (addn, resultdef = Int64 = "Int64", pos = (285,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                              (addn, resultdef = Int64 = "Int64", pos = (285,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (285,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (285,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                       (loadn, resultdef = TRect = "<record type>", pos = (285,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = R
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = Int64 = "Int64", pos = (285,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 10
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (285,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = 5
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (285,70), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 4
                           )
                        )
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (284,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 8
                     (typeconvn, resultdef = LongInt = "LongInt", pos = (284,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (284,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6
                           (addn, resultdef = Int64 = "Int64", pos = (284,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                              (subn, resultdef = Int64 = "Int64", pos = (284,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (284,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (284,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                       (loadn, resultdef = TRect = "<record type>", pos = (284,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = R
                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = Int64 = "Int64", pos = (284,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 10
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (284,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = -5
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (284,62), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 3
                           )
                        )
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (285,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                     (typeconvn, resultdef = LongInt = "LongInt", pos = (285,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                        (addn, resultdef = Int64 = "Int64", pos = (285,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                           (addn, resultdef = Int64 = "Int64", pos = (285,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                              (typeconvn, resultdef = Int64 = "Int64", pos = (285,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (285,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                    (loadn, resultdef = TRect = "<record type>", pos = (285,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = R
                                    )
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (285,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = -5
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (285,44), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 4
                           )
                        )
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (284,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                     (typeconvn, resultdef = LongInt = "LongInt", pos = (284,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (284,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                           (addn, resultdef = Int64 = "Int64", pos = (284,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                              (typeconvn, resultdef = Int64 = "Int64", pos = (284,66), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (284,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                    (loadn, resultdef = TRect = "<record type>", pos = (284,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = R
                                    )
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (284,73), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = 5
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (284,78), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 3
                           )
                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (284,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     (temprefn, resultdef = TRect = "<record type>", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                        temptypedef = TRect = "<record type>", (tempinfo = $000000009081F480 flags = [ti_nofini])
                     )

                  )
               )

            )
            (callparan, resultdef = TPoint = "<record type>", pos = (286,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
               (calln, resultdef = TPoint = "<record type>", pos = (286,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                  proc = Point(LongInt;LongInt):<record type>;
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (286,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (286,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = Y
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (286,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (286,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = X
                     )

                  )
               )

            )
         )
         (blockn, resultdef = $void = "untyped", pos = (287,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (288,49), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (288,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (vecn, resultdef = Boolean = "Boolean", pos = (288,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_callunique], cmplx = 255
                     (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (288,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (288,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     (typeconvn, resultdef = QWord = "QWord", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                        (calln, resultdef = LongInt = "LongInt", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetActivePageIndex(<TPageControl>):LongInt;
                           methodpointer =
                           (loadn, resultdef = TPageControl = "TPageControl", pos = (288,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (288,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TPageControl = "TPageControl", pos = (288,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )

                           )
                        )
                     )
                  )
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (288,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )
               )

            )
         )
         (assignn, resultdef = $void = "untyped", pos = (290,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (vecn, resultdef = Boolean = "Boolean", pos = (290,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_callunique], cmplx = 255
               (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (290,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                  (loadn, resultdef = TPageControl = "TPageControl", pos = (290,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               (typeconvn, resultdef = QWord = "QWord", pos = (290,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (calln, resultdef = LongInt = "LongInt", pos = (290,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetActivePageIndex(<TPageControl>):LongInt;
                     methodpointer =
                     (loadn, resultdef = TPageControl = "TPageControl", pos = (290,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (290,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (290,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )

                     )
                  )
               )
            )
            (ordconstn, resultdef = Boolean = "Boolean", pos = (290,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (292,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (292,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Repaint(<TWinControl>);
         methodpointer =
         (loadn, resultdef = TPageControl = "TPageControl", pos = (292,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = <nil>, pos = (292,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TPageControl = "TPageControl", pos = (292,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
MouseMove(TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (280,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (281,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (281,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = MouseMove(<TControl>;TShiftState;LongInt;LongInt);
               methodpointer =
               (typen, resultdef = TPageControl = "TPageControl", pos = (281,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (281,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (281,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = Y
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (281,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (281,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = X
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (281,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (281,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SHIFT
                  )

               )
               (callparan, resultdef = <nil>, pos = (281,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TPageControl = "TPageControl", pos = (281,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (282,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
            (calln, resultdef = TRect = "<record type>", pos = (282,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
               proc = TabRect(<TCustomTabControl>;<var TRect>;LongInt):<record type>;
               methodpointer =
               (loadn, resultdef = TPageControl = "TPageControl", pos = (282,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (282,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                  (calln, resultdef = LongInt = "LongInt", pos = (282,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetActivePageIndex(<TPageControl>):LongInt;
                     methodpointer =
                     (loadn, resultdef = TPageControl = "TPageControl", pos = (282,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (282,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (282,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (282,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TRect = "<record type>", pos = (282,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                     nil
                     symbol = R
                  )

               )
               (callparan, resultdef = <nil>, pos = (282,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TPageControl = "TPageControl", pos = (282,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (283,35), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (blockn, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (statementn, resultdef = <nil>, pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (nothingn, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  )

               )
               (statementn, resultdef = <nil>, pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (tempcreaten, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     size = 8, temptypedef = <no type symbol> = "Array[0..0] Of Int64", tempinfo = $000000009081F400
                     [ti_addr_taken]
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef = <nil>, pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (assignn, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (vecn, resultdef = Int64 = "Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_callunique], cmplx = 1
                        (temprefn, resultdef = <no type symbol> = "Array[0..0] Of Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = <no type symbol> = "Array[0..0] Of Int64", (tempinfo = $000000009081F400 flags = [ti_addr_taken])
                        )
                        (ordconstn, resultdef = <no type symbol> = "ShortInt", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = 0
                        )
                     )
                     (addn, resultdef = Int64 = "Int64", pos = (283,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                        (typeconvn, resultdef = Int64 = "Int64", pos = (283,22), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (283,22), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetPageCount(<TCustomTabControl>):LongInt;
                              methodpointer =
                              (loadn, resultdef = TPageControl = "TPageControl", pos = (283,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (283,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TPageControl = "TPageControl", pos = (283,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (283,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = 1
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (calln, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     proc = $fpc_dynarray_setlength(var Pointer;Pointer;Int64;pdynarrayindex);
                     left =
                     (callparan, resultdef = Pointer = "^untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                        (addrn, resultdef = Pointer = "^untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 255, addrnodeflags = []
                           (rttin, resultdef = Pointer = "^untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                           )
                        )

                     )
                     (callparan, resultdef = Pointer = "^untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (typeconvn, resultdef = Pointer = "^untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 3, convtype = tc_equal, convnodeflags = []
                           (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (283,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TPageControl = "TPageControl", pos = (283,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                     (callparan, resultdef = pdynarrayindex = "^Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 3
                        (typeconvn, resultdef = pdynarrayindex = "^Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_equal, convnodeflags = []
                           (addrn, resultdef = Pointer = "^untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, addrnodeflags = []
                              (vecn, resultdef = Int64 = "Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 1
                                 (temprefn, resultdef = <no type symbol> = "Array[0..0] Of Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = <no type symbol> = "Array[0..0] Of Int64", (tempinfo = $000000009081F400 flags = [ti_addr_taken])
                                 )
                                 (ordconstn, resultdef = <no type symbol> = "ShortInt", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                              )
                           )
                        )

                     )
                     (callparan, resultdef = Int64 = "Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (ordconstn, resultdef = Int64 = "Int64", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = 1
                        )

                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  (tempdeleten, resultdef = $void = "untyped", pos = (283,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     release_to_normal: FALSE, temptypedef = <no type symbol> = "Array[0..0] Of Int64", temptype = tt_persistent, tempinfo = $000000009081F400
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (290,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (284,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (calln, resultdef = Boolean = "Boolean", pos = (284,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                  proc = PtInRect(const TRect;const TPoint):Boolean;
                  left =
                  (callparan, resultdef = TRect = "<record type>", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                     (calln, resultdef = TRect = "<record type>", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                        proc = Rect(<var TRect>;LongInt;LongInt;LongInt;LongInt):<record type>;
                        funcretnode =
                        (temprefn, resultdef = TRect = "<record type>", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                           temptypedef = TRect = "<record type>", (tempinfo = $000000009081F480 flags = [ti_nofini])
                        )
                        callinitblock =
                        (blockn, resultdef = $void = "untyped", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           (statementn, resultdef = <nil>, pos = (285,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (tempcreaten, resultdef = $void = "untyped", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                 size = 16, temptypedef = TRect = "<record type>", tempinfo = $000000009081F480
                                 [ti_nofini]
                                 tempinit =
                                 nil
                              )

                           )
                        )
                        callcleanupblock =
                        (blockn, resultdef = $void = "untyped", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           (statementn, resultdef = <nil>, pos = (285,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (tempdeleten, resultdef = $void = "untyped", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 release_to_normal: TRUE, temptypedef = TRect = "<record type>", temptype = tt_persistent, tempinfo = $000000009081F480
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (285,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 8
                           (typeconvn, resultdef = LongInt = "LongInt", pos = (285,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                              (addn, resultdef = Int64 = "Int64", pos = (285,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6
                                 (addn, resultdef = Int64 = "Int64", pos = (285,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                    (addn, resultdef = Int64 = "Int64", pos = (285,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (285,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (285,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                             (loadn, resultdef = TRect = "<record type>", pos = (285,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = R
                                             )
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (285,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                          value = 10
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (285,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 5
                                    )
                                 )
                                 (ordconstn, resultdef = Int64 = "Int64", pos = (285,70), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 4
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (284,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 8
                           (typeconvn, resultdef = LongInt = "LongInt", pos = (284,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (284,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6
                                 (addn, resultdef = Int64 = "Int64", pos = (284,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                    (subn, resultdef = Int64 = "Int64", pos = (284,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (284,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (284,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                             (loadn, resultdef = TRect = "<record type>", pos = (284,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = R
                                             )
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (284,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                          value = 10
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (284,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = -5
                                    )
                                 )
                                 (ordconstn, resultdef = Int64 = "Int64", pos = (284,62), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 3
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (285,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                           (typeconvn, resultdef = LongInt = "LongInt", pos = (285,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                              (addn, resultdef = Int64 = "Int64", pos = (285,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                 (addn, resultdef = Int64 = "Int64", pos = (285,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (285,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                       (subscriptn, resultdef = LongInt = "LongInt", pos = (285,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                          (loadn, resultdef = TRect = "<record type>", pos = (285,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = R
                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (285,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = -5
                                    )
                                 )
                                 (ordconstn, resultdef = Int64 = "Int64", pos = (285,44), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 4
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (284,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                           (typeconvn, resultdef = LongInt = "LongInt", pos = (284,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (284,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                 (addn, resultdef = Int64 = "Int64", pos = (284,71), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (284,66), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                       (subscriptn, resultdef = LongInt = "LongInt", pos = (284,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                          (loadn, resultdef = TRect = "<record type>", pos = (284,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = R
                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (284,73), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 5
                                    )
                                 )
                                 (ordconstn, resultdef = Int64 = "Int64", pos = (284,78), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 3
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (284,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (temprefn, resultdef = TRect = "<record type>", pos = (285,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                              temptypedef = TRect = "<record type>", (tempinfo = $000000009081F480 flags = [ti_nofini])
                           )

                        )
                     )

                  )
                  (callparan, resultdef = TPoint = "<record type>", pos = (286,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                     (calln, resultdef = TPoint = "<record type>", pos = (286,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                        proc = Point(LongInt;LongInt):<record type>;
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (286,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (286,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = Y
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (286,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = LongInt = "LongInt", pos = (286,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = X
                           )

                        )
                     )

                  )
               )
               (blockn, resultdef = $void = "untyped", pos = (287,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (288,49), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (288,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (vecn, resultdef = Boolean = "Boolean", pos = (288,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_callunique], cmplx = 255
                           (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (288,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                              (loadn, resultdef = TPageControl = "TPageControl", pos = (288,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                           (typeconvn, resultdef = QWord = "QWord", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                              (calln, resultdef = LongInt = "LongInt", pos = (288,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetActivePageIndex(<TPageControl>):LongInt;
                                 methodpointer =
                                 (loadn, resultdef = TPageControl = "TPageControl", pos = (288,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (288,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TPageControl = "TPageControl", pos = (288,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )

                                 )
                              )
                           )
                        )
                        (ordconstn, resultdef = Boolean = "Boolean", pos = (288,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = 1
                        )
                     )

                  )
               )
               (assignn, resultdef = $void = "untyped", pos = (290,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (vecn, resultdef = Boolean = "Boolean", pos = (290,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_callunique], cmplx = 255
                     (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (290,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (290,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     (typeconvn, resultdef = QWord = "QWord", pos = (290,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                        (calln, resultdef = LongInt = "LongInt", pos = (290,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetActivePageIndex(<TPageControl>):LongInt;
                           methodpointer =
                           (loadn, resultdef = TPageControl = "TPageControl", pos = (290,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (290,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TPageControl = "TPageControl", pos = (290,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )

                           )
                        )
                     )
                  )
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (290,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )
               )
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (292,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (292,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Repaint(<TWinControl>);
               methodpointer =
               (loadn, resultdef = TPageControl = "TPageControl", pos = (292,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = <nil>, pos = (292,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TPageControl = "TPageControl", pos = (292,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (294,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (294,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (294,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (294,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (294,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (294,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
PaintWindow(QWord);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (306,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (307,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (307,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = PaintWindow(<TWinControl>;QWord);
         methodpointer =
         (typen, resultdef = TPageControl = "TPageControl", pos = (307,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         )
         left =
         (callparan, resultdef = QWord = "QWord", pos = (307,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = QWord = "QWord", pos = (307,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = DC
            )

         )
         (callparan, resultdef = <nil>, pos = (307,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (307,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (309,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (309,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = TBitmap = "TBitmap", pos = (309,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = BM
         )
         (calln, resultdef = TBitmap = "TBitmap", pos = (309,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = constructor Create(<TCustomBitmap>;<Class Of TCustomBitmap>);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (309,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (typen, resultdef = TBitmap = "TBitmap", pos = (309,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (309,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (309,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (309,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (309,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (310,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (blockn, resultdef = $void = "untyped", pos = (344,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (311,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (311,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = SetSize(<TCustomBitmap>;LongInt;LongInt);
                  methodpointer =
                  (loadn, resultdef = TBitmap = "TBitmap", pos = (311,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = BM
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (311,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (311,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 16
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (311,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (311,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 16
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (311,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (311,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (312,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = GetBitmap(<TCustomImageList>;LongInt;TCustomBitmap);
                  methodpointer =
                  (subscriptn, resultdef = TCustomImageList = "TCustomImageList", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                     (loadn, resultdef = TPageControl = "TPageControl", pos = (312,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
                  left =
                  (callparan, resultdef = TCustomBitmap = "TCustomBitmap", pos = (312,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (typeconvn, resultdef = TCustomBitmap = "TCustomBitmap", pos = (312,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
                        (loadn, resultdef = TBitmap = "TBitmap", pos = (312,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = BM
                        )
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (312,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (312,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 0
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (312,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (312,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (313,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (inlinen, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_setlength_x
                  (callparan, resultdef = Int64 = "Int64", pos = (313,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (addn, resultdef = Int64 = "Int64", pos = (313,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (typeconvn, resultdef = Int64 = "Int64", pos = (313,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (313,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetPageCount(<TCustomTabControl>):LongInt;
                              methodpointer =
                              (loadn, resultdef = TPageControl = "TPageControl", pos = (313,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (313,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (313,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (313,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           value = 1
                        )
                     )

                  )
                  (callparan, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                     (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = self
                        )
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (343,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (forn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (315,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (315,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )
                  (inlinen, resultdef = LongInt = "LongInt", pos = (315,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, inlinenumber = in_pred_x
                     (calln, resultdef = LongInt = "LongInt", pos = (315,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetPageCount(<TCustomTabControl>):LongInt;
                        methodpointer =
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (315,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = self
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (315,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (315,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                  )
                  (blockn, resultdef = LongBool = "LongBool", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (317,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (317,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (loadn, resultdef = TRect = "<record type>", pos = (317,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                              nil
                              symbol = R
                           )
                           (calln, resultdef = TRect = "<record type>", pos = (317,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              proc = TabRect(<TCustomTabControl>;<var TRect>;LongInt):<record type>;
                              methodpointer =
                              (loadn, resultdef = TPageControl = "TPageControl", pos = (317,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                              left =
                              (callparan, resultdef = LongInt = "LongInt", pos = (317,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (317,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = I
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (317,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (317,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (317,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (317,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (319,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (319,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (loadn, resultdef = TGraphicsColor = "LongInt", pos = (319,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                              nil
                              symbol = DRAWCOLOR
                           )
                           (calln, resultdef = TGraphicsColor = "LongInt", pos = (319,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              proc = ColorToRGB(TGraphicsColor):LongInt;
                              left =
                              (callparan, resultdef = TGraphicsColor = "LongInt", pos = (319,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (319,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                    value = -2147483627
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (320,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (320,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (loadn, resultdef = Byte = "Byte", pos = (320,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                              nil
                              symbol = RED
                           )
                           (calln, resultdef = Byte = "Byte", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              proc = GetRValue(LongInt):Byte;
                              left =
                              (callparan, resultdef = LongInt = "LongInt", pos = (320,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (320,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = DRAWCOLOR
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (321,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (321,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (loadn, resultdef = Byte = "Byte", pos = (321,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                              nil
                              symbol = GREEN
                           )
                           (calln, resultdef = Byte = "Byte", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              proc = GetGValue(LongInt):Byte;
                              left =
                              (callparan, resultdef = LongInt = "LongInt", pos = (321,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (321,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = DRAWCOLOR
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (322,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (322,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (loadn, resultdef = Byte = "Byte", pos = (322,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                              nil
                              symbol = BLUE
                           )
                           (calln, resultdef = Byte = "Byte", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              proc = GetBValue(LongInt):Byte;
                              left =
                              (callparan, resultdef = LongInt = "LongInt", pos = (322,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (322,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = DRAWCOLOR
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (329,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (ifn, resultdef = $void = "untyped", pos = (323,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (vecn, resultdef = Boolean = "Boolean", pos = (323,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                              (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (323,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                 (loadn, resultdef = TPageControl = "TPageControl", pos = (323,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                              (typeconvn, resultdef = QWord = "QWord", pos = (323,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                 (loadn, resultdef = LongInt = "LongInt", pos = (323,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = I
                                 )
                              )
                           )
                           (blockn, resultdef = LongBool = "LongBool", pos = (324,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (statementn, resultdef = <nil>, pos = (325,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (assignn, resultdef = $void = "untyped", pos = (325,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                    (loadn, resultdef = QWord = "QWord", pos = (325,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                                       nil
                                       symbol = PEN
                                    )
                                    (calln, resultdef = QWord = "QWord", pos = (325,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                       proc = CreatePen(LongInt;LongInt;LongWord):QWord;
                                       left =
                                       (callparan, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                          (calln, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                             proc = RGB(LongInt;LongInt;LongInt):DWord;
                                             left =
                                             (callparan, resultdef = LongInt = "LongInt", pos = (325,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                                (typeconvn, resultdef = LongInt = "LongInt", pos = (325,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                   (loadn, resultdef = Byte = "Byte", pos = (325,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                      nil
                                                      symbol = BLUE
                                                   )
                                                )

                                             )
                                             (callparan, resultdef = LongInt = "LongInt", pos = (325,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                                (typeconvn, resultdef = LongInt = "LongInt", pos = (325,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                   (loadn, resultdef = Byte = "Byte", pos = (325,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                      nil
                                                      symbol = GREEN
                                                   )
                                                )

                                             )
                                             (callparan, resultdef = LongInt = "LongInt", pos = (325,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                                (typeconvn, resultdef = LongInt = "LongInt", pos = (325,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                   (loadn, resultdef = Byte = "Byte", pos = (325,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                      nil
                                                      symbol = RED
                                                   )
                                                )

                                             )
                                          )

                                       )
                                       (callparan, resultdef = LongInt = "LongInt", pos = (325,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (ordconstn, resultdef = LongInt = "LongInt", pos = (325,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                             value = 1
                                          )

                                       )
                                       (callparan, resultdef = LongInt = "LongInt", pos = (325,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (ordconstn, resultdef = LongInt = "LongInt", pos = (325,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                             value = 0
                                          )

                                       )
                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (326,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (assignn, resultdef = $void = "untyped", pos = (326,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                    (loadn, resultdef = QWord = "QWord", pos = (326,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                                       nil
                                       symbol = OLDPEN
                                    )
                                    (calln, resultdef = QWord = "QWord", pos = (326,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                       proc = SelectObject(QWord;QWord):QWord;
                                       left =
                                       (callparan, resultdef = QWord = "QWord", pos = (326,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                          (loadn, resultdef = QWord = "QWord", pos = (326,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = PEN
                                          )

                                       )
                                       (callparan, resultdef = QWord = "QWord", pos = (326,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                          (loadn, resultdef = QWord = "QWord", pos = (326,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = DC
                                          )

                                       )
                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (328,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (calln, resultdef = LongBool = "LongBool", pos = (327,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                    proc = Rectangle(QWord;LongInt;LongInt;LongInt;LongInt):LongBool;
                                    left =
                                    (callparan, resultdef = LongInt = "LongInt", pos = (328,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 8
                                       (typeconvn, resultdef = LongInt = "LongInt", pos = (328,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                                          (addn, resultdef = Int64 = "Int64", pos = (328,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                                             (addn, resultdef = Int64 = "Int64", pos = (328,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                                (addn, resultdef = Int64 = "Int64", pos = (328,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                                   (typeconvn, resultdef = Int64 = "Int64", pos = (328,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                      (subscriptn, resultdef = LongInt = "LongInt", pos = (328,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                                         (loadn, resultdef = TRect = "<record type>", pos = (328,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                            nil
                                                            symbol = R
                                                         )
                                                      )
                                                   )
                                                   (ordconstn, resultdef = Int64 = "Int64", pos = (328,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                      value = 10
                                                   )
                                                )
                                                (ordconstn, resultdef = Int64 = "Int64", pos = (328,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                   value = 5
                                                )
                                             )
                                             (ordconstn, resultdef = Int64 = "Int64", pos = (328,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                value = 4
                                             )
                                          )
                                       )

                                    )
                                    (callparan, resultdef = LongInt = "LongInt", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
                                       (typeconvn, resultdef = LongInt = "LongInt", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                          (addn, resultdef = Int64 = "Int64", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                             (addn, resultdef = Int64 = "Int64", pos = (328,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                                (typeconvn, resultdef = Int64 = "Int64", pos = (328,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                   (subscriptn, resultdef = LongInt = "LongInt", pos = (328,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                                      (loadn, resultdef = TRect = "<record type>", pos = (328,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                         nil
                                                         symbol = R
                                                      )
                                                   )
                                                )
                                                (ordconstn, resultdef = Int64 = "Int64", pos = (328,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                   value = -5
                                                )
                                             )
                                             (ordconstn, resultdef = Int64 = "Int64", pos = (328,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                value = 4
                                             )
                                          )
                                       )

                                    )
                                    (callparan, resultdef = LongInt = "LongInt", pos = (327,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
                                       (typeconvn, resultdef = LongInt = "LongInt", pos = (327,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                          (subn, resultdef = Int64 = "Int64", pos = (327,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                             (addn, resultdef = Int64 = "Int64", pos = (327,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                                (typeconvn, resultdef = Int64 = "Int64", pos = (327,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                   (subscriptn, resultdef = LongInt = "LongInt", pos = (327,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                                      (loadn, resultdef = TRect = "<record type>", pos = (327,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                         nil
                                                         symbol = R
                                                      )
                                                   )
                                                )
                                                (ordconstn, resultdef = Int64 = "Int64", pos = (327,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                   value = 5
                                                )
                                             )
                                             (ordconstn, resultdef = Int64 = "Int64", pos = (327,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                value = 3
                                             )
                                          )
                                       )

                                    )
                                    (callparan, resultdef = LongInt = "LongInt", pos = (327,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 8
                                       (typeconvn, resultdef = LongInt = "LongInt", pos = (327,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                                          (subn, resultdef = Int64 = "Int64", pos = (327,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                                             (addn, resultdef = Int64 = "Int64", pos = (327,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                                (subn, resultdef = Int64 = "Int64", pos = (327,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                                   (typeconvn, resultdef = Int64 = "Int64", pos = (327,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                      (subscriptn, resultdef = LongInt = "LongInt", pos = (327,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                                         (loadn, resultdef = TRect = "<record type>", pos = (327,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                            nil
                                                            symbol = R
                                                         )
                                                      )
                                                   )
                                                   (ordconstn, resultdef = Int64 = "Int64", pos = (327,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                      value = 10
                                                   )
                                                )
                                                (ordconstn, resultdef = Int64 = "Int64", pos = (327,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                   value = -5
                                                )
                                             )
                                             (ordconstn, resultdef = Int64 = "Int64", pos = (327,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                value = 3
                                             )
                                          )
                                       )

                                    )
                                    (callparan, resultdef = QWord = "QWord", pos = (327,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                       (loadn, resultdef = QWord = "QWord", pos = (327,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = DC
                                       )

                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (331,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (331,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (loadn, resultdef = QWord = "QWord", pos = (331,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                              nil
                              symbol = PEN
                           )
                           (calln, resultdef = QWord = "QWord", pos = (331,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              proc = CreatePen(LongInt;LongInt;LongWord):QWord;
                              left =
                              (callparan, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (calln, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                    proc = RGB(LongInt;LongInt;LongInt):DWord;
                                    left =
                                    (callparan, resultdef = LongInt = "LongInt", pos = (331,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                       (typeconvn, resultdef = LongInt = "LongInt", pos = (331,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                          (loadn, resultdef = Byte = "Byte", pos = (331,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = BLUE
                                          )
                                       )

                                    )
                                    (callparan, resultdef = LongInt = "LongInt", pos = (331,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                       (typeconvn, resultdef = LongInt = "LongInt", pos = (331,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                          (loadn, resultdef = Byte = "Byte", pos = (331,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = GREEN
                                          )
                                       )

                                    )
                                    (callparan, resultdef = LongInt = "LongInt", pos = (331,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                       (typeconvn, resultdef = LongInt = "LongInt", pos = (331,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                          (loadn, resultdef = Byte = "Byte", pos = (331,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = RED
                                          )
                                       )

                                    )
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (331,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (331,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                    value = 2
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (331,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (331,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                    value = 0
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (332,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (332,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (loadn, resultdef = QWord = "QWord", pos = (332,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                              nil
                              symbol = OLDPEN
                           )
                           (calln, resultdef = QWord = "QWord", pos = (332,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              proc = SelectObject(QWord;QWord):QWord;
                              left =
                              (callparan, resultdef = QWord = "QWord", pos = (332,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                 (loadn, resultdef = QWord = "QWord", pos = (332,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = PEN
                                 )

                              )
                              (callparan, resultdef = QWord = "QWord", pos = (332,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                 (loadn, resultdef = QWord = "QWord", pos = (332,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = DC
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (334,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = LongBool = "LongBool", pos = (334,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           proc = MoveToEx(QWord;LongInt;LongInt;PPoint):LongBool;
                           left =
                           (callparan, resultdef = PPoint = "^TPoint", pos = (334,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (niln, resultdef = PPoint = "^TPoint", pos = (334,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (334,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (334,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (334,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (334,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                       (subscriptn, resultdef = LongInt = "LongInt", pos = (334,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                          (loadn, resultdef = TRect = "<record type>", pos = (334,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = R
                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (334,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       value = 5
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (334,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (334,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (334,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                    (subn, resultdef = Int64 = "Int64", pos = (334,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (334,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (334,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                             (loadn, resultdef = TRect = "<record type>", pos = (334,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = R
                                             )
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (334,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          value = 10
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (334,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       value = -5
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = QWord = "QWord", pos = (334,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                              (loadn, resultdef = QWord = "QWord", pos = (334,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = DC
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (335,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = LongBool = "LongBool", pos = (335,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           proc = LineTo(QWord;LongInt;LongInt):LongBool;
                           left =
                           (callparan, resultdef = LongInt = "LongInt", pos = (335,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (335,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (335,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                    (addn, resultdef = Int64 = "Int64", pos = (335,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (335,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (335,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                             (loadn, resultdef = TRect = "<record type>", pos = (335,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = R
                                             )
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (335,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          value = 10
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (335,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       value = 5
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (335,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                       (subscriptn, resultdef = LongInt = "LongInt", pos = (335,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                          (loadn, resultdef = TRect = "<record type>", pos = (335,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = R
                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (335,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       value = -5
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = QWord = "QWord", pos = (335,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                              (loadn, resultdef = QWord = "QWord", pos = (335,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = DC
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (336,75), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = LongBool = "LongBool", pos = (336,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           proc = MoveToEx(QWord;LongInt;LongInt;PPoint):LongBool;
                           left =
                           (callparan, resultdef = PPoint = "^TPoint", pos = (336,73), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (niln, resultdef = PPoint = "^TPoint", pos = (336,73), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (336,69), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (336,69), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (336,69), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                    (addn, resultdef = Int64 = "Int64", pos = (336,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (336,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (336,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                             (loadn, resultdef = TRect = "<record type>", pos = (336,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = R
                                             )
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (336,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          value = 10
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (336,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       value = 5
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (336,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (336,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (336,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5
                                    (subn, resultdef = Int64 = "Int64", pos = (336,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (336,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (336,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                             (loadn, resultdef = TRect = "<record type>", pos = (336,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = R
                                             )
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (336,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          value = 10
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (336,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       value = -5
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = QWord = "QWord", pos = (336,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                              (loadn, resultdef = QWord = "QWord", pos = (336,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = DC
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (337,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = LongBool = "LongBool", pos = (337,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           proc = LineTo(QWord;LongInt;LongInt):LongBool;
                           left =
                           (callparan, resultdef = LongInt = "LongInt", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (337,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                       (subscriptn, resultdef = LongInt = "LongInt", pos = (337,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                          (loadn, resultdef = TRect = "<record type>", pos = (337,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = R
                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (337,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       value = 5
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = LongInt = "LongInt", pos = (337,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (337,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (337,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (337,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                       (subscriptn, resultdef = LongInt = "LongInt", pos = (337,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                          (loadn, resultdef = TRect = "<record type>", pos = (337,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = R
                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (337,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       value = -5
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = QWord = "QWord", pos = (337,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                              (loadn, resultdef = QWord = "QWord", pos = (337,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = DC
                              )

                           )
                        )

                     )
                  )
               )

            )
         )
         (blockn, resultdef = LongBool = "LongBool", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (345,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (345,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = Free(<TObject>);
                  methodpointer =
                  (loadn, resultdef = TBitmap = "TBitmap", pos = (345,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = BM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (345,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (345,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (346,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetEnabled(<TCustomTimer>;Boolean);
                  methodpointer =
                  (subscriptn, resultdef = TTimer = "TTimer", pos = (346,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = FORMMAIN
                     )
                  )
                  left =
                  (callparan, resultdef = Boolean = "Boolean", pos = (346,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = Boolean = "Boolean", pos = (346,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 1
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (346,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (346,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (347,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = QWord = "QWord", pos = (347,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = SelectObject(QWord;QWord):QWord;
                  left =
                  (callparan, resultdef = QWord = "QWord", pos = (347,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = QWord = "QWord", pos = (347,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = OLDPEN
                     )

                  )
                  (callparan, resultdef = QWord = "QWord", pos = (347,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = QWord = "QWord", pos = (347,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = DC
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (348,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = LongBool = "LongBool", pos = (348,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = DeleteObject(QWord):LongBool;
                  left =
                  (callparan, resultdef = QWord = "QWord", pos = (348,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = QWord = "QWord", pos = (348,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = PEN
                     )

                  )
               )

            )
         )
      )

   )
)

*******************************************************************************
after the firstpass
PaintWindow(QWord);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (307,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (307,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = PaintWindow(<TWinControl>;QWord);
         methodpointer =
         (typen, resultdef = TPageControl = "TPageControl", pos = (307,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         )
         left =
         (callparan, resultdef = QWord = "QWord", pos = (307,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = QWord = "QWord", pos = (307,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = DC
            )

         )
         (callparan, resultdef = <nil>, pos = (307,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TPageControl = "TPageControl", pos = (307,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (309,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (309,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = TBitmap = "TBitmap", pos = (309,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = BM
         )
         (calln, resultdef = TBitmap = "TBitmap", pos = (309,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
            proc = constructor Create(<TCustomBitmap>;<Class Of TCustomBitmap>);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (309,9), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
               (typen, resultdef = TBitmap = "TBitmap", pos = (309,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (309,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (pointerconstn, resultdef = Pointer = "^untyped", pos = (309,16), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = $0000000000000001
               )

            )
            (callparan, resultdef = <nil>, pos = (309,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (309,9), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TBitmap = "TBitmap", pos = (309,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (310,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (blockn, resultdef = $void = "untyped", pos = (344,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (311,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (311,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = SetSize(<TCustomBitmap>;LongInt;LongInt);
                  methodpointer =
                  (loadn, resultdef = TBitmap = "TBitmap", pos = (311,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (311,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TBitmap = "TBitmap", pos = (311,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = BM
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (311,22), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (311,22), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 16
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (311,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (311,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 16
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (312,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = GetBitmap(<TCustomImageList>;LongInt;TCustomBitmap);
                  methodpointer =
                  (subscriptn, resultdef = TCustomImageList = "TCustomImageList", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                     (loadn, resultdef = TPageControl = "TPageControl", pos = (312,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (312,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TCustomImageList = "TCustomImageList", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                        (loadn, resultdef = TPageControl = "TPageControl", pos = (312,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )

                  )
                  (callparan, resultdef = TCustomBitmap = "TCustomBitmap", pos = (312,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (typeconvn, resultdef = TCustomBitmap = "TCustomBitmap", pos = (312,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                        (loadn, resultdef = TBitmap = "TBitmap", pos = (312,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = BM
                        )
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (312,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (312,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (313,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (blockn, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (nothingn, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = <no type symbol> = "Array[0..0] Of Int64", tempinfo = $000000009081F400
                        [ti_addr_taken]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (vecn, resultdef = Int64 = "Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_callunique], cmplx = 1
                           (temprefn, resultdef = <no type symbol> = "Array[0..0] Of Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                              temptypedef = <no type symbol> = "Array[0..0] Of Int64", (tempinfo = $000000009081F400 flags = [ti_addr_taken])
                           )
                           (ordconstn, resultdef = <no type symbol> = "ShortInt", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )
                        (addn, resultdef = Int64 = "Int64", pos = (313,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Int64 = "Int64", pos = (313,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                              (calln, resultdef = LongInt = "LongInt", pos = (313,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetPageCount(<TCustomTabControl>):LongInt;
                                 methodpointer =
                                 (loadn, resultdef = TPageControl = "TPageControl", pos = (313,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (313,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TPageControl = "TPageControl", pos = (313,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )

                                 )
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (313,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 1
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = $fpc_dynarray_setlength(var Pointer;Pointer;Int64;pdynarrayindex);
                        left =
                        (callparan, resultdef = Pointer = "^untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                           (addrn, resultdef = Pointer = "^untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 255, addrnodeflags = []
                              (rttin, resultdef = Pointer = "^untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                              )
                           )

                        )
                        (callparan, resultdef = Pointer = "^untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (typeconvn, resultdef = Pointer = "^untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 3, convtype = tc_equal, convnodeflags = []
                              (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TPageControl = "TPageControl", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = pdynarrayindex = "^Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 3
                           (typeconvn, resultdef = pdynarrayindex = "^Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_equal, convnodeflags = []
                              (addrn, resultdef = Pointer = "^untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, addrnodeflags = []
                                 (vecn, resultdef = Int64 = "Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 1
                                    (temprefn, resultdef = <no type symbol> = "Array[0..0] Of Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       temptypedef = <no type symbol> = "Array[0..0] Of Int64", (tempinfo = $000000009081F400 flags = [ti_addr_taken])
                                    )
                                    (ordconstn, resultdef = <no type symbol> = "ShortInt", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 0
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = Int64 = "Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = Int64 = "Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 1
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = <no type symbol> = "Array[0..0] Of Int64", temptype = tt_persistent, tempinfo = $000000009081F400
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (343,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (blockn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (nothingn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F600
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                        (temprefn, resultdef = LongInt = "LongInt", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (315,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (subn, resultdef = Int64 = "Int64", pos = (315,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                              (typeconvn, resultdef = Int64 = "Int64", pos = (315,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                 (calln, resultdef = LongInt = "LongInt", pos = (315,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    proc = GetPageCount(<TCustomTabControl>):LongInt;
                                    methodpointer =
                                    (loadn, resultdef = TPageControl = "TPageControl", pos = (315,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (315,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                       (loadn, resultdef = TPageControl = "TPageControl", pos = (315,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )

                                    )
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (315,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = 1
                              )
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (ifn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (lten, resultdef = Boolean = "Boolean", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (315,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                           (temprefn, resultdef = LongInt = "LongInt", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                           )
                        )
                        (blockn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (nothingn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (315,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    nil
                                    symbol = I
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                    value = -1
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (whilerepeatn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (gten, resultdef = Boolean = "Boolean", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                    (loadn, resultdef = LongInt = "LongInt", pos = (315,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                       nil
                                       symbol = I
                                    )
                                    (temprefn, resultdef = LongInt = "LongInt", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                       temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                                    )
                                 )
                                 (blockn, resultdef = LongBool = "LongBool", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (nothingn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (assignn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                          (loadn, resultdef = LongInt = "LongInt", pos = (315,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = I
                                          )
                                          (inlinen, resultdef = LongInt = "LongInt", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                             (loadn, resultdef = LongInt = "LongInt", pos = (315,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                nil
                                                symbol = I
                                             )
                                          )
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (blockn, resultdef = LongBool = "LongBool", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (317,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                             (calln, resultdef = TRect = "<record type>", pos = (317,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
                                                proc = TabRect(<TCustomTabControl>;<var TRect>;LongInt):<record type>;
                                                methodpointer =
                                                (loadn, resultdef = TPageControl = "TPageControl", pos = (317,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = self
                                                )
                                                left =
                                                (callparan, resultdef = LongInt = "LongInt", pos = (317,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (317,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = I
                                                   )

                                                )
                                                (callparan, resultdef = <nil>, pos = (317,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                   (loadn, resultdef = TRect = "<record type>", pos = (317,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                      nil
                                                      symbol = R
                                                   )

                                                )
                                                (callparan, resultdef = <nil>, pos = (317,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                   (loadn, resultdef = TPageControl = "TPageControl", pos = (317,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = self
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (319,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (319,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (loadn, resultdef = TGraphicsColor = "LongInt", pos = (319,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   nil
                                                   symbol = DRAWCOLOR
                                                )
                                                (calln, resultdef = TGraphicsColor = "LongInt", pos = (319,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                   proc = ColorToRGB(TGraphicsColor):LongInt;
                                                   left =
                                                   (callparan, resultdef = TGraphicsColor = "LongInt", pos = (319,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                      (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (319,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                         value = -2147483627
                                                      )

                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (320,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (320,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 7
                                                (loadn, resultdef = Byte = "Byte", pos = (320,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   nil
                                                   symbol = RED
                                                )
                                                (blockn, resultdef = Byte = "Byte", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 5
                                                   (statementn, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                                                      (tempcreaten, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                         size = 1, temptypedef = Byte = "Byte", tempinfo = $000000009081F680
                                                         [ti_may_be_in_reg]
                                                         tempinit =
                                                         nil
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                                                      (assignn, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                         (typeconvn, resultdef = Byte = "Byte", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                            (temprefn, resultdef = Byte = "Byte", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                               temptypedef = Byte = "Byte", (tempinfo = $000000009081F680 flags = [ti_may_be_in_reg])
                                                            )
                                                         )
                                                         (typeconvn, resultdef = Byte = "Byte", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                            (loadn, resultdef = LongInt = "LongInt", pos = (320,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               nil
                                                               symbol = DRAWCOLOR
                                                            )
                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                      (tempdeleten, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                         release_to_normal: TRUE, temptypedef = Byte = "Byte", temptype = tt_persistent, tempinfo = $000000009081F680
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                      (temprefn, resultdef = Byte = "Byte", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                         temptypedef = Byte = "Byte", (tempinfo = $000000009081F680 flags = [ti_may_be_in_reg])
                                                      )

                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (321,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (321,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 10
                                                (loadn, resultdef = Byte = "Byte", pos = (321,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   nil
                                                   symbol = GREEN
                                                )
                                                (blockn, resultdef = Byte = "Byte", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 8
                                                   (statementn, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 8
                                                      (tempcreaten, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                         size = 1, temptypedef = Byte = "Byte", tempinfo = $000000009081F700
                                                         [ti_may_be_in_reg]
                                                         tempinit =
                                                         nil
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 8
                                                      (assignn, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 7
                                                         (typeconvn, resultdef = Byte = "Byte", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                            (temprefn, resultdef = Byte = "Byte", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                               temptypedef = Byte = "Byte", (tempinfo = $000000009081F700 flags = [ti_may_be_in_reg])
                                                            )
                                                         )
                                                         (typeconvn, resultdef = Byte = "Byte", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done,nf_explicit], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                                            (shrn, resultdef = LongWord = "DWord", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done], cmplx = 4
                                                               (typeconvn, resultdef = LongWord = "DWord", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                  (typeconvn, resultdef = Word = "Word", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                     (loadn, resultdef = LongInt = "LongInt", pos = (321,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = DRAWCOLOR
                                                                     )
                                                                  )
                                                               )
                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                  value = 8
                                                               )
                                                            )
                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                      (tempdeleten, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                         release_to_normal: TRUE, temptypedef = Byte = "Byte", temptype = tt_persistent, tempinfo = $000000009081F700
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                      (temprefn, resultdef = Byte = "Byte", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                         temptypedef = Byte = "Byte", (tempinfo = $000000009081F700 flags = [ti_may_be_in_reg])
                                                      )

                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (322,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (322,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 8
                                                (loadn, resultdef = Byte = "Byte", pos = (322,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   nil
                                                   symbol = BLUE
                                                )
                                                (blockn, resultdef = Byte = "Byte", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 6
                                                   (statementn, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                                                      (tempcreaten, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                         size = 1, temptypedef = Byte = "Byte", tempinfo = $000000009081F780
                                                         [ti_may_be_in_reg]
                                                         tempinit =
                                                         nil
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                                                      (assignn, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 5
                                                         (typeconvn, resultdef = Byte = "Byte", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                            (temprefn, resultdef = Byte = "Byte", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                               temptypedef = Byte = "Byte", (tempinfo = $000000009081F780 flags = [ti_may_be_in_reg])
                                                            )
                                                         )
                                                         (typeconvn, resultdef = Byte = "Byte", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done,nf_explicit], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                            (shrn, resultdef = LongInt = "LongInt", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done], cmplx = 2
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (322,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = DRAWCOLOR
                                                               )
                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                  value = 16
                                                               )
                                                            )
                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                      (tempdeleten, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                         release_to_normal: TRUE, temptypedef = Byte = "Byte", temptype = tt_persistent, tempinfo = $000000009081F780
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                      (temprefn, resultdef = Byte = "Byte", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                         temptypedef = Byte = "Byte", (tempinfo = $000000009081F780 flags = [ti_may_be_in_reg])
                                                      )

                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (329,14), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (ifn, resultdef = $void = "untyped", pos = (323,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (vecn, resultdef = Boolean = "Boolean", pos = (323,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 5
                                                   (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (323,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                      (loadn, resultdef = TPageControl = "TPageControl", pos = (323,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = self
                                                      )
                                                   )
                                                   (typeconvn, resultdef = QWord = "QWord", pos = (323,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                      (loadn, resultdef = LongInt = "LongInt", pos = (323,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = I
                                                      )
                                                   )
                                                )
                                                (blockn, resultdef = LongBool = "LongBool", pos = (324,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                   (statementn, resultdef = <nil>, pos = (325,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (assignn, resultdef = $void = "untyped", pos = (325,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (loadn, resultdef = QWord = "QWord", pos = (325,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                            nil
                                                            symbol = PEN
                                                         )
                                                         (calln, resultdef = QWord = "QWord", pos = (325,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                            proc = CreatePen(LongInt;LongInt;LongWord):QWord;
                                                            left =
                                                            (callparan, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 23
                                                               (blockn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 22
                                                                  (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 22
                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                        size = 4, temptypedef = LongWord = "DWord", tempinfo = $000000009081F800
                                                                        [ti_may_be_in_reg]
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 22
                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F880
                                                                        []
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 22
                                                                     (assignn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                                        (temprefn, resultdef = LongInt = "LongInt", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                           temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F880 flags = [])
                                                                        )
                                                                        (typeconvn, resultdef = LongInt = "LongInt", pos = (325,62), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                           (loadn, resultdef = Byte = "Byte", pos = (325,62), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = BLUE
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 18
                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F900
                                                                        []
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 18
                                                                     (assignn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                                        (temprefn, resultdef = LongInt = "LongInt", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                           temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F900 flags = [])
                                                                        )
                                                                        (typeconvn, resultdef = LongInt = "LongInt", pos = (325,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                           (loadn, resultdef = Byte = "Byte", pos = (325,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = GREEN
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 14
                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F980
                                                                        []
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 14
                                                                     (assignn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                                        (temprefn, resultdef = LongInt = "LongInt", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                           temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F980 flags = [])
                                                                        )
                                                                        (typeconvn, resultdef = LongInt = "LongInt", pos = (325,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                           (loadn, resultdef = Byte = "Byte", pos = (325,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = RED
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 10
                                                                     (assignn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 9
                                                                        (typeconvn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                           (temprefn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                              temptypedef = LongWord = "DWord", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                                           )
                                                                        )
                                                                        (orn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7
                                                                           (orn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                              (typeconvn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (typeconvn, resultdef = Byte = "Byte", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                    (temprefn, resultdef = LongInt = "LongInt", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F980 flags = [])
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (shln, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done], cmplx = 2
                                                                                 (typeconvn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                    (typeconvn, resultdef = Word = "Word", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                       (temprefn, resultdef = LongInt = "LongInt", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                          temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F900 flags = [])
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (ordconstn, resultdef = Int64 = "Int64", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                    value = 8
                                                                                 )
                                                                              )
                                                                           )
                                                                           (shln, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done], cmplx = 2
                                                                              (typeconvn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (typeconvn, resultdef = Byte = "Byte", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                    (temprefn, resultdef = LongInt = "LongInt", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F880 flags = [])
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (ordconstn, resultdef = Int64 = "Int64", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                 value = 16
                                                                              )
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                     (blockn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                           (tempdeleten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F880
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                           (tempdeleten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F900
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                           (tempdeleten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F980
                                                                           )

                                                                        )
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                     (tempdeleten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        release_to_normal: TRUE, temptypedef = LongWord = "DWord", temptype = tt_persistent, tempinfo = $000000009081F800
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                     (temprefn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                        temptypedef = LongWord = "DWord", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                                     )

                                                                  )
                                                               )

                                                            )
                                                            (callparan, resultdef = LongInt = "LongInt", pos = (325,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                               (ordconstn, resultdef = LongInt = "LongInt", pos = (325,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                  value = 1
                                                               )

                                                            )
                                                            (callparan, resultdef = LongInt = "LongInt", pos = (325,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                               (ordconstn, resultdef = LongInt = "LongInt", pos = (325,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                  value = 0
                                                               )

                                                            )
                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = <nil>, pos = (326,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (assignn, resultdef = $void = "untyped", pos = (326,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (loadn, resultdef = QWord = "QWord", pos = (326,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                            nil
                                                            symbol = OLDPEN
                                                         )
                                                         (calln, resultdef = QWord = "QWord", pos = (326,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                            proc = SelectObject(QWord;QWord):QWord;
                                                            left =
                                                            (callparan, resultdef = QWord = "QWord", pos = (326,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                               (loadn, resultdef = QWord = "QWord", pos = (326,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = PEN
                                                               )

                                                            )
                                                            (callparan, resultdef = QWord = "QWord", pos = (326,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                               (loadn, resultdef = QWord = "QWord", pos = (326,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = DC
                                                               )

                                                            )
                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = <nil>, pos = (328,52), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (calln, resultdef = LongBool = "LongBool", pos = (327,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         proc = Rectangle(QWord;LongInt;LongInt;LongInt;LongInt):LongBool;
                                                         left =
                                                         (callparan, resultdef = LongInt = "LongInt", pos = (328,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 8
                                                            (typeconvn, resultdef = LongInt = "LongInt", pos = (328,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                                                               (addn, resultdef = Int64 = "Int64", pos = (328,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6
                                                                  (addn, resultdef = Int64 = "Int64", pos = (328,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                                     (addn, resultdef = Int64 = "Int64", pos = (328,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                        (typeconvn, resultdef = Int64 = "Int64", pos = (328,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                           (subscriptn, resultdef = LongInt = "LongInt", pos = (328,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                              (loadn, resultdef = TRect = "<record type>", pos = (328,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = R
                                                                              )
                                                                           )
                                                                        )
                                                                        (ordconstn, resultdef = Int64 = "Int64", pos = (328,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                           value = 10
                                                                        )
                                                                     )
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (328,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = 5
                                                                     )
                                                                  )
                                                                  (ordconstn, resultdef = Int64 = "Int64", pos = (328,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                     value = 4
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = LongInt = "LongInt", pos = (327,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 8
                                                            (typeconvn, resultdef = LongInt = "LongInt", pos = (327,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                                                               (subn, resultdef = Int64 = "Int64", pos = (327,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6
                                                                  (addn, resultdef = Int64 = "Int64", pos = (327,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                                     (subn, resultdef = Int64 = "Int64", pos = (327,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                        (typeconvn, resultdef = Int64 = "Int64", pos = (327,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                           (subscriptn, resultdef = LongInt = "LongInt", pos = (327,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                              (loadn, resultdef = TRect = "<record type>", pos = (327,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = R
                                                                              )
                                                                           )
                                                                        )
                                                                        (ordconstn, resultdef = Int64 = "Int64", pos = (327,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                           value = 10
                                                                        )
                                                                     )
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (327,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = -5
                                                                     )
                                                                  )
                                                                  (ordconstn, resultdef = Int64 = "Int64", pos = (327,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                     value = 3
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = LongInt = "LongInt", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                                            (typeconvn, resultdef = LongInt = "LongInt", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                                               (addn, resultdef = Int64 = "Int64", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                                  (addn, resultdef = Int64 = "Int64", pos = (328,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                     (typeconvn, resultdef = Int64 = "Int64", pos = (328,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                        (subscriptn, resultdef = LongInt = "LongInt", pos = (328,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                           (loadn, resultdef = TRect = "<record type>", pos = (328,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = R
                                                                           )
                                                                        )
                                                                     )
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (328,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = -5
                                                                     )
                                                                  )
                                                                  (ordconstn, resultdef = Int64 = "Int64", pos = (328,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                     value = 4
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = LongInt = "LongInt", pos = (327,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                                            (typeconvn, resultdef = LongInt = "LongInt", pos = (327,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                                               (subn, resultdef = Int64 = "Int64", pos = (327,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                                  (addn, resultdef = Int64 = "Int64", pos = (327,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                     (typeconvn, resultdef = Int64 = "Int64", pos = (327,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                        (subscriptn, resultdef = LongInt = "LongInt", pos = (327,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                           (loadn, resultdef = TRect = "<record type>", pos = (327,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = R
                                                                           )
                                                                        )
                                                                     )
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (327,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = 5
                                                                     )
                                                                  )
                                                                  (ordconstn, resultdef = Int64 = "Int64", pos = (327,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                     value = 3
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = QWord = "QWord", pos = (327,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                            (loadn, resultdef = QWord = "QWord", pos = (327,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               nil
                                                               symbol = DC
                                                            )

                                                         )
                                                      )

                                                   )
                                                )
                                                nil
                                                nil
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (331,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (331,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (loadn, resultdef = QWord = "QWord", pos = (331,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   nil
                                                   symbol = PEN
                                                )
                                                (calln, resultdef = QWord = "QWord", pos = (331,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                   proc = CreatePen(LongInt;LongInt;LongWord):QWord;
                                                   left =
                                                   (callparan, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 23
                                                      (blockn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 22
                                                         (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 22
                                                            (tempcreaten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                               size = 4, temptypedef = LongWord = "DWord", tempinfo = $000000009081FA00
                                                               [ti_may_be_in_reg]
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 22
                                                            (tempcreaten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                               size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081FA80
                                                               []
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 22
                                                            (assignn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                               (temprefn, resultdef = LongInt = "LongInt", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                  temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FA80 flags = [])
                                                               )
                                                               (typeconvn, resultdef = LongInt = "LongInt", pos = (331,62), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                  (loadn, resultdef = Byte = "Byte", pos = (331,62), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = BLUE
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 18
                                                            (tempcreaten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                               size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081FB00
                                                               []
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 18
                                                            (assignn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                               (temprefn, resultdef = LongInt = "LongInt", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                  temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FB00 flags = [])
                                                               )
                                                               (typeconvn, resultdef = LongInt = "LongInt", pos = (331,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                  (loadn, resultdef = Byte = "Byte", pos = (331,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = GREEN
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 14
                                                            (tempcreaten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                               size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081FB80
                                                               []
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 14
                                                            (assignn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                               (temprefn, resultdef = LongInt = "LongInt", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                  temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FB80 flags = [])
                                                               )
                                                               (typeconvn, resultdef = LongInt = "LongInt", pos = (331,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                  (loadn, resultdef = Byte = "Byte", pos = (331,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = RED
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 10
                                                            (assignn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 9
                                                               (typeconvn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                  (temprefn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                     temptypedef = LongWord = "DWord", (tempinfo = $000000009081FA00 flags = [ti_may_be_in_reg])
                                                                  )
                                                               )
                                                               (orn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7
                                                                  (orn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                     (typeconvn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                        (typeconvn, resultdef = Byte = "Byte", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FB80 flags = [])
                                                                           )
                                                                        )
                                                                     )
                                                                     (shln, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done], cmplx = 2
                                                                        (typeconvn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                           (typeconvn, resultdef = Word = "Word", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                              (temprefn, resultdef = LongInt = "LongInt", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FB00 flags = [])
                                                                              )
                                                                           )
                                                                        )
                                                                        (ordconstn, resultdef = Int64 = "Int64", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                           value = 8
                                                                        )
                                                                     )
                                                                  )
                                                                  (shln, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done], cmplx = 2
                                                                     (typeconvn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                        (typeconvn, resultdef = Byte = "Byte", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FA80 flags = [])
                                                                           )
                                                                        )
                                                                     )
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = 16
                                                                     )
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                            (blockn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                  (tempdeleten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081FA80
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                  (tempdeleten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081FB00
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                  (tempdeleten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081FB80
                                                                  )

                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                            (tempdeleten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                               release_to_normal: TRUE, temptypedef = LongWord = "DWord", temptype = tt_persistent, tempinfo = $000000009081FA00
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            (temprefn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                               temptypedef = LongWord = "DWord", (tempinfo = $000000009081FA00 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (callparan, resultdef = LongInt = "LongInt", pos = (331,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                      (ordconstn, resultdef = LongInt = "LongInt", pos = (331,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                         value = 2
                                                      )

                                                   )
                                                   (callparan, resultdef = LongInt = "LongInt", pos = (331,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                      (ordconstn, resultdef = LongInt = "LongInt", pos = (331,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                         value = 0
                                                      )

                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (332,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (332,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (loadn, resultdef = QWord = "QWord", pos = (332,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   nil
                                                   symbol = OLDPEN
                                                )
                                                (calln, resultdef = QWord = "QWord", pos = (332,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                   proc = SelectObject(QWord;QWord):QWord;
                                                   left =
                                                   (callparan, resultdef = QWord = "QWord", pos = (332,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                      (loadn, resultdef = QWord = "QWord", pos = (332,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = PEN
                                                      )

                                                   )
                                                   (callparan, resultdef = QWord = "QWord", pos = (332,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                      (loadn, resultdef = QWord = "QWord", pos = (332,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = DC
                                                      )

                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (334,65), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (calln, resultdef = LongBool = "LongBool", pos = (334,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                proc = MoveToEx(QWord;LongInt;LongInt;PPoint):LongBool;
                                                left =
                                                (callparan, resultdef = LongInt = "LongInt", pos = (334,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                                   (typeconvn, resultdef = LongInt = "LongInt", pos = (334,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                                      (addn, resultdef = Int64 = "Int64", pos = (334,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                         (subn, resultdef = Int64 = "Int64", pos = (334,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                            (typeconvn, resultdef = Int64 = "Int64", pos = (334,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                               (subscriptn, resultdef = LongInt = "LongInt", pos = (334,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                  (loadn, resultdef = TRect = "<record type>", pos = (334,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = R
                                                                  )
                                                               )
                                                            )
                                                            (ordconstn, resultdef = Int64 = "Int64", pos = (334,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                               value = 10
                                                            )
                                                         )
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (334,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                            value = -5
                                                         )
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = LongInt = "LongInt", pos = (334,59), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 6
                                                   (typeconvn, resultdef = LongInt = "LongInt", pos = (334,59), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                                      (addn, resultdef = Int64 = "Int64", pos = (334,59), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                         (typeconvn, resultdef = Int64 = "Int64", pos = (334,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                            (subscriptn, resultdef = LongInt = "LongInt", pos = (334,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                               (loadn, resultdef = TRect = "<record type>", pos = (334,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = R
                                                               )
                                                            )
                                                         )
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (334,54), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                            value = 5
                                                         )
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = QWord = "QWord", pos = (334,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                   (loadn, resultdef = QWord = "QWord", pos = (334,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = DC
                                                   )

                                                )
                                                (callparan, resultdef = PPoint = "^TPoint", pos = (334,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                   (niln, resultdef = PPoint = "^TPoint", pos = (334,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (335,58), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (calln, resultdef = LongBool = "LongBool", pos = (335,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                proc = LineTo(QWord;LongInt;LongInt):LongBool;
                                                left =
                                                (callparan, resultdef = LongInt = "LongInt", pos = (335,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                                   (typeconvn, resultdef = LongInt = "LongInt", pos = (335,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                                      (addn, resultdef = Int64 = "Int64", pos = (335,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                         (addn, resultdef = Int64 = "Int64", pos = (335,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                            (typeconvn, resultdef = Int64 = "Int64", pos = (335,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                               (subscriptn, resultdef = LongInt = "LongInt", pos = (335,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                  (loadn, resultdef = TRect = "<record type>", pos = (335,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = R
                                                                  )
                                                               )
                                                            )
                                                            (ordconstn, resultdef = Int64 = "Int64", pos = (335,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                               value = 10
                                                            )
                                                         )
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (335,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                            value = 5
                                                         )
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = LongInt = "LongInt", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 6
                                                   (typeconvn, resultdef = LongInt = "LongInt", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                                      (addn, resultdef = Int64 = "Int64", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                         (typeconvn, resultdef = Int64 = "Int64", pos = (335,22), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                            (subscriptn, resultdef = LongInt = "LongInt", pos = (335,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                               (loadn, resultdef = TRect = "<record type>", pos = (335,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = R
                                                               )
                                                            )
                                                         )
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (335,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                            value = -5
                                                         )
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = QWord = "QWord", pos = (335,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                   (loadn, resultdef = QWord = "QWord", pos = (335,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = DC
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (336,75), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (calln, resultdef = LongBool = "LongBool", pos = (336,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                proc = MoveToEx(QWord;LongInt;LongInt;PPoint):LongBool;
                                                left =
                                                (callparan, resultdef = LongInt = "LongInt", pos = (336,69), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                                   (typeconvn, resultdef = LongInt = "LongInt", pos = (336,69), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                                      (addn, resultdef = Int64 = "Int64", pos = (336,69), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                         (addn, resultdef = Int64 = "Int64", pos = (336,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                            (typeconvn, resultdef = Int64 = "Int64", pos = (336,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                               (subscriptn, resultdef = LongInt = "LongInt", pos = (336,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                  (loadn, resultdef = TRect = "<record type>", pos = (336,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = R
                                                                  )
                                                               )
                                                            )
                                                            (ordconstn, resultdef = Int64 = "Int64", pos = (336,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                               value = 10
                                                            )
                                                         )
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (336,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                            value = 5
                                                         )
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = LongInt = "LongInt", pos = (336,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                                   (typeconvn, resultdef = LongInt = "LongInt", pos = (336,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                                      (addn, resultdef = Int64 = "Int64", pos = (336,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                         (subn, resultdef = Int64 = "Int64", pos = (336,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                            (typeconvn, resultdef = Int64 = "Int64", pos = (336,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                               (subscriptn, resultdef = LongInt = "LongInt", pos = (336,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                  (loadn, resultdef = TRect = "<record type>", pos = (336,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = R
                                                                  )
                                                               )
                                                            )
                                                            (ordconstn, resultdef = Int64 = "Int64", pos = (336,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                               value = 10
                                                            )
                                                         )
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (336,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                            value = -5
                                                         )
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = QWord = "QWord", pos = (336,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                   (loadn, resultdef = QWord = "QWord", pos = (336,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = DC
                                                   )

                                                )
                                                (callparan, resultdef = PPoint = "^TPoint", pos = (336,73), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                   (niln, resultdef = PPoint = "^TPoint", pos = (336,73), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (337,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (calln, resultdef = LongBool = "LongBool", pos = (337,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                proc = LineTo(QWord;LongInt;LongInt):LongBool;
                                                left =
                                                (callparan, resultdef = LongInt = "LongInt", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 6
                                                   (typeconvn, resultdef = LongInt = "LongInt", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                                      (addn, resultdef = Int64 = "Int64", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                         (typeconvn, resultdef = Int64 = "Int64", pos = (337,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                            (subscriptn, resultdef = LongInt = "LongInt", pos = (337,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                               (loadn, resultdef = TRect = "<record type>", pos = (337,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = R
                                                               )
                                                            )
                                                         )
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (337,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                            value = 5
                                                         )
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = LongInt = "LongInt", pos = (337,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 6
                                                   (typeconvn, resultdef = LongInt = "LongInt", pos = (337,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                                      (addn, resultdef = Int64 = "Int64", pos = (337,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                         (typeconvn, resultdef = Int64 = "Int64", pos = (337,22), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                            (subscriptn, resultdef = LongInt = "LongInt", pos = (337,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                               (loadn, resultdef = TRect = "<record type>", pos = (337,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = R
                                                               )
                                                            )
                                                         )
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (337,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                            value = -5
                                                         )
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = QWord = "QWord", pos = (337,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                   (loadn, resultdef = QWord = "QWord", pos = (337,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = DC
                                                   )

                                                )
                                             )

                                          )
                                       )

                                    )
                                 )
                                 nil
                                 nil
                              )

                           )
                        )
                        nil
                        nil
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F600
                     )

                  )
               )

            )
         )
         (calln, resultdef = $void = "untyped", pos = (310,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            proc = $fin$000001B9(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (310,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (310,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  nil
               )

            )
         )
      )

   )
)

*******************************************************************************
right before code generation
PaintWindow(QWord);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (306,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (307,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (307,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = PaintWindow(<TWinControl>;QWord);
               methodpointer =
               (typen, resultdef = TPageControl = "TPageControl", pos = (307,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
               left =
               (callparan, resultdef = QWord = "QWord", pos = (307,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = QWord = "QWord", pos = (307,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = DC
                  )

               )
               (callparan, resultdef = <nil>, pos = (307,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TPageControl = "TPageControl", pos = (307,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (309,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (309,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = TBitmap = "TBitmap", pos = (309,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = BM
               )
               (calln, resultdef = TBitmap = "TBitmap", pos = (309,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                  proc = constructor Create(<TCustomBitmap>;<Class Of TCustomBitmap>);
                  methodpointer =
                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (309,9), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                     (typen, resultdef = TBitmap = "TBitmap", pos = (309,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     )
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (309,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (pointerconstn, resultdef = Pointer = "^untyped", pos = (309,16), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = $0000000000000001
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (309,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (309,9), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TBitmap = "TBitmap", pos = (309,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )

                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (tryfinallyn, resultdef = $void = "untyped", pos = (310,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (blockn, resultdef = $void = "untyped", pos = (344,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (311,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (311,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = SetSize(<TCustomBitmap>;LongInt;LongInt);
                        methodpointer =
                        (loadn, resultdef = TBitmap = "TBitmap", pos = (311,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = BM
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (311,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TBitmap = "TBitmap", pos = (311,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = BM
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (311,22), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (311,22), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 16
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (311,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (311,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 16
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (312,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = GetBitmap(<TCustomImageList>;LongInt;TCustomBitmap);
                        methodpointer =
                        (subscriptn, resultdef = TCustomImageList = "TCustomImageList", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                           (loadn, resultdef = TPageControl = "TPageControl", pos = (312,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (312,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TCustomImageList = "TCustomImageList", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                              (loadn, resultdef = TPageControl = "TPageControl", pos = (312,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TCustomBitmap = "TCustomBitmap", pos = (312,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (typeconvn, resultdef = TCustomBitmap = "TCustomBitmap", pos = (312,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                              (loadn, resultdef = TBitmap = "TBitmap", pos = (312,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = BM
                              )
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (312,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (312,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (313,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (blockn, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (statementn, resultdef = <nil>, pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (nothingn, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (tempcreaten, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              size = 8, temptypedef = <no type symbol> = "Array[0..0] Of Int64", tempinfo = $000000009081F400
                              [ti_addr_taken]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (assignn, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (vecn, resultdef = Int64 = "Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_callunique], cmplx = 1
                                 (temprefn, resultdef = <no type symbol> = "Array[0..0] Of Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    temptypedef = <no type symbol> = "Array[0..0] Of Int64", (tempinfo = $000000009081F400 flags = [ti_addr_taken])
                                 )
                                 (ordconstn, resultdef = <no type symbol> = "ShortInt", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                              )
                              (addn, resultdef = Int64 = "Int64", pos = (313,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (313,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                    (calln, resultdef = LongInt = "LongInt", pos = (313,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetPageCount(<TCustomTabControl>):LongInt;
                                       methodpointer =
                                       (loadn, resultdef = TPageControl = "TPageControl", pos = (313,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (313,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                          (loadn, resultdef = TPageControl = "TPageControl", pos = (313,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )

                                       )
                                    )
                                 )
                                 (ordconstn, resultdef = Int64 = "Int64", pos = (313,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 1
                                 )
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (calln, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              proc = $fpc_dynarray_setlength(var Pointer;Pointer;Int64;pdynarrayindex);
                              left =
                              (callparan, resultdef = Pointer = "^untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                 (addrn, resultdef = Pointer = "^untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 255, addrnodeflags = []
                                    (rttin, resultdef = Pointer = "^untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                                    )
                                 )

                              )
                              (callparan, resultdef = Pointer = "^untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                 (typeconvn, resultdef = Pointer = "^untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 3, convtype = tc_equal, convnodeflags = []
                                    (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TPageControl = "TPageControl", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )
                                 )

                              )
                              (callparan, resultdef = pdynarrayindex = "^Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 3
                                 (typeconvn, resultdef = pdynarrayindex = "^Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_equal, convnodeflags = []
                                    (addrn, resultdef = Pointer = "^untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, addrnodeflags = []
                                       (vecn, resultdef = Int64 = "Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken], cmplx = 1
                                          (temprefn, resultdef = <no type symbol> = "Array[0..0] Of Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             temptypedef = <no type symbol> = "Array[0..0] Of Int64", (tempinfo = $000000009081F400 flags = [ti_addr_taken])
                                          )
                                          (ordconstn, resultdef = <no type symbol> = "ShortInt", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                             value = 0
                                          )
                                       )
                                    )
                                 )

                              )
                              (callparan, resultdef = Int64 = "Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                 (ordconstn, resultdef = Int64 = "Int64", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 1
                                 )

                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           (tempdeleten, resultdef = $void = "untyped", pos = (313,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              release_to_normal: FALSE, temptypedef = <no type symbol> = "Array[0..0] Of Int64", temptype = tt_persistent, tempinfo = $000000009081F400
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (343,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (blockn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (nothingn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (tempcreaten, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F600
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (assignn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                              (temprefn, resultdef = LongInt = "LongInt", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                 temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                              )
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (315,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (315,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (315,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                       (calln, resultdef = LongInt = "LongInt", pos = (315,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetPageCount(<TCustomTabControl>):LongInt;
                                          methodpointer =
                                          (loadn, resultdef = TPageControl = "TPageControl", pos = (315,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (315,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                             (loadn, resultdef = TPageControl = "TPageControl", pos = (315,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = self
                                             )

                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (315,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 1
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (ifn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (lten, resultdef = Boolean = "Boolean", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (315,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                                 (temprefn, resultdef = LongInt = "LongInt", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                                 )
                              )
                              (blockn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (nothingn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (assignn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                       (loadn, resultdef = LongInt = "LongInt", pos = (315,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                          nil
                                          symbol = I
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                          value = -1
                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (whilerepeatn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (gten, resultdef = Boolean = "Boolean", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                          (loadn, resultdef = LongInt = "LongInt", pos = (315,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = I
                                          )
                                          (temprefn, resultdef = LongInt = "LongInt", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                             temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                                          )
                                       )
                                       (blockn, resultdef = LongBool = "LongBool", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (nothingn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                                (loadn, resultdef = LongInt = "LongInt", pos = (315,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   nil
                                                   symbol = I
                                                )
                                                (inlinen, resultdef = LongInt = "LongInt", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (315,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                      nil
                                                      symbol = I
                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (blockn, resultdef = LongBool = "LongBool", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (statementn, resultdef = <nil>, pos = (317,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                   (calln, resultdef = TRect = "<record type>", pos = (317,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
                                                      proc = TabRect(<TCustomTabControl>;<var TRect>;LongInt):<record type>;
                                                      methodpointer =
                                                      (loadn, resultdef = TPageControl = "TPageControl", pos = (317,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = self
                                                      )
                                                      left =
                                                      (callparan, resultdef = LongInt = "LongInt", pos = (317,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                         (loadn, resultdef = LongInt = "LongInt", pos = (317,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = I
                                                         )

                                                      )
                                                      (callparan, resultdef = <nil>, pos = (317,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                         (loadn, resultdef = TRect = "<record type>", pos = (317,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                            nil
                                                            symbol = R
                                                         )

                                                      )
                                                      (callparan, resultdef = <nil>, pos = (317,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                         (loadn, resultdef = TPageControl = "TPageControl", pos = (317,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = self
                                                         )

                                                      )
                                                   )

                                                )
                                                (statementn, resultdef = <nil>, pos = (319,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (assignn, resultdef = $void = "untyped", pos = (319,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (loadn, resultdef = TGraphicsColor = "LongInt", pos = (319,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                         nil
                                                         symbol = DRAWCOLOR
                                                      )
                                                      (calln, resultdef = TGraphicsColor = "LongInt", pos = (319,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                         proc = ColorToRGB(TGraphicsColor):LongInt;
                                                         left =
                                                         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (319,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                            (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (319,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                               value = -2147483627
                                                            )

                                                         )
                                                      )
                                                   )

                                                )
                                                (statementn, resultdef = <nil>, pos = (320,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (assignn, resultdef = $void = "untyped", pos = (320,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 7
                                                      (loadn, resultdef = Byte = "Byte", pos = (320,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                         nil
                                                         symbol = RED
                                                      )
                                                      (blockn, resultdef = Byte = "Byte", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 5
                                                         (statementn, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                                                            (tempcreaten, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                               size = 1, temptypedef = Byte = "Byte", tempinfo = $000000009081F680
                                                               [ti_may_be_in_reg]
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                                                            (assignn, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                               (typeconvn, resultdef = Byte = "Byte", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                  (temprefn, resultdef = Byte = "Byte", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                     temptypedef = Byte = "Byte", (tempinfo = $000000009081F680 flags = [ti_may_be_in_reg])
                                                                  )
                                                               )
                                                               (typeconvn, resultdef = Byte = "Byte", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                  (loadn, resultdef = LongInt = "LongInt", pos = (320,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = DRAWCOLOR
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                            (tempdeleten, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                               release_to_normal: TRUE, temptypedef = Byte = "Byte", temptype = tt_persistent, tempinfo = $000000009081F680
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            (temprefn, resultdef = Byte = "Byte", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                               temptypedef = Byte = "Byte", (tempinfo = $000000009081F680 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )
                                                   )

                                                )
                                                (statementn, resultdef = <nil>, pos = (321,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (assignn, resultdef = $void = "untyped", pos = (321,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 10
                                                      (loadn, resultdef = Byte = "Byte", pos = (321,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                         nil
                                                         symbol = GREEN
                                                      )
                                                      (blockn, resultdef = Byte = "Byte", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 8
                                                         (statementn, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 8
                                                            (tempcreaten, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                               size = 1, temptypedef = Byte = "Byte", tempinfo = $000000009081F700
                                                               [ti_may_be_in_reg]
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 8
                                                            (assignn, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 7
                                                               (typeconvn, resultdef = Byte = "Byte", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                  (temprefn, resultdef = Byte = "Byte", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                     temptypedef = Byte = "Byte", (tempinfo = $000000009081F700 flags = [ti_may_be_in_reg])
                                                                  )
                                                               )
                                                               (typeconvn, resultdef = Byte = "Byte", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done,nf_explicit], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                                                  (shrn, resultdef = LongWord = "DWord", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done], cmplx = 4
                                                                     (typeconvn, resultdef = LongWord = "DWord", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                        (typeconvn, resultdef = Word = "Word", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (321,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = DRAWCOLOR
                                                                           )
                                                                        )
                                                                     )
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = 8
                                                                     )
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                            (tempdeleten, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                               release_to_normal: TRUE, temptypedef = Byte = "Byte", temptype = tt_persistent, tempinfo = $000000009081F700
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            (temprefn, resultdef = Byte = "Byte", pos = (321,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                               temptypedef = Byte = "Byte", (tempinfo = $000000009081F700 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )
                                                   )

                                                )
                                                (statementn, resultdef = <nil>, pos = (322,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (assignn, resultdef = $void = "untyped", pos = (322,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 8
                                                      (loadn, resultdef = Byte = "Byte", pos = (322,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                         nil
                                                         symbol = BLUE
                                                      )
                                                      (blockn, resultdef = Byte = "Byte", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 6
                                                         (statementn, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                                                            (tempcreaten, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                               size = 1, temptypedef = Byte = "Byte", tempinfo = $000000009081F780
                                                               [ti_may_be_in_reg]
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                                                            (assignn, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 5
                                                               (typeconvn, resultdef = Byte = "Byte", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                  (temprefn, resultdef = Byte = "Byte", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                     temptypedef = Byte = "Byte", (tempinfo = $000000009081F780 flags = [ti_may_be_in_reg])
                                                                  )
                                                               )
                                                               (typeconvn, resultdef = Byte = "Byte", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done,nf_explicit], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                  (shrn, resultdef = LongInt = "LongInt", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done], cmplx = 2
                                                                     (loadn, resultdef = LongInt = "LongInt", pos = (322,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = DRAWCOLOR
                                                                     )
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = 16
                                                                     )
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                            (tempdeleten, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                               release_to_normal: TRUE, temptypedef = Byte = "Byte", temptype = tt_persistent, tempinfo = $000000009081F780
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            (temprefn, resultdef = Byte = "Byte", pos = (322,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                               temptypedef = Byte = "Byte", (tempinfo = $000000009081F780 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )
                                                   )

                                                )
                                                (statementn, resultdef = <nil>, pos = (329,14), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (ifn, resultdef = $void = "untyped", pos = (323,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (vecn, resultdef = Boolean = "Boolean", pos = (323,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 5
                                                         (subscriptn, resultdef = TPageControl.<no type symbol> = "{Dynamic} Array Of Boolean", pos = (323,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                            (loadn, resultdef = TPageControl = "TPageControl", pos = (323,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               nil
                                                               symbol = self
                                                            )
                                                         )
                                                         (typeconvn, resultdef = QWord = "QWord", pos = (323,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                            (loadn, resultdef = LongInt = "LongInt", pos = (323,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               nil
                                                               symbol = I
                                                            )
                                                         )
                                                      )
                                                      (blockn, resultdef = LongBool = "LongBool", pos = (324,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (statementn, resultdef = <nil>, pos = (325,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (assignn, resultdef = $void = "untyped", pos = (325,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (loadn, resultdef = QWord = "QWord", pos = (325,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                  nil
                                                                  symbol = PEN
                                                               )
                                                               (calln, resultdef = QWord = "QWord", pos = (325,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                                  proc = CreatePen(LongInt;LongInt;LongWord):QWord;
                                                                  left =
                                                                  (callparan, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 23
                                                                     (blockn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 22
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 22
                                                                           (tempcreaten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                              size = 4, temptypedef = LongWord = "DWord", tempinfo = $000000009081F800
                                                                              [ti_may_be_in_reg]
                                                                              tempinit =
                                                                              nil
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 22
                                                                           (tempcreaten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F880
                                                                              []
                                                                              tempinit =
                                                                              nil
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 22
                                                                           (assignn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                                              (temprefn, resultdef = LongInt = "LongInt", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                 temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F880 flags = [])
                                                                              )
                                                                              (typeconvn, resultdef = LongInt = "LongInt", pos = (325,62), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (loadn, resultdef = Byte = "Byte", pos = (325,62), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = BLUE
                                                                                 )
                                                                              )
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 18
                                                                           (tempcreaten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F900
                                                                              []
                                                                              tempinit =
                                                                              nil
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 18
                                                                           (assignn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                                              (temprefn, resultdef = LongInt = "LongInt", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                 temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F900 flags = [])
                                                                              )
                                                                              (typeconvn, resultdef = LongInt = "LongInt", pos = (325,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (loadn, resultdef = Byte = "Byte", pos = (325,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = GREEN
                                                                                 )
                                                                              )
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 14
                                                                           (tempcreaten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F980
                                                                              []
                                                                              tempinit =
                                                                              nil
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 14
                                                                           (assignn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                                              (temprefn, resultdef = LongInt = "LongInt", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                 temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F980 flags = [])
                                                                              )
                                                                              (typeconvn, resultdef = LongInt = "LongInt", pos = (325,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (loadn, resultdef = Byte = "Byte", pos = (325,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = RED
                                                                                 )
                                                                              )
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 10
                                                                           (assignn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 9
                                                                              (typeconvn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                 (temprefn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                                    temptypedef = LongWord = "DWord", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                                                 )
                                                                              )
                                                                              (orn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7
                                                                                 (orn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                                    (typeconvn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                       (typeconvn, resultdef = Byte = "Byte", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                          (temprefn, resultdef = LongInt = "LongInt", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                             temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F980 flags = [])
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                    (shln, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done], cmplx = 2
                                                                                       (typeconvn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                          (typeconvn, resultdef = Word = "Word", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                             (temprefn, resultdef = LongInt = "LongInt", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F900 flags = [])
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                       (ordconstn, resultdef = Int64 = "Int64", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                          value = 8
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (shln, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done], cmplx = 2
                                                                                    (typeconvn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                       (typeconvn, resultdef = Byte = "Byte", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                          (temprefn, resultdef = LongInt = "LongInt", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                             temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F880 flags = [])
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                    (ordconstn, resultdef = Int64 = "Int64", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                       value = 16
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                           (blockn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                              (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                 (tempdeleten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                    release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F880
                                                                                 )

                                                                              )
                                                                              (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                 (tempdeleten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                    release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F900
                                                                                 )

                                                                              )
                                                                              (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                 (tempdeleten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                    release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F980
                                                                                 )

                                                                              )
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                           (tempdeleten, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                              release_to_normal: TRUE, temptypedef = LongWord = "DWord", temptype = tt_persistent, tempinfo = $000000009081F800
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = $void = "untyped", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                           (temprefn, resultdef = LongWord = "DWord", pos = (325,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                              temptypedef = LongWord = "DWord", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                                           )

                                                                        )
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = LongInt = "LongInt", pos = (325,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                     (ordconstn, resultdef = LongInt = "LongInt", pos = (325,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = 1
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = LongInt = "LongInt", pos = (325,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                                     (ordconstn, resultdef = LongInt = "LongInt", pos = (325,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = 0
                                                                     )

                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (326,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (assignn, resultdef = $void = "untyped", pos = (326,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (loadn, resultdef = QWord = "QWord", pos = (326,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                  nil
                                                                  symbol = OLDPEN
                                                               )
                                                               (calln, resultdef = QWord = "QWord", pos = (326,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                                  proc = SelectObject(QWord;QWord):QWord;
                                                                  left =
                                                                  (callparan, resultdef = QWord = "QWord", pos = (326,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                     (loadn, resultdef = QWord = "QWord", pos = (326,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = PEN
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = QWord = "QWord", pos = (326,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                     (loadn, resultdef = QWord = "QWord", pos = (326,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = DC
                                                                     )

                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (328,52), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (calln, resultdef = LongBool = "LongBool", pos = (327,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               proc = Rectangle(QWord;LongInt;LongInt;LongInt;LongInt):LongBool;
                                                               left =
                                                               (callparan, resultdef = LongInt = "LongInt", pos = (328,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 8
                                                                  (typeconvn, resultdef = LongInt = "LongInt", pos = (328,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                                                                     (addn, resultdef = Int64 = "Int64", pos = (328,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6
                                                                        (addn, resultdef = Int64 = "Int64", pos = (328,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                                           (addn, resultdef = Int64 = "Int64", pos = (328,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                              (typeconvn, resultdef = Int64 = "Int64", pos = (328,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (328,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                                    (loadn, resultdef = TRect = "<record type>", pos = (328,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = R
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (ordconstn, resultdef = Int64 = "Int64", pos = (328,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                 value = 10
                                                                              )
                                                                           )
                                                                           (ordconstn, resultdef = Int64 = "Int64", pos = (328,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                              value = 5
                                                                           )
                                                                        )
                                                                        (ordconstn, resultdef = Int64 = "Int64", pos = (328,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                           value = 4
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = LongInt = "LongInt", pos = (327,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 8
                                                                  (typeconvn, resultdef = LongInt = "LongInt", pos = (327,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7, convtype = tc_int_2_int, convnodeflags = []
                                                                     (subn, resultdef = Int64 = "Int64", pos = (327,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6
                                                                        (addn, resultdef = Int64 = "Int64", pos = (327,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                                           (subn, resultdef = Int64 = "Int64", pos = (327,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                              (typeconvn, resultdef = Int64 = "Int64", pos = (327,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (327,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                                    (loadn, resultdef = TRect = "<record type>", pos = (327,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = R
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (ordconstn, resultdef = Int64 = "Int64", pos = (327,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                 value = 10
                                                                              )
                                                                           )
                                                                           (ordconstn, resultdef = Int64 = "Int64", pos = (327,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                              value = -5
                                                                           )
                                                                        )
                                                                        (ordconstn, resultdef = Int64 = "Int64", pos = (327,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                           value = 3
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = LongInt = "LongInt", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                                                  (typeconvn, resultdef = LongInt = "LongInt", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                                                     (addn, resultdef = Int64 = "Int64", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                                        (addn, resultdef = Int64 = "Int64", pos = (328,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                           (typeconvn, resultdef = Int64 = "Int64", pos = (328,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                              (subscriptn, resultdef = LongInt = "LongInt", pos = (328,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                                 (loadn, resultdef = TRect = "<record type>", pos = (328,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = R
                                                                                 )
                                                                              )
                                                                           )
                                                                           (ordconstn, resultdef = Int64 = "Int64", pos = (328,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                              value = -5
                                                                           )
                                                                        )
                                                                        (ordconstn, resultdef = Int64 = "Int64", pos = (328,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                           value = 4
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = LongInt = "LongInt", pos = (327,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                                                  (typeconvn, resultdef = LongInt = "LongInt", pos = (327,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                                                     (subn, resultdef = Int64 = "Int64", pos = (327,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                                        (addn, resultdef = Int64 = "Int64", pos = (327,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                           (typeconvn, resultdef = Int64 = "Int64", pos = (327,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                              (subscriptn, resultdef = LongInt = "LongInt", pos = (327,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                                 (loadn, resultdef = TRect = "<record type>", pos = (327,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = R
                                                                                 )
                                                                              )
                                                                           )
                                                                           (ordconstn, resultdef = Int64 = "Int64", pos = (327,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                              value = 5
                                                                           )
                                                                        )
                                                                        (ordconstn, resultdef = Int64 = "Int64", pos = (327,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                           value = 3
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = QWord = "QWord", pos = (327,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                  (loadn, resultdef = QWord = "QWord", pos = (327,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = DC
                                                                  )

                                                               )
                                                            )

                                                         )
                                                      )
                                                      nil
                                                      nil
                                                   )

                                                )
                                                (statementn, resultdef = <nil>, pos = (331,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (assignn, resultdef = $void = "untyped", pos = (331,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (loadn, resultdef = QWord = "QWord", pos = (331,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                         nil
                                                         symbol = PEN
                                                      )
                                                      (calln, resultdef = QWord = "QWord", pos = (331,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                         proc = CreatePen(LongInt;LongInt;LongWord):QWord;
                                                         left =
                                                         (callparan, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 23
                                                            (blockn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 22
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 22
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                                     size = 4, temptypedef = LongWord = "DWord", tempinfo = $000000009081FA00
                                                                     [ti_may_be_in_reg]
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 22
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081FA80
                                                                     []
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 22
                                                                  (assignn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                                     (temprefn, resultdef = LongInt = "LongInt", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                        temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FA80 flags = [])
                                                                     )
                                                                     (typeconvn, resultdef = LongInt = "LongInt", pos = (331,62), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                        (loadn, resultdef = Byte = "Byte", pos = (331,62), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = BLUE
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 18
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081FB00
                                                                     []
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 18
                                                                  (assignn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                                     (temprefn, resultdef = LongInt = "LongInt", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                        temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FB00 flags = [])
                                                                     )
                                                                     (typeconvn, resultdef = LongInt = "LongInt", pos = (331,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                        (loadn, resultdef = Byte = "Byte", pos = (331,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = GREEN
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 14
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081FB80
                                                                     []
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 14
                                                                  (assignn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                                                     (temprefn, resultdef = LongInt = "LongInt", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                        temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FB80 flags = [])
                                                                     )
                                                                     (typeconvn, resultdef = LongInt = "LongInt", pos = (331,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                                        (loadn, resultdef = Byte = "Byte", pos = (331,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = RED
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 10
                                                                  (assignn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 9
                                                                     (typeconvn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                        (temprefn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                           temptypedef = LongWord = "DWord", (tempinfo = $000000009081FA00 flags = [ti_may_be_in_reg])
                                                                        )
                                                                     )
                                                                     (orn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 7
                                                                        (orn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                           (typeconvn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                              (typeconvn, resultdef = Byte = "Byte", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (temprefn, resultdef = LongInt = "LongInt", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FB80 flags = [])
                                                                                 )
                                                                              )
                                                                           )
                                                                           (shln, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done], cmplx = 2
                                                                              (typeconvn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (typeconvn, resultdef = Word = "Word", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                    (temprefn, resultdef = LongInt = "LongInt", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FB00 flags = [])
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (ordconstn, resultdef = Int64 = "Int64", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                                 value = 8
                                                                              )
                                                                           )
                                                                        )
                                                                        (shln, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_pass1_done], cmplx = 2
                                                                           (typeconvn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                              (typeconvn, resultdef = Byte = "Byte", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                 (temprefn, resultdef = LongInt = "LongInt", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FA80 flags = [])
                                                                                 )
                                                                              )
                                                                           )
                                                                           (ordconstn, resultdef = Int64 = "Int64", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                              value = 16
                                                                           )
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                  (blockn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081FA80
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081FB00
                                                                        )

                                                                     )
                                                                     (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        (tempdeleten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081FB80
                                                                        )

                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                  (tempdeleten, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     release_to_normal: TRUE, temptypedef = LongWord = "DWord", temptype = tt_persistent, tempinfo = $000000009081FA00
                                                                  )

                                                               )
                                                               (statementn, resultdef = $void = "untyped", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = LongWord = "DWord", pos = (331,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                                     temptypedef = LongWord = "DWord", (tempinfo = $000000009081FA00 flags = [ti_may_be_in_reg])
                                                                  )

                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = LongInt = "LongInt", pos = (331,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                            (ordconstn, resultdef = LongInt = "LongInt", pos = (331,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                               value = 2
                                                            )

                                                         )
                                                         (callparan, resultdef = LongInt = "LongInt", pos = (331,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                            (ordconstn, resultdef = LongInt = "LongInt", pos = (331,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                               value = 0
                                                            )

                                                         )
                                                      )
                                                   )

                                                )
                                                (statementn, resultdef = <nil>, pos = (332,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (assignn, resultdef = $void = "untyped", pos = (332,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (loadn, resultdef = QWord = "QWord", pos = (332,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                         nil
                                                         symbol = OLDPEN
                                                      )
                                                      (calln, resultdef = QWord = "QWord", pos = (332,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                         proc = SelectObject(QWord;QWord):QWord;
                                                         left =
                                                         (callparan, resultdef = QWord = "QWord", pos = (332,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                            (loadn, resultdef = QWord = "QWord", pos = (332,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               nil
                                                               symbol = PEN
                                                            )

                                                         )
                                                         (callparan, resultdef = QWord = "QWord", pos = (332,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                            (loadn, resultdef = QWord = "QWord", pos = (332,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               nil
                                                               symbol = DC
                                                            )

                                                         )
                                                      )
                                                   )

                                                )
                                                (statementn, resultdef = <nil>, pos = (334,65), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (calln, resultdef = LongBool = "LongBool", pos = (334,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      proc = MoveToEx(QWord;LongInt;LongInt;PPoint):LongBool;
                                                      left =
                                                      (callparan, resultdef = LongInt = "LongInt", pos = (334,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                                         (typeconvn, resultdef = LongInt = "LongInt", pos = (334,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                                            (addn, resultdef = Int64 = "Int64", pos = (334,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                               (subn, resultdef = Int64 = "Int64", pos = (334,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                  (typeconvn, resultdef = Int64 = "Int64", pos = (334,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                     (subscriptn, resultdef = LongInt = "LongInt", pos = (334,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                        (loadn, resultdef = TRect = "<record type>", pos = (334,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = R
                                                                        )
                                                                     )
                                                                  )
                                                                  (ordconstn, resultdef = Int64 = "Int64", pos = (334,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                     value = 10
                                                                  )
                                                               )
                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (334,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                  value = -5
                                                               )
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = LongInt = "LongInt", pos = (334,59), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 6
                                                         (typeconvn, resultdef = LongInt = "LongInt", pos = (334,59), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                                            (addn, resultdef = Int64 = "Int64", pos = (334,59), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                               (typeconvn, resultdef = Int64 = "Int64", pos = (334,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                  (subscriptn, resultdef = LongInt = "LongInt", pos = (334,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                     (loadn, resultdef = TRect = "<record type>", pos = (334,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = R
                                                                     )
                                                                  )
                                                               )
                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (334,54), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                  value = 5
                                                               )
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = QWord = "QWord", pos = (334,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                         (loadn, resultdef = QWord = "QWord", pos = (334,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = DC
                                                         )

                                                      )
                                                      (callparan, resultdef = PPoint = "^TPoint", pos = (334,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                         (niln, resultdef = PPoint = "^TPoint", pos = (334,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                         )

                                                      )
                                                   )

                                                )
                                                (statementn, resultdef = <nil>, pos = (335,58), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (calln, resultdef = LongBool = "LongBool", pos = (335,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      proc = LineTo(QWord;LongInt;LongInt):LongBool;
                                                      left =
                                                      (callparan, resultdef = LongInt = "LongInt", pos = (335,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                                         (typeconvn, resultdef = LongInt = "LongInt", pos = (335,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                                            (addn, resultdef = Int64 = "Int64", pos = (335,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                               (addn, resultdef = Int64 = "Int64", pos = (335,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                  (typeconvn, resultdef = Int64 = "Int64", pos = (335,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                     (subscriptn, resultdef = LongInt = "LongInt", pos = (335,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                        (loadn, resultdef = TRect = "<record type>", pos = (335,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = R
                                                                        )
                                                                     )
                                                                  )
                                                                  (ordconstn, resultdef = Int64 = "Int64", pos = (335,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                     value = 10
                                                                  )
                                                               )
                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (335,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                  value = 5
                                                               )
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = LongInt = "LongInt", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 6
                                                         (typeconvn, resultdef = LongInt = "LongInt", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                                            (addn, resultdef = Int64 = "Int64", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                               (typeconvn, resultdef = Int64 = "Int64", pos = (335,22), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                  (subscriptn, resultdef = LongInt = "LongInt", pos = (335,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                     (loadn, resultdef = TRect = "<record type>", pos = (335,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = R
                                                                     )
                                                                  )
                                                               )
                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (335,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                  value = -5
                                                               )
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = QWord = "QWord", pos = (335,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                         (loadn, resultdef = QWord = "QWord", pos = (335,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = DC
                                                         )

                                                      )
                                                   )

                                                )
                                                (statementn, resultdef = <nil>, pos = (336,75), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (calln, resultdef = LongBool = "LongBool", pos = (336,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      proc = MoveToEx(QWord;LongInt;LongInt;PPoint):LongBool;
                                                      left =
                                                      (callparan, resultdef = LongInt = "LongInt", pos = (336,69), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                                         (typeconvn, resultdef = LongInt = "LongInt", pos = (336,69), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                                            (addn, resultdef = Int64 = "Int64", pos = (336,69), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                               (addn, resultdef = Int64 = "Int64", pos = (336,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                  (typeconvn, resultdef = Int64 = "Int64", pos = (336,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                     (subscriptn, resultdef = LongInt = "LongInt", pos = (336,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                        (loadn, resultdef = TRect = "<record type>", pos = (336,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = R
                                                                        )
                                                                     )
                                                                  )
                                                                  (ordconstn, resultdef = Int64 = "Int64", pos = (336,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                     value = 10
                                                                  )
                                                               )
                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (336,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                  value = 5
                                                               )
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = LongInt = "LongInt", pos = (336,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 7
                                                         (typeconvn, resultdef = LongInt = "LongInt", pos = (336,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 6, convtype = tc_int_2_int, convnodeflags = []
                                                            (addn, resultdef = Int64 = "Int64", pos = (336,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5
                                                               (subn, resultdef = Int64 = "Int64", pos = (336,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                                  (typeconvn, resultdef = Int64 = "Int64", pos = (336,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                     (subscriptn, resultdef = LongInt = "LongInt", pos = (336,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                        (loadn, resultdef = TRect = "<record type>", pos = (336,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = R
                                                                        )
                                                                     )
                                                                  )
                                                                  (ordconstn, resultdef = Int64 = "Int64", pos = (336,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                     value = 10
                                                                  )
                                                               )
                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (336,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                  value = -5
                                                               )
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = QWord = "QWord", pos = (336,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                         (loadn, resultdef = QWord = "QWord", pos = (336,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = DC
                                                         )

                                                      )
                                                      (callparan, resultdef = PPoint = "^TPoint", pos = (336,73), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                         (niln, resultdef = PPoint = "^TPoint", pos = (336,73), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                         )

                                                      )
                                                   )

                                                )
                                                (statementn, resultdef = <nil>, pos = (337,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (calln, resultdef = LongBool = "LongBool", pos = (337,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      proc = LineTo(QWord;LongInt;LongInt):LongBool;
                                                      left =
                                                      (callparan, resultdef = LongInt = "LongInt", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 6
                                                         (typeconvn, resultdef = LongInt = "LongInt", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                                            (addn, resultdef = Int64 = "Int64", pos = (337,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                               (typeconvn, resultdef = Int64 = "Int64", pos = (337,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                  (subscriptn, resultdef = LongInt = "LongInt", pos = (337,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                     (loadn, resultdef = TRect = "<record type>", pos = (337,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = R
                                                                     )
                                                                  )
                                                               )
                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (337,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                  value = 5
                                                               )
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = LongInt = "LongInt", pos = (337,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 6
                                                         (typeconvn, resultdef = LongInt = "LongInt", pos = (337,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                                                            (addn, resultdef = Int64 = "Int64", pos = (337,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4
                                                               (typeconvn, resultdef = Int64 = "Int64", pos = (337,22), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 3, convtype = tc_int_2_int, convnodeflags = []
                                                                  (subscriptn, resultdef = LongInt = "LongInt", pos = (337,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 2
                                                                     (loadn, resultdef = TRect = "<record type>", pos = (337,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = R
                                                                     )
                                                                  )
                                                               )
                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (337,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                  value = -5
                                                               )
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = QWord = "QWord", pos = (337,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                         (loadn, resultdef = QWord = "QWord", pos = (337,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = DC
                                                         )

                                                      )
                                                   )

                                                )
                                             )

                                          )
                                       )
                                       nil
                                       nil
                                    )

                                 )
                              )
                              nil
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           (tempdeleten, resultdef = $void = "untyped", pos = (315,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F600
                           )

                        )
                     )

                  )
               )
               (calln, resultdef = $void = "untyped", pos = (310,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = $fin$000001B9(<^untyped>) is nested; Register;
                  left =
                  (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (310,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (310,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        nil
                     )

                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (350,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (350,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (350,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (350,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (350,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (350,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after the firstpass
$fin$000001B9 is nested; Register;
*******************************************************************************
(blockn, resultdef = LongBool = "LongBool", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (345,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (345,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Free(<TObject>);
         methodpointer =
         (loadn, resultdef = TBitmap = "TBitmap", pos = (345,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = BM
         )
         left =
         (callparan, resultdef = <nil>, pos = (345,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TBitmap = "TBitmap", pos = (345,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = BM
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (346,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetEnabled(<TCustomTimer>;Boolean);
         methodpointer =
         (subscriptn, resultdef = TTimer = "TTimer", pos = (346,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormMain = "TFormMain", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = FORMMAIN
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (346,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TTimer = "TTimer", pos = (346,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormMain = "TFormMain", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = FORMMAIN
               )
            )

         )
         (callparan, resultdef = Boolean = "Boolean", pos = (346,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (346,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 1
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (347,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = QWord = "QWord", pos = (347,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = SelectObject(QWord;QWord):QWord;
         left =
         (callparan, resultdef = QWord = "QWord", pos = (347,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = QWord = "QWord", pos = (347,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = OLDPEN
            )

         )
         (callparan, resultdef = QWord = "QWord", pos = (347,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = QWord = "QWord", pos = (347,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = DC
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (348,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = LongBool = "LongBool", pos = (348,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = DeleteObject(QWord):LongBool;
         left =
         (callparan, resultdef = QWord = "QWord", pos = (348,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = QWord = "QWord", pos = (348,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = PEN
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
$fin$000001B9 is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = LongBool = "LongBool", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (345,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (345,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Free(<TObject>);
               methodpointer =
               (loadn, resultdef = TBitmap = "TBitmap", pos = (345,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = BM
               )
               left =
               (callparan, resultdef = <nil>, pos = (345,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TBitmap = "TBitmap", pos = (345,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BM
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (346,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetEnabled(<TCustomTimer>;Boolean);
               methodpointer =
               (subscriptn, resultdef = TTimer = "TTimer", pos = (346,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = FORMMAIN
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (346,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TTimer = "TTimer", pos = (346,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = FORMMAIN
                     )
                  )

               )
               (callparan, resultdef = Boolean = "Boolean", pos = (346,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (346,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (347,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = QWord = "QWord", pos = (347,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = SelectObject(QWord;QWord):QWord;
               left =
               (callparan, resultdef = QWord = "QWord", pos = (347,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = QWord = "QWord", pos = (347,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = OLDPEN
                  )

               )
               (callparan, resultdef = QWord = "QWord", pos = (347,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = QWord = "QWord", pos = (347,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = DC
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (348,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = LongBool = "LongBool", pos = (348,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = DeleteObject(QWord):LongBool;
               left =
               (callparan, resultdef = QWord = "QWord", pos = (348,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = QWord = "QWord", pos = (348,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = PEN
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (349,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ToolButtonEllipseClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (359,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
   (statementn, resultdef = <nil>, pos = (360,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
      (assignn, resultdef = $void = "untyped", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (360,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 8
         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonEllipseClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 2
   (statementn, resultdef = <nil>, pos = (360,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef = $void = "untyped", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (360,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 8
         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonEllipseClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (359,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 2
         (statementn, resultdef = <nil>, pos = (360,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
            (assignn, resultdef = $void = "untyped", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = TToolType = "<enumeration type>", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = HCTOOL
               )
               (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (360,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 8
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (361,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (361,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (361,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (361,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (361,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (361,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ToolButtonOpenClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (384,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (369,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (calln, resultdef = Boolean = "Boolean", pos = (369,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = Execute(<TCommonDialog>):Boolean;
            methodpointer =
            (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (369,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormMain = "TFormMain", pos = (369,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (369,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (369,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         (blockn, resultdef = $void = "untyped", pos = (370,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (371,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (371,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = TTabSheet = "TTabSheet", pos = (371,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = NEWPAGE
                  )
                  (calln, resultdef = TTabSheet = "TTabSheet", pos = (371,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     proc = AddTabSheet(<TPageControl>):TTabSheet;
                     methodpointer =
                     (subscriptn, resultdef = TPageControl = "TPageControl", pos = (371,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (371,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (371,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (371,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (372,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (372,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (372,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  (calln, resultdef = TFormDocument = "TFormDocument", pos = (372,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (372,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (typen, resultdef = TFormDocument = "TFormDocument", pos = (372,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (372,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                        (typeconvn, resultdef = TComponent = "TComponent", pos = (372,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
                           (loadn, resultdef = TApplication = "TApplication", pos = (372,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = APPLICATION
                           )
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (372,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (372,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (372,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (372,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (373,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (373,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetText(<TControl>;const TTranslateString);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (373,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = TTranslateString = "AnsiString", pos = (373,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                     (subscriptn, resultdef = TTranslateString = "AnsiString", pos = (373,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (373,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (373,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (373,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (373,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (374,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (374,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                  (subscriptn, resultdef = Boolean = "Boolean", pos = (374,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (374,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )
                  )
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (374,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (375,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetParent(<TControl>;TWinControl);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = TWinControl = "TWinControl", pos = (375,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (typeconvn, resultdef = TWinControl = "TWinControl", pos = (375,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
                        (loadn, resultdef = TTabSheet = "TTabSheet", pos = (375,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = NEWPAGE
                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (375,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (375,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (376,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (376,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetWindowState(<TCustomForm>;TWindowState);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (376,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = TWindowState = "<enumeration type>", pos = (376,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = TWindowState = "<enumeration type>", pos = (376,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 2
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (376,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (376,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (377,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (inlinen, resultdef = $void = "untyped", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, inlinenumber = in_inc_x
                  (callparan, resultdef = LongInt = "LongInt", pos = (377,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = LongInt = "LongInt", pos = (377,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_modify], cmplx = 1
                        nil
                        symbol = IMAGECOUNTER
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (378,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (378,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetText(<TControl>;const TTranslateString);
                  methodpointer =
                  (loadn, resultdef = TTabSheet = "TTabSheet", pos = (378,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = NEWPAGE
                  )
                  left =
                  (callparan, resultdef = TTranslateString = "AnsiString", pos = (378,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                     (subscriptn, resultdef = TTranslateString = "AnsiString", pos = (378,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (378,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (378,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (378,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (378,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (379,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                  (subscriptn, resultdef = Int64 = "Int64", pos = (379,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write,nf_isproperty], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )
                  )
                  (typeconvn, resultdef = Int64 = "Int64", pos = (379,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                     (loadn, resultdef = LongInt = "LongInt", pos = (379,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = IMAGECOUNTER
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (380,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (subscriptn, resultdef = AnsiString = "AnsiString", pos = (380,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )
                  )
                  (calln, resultdef = AnsiString = "AnsiString", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetText(<TControl>;<var TTranslateString>):AnsiString;
                     methodpointer =
                     (loadn, resultdef = TTabSheet = "TTabSheet", pos = (380,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = NEWPAGE
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (380,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (380,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (380,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (380,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (381,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (381,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = Show(<TCustomForm>);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (381,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (381,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (381,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (382,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (382,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = Invalidate(<TWinControl>);
                  methodpointer =
                  (loadn, resultdef = TTabSheet = "TTabSheet", pos = (382,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = NEWPAGE
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (382,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (382,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (383,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (383,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetActiveTabSheet(<TPageControl>;const TTabSheet);
                  methodpointer =
                  (subscriptn, resultdef = TPageControl = "TPageControl", pos = (383,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (383,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
                  left =
                  (callparan, resultdef = TTabSheet = "TTabSheet", pos = (383,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = TTabSheet = "TTabSheet", pos = (383,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = NEWPAGE
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (383,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (383,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonOpenClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (384,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (369,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (calln, resultdef = Boolean = "Boolean", pos = (369,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
            proc = Execute(<TCommonDialog>):Boolean;
            methodpointer =
            (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (369,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormMain = "TFormMain", pos = (369,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (369,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
               (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (369,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (369,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )

            )
         )
         (blockn, resultdef = $void = "untyped", pos = (370,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (371,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (371,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = TTabSheet = "TTabSheet", pos = (371,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = NEWPAGE
                  )
                  (calln, resultdef = TTabSheet = "TTabSheet", pos = (371,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = AddTabSheet(<TPageControl>):TTabSheet;
                     methodpointer =
                     (subscriptn, resultdef = TPageControl = "TPageControl", pos = (371,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (371,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (371,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TPageControl = "TPageControl", pos = (371,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (371,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (372,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (372,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (372,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  (calln, resultdef = TFormDocument = "TFormDocument", pos = (372,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (372,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TFormDocument = "TFormDocument", pos = (372,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (372,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (typeconvn, resultdef = TComponent = "TComponent", pos = (372,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                           (loadn, resultdef = TApplication = "TApplication", pos = (372,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = APPLICATION
                           )
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (372,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (372,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (372,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (372,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                           (typen, resultdef = TFormDocument = "TFormDocument", pos = (372,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           )
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (373,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (373,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetText(<TControl>;const TTranslateString);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (373,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = TTranslateString = "AnsiString", pos = (373,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                     (subscriptn, resultdef = TTranslateString = "AnsiString", pos = (373,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (373,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (373,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (373,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (373,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (374,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (374,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                  (subscriptn, resultdef = Boolean = "Boolean", pos = (374,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (374,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )
                  )
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (374,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (375,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetParent(<TControl>;TWinControl);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = TWinControl = "TWinControl", pos = (375,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (typeconvn, resultdef = TWinControl = "TWinControl", pos = (375,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                        (loadn, resultdef = TTabSheet = "TTabSheet", pos = (375,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = NEWPAGE
                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (375,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (376,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (376,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetWindowState(<TCustomForm>;TWindowState);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (376,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (376,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (376,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )

                  )
                  (callparan, resultdef = TWindowState = "<enumeration type>", pos = (376,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = TWindowState = "<enumeration type>", pos = (376,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 2
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (377,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (blockn, resultdef = $void = "untyped", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                  (statementn, resultdef = <nil>, pos = (377,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                     (nothingn, resultdef = $void = "untyped", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (377,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                     (assignn, resultdef = $void = "untyped", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                        (loadn, resultdef = LongInt = "LongInt", pos = (377,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_modify], cmplx = 1
                           nil
                           symbol = IMAGECOUNTER
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_int_2_int, convnodeflags = []
                           (addn, resultdef = Int64 = "Int64", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 3
                              (typeconvn, resultdef = Int64 = "Int64", pos = (377,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                 (loadn, resultdef = LongInt = "LongInt", pos = (377,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = IMAGECOUNTER
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = 1
                              )
                           )
                        )
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (378,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (378,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetText(<TControl>;const TTranslateString);
                  methodpointer =
                  (loadn, resultdef = TTabSheet = "TTabSheet", pos = (378,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWPAGE
                  )
                  left =
                  (callparan, resultdef = TTranslateString = "AnsiString", pos = (378,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                     (subscriptn, resultdef = TTranslateString = "AnsiString", pos = (378,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (378,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (378,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (378,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TTabSheet = "TTabSheet", pos = (378,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWPAGE
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (379,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                  (subscriptn, resultdef = Int64 = "Int64", pos = (379,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_isproperty], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )
                  )
                  (typeconvn, resultdef = Int64 = "Int64", pos = (379,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                     (loadn, resultdef = LongInt = "LongInt", pos = (379,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = IMAGECOUNTER
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (380,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = $fpc_ansistr_assign(var Pointer;Pointer);
                  left =
                  (callparan, resultdef = Pointer = "^untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                     (typeconvn, resultdef = Pointer = "^untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 255, convtype = tc_equal, convnodeflags = []
                        (calln, resultdef = AnsiString = "AnsiString", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetText(<TControl>;<var TTranslateString>):AnsiString;
                           methodpointer =
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (380,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWPAGE
                           )
                           funcretnode =
                           (temprefn, resultdef = AnsiString = "AnsiString", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                              temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F600 flags = [ti_nofini])
                           )
                           callinitblock =
                           (blockn, resultdef = $void = "untyped", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              (statementn, resultdef = <nil>, pos = (380,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (tempcreaten, resultdef = $void = "untyped", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                    size = 8, temptypedef = AnsiString = "AnsiString", tempinfo = $000000009081F600
                                    [ti_nofini]
                                    tempinit =
                                    nil
                                 )

                              )
                           )
                           callcleanupblock =
                           (blockn, resultdef = $void = "untyped", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              (statementn, resultdef = <nil>, pos = (380,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (tempdeleten, resultdef = $void = "untyped", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString", temptype = tt_persistent, tempinfo = $000000009081F600
                                 )

                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (380,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TTabSheet = "TTabSheet", pos = (380,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = NEWPAGE
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (380,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              (temprefn, resultdef = AnsiString = "AnsiString", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                 temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F600 flags = [ti_nofini])
                              )

                           )
                        )
                     )

                  )
                  (callparan, resultdef = Pointer = "^untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (typeconvn, resultdef = Pointer = "^untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 3, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = AnsiString = "AnsiString", pos = (380,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                        )
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (381,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (381,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = Show(<TCustomForm>);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (381,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (381,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (381,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (382,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (382,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = Invalidate(<TWinControl>);
                  methodpointer =
                  (loadn, resultdef = TTabSheet = "TTabSheet", pos = (382,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWPAGE
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (382,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TTabSheet = "TTabSheet", pos = (382,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWPAGE
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (383,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (383,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetActiveTabSheet(<TPageControl>;const TTabSheet);
                  methodpointer =
                  (subscriptn, resultdef = TPageControl = "TPageControl", pos = (383,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (383,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (383,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TPageControl = "TPageControl", pos = (383,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (383,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )

                  )
                  (callparan, resultdef = TTabSheet = "TTabSheet", pos = (383,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TTabSheet = "TTabSheet", pos = (383,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWPAGE
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonOpenClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (blockn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
            (statementn, resultdef = <nil>, pos = (384,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (ifn, resultdef = $void = "untyped", pos = (369,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (calln, resultdef = Boolean = "Boolean", pos = (369,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = Execute(<TCommonDialog>):Boolean;
                     methodpointer =
                     (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (369,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (369,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (369,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (369,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (369,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (370,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (371,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (371,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (371,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                              nil
                              symbol = NEWPAGE
                           )
                           (calln, resultdef = TTabSheet = "TTabSheet", pos = (371,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                              proc = AddTabSheet(<TPageControl>):TTabSheet;
                              methodpointer =
                              (subscriptn, resultdef = TPageControl = "TPageControl", pos = (371,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (371,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (371,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                 (subscriptn, resultdef = TPageControl = "TPageControl", pos = (371,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (371,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (372,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (372,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (372,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                           (calln, resultdef = TFormDocument = "TFormDocument", pos = (372,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                              proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                              methodpointer =
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (372,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                 (typen, resultdef = TFormDocument = "TFormDocument", pos = (372,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 )
                              )
                              left =
                              (callparan, resultdef = TComponent = "TComponent", pos = (372,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (typeconvn, resultdef = TComponent = "TComponent", pos = (372,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                    (loadn, resultdef = TApplication = "TApplication", pos = (372,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = APPLICATION
                                    )
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (372,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                 (pointerconstn, resultdef = Pointer = "^untyped", pos = (372,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = $0000000000000001
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (372,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                 (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (372,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                    (typen, resultdef = TFormDocument = "TFormDocument", pos = (372,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                    )
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (373,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (373,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                           proc = SetText(<TControl>;const TTranslateString);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (373,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = TTranslateString = "AnsiString", pos = (373,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                              (subscriptn, resultdef = TTranslateString = "AnsiString", pos = (373,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (373,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (373,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (373,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (373,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = NEWDOC
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (374,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (374,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                           (subscriptn, resultdef = Boolean = "Boolean", pos = (374,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (374,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = NEWDOC
                              )
                           )
                           (ordconstn, resultdef = Boolean = "Boolean", pos = (374,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (375,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                           proc = SetParent(<TControl>;TWinControl);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = TWinControl = "TWinControl", pos = (375,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (typeconvn, resultdef = TWinControl = "TWinControl", pos = (375,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (loadn, resultdef = TTabSheet = "TTabSheet", pos = (375,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = NEWPAGE
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (375,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = NEWDOC
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (376,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (376,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                           proc = SetWindowState(<TCustomForm>;TWindowState);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (376,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (376,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (376,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = NEWDOC
                              )

                           )
                           (callparan, resultdef = TWindowState = "<enumeration type>", pos = (376,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                              (ordconstn, resultdef = TWindowState = "<enumeration type>", pos = (376,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = 2
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (377,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (blockn, resultdef = $void = "untyped", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                           (statementn, resultdef = <nil>, pos = (377,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                              (nothingn, resultdef = $void = "untyped", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (377,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                              (assignn, resultdef = $void = "untyped", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                                 (loadn, resultdef = LongInt = "LongInt", pos = (377,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_modify], cmplx = 1
                                    nil
                                    symbol = IMAGECOUNTER
                                 )
                                 (typeconvn, resultdef = LongInt = "LongInt", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_int_2_int, convnodeflags = []
                                    (addn, resultdef = Int64 = "Int64", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 3
                                       (typeconvn, resultdef = Int64 = "Int64", pos = (377,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (377,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = IMAGECOUNTER
                                          )
                                       )
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (377,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                          value = 1
                                       )
                                    )
                                 )
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (378,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (378,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                           proc = SetText(<TControl>;const TTranslateString);
                           methodpointer =
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (378,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWPAGE
                           )
                           left =
                           (callparan, resultdef = TTranslateString = "AnsiString", pos = (378,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                              (subscriptn, resultdef = TTranslateString = "AnsiString", pos = (378,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (378,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (378,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (378,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TTabSheet = "TTabSheet", pos = (378,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = NEWPAGE
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (379,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                           (subscriptn, resultdef = Int64 = "Int64", pos = (379,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_isproperty], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (379,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = NEWDOC
                              )
                           )
                           (typeconvn, resultdef = Int64 = "Int64", pos = (379,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (379,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = IMAGECOUNTER
                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (380,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           proc = $fpc_ansistr_assign(var Pointer;Pointer);
                           left =
                           (callparan, resultdef = Pointer = "^untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                              (typeconvn, resultdef = Pointer = "^untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                 (calln, resultdef = AnsiString = "AnsiString", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    proc = GetText(<TControl>;<var TTranslateString>):AnsiString;
                                    methodpointer =
                                    (loadn, resultdef = TTabSheet = "TTabSheet", pos = (380,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = NEWPAGE
                                    )
                                    funcretnode =
                                    (temprefn, resultdef = AnsiString = "AnsiString", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                       temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F600 flags = [ti_nofini])
                                    )
                                    callinitblock =
                                    (blockn, resultdef = $void = "untyped", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       (statementn, resultdef = <nil>, pos = (380,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          (tempcreaten, resultdef = $void = "untyped", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                             size = 8, temptypedef = AnsiString = "AnsiString", tempinfo = $000000009081F600
                                             [ti_nofini]
                                             tempinit =
                                             nil
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef = $void = "untyped", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       (statementn, resultdef = <nil>, pos = (380,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          (tempdeleten, resultdef = $void = "untyped", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString", temptype = tt_persistent, tempinfo = $000000009081F600
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (380,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                       (loadn, resultdef = TTabSheet = "TTabSheet", pos = (380,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = NEWPAGE
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (380,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       (temprefn, resultdef = AnsiString = "AnsiString", pos = (380,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                          temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F600 flags = [ti_nofini])
                                       )

                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = Pointer = "^untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                              (typeconvn, resultdef = Pointer = "^untyped", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 3, convtype = tc_equal, convnodeflags = []
                                 (subscriptn, resultdef = AnsiString = "AnsiString", pos = (380,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (380,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = NEWDOC
                                    )
                                 )
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (381,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (381,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           proc = Show(<TCustomForm>);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (381,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (381,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (381,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = NEWDOC
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (382,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (382,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           proc = Invalidate(<TWinControl>);
                           methodpointer =
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (382,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWPAGE
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (382,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TTabSheet = "TTabSheet", pos = (382,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = NEWPAGE
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (383,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (383,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                           proc = SetActiveTabSheet(<TPageControl>;const TTabSheet);
                           methodpointer =
                           (subscriptn, resultdef = TPageControl = "TPageControl", pos = (383,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (383,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (383,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                              (subscriptn, resultdef = TPageControl = "TPageControl", pos = (383,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (383,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )

                           )
                           (callparan, resultdef = TTabSheet = "TTabSheet", pos = (383,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TTabSheet = "TTabSheet", pos = (383,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = NEWPAGE
                              )

                           )
                        )

                     )
                  )
                  nil
                  nil
               )

            )
         )
         (calln, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            proc = $fin$000001BA(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  nil
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
      (blockn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
)

*******************************************************************************
after the firstpass
$fin$000001BA is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
right before code generation
$fin$000001BA is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (nothingn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (asmn, resultdef = $void = "untyped", pos = (386,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (367,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ToolButtonPenClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (389,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
   (statementn, resultdef = <nil>, pos = (390,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
      (assignn, resultdef = $void = "untyped", pos = (390,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (390,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (390,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 0
         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonPenClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 2
   (statementn, resultdef = <nil>, pos = (390,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef = $void = "untyped", pos = (390,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (390,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (390,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 0
         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonPenClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (389,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 2
         (statementn, resultdef = <nil>, pos = (390,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
            (assignn, resultdef = $void = "untyped", pos = (390,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = TToolType = "<enumeration type>", pos = (390,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = HCTOOL
               )
               (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (390,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 0
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (391,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (391,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (391,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (391,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (391,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (391,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ToolButtonLineClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
   (statementn, resultdef = <nil>, pos = (395,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
      (assignn, resultdef = $void = "untyped", pos = (395,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (395,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (395,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 3
         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonLineClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 2
   (statementn, resultdef = <nil>, pos = (395,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef = $void = "untyped", pos = (395,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (395,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (395,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 3
         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonLineClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 2
         (statementn, resultdef = <nil>, pos = (395,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
            (assignn, resultdef = $void = "untyped", pos = (395,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = TToolType = "<enumeration type>", pos = (395,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = HCTOOL
               )
               (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (395,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 3
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (397,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ToolButtonPixelateClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
ToolButtonPixelateClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
ToolButtonPixelateClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (402,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (402,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (402,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (402,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (402,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (402,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ToolButtonZoomInClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (405,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (406,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = ZoomIn(<TFormDocument>);
         methodpointer =
         (calln, resultdef = TFormDocument = "TFormDocument", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = findDocument(LongInt):TFormDocument;
            left =
            (callparan, resultdef = LongInt = "LongInt", pos = (406,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (ordconstn, resultdef = LongInt = "LongInt", pos = (406,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  value = 5
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (406,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (406,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonZoomInClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (406,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = ZoomIn(<TFormDocument>);
         methodpointer =
         (temprefn, resultdef = TFormDocument = "TFormDocument", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TFormDocument = "TFormDocument", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TFormDocument = "TFormDocument", tempinfo = $000000009081F600
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TFormDocument = "TFormDocument", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TFormDocument = "TFormDocument", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TFormDocument = "TFormDocument", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = findDocument(LongInt):TFormDocument;
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (406,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (ordconstn, resultdef = LongInt = "LongInt", pos = (406,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = 5
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TFormDocument = "TFormDocument", temptype = tt_persistent, tempinfo = $000000009081F600
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (406,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TFormDocument = "TFormDocument", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TFormDocument = "TFormDocument", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonZoomInClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (405,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (406,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = ZoomIn(<TFormDocument>);
               methodpointer =
               (temprefn, resultdef = TFormDocument = "TFormDocument", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TFormDocument = "TFormDocument", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TFormDocument = "TFormDocument", tempinfo = $000000009081F600
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TFormDocument = "TFormDocument", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TFormDocument = "TFormDocument", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TFormDocument = "TFormDocument", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                           proc = findDocument(LongInt):TFormDocument;
                           left =
                           (callparan, resultdef = LongInt = "LongInt", pos = (406,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                              (ordconstn, resultdef = LongInt = "LongInt", pos = (406,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = 5
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TFormDocument = "TFormDocument", temptype = tt_persistent, tempinfo = $000000009081F600
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (406,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TFormDocument = "TFormDocument", pos = (406,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TFormDocument = "TFormDocument", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
FormCreate(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (411,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (416,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (416,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = ApplyTheme(TForm);
         left =
         (callparan, resultdef = TForm = "TForm", pos = (416,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (typeconvn, resultdef = TForm = "TForm", pos = (416,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadn, resultdef = TFormMain = "TFormMain", pos = (416,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (424,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (424,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (424,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = PENWIDTH
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (424,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 10
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (425,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (425,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TPageControl = "TPageControl", pos = (425,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
            (loadn, resultdef = TFormMain = "TFormMain", pos = (425,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (425,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (425,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 5
            )

         )
         (callparan, resultdef = <nil>, pos = (425,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (425,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (426,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = CreatePen(<TFPCustomCanvas>):TFPCustomPen;
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (426,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetCanvas(<TCustomImage>):TCanvas;
            methodpointer =
            (subscriptn, resultdef = TImage = "TImage", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormMain = "TFormMain", pos = (426,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (426,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (426,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (426,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (426,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (427,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = CreatePen(<TFPCustomCanvas>):TFPCustomPen;
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (427,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetCanvas(<TCustomImage>):TCanvas;
            methodpointer =
            (subscriptn, resultdef = TImage = "TImage", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormMain = "TFormMain", pos = (427,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (427,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (427,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (427,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (427,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (428,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = CreatePen(<TFPCustomCanvas>):TFPCustomPen;
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (428,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetCanvas(<TCustomImage>):TCanvas;
            methodpointer =
            (subscriptn, resultdef = TImage = "TImage", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormMain = "TFormMain", pos = (428,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (428,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (428,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (428,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (428,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (429,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (429,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (429,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (429,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (429,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (429,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = -1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (429,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (429,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 25
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (429,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (429,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (429,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (typeconvn, resultdef = TObject = "TObject", pos = (429,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_equal, convnodeflags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (429,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (429,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (430,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (430,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (430,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (430,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (430,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (430,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = -1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (430,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (430,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 40
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (430,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (430,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (430,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (typeconvn, resultdef = TObject = "TObject", pos = (430,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_equal, convnodeflags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (430,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (430,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (431,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (431,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (431,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (431,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (431,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (431,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = -1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (431,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (431,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 255
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (431,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (431,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (431,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
            (typeconvn, resultdef = TObject = "TObject", pos = (431,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3, convtype = tc_equal, convnodeflags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (431,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (431,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
FormCreate(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (416,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (416,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = ApplyTheme(TForm);
         left =
         (callparan, resultdef = TForm = "TForm", pos = (416,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (typeconvn, resultdef = TForm = "TForm", pos = (416,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadn, resultdef = TFormMain = "TFormMain", pos = (416,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (424,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (424,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (424,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = PENWIDTH
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (424,15), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 10
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (425,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (425,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TPageControl = "TPageControl", pos = (425,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
            (loadn, resultdef = TFormMain = "TFormMain", pos = (425,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (425,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (subscriptn, resultdef = TPageControl = "TPageControl", pos = (425,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormMain = "TFormMain", pos = (425,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )

         )
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (425,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (425,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 5
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (426,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = CreatePen(<TFPCustomCanvas>):TFPCustomPen;
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000009081F600
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (426,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (426,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (426,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (426,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000009081F600
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (426,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (427,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = CreatePen(<TFPCustomCanvas>):TFPCustomPen;
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081FB00 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000009081FB00
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081FB00 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (427,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (427,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (427,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (427,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000009081FB00
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (427,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081FB00 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (428,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = CreatePen(<TFPCustomCanvas>):TFPCustomPen;
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081FA80 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000009081FA80
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081FA80 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (428,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (428,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (428,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (428,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000009081FA80
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (428,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081FA80 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (429,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (429,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (429,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (429,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (429,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (typeconvn, resultdef = TObject = "TObject", pos = (429,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3, convtype = tc_equal, convnodeflags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (429,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (429,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (429,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (429,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = -1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (429,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (429,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 25
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (429,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (429,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
               nil
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (430,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (430,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (430,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (430,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (430,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (typeconvn, resultdef = TObject = "TObject", pos = (430,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3, convtype = tc_equal, convnodeflags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (430,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (430,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (430,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (430,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = -1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (430,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (430,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 40
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (430,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (430,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
               nil
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (431,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (431,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (431,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (431,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 1
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (431,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (typeconvn, resultdef = TObject = "TObject", pos = (431,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3, convtype = tc_equal, convnodeflags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (431,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (431,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (431,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (431,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = -1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (431,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (431,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 255
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (431,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (431,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
               nil
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
FormCreate(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (411,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (416,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (416,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = ApplyTheme(TForm);
               left =
               (callparan, resultdef = TForm = "TForm", pos = (416,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (typeconvn, resultdef = TForm = "TForm", pos = (416,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (416,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (424,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (424,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = LongInt = "LongInt", pos = (424,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = PENWIDTH
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (424,15), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 10
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (425,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (425,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
               proc = SetAlign(<TControl>;TAlign);
               methodpointer =
               (subscriptn, resultdef = TPageControl = "TPageControl", pos = (425,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (425,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (425,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (subscriptn, resultdef = TPageControl = "TPageControl", pos = (425,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (425,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )

               )
               (callparan, resultdef = TAlign = "<enumeration type>", pos = (425,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (425,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 5
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (426,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = CreatePen(<TFPCustomCanvas>):TFPCustomPen;
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000009081F600
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (426,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetCanvas(<TCustomImage>):TCanvas;
                           methodpointer =
                           (subscriptn, resultdef = TImage = "TImage", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (426,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (426,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                              (subscriptn, resultdef = TImage = "TImage", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (426,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000009081F600
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (426,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (426,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (427,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = CreatePen(<TFPCustomCanvas>):TFPCustomPen;
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081FB00 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000009081FB00
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081FB00 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (427,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetCanvas(<TCustomImage>):TCanvas;
                           methodpointer =
                           (subscriptn, resultdef = TImage = "TImage", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (427,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (427,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                              (subscriptn, resultdef = TImage = "TImage", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (427,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000009081FB00
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (427,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (427,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081FB00 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (428,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = CreatePen(<TFPCustomCanvas>):TFPCustomPen;
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081FA80 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $000000009081FA80
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081FA80 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (428,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetCanvas(<TCustomImage>):TCanvas;
                           methodpointer =
                           (subscriptn, resultdef = TImage = "TImage", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (428,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (428,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                              (subscriptn, resultdef = TImage = "TImage", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (428,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $000000009081FA80
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (428,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (428,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $000000009081FA80 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (429,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (429,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
               left =
               (callparan, resultdef = Boolean = "Boolean", pos = (429,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (429,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )

               )
               (callparan, resultdef = TObject = "TObject", pos = (429,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (typeconvn, resultdef = TObject = "TObject", pos = (429,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3, convtype = tc_equal, convnodeflags = []
                     (subscriptn, resultdef = TImage = "TImage", pos = (429,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (429,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (429,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (429,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = -1
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (429,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (429,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 25
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (429,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (429,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
                     nil
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (430,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (430,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
               left =
               (callparan, resultdef = Boolean = "Boolean", pos = (430,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (430,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )

               )
               (callparan, resultdef = TObject = "TObject", pos = (430,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (typeconvn, resultdef = TObject = "TObject", pos = (430,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3, convtype = tc_equal, convnodeflags = []
                     (subscriptn, resultdef = TImage = "TImage", pos = (430,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (430,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (430,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (430,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = -1
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (430,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (430,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 40
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (430,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (430,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
                     nil
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (431,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (431,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
               left =
               (callparan, resultdef = Boolean = "Boolean", pos = (431,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (431,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )

               )
               (callparan, resultdef = TObject = "TObject", pos = (431,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                  (typeconvn, resultdef = TObject = "TObject", pos = (431,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3, convtype = tc_equal, convnodeflags = []
                     (subscriptn, resultdef = TImage = "TImage", pos = (431,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (431,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (431,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (431,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = -1
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (431,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (431,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 255
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (431,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (431,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 1
                     nil
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (432,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (432,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (432,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (432,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (432,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (432,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ApplyTheme(TForm);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (442,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (501,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (444,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (calln, resultdef = Boolean = "Boolean", pos = (444,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = IsDarkTheme:Boolean;
         )
         (blockn, resultdef = $void = "untyped", pos = (445,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (446,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (446,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = TMainMenu = "TMainMenu", pos = (446,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = MM
                  )
                  (calln, resultdef = TMainMenu = "TMainMenu", pos = (446,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     proc = constructor Create(<TMainMenu>;<Class Of TMainMenu>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMainMenu", pos = (446,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (typen, resultdef = TMainMenu = "TMainMenu", pos = (446,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (446,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (niln, resultdef = TComponent = "TComponent", pos = (446,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (446,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (446,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (446,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (446,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (447,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (447,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = TMenuItem = "TMenuItem", pos = (447,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = MI
                  )
                  (calln, resultdef = TMenuItem = "TMenuItem", pos = (447,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     proc = constructor Create(<TMenuItem>;<Class Of TMenuItem>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMenuItem", pos = (447,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (typen, resultdef = TMenuItem = "TMenuItem", pos = (447,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (447,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (niln, resultdef = TComponent = "TComponent", pos = (447,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (447,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (447,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (447,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (447,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (448,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (448,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = TToolBar = "TToolBar", pos = (448,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = TB
                  )
                  (calln, resultdef = TToolBar = "TToolBar", pos = (448,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     proc = constructor Create(<TToolBar>;<Class Of TToolBar>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (448,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (typen, resultdef = TToolBar = "TToolBar", pos = (448,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (448,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (niln, resultdef = TComponent = "TComponent", pos = (448,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (448,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (448,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (448,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (448,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (449,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (449,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = TToolButton = "TToolButton", pos = (449,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = TBT
                  )
                  (calln, resultdef = TToolButton = "TToolButton", pos = (449,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     proc = constructor Create(<TToolButton>;<Class Of TToolButton>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (449,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (typen, resultdef = TToolButton = "TToolButton", pos = (449,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (449,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (niln, resultdef = TComponent = "TComponent", pos = (449,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (449,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (449,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (449,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (449,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (450,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (450,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TControl>;TGraphicsColor);
                  methodpointer =
                  (loadn, resultdef = TForm = "TForm", pos = (450,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = FORM
                  )
                  left =
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (450,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (450,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 2105376
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (450,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (450,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (451,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (451,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TFont>;TGraphicsColor);
                  methodpointer =
                  (subscriptn, resultdef = TFont = "TFont", pos = (451,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                     (loadn, resultdef = TForm = "TForm", pos = (451,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = FORM
                     )
                  )
                  left =
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (451,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (451,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 12632256
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (451,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (451,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (452,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TControl>;TGraphicsColor);
                  methodpointer =
                  (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (452,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = FORMMAIN
                     )
                  )
                  left =
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (452,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                     (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (452,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                        (loadn, resultdef = TForm = "TForm", pos = (452,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = FORM
                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (452,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (452,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (460,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (forn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (453,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (453,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (453,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (subn, resultdef = Int64 = "Int64", pos = (453,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (typeconvn, resultdef = Int64 = "Int64", pos = (453,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (453,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetControlCount(<TWinControl>):LongInt;
                              methodpointer =
                              (subscriptn, resultdef = TPanel = "TPanel", pos = (453,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (453,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = FORMMAIN
                                 )
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (453,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (453,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (453,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           value = 1
                        )
                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (454,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (459,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (ifn, resultdef = $void = "untyped", pos = (455,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (isn, resultdef = Boolean = "Boolean", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (calln, resultdef = TControl = "TControl", pos = (455,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetControl(<TWinControl>;const LongInt):TControl;
                                 methodpointer =
                                 (subscriptn, resultdef = TPanel = "TPanel", pos = (455,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (455,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = FORMMAIN
                                    )
                                 )
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (455,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                    (loadn, resultdef = LongInt = "LongInt", pos = (455,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = I
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (455,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    (nothingn, resultdef = $void = "untyped", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                    )

                                 )
                              )
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (455,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (typen, resultdef = TWinControl = "TWinControl", pos = (455,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 )
                              )
                           )
                           (blockn, resultdef = $void = "untyped", pos = (456,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (statementn, resultdef = <nil>, pos = (457,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (calln, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TControl>;TGraphicsColor);
                                    methodpointer =
                                    (calln, resultdef = TControl = "TControl", pos = (457,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetControl(<TWinControl>;const LongInt):TControl;
                                       methodpointer =
                                       (subscriptn, resultdef = TPanel = "TPanel", pos = (457,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = FORMMAIN
                                          )
                                       )
                                       left =
                                       (callparan, resultdef = LongInt = "LongInt", pos = (457,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                          (loadn, resultdef = LongInt = "LongInt", pos = (457,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = I
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (457,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (nothingn, resultdef = $void = "untyped", pos = (457,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TGraphicsColor = "LongInt", pos = (457,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                       (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (457,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                                          (loadn, resultdef = TForm = "TForm", pos = (457,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = FORM
                                          )
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (457,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       (nothingn, resultdef = $void = "untyped", pos = (457,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (458,70), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (calln, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TFont>;TGraphicsColor);
                                    methodpointer =
                                    (subscriptn, resultdef = TFont = "TFont", pos = (458,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       (calln, resultdef = TControl = "TControl", pos = (458,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetControl(<TWinControl>;const LongInt):TControl;
                                          methodpointer =
                                          (subscriptn, resultdef = TPanel = "TPanel", pos = (458,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = FORMMAIN
                                             )
                                          )
                                          left =
                                          (callparan, resultdef = LongInt = "LongInt", pos = (458,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                             (loadn, resultdef = LongInt = "LongInt", pos = (458,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = I
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (458,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             (nothingn, resultdef = $void = "untyped", pos = (458,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                             )

                                          )
                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TGraphicsColor = "LongInt", pos = (458,70), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                                       (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (458,70), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                                          (subscriptn, resultdef = TFont = "TFont", pos = (458,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                                             (loadn, resultdef = TForm = "TForm", pos = (458,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = FORM
                                             )
                                          )
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (458,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       (nothingn, resultdef = $void = "untyped", pos = (458,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       )

                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (468,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (forn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (461,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (461,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (461,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (subn, resultdef = Int64 = "Int64", pos = (461,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (typeconvn, resultdef = Int64 = "Int64", pos = (461,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (461,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetControlCount(<TWinControl>):LongInt;
                              methodpointer =
                              (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (461,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (461,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = FORMMAIN
                                 )
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (461,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (461,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (461,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           value = 1
                        )
                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (467,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (ifn, resultdef = $void = "untyped", pos = (463,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (isn, resultdef = Boolean = "Boolean", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (calln, resultdef = TControl = "TControl", pos = (463,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetControl(<TWinControl>;const LongInt):TControl;
                                 methodpointer =
                                 (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (463,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (463,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = FORMMAIN
                                    )
                                 )
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (463,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                    (loadn, resultdef = LongInt = "LongInt", pos = (463,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = I
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (463,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    (nothingn, resultdef = $void = "untyped", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                    )

                                 )
                              )
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (463,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (typen, resultdef = TWinControl = "TWinControl", pos = (463,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 )
                              )
                           )
                           (blockn, resultdef = $void = "untyped", pos = (464,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (statementn, resultdef = <nil>, pos = (465,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (calln, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TControl>;TGraphicsColor);
                                    methodpointer =
                                    (calln, resultdef = TControl = "TControl", pos = (465,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetControl(<TWinControl>;const LongInt):TControl;
                                       methodpointer =
                                       (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (465,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = FORMMAIN
                                          )
                                       )
                                       left =
                                       (callparan, resultdef = LongInt = "LongInt", pos = (465,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                          (loadn, resultdef = LongInt = "LongInt", pos = (465,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = I
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (465,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (nothingn, resultdef = $void = "untyped", pos = (465,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TGraphicsColor = "LongInt", pos = (465,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                       (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (465,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                                          (loadn, resultdef = TForm = "TForm", pos = (465,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = FORM
                                          )
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (465,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       (nothingn, resultdef = $void = "untyped", pos = (465,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (466,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (calln, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TFont>;TGraphicsColor);
                                    methodpointer =
                                    (subscriptn, resultdef = TFont = "TFont", pos = (466,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       (calln, resultdef = TControl = "TControl", pos = (466,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetControl(<TWinControl>;const LongInt):TControl;
                                          methodpointer =
                                          (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (466,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = FORMMAIN
                                             )
                                          )
                                          left =
                                          (callparan, resultdef = LongInt = "LongInt", pos = (466,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                             (loadn, resultdef = LongInt = "LongInt", pos = (466,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = I
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (466,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             (nothingn, resultdef = $void = "untyped", pos = (466,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                             )

                                          )
                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TGraphicsColor = "LongInt", pos = (466,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                                       (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (466,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                                          (subscriptn, resultdef = TFont = "TFont", pos = (466,70), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                                             (loadn, resultdef = TForm = "TForm", pos = (466,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = FORM
                                             )
                                          )
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (466,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       (nothingn, resultdef = $void = "untyped", pos = (466,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       )

                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (476,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (forn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (469,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (469,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (469,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (subn, resultdef = Int64 = "Int64", pos = (469,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (typeconvn, resultdef = Int64 = "Int64", pos = (469,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (469,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetControlCount(<TWinControl>):LongInt;
                              methodpointer =
                              (subscriptn, resultdef = TPanel = "TPanel", pos = (469,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (469,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = FORMMAIN
                                 )
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (469,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (469,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (469,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           value = 1
                        )
                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (470,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (475,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (ifn, resultdef = $void = "untyped", pos = (471,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (isn, resultdef = Boolean = "Boolean", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (calln, resultdef = TControl = "TControl", pos = (471,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetControl(<TWinControl>;const LongInt):TControl;
                                 methodpointer =
                                 (subscriptn, resultdef = TPanel = "TPanel", pos = (471,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (471,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = FORMMAIN
                                    )
                                 )
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (471,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                    (loadn, resultdef = LongInt = "LongInt", pos = (471,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = I
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (471,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    (nothingn, resultdef = $void = "untyped", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                    )

                                 )
                              )
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (471,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (typen, resultdef = TWinControl = "TWinControl", pos = (471,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 )
                              )
                           )
                           (blockn, resultdef = $void = "untyped", pos = (472,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (statementn, resultdef = <nil>, pos = (473,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (calln, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TControl>;TGraphicsColor);
                                    methodpointer =
                                    (calln, resultdef = TControl = "TControl", pos = (473,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetControl(<TWinControl>;const LongInt):TControl;
                                       methodpointer =
                                       (subscriptn, resultdef = TPanel = "TPanel", pos = (473,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = FORMMAIN
                                          )
                                       )
                                       left =
                                       (callparan, resultdef = LongInt = "LongInt", pos = (473,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                          (loadn, resultdef = LongInt = "LongInt", pos = (473,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = I
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (473,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (nothingn, resultdef = $void = "untyped", pos = (473,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TGraphicsColor = "LongInt", pos = (473,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                       (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (473,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                                          (loadn, resultdef = TForm = "TForm", pos = (473,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = FORM
                                          )
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (473,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       (nothingn, resultdef = $void = "untyped", pos = (473,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (474,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (calln, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TFont>;TGraphicsColor);
                                    methodpointer =
                                    (subscriptn, resultdef = TFont = "TFont", pos = (474,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       (calln, resultdef = TControl = "TControl", pos = (474,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetControl(<TWinControl>;const LongInt):TControl;
                                          methodpointer =
                                          (subscriptn, resultdef = TPanel = "TPanel", pos = (474,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = FORMMAIN
                                             )
                                          )
                                          left =
                                          (callparan, resultdef = LongInt = "LongInt", pos = (474,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                             (loadn, resultdef = LongInt = "LongInt", pos = (474,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = I
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (474,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             (nothingn, resultdef = $void = "untyped", pos = (474,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                             )

                                          )
                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TGraphicsColor = "LongInt", pos = (474,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                                       (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (474,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                                          (subscriptn, resultdef = TFont = "TFont", pos = (474,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                                             (loadn, resultdef = TForm = "TForm", pos = (474,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = FORM
                                             )
                                          )
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (474,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       (nothingn, resultdef = $void = "untyped", pos = (474,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       )

                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (494,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (forn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (477,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (477,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (477,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (subn, resultdef = Int64 = "Int64", pos = (477,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (typeconvn, resultdef = Int64 = "Int64", pos = (477,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (477,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetControlCount(<TWinControl>):LongInt;
                              methodpointer =
                              (loadn, resultdef = TForm = "TForm", pos = (477,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = FORM
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (477,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (477,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (477,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           value = 1
                        )
                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (478,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (493,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (ifn, resultdef = $void = "untyped", pos = (479,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (isn, resultdef = Boolean = "Boolean", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (calln, resultdef = TControl = "TControl", pos = (479,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetControl(<TWinControl>;const LongInt):TControl;
                                 methodpointer =
                                 (loadn, resultdef = TForm = "TForm", pos = (479,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = FORM
                                 )
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (479,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                    (loadn, resultdef = LongInt = "LongInt", pos = (479,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = I
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (479,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    (nothingn, resultdef = $void = "untyped", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                    )

                                 )
                              )
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (479,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (typen, resultdef = TWinControl = "TWinControl", pos = (479,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 )
                              )
                           )
                           (blockn, resultdef = $void = "untyped", pos = (480,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (statementn, resultdef = <nil>, pos = (481,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (calln, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TControl>;TGraphicsColor);
                                    methodpointer =
                                    (asn, resultdef = TWinControl = "TWinControl", pos = (481,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                       (calln, resultdef = TControl = "TControl", pos = (481,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetControl(<TWinControl>;const LongInt):TControl;
                                          methodpointer =
                                          (loadn, resultdef = TForm = "TForm", pos = (481,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = FORM
                                          )
                                          left =
                                          (callparan, resultdef = LongInt = "LongInt", pos = (481,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                             (loadn, resultdef = LongInt = "LongInt", pos = (481,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = I
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (481,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             (nothingn, resultdef = $void = "untyped", pos = (481,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                             )

                                          )
                                       )
                                       (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (481,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (typen, resultdef = TWinControl = "TWinControl", pos = (481,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                          )
                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TGraphicsColor = "LongInt", pos = (481,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                       (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (481,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                                          (loadn, resultdef = TForm = "TForm", pos = (481,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = FORM
                                          )
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (481,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       (nothingn, resultdef = $void = "untyped", pos = (481,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (482,72), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (calln, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TFont>;TGraphicsColor);
                                    methodpointer =
                                    (subscriptn, resultdef = TFont = "TFont", pos = (482,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       (asn, resultdef = TWinControl = "TWinControl", pos = (482,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                          (calln, resultdef = TControl = "TControl", pos = (482,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                             proc = GetControl(<TWinControl>;const LongInt):TControl;
                                             methodpointer =
                                             (loadn, resultdef = TForm = "TForm", pos = (482,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = FORM
                                             )
                                             left =
                                             (callparan, resultdef = LongInt = "LongInt", pos = (482,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                                (loadn, resultdef = LongInt = "LongInt", pos = (482,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                   nil
                                                   symbol = I
                                                )

                                             )
                                             (callparan, resultdef = <nil>, pos = (482,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                (nothingn, resultdef = $void = "untyped", pos = (482,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                )

                                             )
                                          )
                                          (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (482,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             (typen, resultdef = TWinControl = "TWinControl", pos = (482,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                             )
                                          )
                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TGraphicsColor = "LongInt", pos = (482,72), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                                       (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (482,72), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                                          (subscriptn, resultdef = TFont = "TFont", pos = (482,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                                             (loadn, resultdef = TForm = "TForm", pos = (482,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = FORM
                                             )
                                          )
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (482,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       (nothingn, resultdef = $void = "untyped", pos = (482,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (484,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (ifn, resultdef = $void = "untyped", pos = (483,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                    (isn, resultdef = Boolean = "Boolean", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                       (calln, resultdef = TControl = "TControl", pos = (483,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetControl(<TWinControl>;const LongInt):TControl;
                                          methodpointer =
                                          (loadn, resultdef = TForm = "TForm", pos = (483,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             nil
                                             symbol = FORM
                                          )
                                          left =
                                          (callparan, resultdef = LongInt = "LongInt", pos = (483,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                             (loadn, resultdef = LongInt = "LongInt", pos = (483,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = I
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (483,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             (nothingn, resultdef = $void = "untyped", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                             )

                                          )
                                       )
                                       (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (483,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (typen, resultdef = TToolBar = "TToolBar", pos = (483,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                          )
                                       )
                                    )
                                    (assignn, resultdef = $void = "untyped", pos = (484,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                       (loadn, resultdef = TToolBar = "TToolBar", pos = (484,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                                          nil
                                          symbol = TB
                                       )
                                       (asn, resultdef = TToolBar = "TToolBar", pos = (484,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                          (calln, resultdef = TControl = "TControl", pos = (484,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                             proc = GetControl(<TWinControl>;const LongInt):TControl;
                                             methodpointer =
                                             (loadn, resultdef = TForm = "TForm", pos = (484,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                nil
                                                symbol = FORM
                                             )
                                             left =
                                             (callparan, resultdef = LongInt = "LongInt", pos = (484,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                                (loadn, resultdef = LongInt = "LongInt", pos = (484,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                   nil
                                                   symbol = I
                                                )

                                             )
                                             (callparan, resultdef = <nil>, pos = (484,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                (nothingn, resultdef = $void = "untyped", pos = (484,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                )

                                             )
                                          )
                                          (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (484,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                             (typen, resultdef = TToolBar = "TToolBar", pos = (484,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                             )
                                          )
                                       )
                                    )
                                    nil
                                    nil
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (492,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (blockn, resultdef = $void = "untyped", pos = (485,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                    (statementn, resultdef = <nil>, pos = (491,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                       (forn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                          (loadn, resultdef = LongInt = "LongInt", pos = (486,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                                             nil
                                             symbol = J
                                          )
                                          (ordconstn, resultdef = LongInt = "LongInt", pos = (486,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                             value = 0
                                          )
                                          (typeconvn, resultdef = LongInt = "LongInt", pos = (486,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                             (subn, resultdef = Int64 = "Int64", pos = (486,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                (typeconvn, resultdef = Int64 = "Int64", pos = (486,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                                   (calln, resultdef = LongInt = "LongInt", pos = (486,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                      proc = GetControlCount(<TWinControl>):LongInt;
                                                      methodpointer =
                                                      (loadn, resultdef = TToolBar = "TToolBar", pos = (486,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                         nil
                                                         symbol = TB
                                                      )
                                                      left =
                                                      (callparan, resultdef = <nil>, pos = (486,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                         (nothingn, resultdef = $void = "untyped", pos = (486,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                         )

                                                      )
                                                   )
                                                )
                                                (ordconstn, resultdef = Int64 = "Int64", pos = (486,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                   value = 1
                                                )
                                             )
                                          )
                                          (blockn, resultdef = $void = "untyped", pos = (487,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                             (statementn, resultdef = <nil>, pos = (488,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                (assignn, resultdef = $void = "untyped", pos = (488,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                   (loadn, resultdef = TToolButton = "TToolButton", pos = (488,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                                                      nil
                                                      symbol = TBT
                                                   )
                                                   (asn, resultdef = TToolButton = "TToolButton", pos = (488,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                      (calln, resultdef = TControl = "TControl", pos = (488,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                         proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                         methodpointer =
                                                         (loadn, resultdef = TToolBar = "TToolBar", pos = (488,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                            nil
                                                            symbol = TB
                                                         )
                                                         left =
                                                         (callparan, resultdef = LongInt = "LongInt", pos = (488,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                                            (loadn, resultdef = LongInt = "LongInt", pos = (488,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                               nil
                                                               symbol = J
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (488,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                            (nothingn, resultdef = $void = "untyped", pos = (488,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                            )

                                                         )
                                                      )
                                                      (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (488,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                         (typen, resultdef = TToolButton = "TToolButton", pos = (488,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                         )
                                                      )
                                                   )
                                                )

                                             )
                                             (statementn, resultdef = <nil>, pos = (489,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                (calln, resultdef = $void = "untyped", pos = (489,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                                                   proc = SetColor(<TControl>;TGraphicsColor);
                                                   methodpointer =
                                                   (loadn, resultdef = TToolButton = "TToolButton", pos = (489,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                      nil
                                                      symbol = TBT
                                                   )
                                                   left =
                                                   (callparan, resultdef = TGraphicsColor = "LongInt", pos = (489,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                                      (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (489,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                                                         (loadn, resultdef = TForm = "TForm", pos = (489,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                            nil
                                                            symbol = FORM
                                                         )
                                                      )

                                                   )
                                                   (callparan, resultdef = <nil>, pos = (489,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                      (nothingn, resultdef = $void = "untyped", pos = (489,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                      )

                                                   )
                                                )

                                             )
                                             (statementn, resultdef = <nil>, pos = (490,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                (calln, resultdef = $void = "untyped", pos = (490,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                                                   proc = SetColor(<TFont>;TGraphicsColor);
                                                   methodpointer =
                                                   (subscriptn, resultdef = TFont = "TFont", pos = (490,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                                                      (loadn, resultdef = TToolButton = "TToolButton", pos = (490,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                         nil
                                                         symbol = TBT
                                                      )
                                                   )
                                                   left =
                                                   (callparan, resultdef = TGraphicsColor = "LongInt", pos = (490,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                                      (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (490,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                                                         (loadn, resultdef = TForm = "TForm", pos = (490,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                            nil
                                                            symbol = FORM
                                                         )
                                                      )

                                                   )
                                                   (callparan, resultdef = <nil>, pos = (490,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                                      (nothingn, resultdef = $void = "untyped", pos = (490,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                                      )

                                                   )
                                                )

                                             )
                                          )
                                       )

                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
         )
         (blockn, resultdef = $void = "untyped", pos = (497,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (499,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (499,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TControl>;TGraphicsColor);
                  methodpointer =
                  (loadn, resultdef = TForm = "TForm", pos = (499,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = FORM
                  )
                  left =
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (499,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (499,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = -2147483617
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (499,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (499,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (500,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (500,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TFont>;TGraphicsColor);
                  methodpointer =
                  (subscriptn, resultdef = TFont = "TFont", pos = (500,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                     (loadn, resultdef = TForm = "TForm", pos = (500,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = FORM
                     )
                  )
                  left =
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (500,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (500,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = -2147483630
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (500,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (500,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
         )
         nil
      )

   )
)

*******************************************************************************
after the firstpass
ApplyTheme(TForm);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (501,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (444,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (calln, resultdef = Boolean = "Boolean", pos = (444,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
            proc = IsDarkTheme:Boolean;
         )
         (blockn, resultdef = $void = "untyped", pos = (445,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (446,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (446,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = TMainMenu = "TMainMenu", pos = (446,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = MM
                  )
                  (calln, resultdef = TMainMenu = "TMainMenu", pos = (446,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = constructor Create(<TMainMenu>;<Class Of TMainMenu>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMainMenu", pos = (446,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TMainMenu = "TMainMenu", pos = (446,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (446,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (niln, resultdef = TComponent = "TComponent", pos = (446,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (446,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (446,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (446,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMainMenu", pos = (446,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                           (typen, resultdef = TMainMenu = "TMainMenu", pos = (446,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           )
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (447,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (447,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = TMenuItem = "TMenuItem", pos = (447,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = MI
                  )
                  (calln, resultdef = TMenuItem = "TMenuItem", pos = (447,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = constructor Create(<TMenuItem>;<Class Of TMenuItem>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMenuItem", pos = (447,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TMenuItem = "TMenuItem", pos = (447,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (447,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (niln, resultdef = TComponent = "TComponent", pos = (447,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (447,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (447,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (447,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMenuItem", pos = (447,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                           (typen, resultdef = TMenuItem = "TMenuItem", pos = (447,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           )
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (448,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (448,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = TToolBar = "TToolBar", pos = (448,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = TB
                  )
                  (calln, resultdef = TToolBar = "TToolBar", pos = (448,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = constructor Create(<TToolBar>;<Class Of TToolBar>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (448,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TToolBar = "TToolBar", pos = (448,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (448,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (niln, resultdef = TComponent = "TComponent", pos = (448,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (448,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (448,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (448,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (448,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                           (typen, resultdef = TToolBar = "TToolBar", pos = (448,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           )
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (449,35), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (449,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = TToolButton = "TToolButton", pos = (449,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = TBT
                  )
                  (calln, resultdef = TToolButton = "TToolButton", pos = (449,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = constructor Create(<TToolButton>;<Class Of TToolButton>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (449,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TToolButton = "TToolButton", pos = (449,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (449,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (niln, resultdef = TComponent = "TComponent", pos = (449,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (449,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (449,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (449,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (449,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                           (typen, resultdef = TToolButton = "TToolButton", pos = (449,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           )
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (450,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (450,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetColor(<TControl>;TGraphicsColor);
                  methodpointer =
                  (loadn, resultdef = TForm = "TForm", pos = (450,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = FORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (450,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TForm = "TForm", pos = (450,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = FORM
                     )

                  )
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (450,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (450,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 2105376
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (451,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (451,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetColor(<TFont>;TGraphicsColor);
                  methodpointer =
                  (subscriptn, resultdef = TFont = "TFont", pos = (451,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                     (loadn, resultdef = TForm = "TForm", pos = (451,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = FORM
                     )
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (451,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TFont = "TFont", pos = (451,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                        (loadn, resultdef = TForm = "TForm", pos = (451,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = FORM
                        )
                     )

                  )
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (451,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (451,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 12632256
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (452,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetColor(<TControl>;TGraphicsColor);
                  methodpointer =
                  (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (452,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = FORMMAIN
                     )
                  )
                  left =
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (452,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (452,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                        (loadn, resultdef = TForm = "TForm", pos = (452,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = FORM
                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (452,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (452,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = FORMMAIN
                        )
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (460,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (blockn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (nothingn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F600
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                        (temprefn, resultdef = LongInt = "LongInt", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (453,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (subn, resultdef = Int64 = "Int64", pos = (453,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                              (typeconvn, resultdef = Int64 = "Int64", pos = (453,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                 (calln, resultdef = LongInt = "LongInt", pos = (453,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    proc = GetControlCount(<TWinControl>):LongInt;
                                    methodpointer =
                                    (subscriptn, resultdef = TPanel = "TPanel", pos = (453,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormMain = "TFormMain", pos = (453,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = FORMMAIN
                                       )
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (453,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                       (subscriptn, resultdef = TPanel = "TPanel", pos = (453,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (453,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = FORMMAIN
                                          )
                                       )

                                    )
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (453,54), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = 1
                              )
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (ifn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (lten, resultdef = Boolean = "Boolean", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (453,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                           (temprefn, resultdef = LongInt = "LongInt", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                           )
                        )
                        (blockn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (nothingn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (453,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    nil
                                    symbol = I
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                    value = -1
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (whilerepeatn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (gten, resultdef = Boolean = "Boolean", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                    (loadn, resultdef = LongInt = "LongInt", pos = (453,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                       nil
                                       symbol = I
                                    )
                                    (temprefn, resultdef = LongInt = "LongInt", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                       temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                                    )
                                 )
                                 (blockn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (nothingn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (assignn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                          (loadn, resultdef = LongInt = "LongInt", pos = (453,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = I
                                          )
                                          (inlinen, resultdef = LongInt = "LongInt", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                             (loadn, resultdef = LongInt = "LongInt", pos = (453,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                nil
                                                symbol = I
                                             )
                                          )
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (blockn, resultdef = $void = "untyped", pos = (454,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (459,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (ifn, resultdef = $void = "untyped", pos = (455,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (calln, resultdef = Boolean = "Boolean", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                   proc = $fpc_do_is(TClass;TObject):Boolean;
                                                   left =
                                                   (callparan, resultdef = TObject = "TObject", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                      (typeconvn, resultdef = TObject = "TObject", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                                         (calln, resultdef = TControl = "TControl", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                            proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                            methodpointer =
                                                            (subscriptn, resultdef = TPanel = "TPanel", pos = (455,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                               (loadn, resultdef = TFormMain = "TFormMain", pos = (455,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = FORMMAIN
                                                               )
                                                            )
                                                            left =
                                                            (callparan, resultdef = <nil>, pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                               (subscriptn, resultdef = TPanel = "TPanel", pos = (455,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                  (loadn, resultdef = TFormMain = "TFormMain", pos = (455,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = FORMMAIN
                                                                  )
                                                               )

                                                            )
                                                            (callparan, resultdef = LongInt = "LongInt", pos = (455,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (455,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = I
                                                               )

                                                            )
                                                         )
                                                      )

                                                   )
                                                   (callparan, resultdef = TClass = "Class Of TObject", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                      (typeconvn, resultdef = TClass = "Class Of TObject", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                         (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                            (typen, resultdef = TWinControl = "TWinControl", pos = (455,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                            )
                                                         )
                                                      )

                                                   )
                                                )
                                                (blockn, resultdef = $void = "untyped", pos = (456,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                   (statementn, resultdef = <nil>, pos = (457,60), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                         proc = SetColor(<TControl>;TGraphicsColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TControl = "TControl", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                            temptypedef = TControl = "TControl", (tempinfo = $000000009081FA80 flags = [ti_may_be_in_reg])
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (statementn, resultdef = <nil>, pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  size = 8, temptypedef = TControl = "TControl", tempinfo = $000000009081FA80
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (assignn, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (temprefn, resultdef = TControl = "TControl", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                     temptypedef = TControl = "TControl", (tempinfo = $000000009081FA80 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (calln, resultdef = TControl = "TControl", pos = (457,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                     proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                     methodpointer =
                                                                     (subscriptn, resultdef = TPanel = "TPanel", pos = (457,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                        (loadn, resultdef = TFormMain = "TFormMain", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = FORMMAIN
                                                                        )
                                                                     )
                                                                     left =
                                                                     (callparan, resultdef = <nil>, pos = (457,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                        (subscriptn, resultdef = TPanel = "TPanel", pos = (457,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                           (loadn, resultdef = TFormMain = "TFormMain", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = FORMMAIN
                                                                           )
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = LongInt = "LongInt", pos = (457,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                        (loadn, resultdef = LongInt = "LongInt", pos = (457,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = I
                                                                        )

                                                                     )
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            (statementn, resultdef = <nil>, pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                               (tempdeleten, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = TControl = "TControl", temptype = tt_persistent, tempinfo = $000000009081FA80
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (457,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                            (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (457,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                               (loadn, resultdef = TForm = "TForm", pos = (457,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = FORM
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (457,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            (temprefn, resultdef = TControl = "TControl", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                               temptypedef = TControl = "TControl", (tempinfo = $000000009081FA80 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = <nil>, pos = (458,70), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                         proc = SetColor(<TFont>;TGraphicsColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TFont = "TFont", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                            temptypedef = TFont = "TFont", (tempinfo = $000000009081FB00 flags = [ti_may_be_in_reg])
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (statementn, resultdef = <nil>, pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  size = 8, temptypedef = TFont = "TFont", tempinfo = $000000009081FB00
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (assignn, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (temprefn, resultdef = TFont = "TFont", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                     temptypedef = TFont = "TFont", (tempinfo = $000000009081FB00 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (subscriptn, resultdef = TFont = "TFont", pos = (458,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                     (calln, resultdef = TControl = "TControl", pos = (458,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                        proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                        methodpointer =
                                                                        (subscriptn, resultdef = TPanel = "TPanel", pos = (458,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                           (loadn, resultdef = TFormMain = "TFormMain", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = FORMMAIN
                                                                           )
                                                                        )
                                                                        left =
                                                                        (callparan, resultdef = <nil>, pos = (458,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                           (subscriptn, resultdef = TPanel = "TPanel", pos = (458,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                              (loadn, resultdef = TFormMain = "TFormMain", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = FORMMAIN
                                                                              )
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = LongInt = "LongInt", pos = (458,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (458,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = I
                                                                           )

                                                                        )
                                                                     )
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            (statementn, resultdef = <nil>, pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                               (tempdeleten, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $000000009081FB00
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (458,70), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                            (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (458,70), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                               (subscriptn, resultdef = TFont = "TFont", pos = (458,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                  (loadn, resultdef = TForm = "TForm", pos = (458,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = FORM
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (458,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            (temprefn, resultdef = TFont = "TFont", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                               temptypedef = TFont = "TFont", (tempinfo = $000000009081FB00 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                )
                                                nil
                                                nil
                                             )

                                          )
                                       )

                                    )
                                 )
                                 nil
                                 nil
                              )

                           )
                        )
                        nil
                        nil
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F600
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (468,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (blockn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (nothingn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F900
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                        (temprefn, resultdef = LongInt = "LongInt", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F900 flags = [ti_may_be_in_reg])
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (461,58), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (subn, resultdef = Int64 = "Int64", pos = (461,58), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                              (typeconvn, resultdef = Int64 = "Int64", pos = (461,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                 (calln, resultdef = LongInt = "LongInt", pos = (461,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    proc = GetControlCount(<TWinControl>):LongInt;
                                    methodpointer =
                                    (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (461,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormMain = "TFormMain", pos = (461,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = FORMMAIN
                                       )
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (461,58), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                       (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (461,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (461,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = FORMMAIN
                                          )
                                       )

                                    )
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (461,60), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = 1
                              )
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (ifn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (lten, resultdef = Boolean = "Boolean", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (461,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                           (temprefn, resultdef = LongInt = "LongInt", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F900 flags = [ti_may_be_in_reg])
                           )
                        )
                        (blockn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (nothingn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (461,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    nil
                                    symbol = I
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                    value = -1
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (whilerepeatn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (gten, resultdef = Boolean = "Boolean", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                    (loadn, resultdef = LongInt = "LongInt", pos = (461,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                       nil
                                       symbol = I
                                    )
                                    (temprefn, resultdef = LongInt = "LongInt", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                       temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F900 flags = [ti_may_be_in_reg])
                                    )
                                 )
                                 (blockn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (nothingn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (assignn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                          (loadn, resultdef = LongInt = "LongInt", pos = (461,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = I
                                          )
                                          (inlinen, resultdef = LongInt = "LongInt", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                             (loadn, resultdef = LongInt = "LongInt", pos = (461,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                nil
                                                symbol = I
                                             )
                                          )
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (blockn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (467,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (ifn, resultdef = $void = "untyped", pos = (463,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (calln, resultdef = Boolean = "Boolean", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                   proc = $fpc_do_is(TClass;TObject):Boolean;
                                                   left =
                                                   (callparan, resultdef = TObject = "TObject", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                      (typeconvn, resultdef = TObject = "TObject", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                                         (calln, resultdef = TControl = "TControl", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                            proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                            methodpointer =
                                                            (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (463,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                               (loadn, resultdef = TFormMain = "TFormMain", pos = (463,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = FORMMAIN
                                                               )
                                                            )
                                                            left =
                                                            (callparan, resultdef = <nil>, pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                               (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (463,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                  (loadn, resultdef = TFormMain = "TFormMain", pos = (463,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = FORMMAIN
                                                                  )
                                                               )

                                                            )
                                                            (callparan, resultdef = LongInt = "LongInt", pos = (463,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (463,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = I
                                                               )

                                                            )
                                                         )
                                                      )

                                                   )
                                                   (callparan, resultdef = TClass = "Class Of TObject", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                      (typeconvn, resultdef = TClass = "Class Of TObject", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                         (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                            (typen, resultdef = TWinControl = "TWinControl", pos = (463,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                            )
                                                         )
                                                      )

                                                   )
                                                )
                                                (blockn, resultdef = $void = "untyped", pos = (464,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                   (statementn, resultdef = <nil>, pos = (465,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                         proc = SetColor(<TControl>;TGraphicsColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TControl = "TControl", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                            temptypedef = TControl = "TControl", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (statementn, resultdef = <nil>, pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  size = 8, temptypedef = TControl = "TControl", tempinfo = $000000009081F800
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (assignn, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (temprefn, resultdef = TControl = "TControl", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                     temptypedef = TControl = "TControl", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (calln, resultdef = TControl = "TControl", pos = (465,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                     proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                     methodpointer =
                                                                     (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (465,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                        (loadn, resultdef = TFormMain = "TFormMain", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = FORMMAIN
                                                                        )
                                                                     )
                                                                     left =
                                                                     (callparan, resultdef = <nil>, pos = (465,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                        (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (465,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                           (loadn, resultdef = TFormMain = "TFormMain", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = FORMMAIN
                                                                           )
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = LongInt = "LongInt", pos = (465,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                        (loadn, resultdef = LongInt = "LongInt", pos = (465,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = I
                                                                        )

                                                                     )
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            (statementn, resultdef = <nil>, pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                               (tempdeleten, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = TControl = "TControl", temptype = tt_persistent, tempinfo = $000000009081F800
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (465,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                            (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (465,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                               (loadn, resultdef = TForm = "TForm", pos = (465,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = FORM
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (465,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            (temprefn, resultdef = TControl = "TControl", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                               temptypedef = TControl = "TControl", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = <nil>, pos = (466,76), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                         proc = SetColor(<TFont>;TGraphicsColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TFont = "TFont", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                            temptypedef = TFont = "TFont", (tempinfo = $000000009081F980 flags = [ti_may_be_in_reg])
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (statementn, resultdef = <nil>, pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  size = 8, temptypedef = TFont = "TFont", tempinfo = $000000009081F980
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (assignn, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (temprefn, resultdef = TFont = "TFont", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                     temptypedef = TFont = "TFont", (tempinfo = $000000009081F980 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (subscriptn, resultdef = TFont = "TFont", pos = (466,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                     (calln, resultdef = TControl = "TControl", pos = (466,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                        proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                        methodpointer =
                                                                        (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (466,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                           (loadn, resultdef = TFormMain = "TFormMain", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = FORMMAIN
                                                                           )
                                                                        )
                                                                        left =
                                                                        (callparan, resultdef = <nil>, pos = (466,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                           (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (466,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                              (loadn, resultdef = TFormMain = "TFormMain", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = FORMMAIN
                                                                              )
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = LongInt = "LongInt", pos = (466,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (466,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = I
                                                                           )

                                                                        )
                                                                     )
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            (statementn, resultdef = <nil>, pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                               (tempdeleten, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $000000009081F980
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (466,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                            (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (466,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                               (subscriptn, resultdef = TFont = "TFont", pos = (466,70), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                  (loadn, resultdef = TForm = "TForm", pos = (466,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = FORM
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (466,58), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            (temprefn, resultdef = TFont = "TFont", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                               temptypedef = TFont = "TFont", (tempinfo = $000000009081F980 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                )
                                                nil
                                                nil
                                             )

                                          )
                                       )

                                    )
                                 )
                                 nil
                                 nil
                              )

                           )
                        )
                        nil
                        nil
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F900
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (476,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (blockn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (nothingn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F700
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                        (temprefn, resultdef = LongInt = "LongInt", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F700 flags = [ti_may_be_in_reg])
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (469,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (subn, resultdef = Int64 = "Int64", pos = (469,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                              (typeconvn, resultdef = Int64 = "Int64", pos = (469,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                 (calln, resultdef = LongInt = "LongInt", pos = (469,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    proc = GetControlCount(<TWinControl>):LongInt;
                                    methodpointer =
                                    (subscriptn, resultdef = TPanel = "TPanel", pos = (469,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormMain = "TFormMain", pos = (469,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = FORMMAIN
                                       )
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (469,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                       (subscriptn, resultdef = TPanel = "TPanel", pos = (469,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (469,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = FORMMAIN
                                          )
                                       )

                                    )
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (469,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = 1
                              )
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (ifn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (lten, resultdef = Boolean = "Boolean", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (469,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                           (temprefn, resultdef = LongInt = "LongInt", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F700 flags = [ti_may_be_in_reg])
                           )
                        )
                        (blockn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (nothingn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (469,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    nil
                                    symbol = I
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                    value = -1
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (whilerepeatn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (gten, resultdef = Boolean = "Boolean", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                    (loadn, resultdef = LongInt = "LongInt", pos = (469,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                       nil
                                       symbol = I
                                    )
                                    (temprefn, resultdef = LongInt = "LongInt", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                       temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F700 flags = [ti_may_be_in_reg])
                                    )
                                 )
                                 (blockn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (nothingn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (assignn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                          (loadn, resultdef = LongInt = "LongInt", pos = (469,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = I
                                          )
                                          (inlinen, resultdef = LongInt = "LongInt", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                             (loadn, resultdef = LongInt = "LongInt", pos = (469,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                nil
                                                symbol = I
                                             )
                                          )
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (blockn, resultdef = $void = "untyped", pos = (470,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (475,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (ifn, resultdef = $void = "untyped", pos = (471,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (calln, resultdef = Boolean = "Boolean", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                   proc = $fpc_do_is(TClass;TObject):Boolean;
                                                   left =
                                                   (callparan, resultdef = TObject = "TObject", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                      (typeconvn, resultdef = TObject = "TObject", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                                         (calln, resultdef = TControl = "TControl", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                            proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                            methodpointer =
                                                            (subscriptn, resultdef = TPanel = "TPanel", pos = (471,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                               (loadn, resultdef = TFormMain = "TFormMain", pos = (471,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = FORMMAIN
                                                               )
                                                            )
                                                            left =
                                                            (callparan, resultdef = <nil>, pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                               (subscriptn, resultdef = TPanel = "TPanel", pos = (471,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                  (loadn, resultdef = TFormMain = "TFormMain", pos = (471,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = FORMMAIN
                                                                  )
                                                               )

                                                            )
                                                            (callparan, resultdef = LongInt = "LongInt", pos = (471,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (471,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = I
                                                               )

                                                            )
                                                         )
                                                      )

                                                   )
                                                   (callparan, resultdef = TClass = "Class Of TObject", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                      (typeconvn, resultdef = TClass = "Class Of TObject", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                         (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                            (typen, resultdef = TWinControl = "TWinControl", pos = (471,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                            )
                                                         )
                                                      )

                                                   )
                                                )
                                                (blockn, resultdef = $void = "untyped", pos = (472,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                   (statementn, resultdef = <nil>, pos = (473,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                         proc = SetColor(<TControl>;TGraphicsColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TControl = "TControl", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                            temptypedef = TControl = "TControl", (tempinfo = $000000009081F880 flags = [ti_may_be_in_reg])
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (statementn, resultdef = <nil>, pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  size = 8, temptypedef = TControl = "TControl", tempinfo = $000000009081F880
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (assignn, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (temprefn, resultdef = TControl = "TControl", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                     temptypedef = TControl = "TControl", (tempinfo = $000000009081F880 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (calln, resultdef = TControl = "TControl", pos = (473,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                     proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                     methodpointer =
                                                                     (subscriptn, resultdef = TPanel = "TPanel", pos = (473,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                        (loadn, resultdef = TFormMain = "TFormMain", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = FORMMAIN
                                                                        )
                                                                     )
                                                                     left =
                                                                     (callparan, resultdef = <nil>, pos = (473,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                        (subscriptn, resultdef = TPanel = "TPanel", pos = (473,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                           (loadn, resultdef = TFormMain = "TFormMain", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = FORMMAIN
                                                                           )
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = LongInt = "LongInt", pos = (473,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                        (loadn, resultdef = LongInt = "LongInt", pos = (473,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = I
                                                                        )

                                                                     )
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            (statementn, resultdef = <nil>, pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                               (tempdeleten, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = TControl = "TControl", temptype = tt_persistent, tempinfo = $000000009081F880
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (473,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                            (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (473,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                               (loadn, resultdef = TForm = "TForm", pos = (473,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = FORM
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (473,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            (temprefn, resultdef = TControl = "TControl", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                               temptypedef = TControl = "TControl", (tempinfo = $000000009081F880 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = <nil>, pos = (474,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                         proc = SetColor(<TFont>;TGraphicsColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TFont = "TFont", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                            temptypedef = TFont = "TFont", (tempinfo = $000000009081F780 flags = [ti_may_be_in_reg])
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (statementn, resultdef = <nil>, pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  size = 8, temptypedef = TFont = "TFont", tempinfo = $000000009081F780
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (assignn, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (temprefn, resultdef = TFont = "TFont", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                     temptypedef = TFont = "TFont", (tempinfo = $000000009081F780 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (subscriptn, resultdef = TFont = "TFont", pos = (474,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                     (calln, resultdef = TControl = "TControl", pos = (474,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                        proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                        methodpointer =
                                                                        (subscriptn, resultdef = TPanel = "TPanel", pos = (474,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                           (loadn, resultdef = TFormMain = "TFormMain", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = FORMMAIN
                                                                           )
                                                                        )
                                                                        left =
                                                                        (callparan, resultdef = <nil>, pos = (474,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                           (subscriptn, resultdef = TPanel = "TPanel", pos = (474,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                              (loadn, resultdef = TFormMain = "TFormMain", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = FORMMAIN
                                                                              )
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = LongInt = "LongInt", pos = (474,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (474,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = I
                                                                           )

                                                                        )
                                                                     )
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            (statementn, resultdef = <nil>, pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                               (tempdeleten, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $000000009081F780
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (474,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                            (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (474,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                               (subscriptn, resultdef = TFont = "TFont", pos = (474,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                  (loadn, resultdef = TForm = "TForm", pos = (474,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = FORM
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (474,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            (temprefn, resultdef = TFont = "TFont", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                               temptypedef = TFont = "TFont", (tempinfo = $000000009081F780 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                )
                                                nil
                                                nil
                                             )

                                          )
                                       )

                                    )
                                 )
                                 nil
                                 nil
                              )

                           )
                        )
                        nil
                        nil
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F700
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (494,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (blockn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (nothingn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081FC80
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                        (temprefn, resultdef = LongInt = "LongInt", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FC80 flags = [ti_may_be_in_reg])
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (477,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (subn, resultdef = Int64 = "Int64", pos = (477,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                              (typeconvn, resultdef = Int64 = "Int64", pos = (477,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                 (calln, resultdef = LongInt = "LongInt", pos = (477,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    proc = GetControlCount(<TWinControl>):LongInt;
                                    methodpointer =
                                    (loadn, resultdef = TForm = "TForm", pos = (477,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = FORM
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (477,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                       (loadn, resultdef = TForm = "TForm", pos = (477,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = FORM
                                       )

                                    )
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (477,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = 1
                              )
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (ifn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (lten, resultdef = Boolean = "Boolean", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (477,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                           (temprefn, resultdef = LongInt = "LongInt", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FC80 flags = [ti_may_be_in_reg])
                           )
                        )
                        (blockn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (nothingn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                 (loadn, resultdef = LongInt = "LongInt", pos = (477,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    nil
                                    symbol = I
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                    value = -1
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (whilerepeatn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (gten, resultdef = Boolean = "Boolean", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                    (loadn, resultdef = LongInt = "LongInt", pos = (477,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                       nil
                                       symbol = I
                                    )
                                    (temprefn, resultdef = LongInt = "LongInt", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                       temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FC80 flags = [ti_may_be_in_reg])
                                    )
                                 )
                                 (blockn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (nothingn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (assignn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                          (loadn, resultdef = LongInt = "LongInt", pos = (477,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = I
                                          )
                                          (inlinen, resultdef = LongInt = "LongInt", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                             (loadn, resultdef = LongInt = "LongInt", pos = (477,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                nil
                                                symbol = I
                                             )
                                          )
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (blockn, resultdef = $void = "untyped", pos = (478,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (493,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (ifn, resultdef = $void = "untyped", pos = (479,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (calln, resultdef = Boolean = "Boolean", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                   proc = $fpc_do_is(TClass;TObject):Boolean;
                                                   left =
                                                   (callparan, resultdef = TObject = "TObject", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                      (typeconvn, resultdef = TObject = "TObject", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                                         (calln, resultdef = TControl = "TControl", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                            proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                            methodpointer =
                                                            (loadn, resultdef = TForm = "TForm", pos = (479,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               nil
                                                               symbol = FORM
                                                            )
                                                            left =
                                                            (callparan, resultdef = LongInt = "LongInt", pos = (479,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (479,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = I
                                                               )

                                                            )
                                                            (callparan, resultdef = <nil>, pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                               (loadn, resultdef = TForm = "TForm", pos = (479,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = FORM
                                                               )

                                                            )
                                                         )
                                                      )

                                                   )
                                                   (callparan, resultdef = TClass = "Class Of TObject", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                      (typeconvn, resultdef = TClass = "Class Of TObject", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                         (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                            (typen, resultdef = TWinControl = "TWinControl", pos = (479,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                            )
                                                         )
                                                      )

                                                   )
                                                )
                                                (blockn, resultdef = $void = "untyped", pos = (480,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                   (statementn, resultdef = <nil>, pos = (481,62), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                         proc = SetColor(<TControl>;TGraphicsColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TWinControl = "TWinControl", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                            temptypedef = TWinControl = "TWinControl", (tempinfo = $000000009081F680 flags = [ti_may_be_in_reg])
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (statementn, resultdef = <nil>, pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  size = 8, temptypedef = TWinControl = "TWinControl", tempinfo = $000000009081F680
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (assignn, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (temprefn, resultdef = TWinControl = "TWinControl", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                     temptypedef = TWinControl = "TWinControl", (tempinfo = $000000009081F680 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (asn, resultdef = TWinControl = "TWinControl", pos = (481,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                                     nil
                                                                     nil
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            (statementn, resultdef = <nil>, pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                               (tempdeleten, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = TWinControl = "TWinControl", temptype = tt_persistent, tempinfo = $000000009081F680
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (481,62), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                            (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (481,62), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                               (loadn, resultdef = TForm = "TForm", pos = (481,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = FORM
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (481,49), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            (temprefn, resultdef = TWinControl = "TWinControl", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                               temptypedef = TWinControl = "TWinControl", (tempinfo = $000000009081F680 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = <nil>, pos = (482,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                         proc = SetColor(<TFont>;TGraphicsColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TFont = "TFont", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                            temptypedef = TFont = "TFont", (tempinfo = $000000009081F400 flags = [ti_may_be_in_reg])
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (statementn, resultdef = <nil>, pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  size = 8, temptypedef = TFont = "TFont", tempinfo = $000000009081F400
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (assignn, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (temprefn, resultdef = TFont = "TFont", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                     temptypedef = TFont = "TFont", (tempinfo = $000000009081F400 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (subscriptn, resultdef = TFont = "TFont", pos = (482,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                     (asn, resultdef = TWinControl = "TWinControl", pos = (482,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                                        nil
                                                                        nil
                                                                     )
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            (statementn, resultdef = <nil>, pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                               (tempdeleten, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $000000009081F400
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TGraphicsColor = "LongInt", pos = (482,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                            (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (482,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                               (subscriptn, resultdef = TFont = "TFont", pos = (482,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                  (loadn, resultdef = TForm = "TForm", pos = (482,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = FORM
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (482,54), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            (temprefn, resultdef = TFont = "TFont", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                               temptypedef = TFont = "TFont", (tempinfo = $000000009081F400 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = <nil>, pos = (484,45), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (ifn, resultdef = $void = "untyped", pos = (483,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (calln, resultdef = Boolean = "Boolean", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                            proc = $fpc_do_is(TClass;TObject):Boolean;
                                                            left =
                                                            (callparan, resultdef = TObject = "TObject", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                               (typeconvn, resultdef = TObject = "TObject", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                                                  (calln, resultdef = TControl = "TControl", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                     proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                     methodpointer =
                                                                     (loadn, resultdef = TForm = "TForm", pos = (483,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = FORM
                                                                     )
                                                                     left =
                                                                     (callparan, resultdef = LongInt = "LongInt", pos = (483,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                        (loadn, resultdef = LongInt = "LongInt", pos = (483,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = I
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = <nil>, pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                        (loadn, resultdef = TForm = "TForm", pos = (483,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = FORM
                                                                        )

                                                                     )
                                                                  )
                                                               )

                                                            )
                                                            (callparan, resultdef = TClass = "Class Of TObject", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                               (typeconvn, resultdef = TClass = "Class Of TObject", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                                     (typen, resultdef = TToolBar = "TToolBar", pos = (483,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                     )
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         (assignn, resultdef = $void = "untyped", pos = (484,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (loadn, resultdef = TToolBar = "TToolBar", pos = (484,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                               nil
                                                               symbol = TB
                                                            )
                                                            (asn, resultdef = TToolBar = "TToolBar", pos = (484,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                               nil
                                                               nil
                                                            )
                                                         )
                                                         nil
                                                         nil
                                                      )

                                                   )
                                                   (statementn, resultdef = <nil>, pos = (492,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (blockn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (nothingn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (tempcreaten, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                               size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F580
                                                               [ti_may_be_in_reg]
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (assignn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                                                               (temprefn, resultdef = LongInt = "LongInt", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                  temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F580 flags = [ti_may_be_in_reg])
                                                               )
                                                               (typeconvn, resultdef = LongInt = "LongInt", pos = (486,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                                                  (subn, resultdef = Int64 = "Int64", pos = (486,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                                     (typeconvn, resultdef = Int64 = "Int64", pos = (486,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                                                        (calln, resultdef = LongInt = "LongInt", pos = (486,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                           proc = GetControlCount(<TWinControl>):LongInt;
                                                                           methodpointer =
                                                                           (loadn, resultdef = TToolBar = "TToolBar", pos = (486,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = TB
                                                                           )
                                                                           left =
                                                                           (callparan, resultdef = <nil>, pos = (486,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                              (loadn, resultdef = TToolBar = "TToolBar", pos = (486,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = TB
                                                                              )

                                                                           )
                                                                        )
                                                                     )
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (486,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                        value = 1
                                                                     )
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (ifn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (lten, resultdef = Boolean = "Boolean", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                                                  (ordconstn, resultdef = LongInt = "LongInt", pos = (486,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                     value = 0
                                                                  )
                                                                  (temprefn, resultdef = LongInt = "LongInt", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                     temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F580 flags = [ti_may_be_in_reg])
                                                                  )
                                                               )
                                                               (blockn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (nothingn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (assignn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                                                        (loadn, resultdef = LongInt = "LongInt", pos = (486,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                           nil
                                                                           symbol = J
                                                                        )
                                                                        (ordconstn, resultdef = LongInt = "LongInt", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                                                           value = -1
                                                                        )
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (whilerepeatn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (gten, resultdef = Boolean = "Boolean", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (486,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                              nil
                                                                              symbol = J
                                                                           )
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F580 flags = [ti_may_be_in_reg])
                                                                           )
                                                                        )
                                                                        (blockn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                           (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                              (nothingn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                              (assignn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                                                                 (loadn, resultdef = LongInt = "LongInt", pos = (486,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                    nil
                                                                                    symbol = J
                                                                                 )
                                                                                 (inlinen, resultdef = LongInt = "LongInt", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                                                                    (loadn, resultdef = LongInt = "LongInt", pos = (486,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                       nil
                                                                                       symbol = J
                                                                                    )
                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                              (blockn, resultdef = $void = "untyped", pos = (487,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                 (statementn, resultdef = <nil>, pos = (488,49), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (assignn, resultdef = $void = "untyped", pos = (488,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                       (loadn, resultdef = TToolButton = "TToolButton", pos = (488,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                          nil
                                                                                          symbol = TBT
                                                                                       )
                                                                                       (asn, resultdef = TToolButton = "TToolButton", pos = (488,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                                                          nil
                                                                                          nil
                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = <nil>, pos = (489,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (calln, resultdef = $void = "untyped", pos = (489,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                                                       proc = SetColor(<TControl>;TGraphicsColor);
                                                                                       methodpointer =
                                                                                       (loadn, resultdef = TToolButton = "TToolButton", pos = (489,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                          nil
                                                                                          symbol = TBT
                                                                                       )
                                                                                       left =
                                                                                       (callparan, resultdef = TGraphicsColor = "LongInt", pos = (489,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                                          (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (489,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                                             (loadn, resultdef = TForm = "TForm", pos = (489,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                nil
                                                                                                symbol = FORM
                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = <nil>, pos = (489,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                          (loadn, resultdef = TToolButton = "TToolButton", pos = (489,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                             nil
                                                                                             symbol = TBT
                                                                                          )

                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = <nil>, pos = (490,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (calln, resultdef = $void = "untyped", pos = (490,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                                                       proc = SetColor(<TFont>;TGraphicsColor);
                                                                                       methodpointer =
                                                                                       (subscriptn, resultdef = TFont = "TFont", pos = (490,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                                          (loadn, resultdef = TToolButton = "TToolButton", pos = (490,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                             nil
                                                                                             symbol = TBT
                                                                                          )
                                                                                       )
                                                                                       left =
                                                                                       (callparan, resultdef = TGraphicsColor = "LongInt", pos = (490,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                                          (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (490,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                                             (loadn, resultdef = TForm = "TForm", pos = (490,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                nil
                                                                                                symbol = FORM
                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = <nil>, pos = (490,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                                          (subscriptn, resultdef = TFont = "TFont", pos = (490,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                                             (loadn, resultdef = TToolButton = "TToolButton", pos = (490,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                nil
                                                                                                symbol = TBT
                                                                                             )
                                                                                          )

                                                                                       )
                                                                                    )

                                                                                 )
                                                                              )

                                                                           )
                                                                        )
                                                                        nil
                                                                        nil
                                                                     )

                                                                  )
                                                               )
                                                               nil
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                            (tempdeleten, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                               release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F580
                                                            )

                                                         )
                                                      )

                                                   )
                                                )
                                                nil
                                                nil
                                             )

                                          )
                                       )

                                    )
                                 )
                                 nil
                                 nil
                              )

                           )
                        )
                        nil
                        nil
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081FC80
                     )

                  )
               )

            )
         )
         (blockn, resultdef = $void = "untyped", pos = (497,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (499,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (499,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetColor(<TControl>;TGraphicsColor);
                  methodpointer =
                  (loadn, resultdef = TForm = "TForm", pos = (499,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = FORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (499,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TForm = "TForm", pos = (499,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = FORM
                     )

                  )
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (499,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (499,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = -2147483617
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (500,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (500,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetColor(<TFont>;TGraphicsColor);
                  methodpointer =
                  (subscriptn, resultdef = TFont = "TFont", pos = (500,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                     (loadn, resultdef = TForm = "TForm", pos = (500,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = FORM
                     )
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (500,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TFont = "TFont", pos = (500,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                        (loadn, resultdef = TForm = "TForm", pos = (500,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = FORM
                        )
                     )

                  )
                  (callparan, resultdef = TGraphicsColor = "LongInt", pos = (500,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (500,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = -2147483630
                     )

                  )
               )

            )
         )
         nil
      )

   )
)

*******************************************************************************
right before code generation
ApplyTheme(TForm);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (442,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (501,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (444,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (calln, resultdef = Boolean = "Boolean", pos = (444,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                  proc = IsDarkTheme:Boolean;
               )
               (blockn, resultdef = $void = "untyped", pos = (445,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (446,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (446,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (loadn, resultdef = TMainMenu = "TMainMenu", pos = (446,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = MM
                        )
                        (calln, resultdef = TMainMenu = "TMainMenu", pos = (446,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                           proc = constructor Create(<TMainMenu>;<Class Of TMainMenu>;TComponent);
                           methodpointer =
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMainMenu", pos = (446,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                              (typen, resultdef = TMainMenu = "TMainMenu", pos = (446,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              )
                           )
                           left =
                           (callparan, resultdef = TComponent = "TComponent", pos = (446,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                              (niln, resultdef = TComponent = "TComponent", pos = (446,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (446,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                              (pointerconstn, resultdef = Pointer = "^untyped", pos = (446,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = $0000000000000001
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (446,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMainMenu", pos = (446,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                 (typen, resultdef = TMainMenu = "TMainMenu", pos = (446,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 )
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (447,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (447,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (loadn, resultdef = TMenuItem = "TMenuItem", pos = (447,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = MI
                        )
                        (calln, resultdef = TMenuItem = "TMenuItem", pos = (447,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                           proc = constructor Create(<TMenuItem>;<Class Of TMenuItem>;TComponent);
                           methodpointer =
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMenuItem", pos = (447,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                              (typen, resultdef = TMenuItem = "TMenuItem", pos = (447,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              )
                           )
                           left =
                           (callparan, resultdef = TComponent = "TComponent", pos = (447,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                              (niln, resultdef = TComponent = "TComponent", pos = (447,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (447,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                              (pointerconstn, resultdef = Pointer = "^untyped", pos = (447,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = $0000000000000001
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (447,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMenuItem", pos = (447,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                 (typen, resultdef = TMenuItem = "TMenuItem", pos = (447,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 )
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (448,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (448,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (loadn, resultdef = TToolBar = "TToolBar", pos = (448,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = TB
                        )
                        (calln, resultdef = TToolBar = "TToolBar", pos = (448,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                           proc = constructor Create(<TToolBar>;<Class Of TToolBar>;TComponent);
                           methodpointer =
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (448,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                              (typen, resultdef = TToolBar = "TToolBar", pos = (448,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              )
                           )
                           left =
                           (callparan, resultdef = TComponent = "TComponent", pos = (448,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                              (niln, resultdef = TComponent = "TComponent", pos = (448,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (448,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                              (pointerconstn, resultdef = Pointer = "^untyped", pos = (448,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = $0000000000000001
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (448,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (448,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                 (typen, resultdef = TToolBar = "TToolBar", pos = (448,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 )
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (449,35), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (449,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (loadn, resultdef = TToolButton = "TToolButton", pos = (449,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = TBT
                        )
                        (calln, resultdef = TToolButton = "TToolButton", pos = (449,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                           proc = constructor Create(<TToolButton>;<Class Of TToolButton>;TComponent);
                           methodpointer =
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (449,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                              (typen, resultdef = TToolButton = "TToolButton", pos = (449,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              )
                           )
                           left =
                           (callparan, resultdef = TComponent = "TComponent", pos = (449,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                              (niln, resultdef = TComponent = "TComponent", pos = (449,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (449,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                              (pointerconstn, resultdef = Pointer = "^untyped", pos = (449,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = $0000000000000001
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (449,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (449,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                 (typen, resultdef = TToolButton = "TToolButton", pos = (449,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 )
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (450,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (450,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetColor(<TControl>;TGraphicsColor);
                        methodpointer =
                        (loadn, resultdef = TForm = "TForm", pos = (450,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = FORM
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (450,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TForm = "TForm", pos = (450,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = FORM
                           )

                        )
                        (callparan, resultdef = TGraphicsColor = "LongInt", pos = (450,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (450,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 2105376
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (451,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (451,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetColor(<TFont>;TGraphicsColor);
                        methodpointer =
                        (subscriptn, resultdef = TFont = "TFont", pos = (451,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                           (loadn, resultdef = TForm = "TForm", pos = (451,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = FORM
                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (451,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TFont = "TFont", pos = (451,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                              (loadn, resultdef = TForm = "TForm", pos = (451,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = FORM
                              )
                           )

                        )
                        (callparan, resultdef = TGraphicsColor = "LongInt", pos = (451,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (451,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 12632256
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (452,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetColor(<TControl>;TGraphicsColor);
                        methodpointer =
                        (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (452,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = FORMMAIN
                           )
                        )
                        left =
                        (callparan, resultdef = TGraphicsColor = "LongInt", pos = (452,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (452,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                              (loadn, resultdef = TForm = "TForm", pos = (452,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = FORM
                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (452,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (452,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = FORMMAIN
                              )
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (460,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (blockn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (nothingn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (tempcreaten, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F600
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (assignn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                              (temprefn, resultdef = LongInt = "LongInt", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                 temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                              )
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (453,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (453,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (453,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                       (calln, resultdef = LongInt = "LongInt", pos = (453,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetControlCount(<TWinControl>):LongInt;
                                          methodpointer =
                                          (subscriptn, resultdef = TPanel = "TPanel", pos = (453,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (453,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = FORMMAIN
                                             )
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (453,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                             (subscriptn, resultdef = TPanel = "TPanel", pos = (453,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                (loadn, resultdef = TFormMain = "TFormMain", pos = (453,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = FORMMAIN
                                                )
                                             )

                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (453,54), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 1
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (ifn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (lten, resultdef = Boolean = "Boolean", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (453,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                                 (temprefn, resultdef = LongInt = "LongInt", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                                 )
                              )
                              (blockn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (nothingn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (assignn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                       (loadn, resultdef = LongInt = "LongInt", pos = (453,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                          nil
                                          symbol = I
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                          value = -1
                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (whilerepeatn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (gten, resultdef = Boolean = "Boolean", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                          (loadn, resultdef = LongInt = "LongInt", pos = (453,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = I
                                          )
                                          (temprefn, resultdef = LongInt = "LongInt", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                             temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F600 flags = [ti_may_be_in_reg])
                                          )
                                       )
                                       (blockn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (nothingn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                                (loadn, resultdef = LongInt = "LongInt", pos = (453,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   nil
                                                   symbol = I
                                                )
                                                (inlinen, resultdef = LongInt = "LongInt", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (453,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                      nil
                                                      symbol = I
                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (blockn, resultdef = $void = "untyped", pos = (454,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (statementn, resultdef = <nil>, pos = (459,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (ifn, resultdef = $void = "untyped", pos = (455,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (calln, resultdef = Boolean = "Boolean", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                         proc = $fpc_do_is(TClass;TObject):Boolean;
                                                         left =
                                                         (callparan, resultdef = TObject = "TObject", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                            (typeconvn, resultdef = TObject = "TObject", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                                               (calln, resultdef = TControl = "TControl", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                  proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                  methodpointer =
                                                                  (subscriptn, resultdef = TPanel = "TPanel", pos = (455,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                     (loadn, resultdef = TFormMain = "TFormMain", pos = (455,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = FORMMAIN
                                                                     )
                                                                  )
                                                                  left =
                                                                  (callparan, resultdef = <nil>, pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                     (subscriptn, resultdef = TPanel = "TPanel", pos = (455,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                        (loadn, resultdef = TFormMain = "TFormMain", pos = (455,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = FORMMAIN
                                                                        )
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = LongInt = "LongInt", pos = (455,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                     (loadn, resultdef = LongInt = "LongInt", pos = (455,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = I
                                                                     )

                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = TClass = "Class Of TObject", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                            (typeconvn, resultdef = TClass = "Class Of TObject", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (455,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                                  (typen, resultdef = TWinControl = "TWinControl", pos = (455,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                  )
                                                               )
                                                            )

                                                         )
                                                      )
                                                      (blockn, resultdef = $void = "untyped", pos = (456,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (statementn, resultdef = <nil>, pos = (457,60), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (calln, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                               proc = SetColor(<TControl>;TGraphicsColor);
                                                               methodpointer =
                                                               (temprefn, resultdef = TControl = "TControl", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                  temptypedef = TControl = "TControl", (tempinfo = $000000009081FA80 flags = [ti_may_be_in_reg])
                                                               )
                                                               callinitblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (statementn, resultdef = <nil>, pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        size = 8, temptypedef = TControl = "TControl", tempinfo = $000000009081FA80
                                                                        [ti_may_be_in_reg]
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                     (assignn, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (temprefn, resultdef = TControl = "TControl", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                           temptypedef = TControl = "TControl", (tempinfo = $000000009081FA80 flags = [ti_may_be_in_reg])
                                                                        )
                                                                        (calln, resultdef = TControl = "TControl", pos = (457,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                           proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                           methodpointer =
                                                                           (subscriptn, resultdef = TPanel = "TPanel", pos = (457,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                              (loadn, resultdef = TFormMain = "TFormMain", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = FORMMAIN
                                                                              )
                                                                           )
                                                                           left =
                                                                           (callparan, resultdef = <nil>, pos = (457,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                              (subscriptn, resultdef = TPanel = "TPanel", pos = (457,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = FORMMAIN
                                                                                 )
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = LongInt = "LongInt", pos = (457,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (457,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = I
                                                                              )

                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                               )
                                                               callcleanupblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  (statementn, resultdef = <nil>, pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                     (tempdeleten, resultdef = $void = "untyped", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        release_to_normal: FALSE, temptypedef = TControl = "TControl", temptype = tt_persistent, tempinfo = $000000009081FA80
                                                                     )

                                                                  )
                                                               )
                                                               left =
                                                               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (457,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                  (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (457,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                     (loadn, resultdef = TForm = "TForm", pos = (457,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = FORM
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = <nil>, pos = (457,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = TControl = "TControl", pos = (457,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                     temptypedef = TControl = "TControl", (tempinfo = $000000009081FA80 flags = [ti_may_be_in_reg])
                                                                  )

                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (458,70), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (calln, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                               proc = SetColor(<TFont>;TGraphicsColor);
                                                               methodpointer =
                                                               (temprefn, resultdef = TFont = "TFont", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                  temptypedef = TFont = "TFont", (tempinfo = $000000009081FB00 flags = [ti_may_be_in_reg])
                                                               )
                                                               callinitblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (statementn, resultdef = <nil>, pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        size = 8, temptypedef = TFont = "TFont", tempinfo = $000000009081FB00
                                                                        [ti_may_be_in_reg]
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                     (assignn, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (temprefn, resultdef = TFont = "TFont", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                           temptypedef = TFont = "TFont", (tempinfo = $000000009081FB00 flags = [ti_may_be_in_reg])
                                                                        )
                                                                        (subscriptn, resultdef = TFont = "TFont", pos = (458,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                           (calln, resultdef = TControl = "TControl", pos = (458,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                              proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                              methodpointer =
                                                                              (subscriptn, resultdef = TPanel = "TPanel", pos = (458,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = FORMMAIN
                                                                                 )
                                                                              )
                                                                              left =
                                                                              (callparan, resultdef = <nil>, pos = (458,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                                 (subscriptn, resultdef = TPanel = "TPanel", pos = (458,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = FORMMAIN
                                                                                    )
                                                                                 )

                                                                              )
                                                                              (callparan, resultdef = LongInt = "LongInt", pos = (458,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                 (loadn, resultdef = LongInt = "LongInt", pos = (458,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = I
                                                                                 )

                                                                              )
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                               )
                                                               callcleanupblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  (statementn, resultdef = <nil>, pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                     (tempdeleten, resultdef = $void = "untyped", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $000000009081FB00
                                                                     )

                                                                  )
                                                               )
                                                               left =
                                                               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (458,70), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                                  (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (458,70), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                     (subscriptn, resultdef = TFont = "TFont", pos = (458,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                        (loadn, resultdef = TForm = "TForm", pos = (458,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = FORM
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = <nil>, pos = (458,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = TFont = "TFont", pos = (458,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                     temptypedef = TFont = "TFont", (tempinfo = $000000009081FB00 flags = [ti_may_be_in_reg])
                                                                  )

                                                               )
                                                            )

                                                         )
                                                      )
                                                      nil
                                                      nil
                                                   )

                                                )
                                             )

                                          )
                                       )
                                       nil
                                       nil
                                    )

                                 )
                              )
                              nil
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           (tempdeleten, resultdef = $void = "untyped", pos = (453,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F600
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (468,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (blockn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (nothingn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (tempcreaten, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F900
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (assignn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                              (temprefn, resultdef = LongInt = "LongInt", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                 temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F900 flags = [ti_may_be_in_reg])
                              )
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (461,58), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (461,58), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (461,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                       (calln, resultdef = LongInt = "LongInt", pos = (461,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetControlCount(<TWinControl>):LongInt;
                                          methodpointer =
                                          (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (461,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (461,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = FORMMAIN
                                             )
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (461,58), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                             (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (461,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                (loadn, resultdef = TFormMain = "TFormMain", pos = (461,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = FORMMAIN
                                                )
                                             )

                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (461,60), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 1
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (ifn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (lten, resultdef = Boolean = "Boolean", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (461,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                                 (temprefn, resultdef = LongInt = "LongInt", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F900 flags = [ti_may_be_in_reg])
                                 )
                              )
                              (blockn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (nothingn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (assignn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                       (loadn, resultdef = LongInt = "LongInt", pos = (461,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                          nil
                                          symbol = I
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                          value = -1
                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (whilerepeatn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (gten, resultdef = Boolean = "Boolean", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                          (loadn, resultdef = LongInt = "LongInt", pos = (461,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = I
                                          )
                                          (temprefn, resultdef = LongInt = "LongInt", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                             temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F900 flags = [ti_may_be_in_reg])
                                          )
                                       )
                                       (blockn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (nothingn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                                (loadn, resultdef = LongInt = "LongInt", pos = (461,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   nil
                                                   symbol = I
                                                )
                                                (inlinen, resultdef = LongInt = "LongInt", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (461,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                      nil
                                                      symbol = I
                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (blockn, resultdef = $void = "untyped", pos = (462,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (statementn, resultdef = <nil>, pos = (467,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (ifn, resultdef = $void = "untyped", pos = (463,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (calln, resultdef = Boolean = "Boolean", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                         proc = $fpc_do_is(TClass;TObject):Boolean;
                                                         left =
                                                         (callparan, resultdef = TObject = "TObject", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                            (typeconvn, resultdef = TObject = "TObject", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                                               (calln, resultdef = TControl = "TControl", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                  proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                  methodpointer =
                                                                  (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (463,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                     (loadn, resultdef = TFormMain = "TFormMain", pos = (463,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = FORMMAIN
                                                                     )
                                                                  )
                                                                  left =
                                                                  (callparan, resultdef = <nil>, pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                     (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (463,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                        (loadn, resultdef = TFormMain = "TFormMain", pos = (463,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = FORMMAIN
                                                                        )
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = LongInt = "LongInt", pos = (463,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                     (loadn, resultdef = LongInt = "LongInt", pos = (463,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = I
                                                                     )

                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = TClass = "Class Of TObject", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                            (typeconvn, resultdef = TClass = "Class Of TObject", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (463,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                                  (typen, resultdef = TWinControl = "TWinControl", pos = (463,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                  )
                                                               )
                                                            )

                                                         )
                                                      )
                                                      (blockn, resultdef = $void = "untyped", pos = (464,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (statementn, resultdef = <nil>, pos = (465,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (calln, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                               proc = SetColor(<TControl>;TGraphicsColor);
                                                               methodpointer =
                                                               (temprefn, resultdef = TControl = "TControl", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                  temptypedef = TControl = "TControl", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                               )
                                                               callinitblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (statementn, resultdef = <nil>, pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        size = 8, temptypedef = TControl = "TControl", tempinfo = $000000009081F800
                                                                        [ti_may_be_in_reg]
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                     (assignn, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (temprefn, resultdef = TControl = "TControl", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                           temptypedef = TControl = "TControl", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                                        )
                                                                        (calln, resultdef = TControl = "TControl", pos = (465,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                           proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                           methodpointer =
                                                                           (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (465,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                              (loadn, resultdef = TFormMain = "TFormMain", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = FORMMAIN
                                                                              )
                                                                           )
                                                                           left =
                                                                           (callparan, resultdef = <nil>, pos = (465,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                              (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (465,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = FORMMAIN
                                                                                 )
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = LongInt = "LongInt", pos = (465,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (465,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = I
                                                                              )

                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                               )
                                                               callcleanupblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  (statementn, resultdef = <nil>, pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                     (tempdeleten, resultdef = $void = "untyped", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        release_to_normal: FALSE, temptypedef = TControl = "TControl", temptype = tt_persistent, tempinfo = $000000009081F800
                                                                     )

                                                                  )
                                                               )
                                                               left =
                                                               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (465,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                  (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (465,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                     (loadn, resultdef = TForm = "TForm", pos = (465,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = FORM
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = <nil>, pos = (465,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = TControl = "TControl", pos = (465,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                     temptypedef = TControl = "TControl", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                                  )

                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (466,76), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (calln, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                               proc = SetColor(<TFont>;TGraphicsColor);
                                                               methodpointer =
                                                               (temprefn, resultdef = TFont = "TFont", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                  temptypedef = TFont = "TFont", (tempinfo = $000000009081F980 flags = [ti_may_be_in_reg])
                                                               )
                                                               callinitblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (statementn, resultdef = <nil>, pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        size = 8, temptypedef = TFont = "TFont", tempinfo = $000000009081F980
                                                                        [ti_may_be_in_reg]
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                     (assignn, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (temprefn, resultdef = TFont = "TFont", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                           temptypedef = TFont = "TFont", (tempinfo = $000000009081F980 flags = [ti_may_be_in_reg])
                                                                        )
                                                                        (subscriptn, resultdef = TFont = "TFont", pos = (466,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                           (calln, resultdef = TControl = "TControl", pos = (466,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                              proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                              methodpointer =
                                                                              (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (466,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = FORMMAIN
                                                                                 )
                                                                              )
                                                                              left =
                                                                              (callparan, resultdef = <nil>, pos = (466,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                                 (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (466,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = FORMMAIN
                                                                                    )
                                                                                 )

                                                                              )
                                                                              (callparan, resultdef = LongInt = "LongInt", pos = (466,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                 (loadn, resultdef = LongInt = "LongInt", pos = (466,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = I
                                                                                 )

                                                                              )
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                               )
                                                               callcleanupblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  (statementn, resultdef = <nil>, pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                     (tempdeleten, resultdef = $void = "untyped", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $000000009081F980
                                                                     )

                                                                  )
                                                               )
                                                               left =
                                                               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (466,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                                  (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (466,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                     (subscriptn, resultdef = TFont = "TFont", pos = (466,70), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                        (loadn, resultdef = TForm = "TForm", pos = (466,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = FORM
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = <nil>, pos = (466,58), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = TFont = "TFont", pos = (466,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                     temptypedef = TFont = "TFont", (tempinfo = $000000009081F980 flags = [ti_may_be_in_reg])
                                                                  )

                                                               )
                                                            )

                                                         )
                                                      )
                                                      nil
                                                      nil
                                                   )

                                                )
                                             )

                                          )
                                       )
                                       nil
                                       nil
                                    )

                                 )
                              )
                              nil
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           (tempdeleten, resultdef = $void = "untyped", pos = (461,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F900
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (476,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (blockn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (nothingn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (tempcreaten, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F700
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (assignn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                              (temprefn, resultdef = LongInt = "LongInt", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                 temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F700 flags = [ti_may_be_in_reg])
                              )
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (469,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (469,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (469,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                       (calln, resultdef = LongInt = "LongInt", pos = (469,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetControlCount(<TWinControl>):LongInt;
                                          methodpointer =
                                          (subscriptn, resultdef = TPanel = "TPanel", pos = (469,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (469,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = FORMMAIN
                                             )
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (469,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                             (subscriptn, resultdef = TPanel = "TPanel", pos = (469,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                (loadn, resultdef = TFormMain = "TFormMain", pos = (469,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = FORMMAIN
                                                )
                                             )

                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (469,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 1
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (ifn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (lten, resultdef = Boolean = "Boolean", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (469,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                                 (temprefn, resultdef = LongInt = "LongInt", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F700 flags = [ti_may_be_in_reg])
                                 )
                              )
                              (blockn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (nothingn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (assignn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                       (loadn, resultdef = LongInt = "LongInt", pos = (469,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                          nil
                                          symbol = I
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                          value = -1
                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (whilerepeatn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (gten, resultdef = Boolean = "Boolean", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                          (loadn, resultdef = LongInt = "LongInt", pos = (469,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = I
                                          )
                                          (temprefn, resultdef = LongInt = "LongInt", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                             temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F700 flags = [ti_may_be_in_reg])
                                          )
                                       )
                                       (blockn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (nothingn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                                (loadn, resultdef = LongInt = "LongInt", pos = (469,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   nil
                                                   symbol = I
                                                )
                                                (inlinen, resultdef = LongInt = "LongInt", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (469,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                      nil
                                                      symbol = I
                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (blockn, resultdef = $void = "untyped", pos = (470,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (statementn, resultdef = <nil>, pos = (475,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (ifn, resultdef = $void = "untyped", pos = (471,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (calln, resultdef = Boolean = "Boolean", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                         proc = $fpc_do_is(TClass;TObject):Boolean;
                                                         left =
                                                         (callparan, resultdef = TObject = "TObject", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                            (typeconvn, resultdef = TObject = "TObject", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                                               (calln, resultdef = TControl = "TControl", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                  proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                  methodpointer =
                                                                  (subscriptn, resultdef = TPanel = "TPanel", pos = (471,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                     (loadn, resultdef = TFormMain = "TFormMain", pos = (471,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = FORMMAIN
                                                                     )
                                                                  )
                                                                  left =
                                                                  (callparan, resultdef = <nil>, pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                     (subscriptn, resultdef = TPanel = "TPanel", pos = (471,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                        (loadn, resultdef = TFormMain = "TFormMain", pos = (471,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = FORMMAIN
                                                                        )
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = LongInt = "LongInt", pos = (471,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                     (loadn, resultdef = LongInt = "LongInt", pos = (471,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = I
                                                                     )

                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = TClass = "Class Of TObject", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                            (typeconvn, resultdef = TClass = "Class Of TObject", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (471,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                                  (typen, resultdef = TWinControl = "TWinControl", pos = (471,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                  )
                                                               )
                                                            )

                                                         )
                                                      )
                                                      (blockn, resultdef = $void = "untyped", pos = (472,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (statementn, resultdef = <nil>, pos = (473,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (calln, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                               proc = SetColor(<TControl>;TGraphicsColor);
                                                               methodpointer =
                                                               (temprefn, resultdef = TControl = "TControl", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                  temptypedef = TControl = "TControl", (tempinfo = $000000009081F880 flags = [ti_may_be_in_reg])
                                                               )
                                                               callinitblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (statementn, resultdef = <nil>, pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        size = 8, temptypedef = TControl = "TControl", tempinfo = $000000009081F880
                                                                        [ti_may_be_in_reg]
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                     (assignn, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (temprefn, resultdef = TControl = "TControl", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                           temptypedef = TControl = "TControl", (tempinfo = $000000009081F880 flags = [ti_may_be_in_reg])
                                                                        )
                                                                        (calln, resultdef = TControl = "TControl", pos = (473,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                           proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                           methodpointer =
                                                                           (subscriptn, resultdef = TPanel = "TPanel", pos = (473,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                              (loadn, resultdef = TFormMain = "TFormMain", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = FORMMAIN
                                                                              )
                                                                           )
                                                                           left =
                                                                           (callparan, resultdef = <nil>, pos = (473,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                              (subscriptn, resultdef = TPanel = "TPanel", pos = (473,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = FORMMAIN
                                                                                 )
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = LongInt = "LongInt", pos = (473,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (473,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = I
                                                                              )

                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                               )
                                                               callcleanupblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  (statementn, resultdef = <nil>, pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                     (tempdeleten, resultdef = $void = "untyped", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        release_to_normal: FALSE, temptypedef = TControl = "TControl", temptype = tt_persistent, tempinfo = $000000009081F880
                                                                     )

                                                                  )
                                                               )
                                                               left =
                                                               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (473,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                  (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (473,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                     (loadn, resultdef = TForm = "TForm", pos = (473,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = FORM
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = <nil>, pos = (473,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = TControl = "TControl", pos = (473,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                     temptypedef = TControl = "TControl", (tempinfo = $000000009081F880 flags = [ti_may_be_in_reg])
                                                                  )

                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (474,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (calln, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                               proc = SetColor(<TFont>;TGraphicsColor);
                                                               methodpointer =
                                                               (temprefn, resultdef = TFont = "TFont", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                  temptypedef = TFont = "TFont", (tempinfo = $000000009081F780 flags = [ti_may_be_in_reg])
                                                               )
                                                               callinitblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (statementn, resultdef = <nil>, pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        size = 8, temptypedef = TFont = "TFont", tempinfo = $000000009081F780
                                                                        [ti_may_be_in_reg]
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                     (assignn, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (temprefn, resultdef = TFont = "TFont", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                           temptypedef = TFont = "TFont", (tempinfo = $000000009081F780 flags = [ti_may_be_in_reg])
                                                                        )
                                                                        (subscriptn, resultdef = TFont = "TFont", pos = (474,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                           (calln, resultdef = TControl = "TControl", pos = (474,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                              proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                              methodpointer =
                                                                              (subscriptn, resultdef = TPanel = "TPanel", pos = (474,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = FORMMAIN
                                                                                 )
                                                                              )
                                                                              left =
                                                                              (callparan, resultdef = <nil>, pos = (474,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                                 (subscriptn, resultdef = TPanel = "TPanel", pos = (474,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = FORMMAIN
                                                                                    )
                                                                                 )

                                                                              )
                                                                              (callparan, resultdef = LongInt = "LongInt", pos = (474,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                 (loadn, resultdef = LongInt = "LongInt", pos = (474,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = I
                                                                                 )

                                                                              )
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                               )
                                                               callcleanupblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  (statementn, resultdef = <nil>, pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                     (tempdeleten, resultdef = $void = "untyped", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $000000009081F780
                                                                     )

                                                                  )
                                                               )
                                                               left =
                                                               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (474,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                                  (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (474,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                     (subscriptn, resultdef = TFont = "TFont", pos = (474,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                        (loadn, resultdef = TForm = "TForm", pos = (474,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = FORM
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = <nil>, pos = (474,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = TFont = "TFont", pos = (474,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                     temptypedef = TFont = "TFont", (tempinfo = $000000009081F780 flags = [ti_may_be_in_reg])
                                                                  )

                                                               )
                                                            )

                                                         )
                                                      )
                                                      nil
                                                      nil
                                                   )

                                                )
                                             )

                                          )
                                       )
                                       nil
                                       nil
                                    )

                                 )
                              )
                              nil
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           (tempdeleten, resultdef = $void = "untyped", pos = (469,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F700
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (494,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (blockn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (nothingn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (tempcreaten, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081FC80
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (assignn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                              (temprefn, resultdef = LongInt = "LongInt", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                 temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FC80 flags = [ti_may_be_in_reg])
                              )
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (477,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (477,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (477,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                       (calln, resultdef = LongInt = "LongInt", pos = (477,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetControlCount(<TWinControl>):LongInt;
                                          methodpointer =
                                          (loadn, resultdef = TForm = "TForm", pos = (477,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = FORM
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (477,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                             (loadn, resultdef = TForm = "TForm", pos = (477,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = FORM
                                             )

                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (477,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 1
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (ifn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (lten, resultdef = Boolean = "Boolean", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (477,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )
                                 (temprefn, resultdef = LongInt = "LongInt", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FC80 flags = [ti_may_be_in_reg])
                                 )
                              )
                              (blockn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (nothingn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (assignn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                       (loadn, resultdef = LongInt = "LongInt", pos = (477,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                          nil
                                          symbol = I
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                          value = -1
                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (whilerepeatn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (gten, resultdef = Boolean = "Boolean", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                          (loadn, resultdef = LongInt = "LongInt", pos = (477,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = I
                                          )
                                          (temprefn, resultdef = LongInt = "LongInt", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                             temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FC80 flags = [ti_may_be_in_reg])
                                          )
                                       )
                                       (blockn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (nothingn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                                (loadn, resultdef = LongInt = "LongInt", pos = (477,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   nil
                                                   symbol = I
                                                )
                                                (inlinen, resultdef = LongInt = "LongInt", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (477,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                      nil
                                                      symbol = I
                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (blockn, resultdef = $void = "untyped", pos = (478,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (statementn, resultdef = <nil>, pos = (493,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (ifn, resultdef = $void = "untyped", pos = (479,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (calln, resultdef = Boolean = "Boolean", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                         proc = $fpc_do_is(TClass;TObject):Boolean;
                                                         left =
                                                         (callparan, resultdef = TObject = "TObject", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                            (typeconvn, resultdef = TObject = "TObject", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                                               (calln, resultdef = TControl = "TControl", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                  proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                  methodpointer =
                                                                  (loadn, resultdef = TForm = "TForm", pos = (479,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = FORM
                                                                  )
                                                                  left =
                                                                  (callparan, resultdef = LongInt = "LongInt", pos = (479,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                     (loadn, resultdef = LongInt = "LongInt", pos = (479,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = I
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = <nil>, pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                     (loadn, resultdef = TForm = "TForm", pos = (479,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = FORM
                                                                     )

                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (callparan, resultdef = TClass = "Class Of TObject", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                            (typeconvn, resultdef = TClass = "Class Of TObject", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (479,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                                  (typen, resultdef = TWinControl = "TWinControl", pos = (479,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                  )
                                                               )
                                                            )

                                                         )
                                                      )
                                                      (blockn, resultdef = $void = "untyped", pos = (480,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (statementn, resultdef = <nil>, pos = (481,62), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (calln, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                               proc = SetColor(<TControl>;TGraphicsColor);
                                                               methodpointer =
                                                               (temprefn, resultdef = TWinControl = "TWinControl", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                  temptypedef = TWinControl = "TWinControl", (tempinfo = $000000009081F680 flags = [ti_may_be_in_reg])
                                                               )
                                                               callinitblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (statementn, resultdef = <nil>, pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        size = 8, temptypedef = TWinControl = "TWinControl", tempinfo = $000000009081F680
                                                                        [ti_may_be_in_reg]
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                     (assignn, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (temprefn, resultdef = TWinControl = "TWinControl", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                           temptypedef = TWinControl = "TWinControl", (tempinfo = $000000009081F680 flags = [ti_may_be_in_reg])
                                                                        )
                                                                        (asn, resultdef = TWinControl = "TWinControl", pos = (481,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                                           nil
                                                                           nil
                                                                        )
                                                                     )

                                                                  )
                                                               )
                                                               callcleanupblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  (statementn, resultdef = <nil>, pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                     (tempdeleten, resultdef = $void = "untyped", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        release_to_normal: FALSE, temptypedef = TWinControl = "TWinControl", temptype = tt_persistent, tempinfo = $000000009081F680
                                                                     )

                                                                  )
                                                               )
                                                               left =
                                                               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (481,62), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                  (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (481,62), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                     (loadn, resultdef = TForm = "TForm", pos = (481,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        nil
                                                                        symbol = FORM
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = <nil>, pos = (481,49), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = TWinControl = "TWinControl", pos = (481,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                     temptypedef = TWinControl = "TWinControl", (tempinfo = $000000009081F680 flags = [ti_may_be_in_reg])
                                                                  )

                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (482,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (calln, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                               proc = SetColor(<TFont>;TGraphicsColor);
                                                               methodpointer =
                                                               (temprefn, resultdef = TFont = "TFont", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                  temptypedef = TFont = "TFont", (tempinfo = $000000009081F400 flags = [ti_may_be_in_reg])
                                                               )
                                                               callinitblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (statementn, resultdef = <nil>, pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (tempcreaten, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        size = 8, temptypedef = TFont = "TFont", tempinfo = $000000009081F400
                                                                        [ti_may_be_in_reg]
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                     (assignn, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (temprefn, resultdef = TFont = "TFont", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                           temptypedef = TFont = "TFont", (tempinfo = $000000009081F400 flags = [ti_may_be_in_reg])
                                                                        )
                                                                        (subscriptn, resultdef = TFont = "TFont", pos = (482,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                           (asn, resultdef = TWinControl = "TWinControl", pos = (482,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                                              nil
                                                                              nil
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                               )
                                                               callcleanupblock =
                                                               (blockn, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  (statementn, resultdef = <nil>, pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                     (tempdeleten, resultdef = $void = "untyped", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                        release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $000000009081F400
                                                                     )

                                                                  )
                                                               )
                                                               left =
                                                               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (482,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                                  (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (482,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                                                     (subscriptn, resultdef = TFont = "TFont", pos = (482,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                        (loadn, resultdef = TForm = "TForm", pos = (482,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                           nil
                                                                           symbol = FORM
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = <nil>, pos = (482,54), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = TFont = "TFont", pos = (482,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                     temptypedef = TFont = "TFont", (tempinfo = $000000009081F400 flags = [ti_may_be_in_reg])
                                                                  )

                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (484,45), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (ifn, resultdef = $void = "untyped", pos = (483,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (calln, resultdef = Boolean = "Boolean", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                                  proc = $fpc_do_is(TClass;TObject):Boolean;
                                                                  left =
                                                                  (callparan, resultdef = TObject = "TObject", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                                     (typeconvn, resultdef = TObject = "TObject", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                                                        (calln, resultdef = TControl = "TControl", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                           proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                                           methodpointer =
                                                                           (loadn, resultdef = TForm = "TForm", pos = (483,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                              nil
                                                                              symbol = FORM
                                                                           )
                                                                           left =
                                                                           (callparan, resultdef = LongInt = "LongInt", pos = (483,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (483,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = I
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = <nil>, pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                              (loadn, resultdef = TForm = "TForm", pos = (483,12), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                 nil
                                                                                 symbol = FORM
                                                                              )

                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = TClass = "Class Of TObject", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                     (typeconvn, resultdef = TClass = "Class Of TObject", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (483,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                                           (typen, resultdef = TToolBar = "TToolBar", pos = (483,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                               )
                                                               (assignn, resultdef = $void = "untyped", pos = (484,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                  (loadn, resultdef = TToolBar = "TToolBar", pos = (484,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                     nil
                                                                     symbol = TB
                                                                  )
                                                                  (asn, resultdef = TToolBar = "TToolBar", pos = (484,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                                     nil
                                                                     nil
                                                                  )
                                                               )
                                                               nil
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef = <nil>, pos = (492,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (blockn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                  (nothingn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                  )

                                                               )
                                                               (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                  (tempcreaten, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F580
                                                                     [ti_may_be_in_reg]
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                  (assignn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                                                                     (temprefn, resultdef = LongInt = "LongInt", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                        temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F580 flags = [ti_may_be_in_reg])
                                                                     )
                                                                     (typeconvn, resultdef = LongInt = "LongInt", pos = (486,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                                                        (subn, resultdef = Int64 = "Int64", pos = (486,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                                           (typeconvn, resultdef = Int64 = "Int64", pos = (486,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                                                              (calln, resultdef = LongInt = "LongInt", pos = (486,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                                 proc = GetControlCount(<TWinControl>):LongInt;
                                                                                 methodpointer =
                                                                                 (loadn, resultdef = TToolBar = "TToolBar", pos = (486,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                    nil
                                                                                    symbol = TB
                                                                                 )
                                                                                 left =
                                                                                 (callparan, resultdef = <nil>, pos = (486,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                    (loadn, resultdef = TToolBar = "TToolBar", pos = (486,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                       nil
                                                                                       symbol = TB
                                                                                    )

                                                                                 )
                                                                              )
                                                                           )
                                                                           (ordconstn, resultdef = Int64 = "Int64", pos = (486,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                              value = 1
                                                                           )
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                  (ifn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                     (lten, resultdef = Boolean = "Boolean", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                                                        (ordconstn, resultdef = LongInt = "LongInt", pos = (486,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                                           value = 0
                                                                        )
                                                                        (temprefn, resultdef = LongInt = "LongInt", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                           temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F580 flags = [ti_may_be_in_reg])
                                                                        )
                                                                     )
                                                                     (blockn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                        (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                           (nothingn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                           (assignn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (486,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                 nil
                                                                                 symbol = J
                                                                              )
                                                                              (ordconstn, resultdef = LongInt = "LongInt", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                                                                 value = -1
                                                                              )
                                                                           )

                                                                        )
                                                                        (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                           (whilerepeatn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                              (gten, resultdef = Boolean = "Boolean", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                                                                 (loadn, resultdef = LongInt = "LongInt", pos = (486,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                    nil
                                                                                    symbol = J
                                                                                 )
                                                                                 (temprefn, resultdef = LongInt = "LongInt", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F580 flags = [ti_may_be_in_reg])
                                                                                 )
                                                                              )
                                                                              (blockn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                 (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (nothingn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (assignn, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                                                                       (loadn, resultdef = LongInt = "LongInt", pos = (486,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                          nil
                                                                                          symbol = J
                                                                                       )
                                                                                       (inlinen, resultdef = LongInt = "LongInt", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                                                                          (loadn, resultdef = LongInt = "LongInt", pos = (486,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                             nil
                                                                                             symbol = J
                                                                                          )
                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (blockn, resultdef = $void = "untyped", pos = (487,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                       (statementn, resultdef = <nil>, pos = (488,49), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (assignn, resultdef = $void = "untyped", pos = (488,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                                                             (loadn, resultdef = TToolButton = "TToolButton", pos = (488,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                                                nil
                                                                                                symbol = TBT
                                                                                             )
                                                                                             (asn, resultdef = TToolButton = "TToolButton", pos = (488,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                                                                nil
                                                                                                nil
                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef = <nil>, pos = (489,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (calln, resultdef = $void = "untyped", pos = (489,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                                                             proc = SetColor(<TControl>;TGraphicsColor);
                                                                                             methodpointer =
                                                                                             (loadn, resultdef = TToolButton = "TToolButton", pos = (489,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                nil
                                                                                                symbol = TBT
                                                                                             )
                                                                                             left =
                                                                                             (callparan, resultdef = TGraphicsColor = "LongInt", pos = (489,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                                                (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (489,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                                                   (loadn, resultdef = TForm = "TForm", pos = (489,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                      nil
                                                                                                      symbol = FORM
                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = <nil>, pos = (489,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                                (loadn, resultdef = TToolButton = "TToolButton", pos = (489,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                   nil
                                                                                                   symbol = TBT
                                                                                                )

                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef = <nil>, pos = (490,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (calln, resultdef = $void = "untyped", pos = (490,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                                                                             proc = SetColor(<TFont>;TGraphicsColor);
                                                                                             methodpointer =
                                                                                             (subscriptn, resultdef = TFont = "TFont", pos = (490,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                                                (loadn, resultdef = TToolButton = "TToolButton", pos = (490,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                   nil
                                                                                                   symbol = TBT
                                                                                                )
                                                                                             )
                                                                                             left =
                                                                                             (callparan, resultdef = TGraphicsColor = "LongInt", pos = (490,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                                                (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (490,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                                                   (loadn, resultdef = TForm = "TForm", pos = (490,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                      nil
                                                                                                      symbol = FORM
                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = <nil>, pos = (490,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                                                                (subscriptn, resultdef = TFont = "TFont", pos = (490,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                                                                                                   (loadn, resultdef = TToolButton = "TToolButton", pos = (490,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                                                      nil
                                                                                                      symbol = TBT
                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                          )

                                                                                       )
                                                                                    )

                                                                                 )
                                                                              )
                                                                              nil
                                                                              nil
                                                                           )

                                                                        )
                                                                     )
                                                                     nil
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef = <nil>, pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                  (tempdeleten, resultdef = $void = "untyped", pos = (486,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                                     release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F580
                                                                  )

                                                               )
                                                            )

                                                         )
                                                      )
                                                      nil
                                                      nil
                                                   )

                                                )
                                             )

                                          )
                                       )
                                       nil
                                       nil
                                    )

                                 )
                              )
                              nil
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           (tempdeleten, resultdef = $void = "untyped", pos = (477,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081FC80
                           )

                        )
                     )

                  )
               )
               (blockn, resultdef = $void = "untyped", pos = (497,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (499,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (499,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetColor(<TControl>;TGraphicsColor);
                        methodpointer =
                        (loadn, resultdef = TForm = "TForm", pos = (499,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = FORM
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (499,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TForm = "TForm", pos = (499,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = FORM
                           )

                        )
                        (callparan, resultdef = TGraphicsColor = "LongInt", pos = (499,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (499,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = -2147483617
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (500,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (500,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetColor(<TFont>;TGraphicsColor);
                        methodpointer =
                        (subscriptn, resultdef = TFont = "TFont", pos = (500,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                           (loadn, resultdef = TForm = "TForm", pos = (500,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = FORM
                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (500,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TFont = "TFont", pos = (500,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                              (loadn, resultdef = TForm = "TForm", pos = (500,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = FORM
                              )
                           )

                        )
                        (callparan, resultdef = TGraphicsColor = "LongInt", pos = (500,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (500,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = -2147483630
                           )

                        )
                     )

                  )
               )
               nil
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (502,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (502,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (502,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (502,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (502,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (502,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
IsDarkTheme:Boolean;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (511,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (512,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (512,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = TRegistry = "TRegistry", pos = (512,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = REG
         )
         (calln, resultdef = TRegistry = "TRegistry", pos = (512,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = constructor Create(<TRegistry>;<Class Of TRegistry>;LongWord);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TRegistry", pos = (512,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (typen, resultdef = TRegistry = "TRegistry", pos = (512,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = LongWord = "DWord", pos = (512,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (ordconstn, resultdef = LongWord = "DWord", pos = (512,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  value = 131097
               )

            )
            (callparan, resultdef = <nil>, pos = (512,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (512,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (512,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (512,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (513,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (blockn, resultdef = $void = "untyped", pos = (527,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (514,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (514,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetRootKey(<TRegistry>;QWord);
                  methodpointer =
                  (loadn, resultdef = TRegistry = "TRegistry", pos = (514,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = REG
                  )
                  left =
                  (callparan, resultdef = QWord = "QWord", pos = (514,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = QWord = "QWord", pos = (514,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 18446744071562067969
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (514,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (514,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (526,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (ifn, resultdef = $void = "untyped", pos = (515,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (calln, resultdef = Boolean = "Boolean", pos = (515,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     proc = OpenKeyReadOnly(<TRegistry>;const AnsiString):Boolean;
                     methodpointer =
                     (loadn, resultdef = TRegistry = "TRegistry", pos = (515,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = REG
                     )
                     left =
                     (callparan, resultdef = AnsiString = "AnsiString", pos = (515,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (stringconstn, resultdef = AnsiString = "AnsiString", pos = (515,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (515,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (515,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (516,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (523,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (ifn, resultdef = $void = "untyped", pos = (517,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (calln, resultdef = Boolean = "Boolean", pos = (517,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              proc = ValueExists(<TRegistry>;const AnsiString):Boolean;
                              methodpointer =
                              (loadn, resultdef = TRegistry = "TRegistry", pos = (517,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = REG
                              )
                              left =
                              (callparan, resultdef = AnsiString = "AnsiString", pos = (517,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (stringconstn, resultdef = AnsiString = "AnsiString", pos = (517,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (517,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (517,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                           )
                           (blockn, resultdef = $void = "untyped", pos = (518,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (statementn, resultdef = <nil>, pos = (519,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (assignn, resultdef = $void = "untyped", pos = (519,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                    (loadn, resultdef = LongInt = "LongInt", pos = (519,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                                       nil
                                       symbol = VALUE
                                    )
                                    (calln, resultdef = LongInt = "LongInt", pos = (519,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                       proc = ReadInteger(<TRegistry>;const AnsiString):LongInt;
                                       methodpointer =
                                       (loadn, resultdef = TRegistry = "TRegistry", pos = (519,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = REG
                                       )
                                       left =
                                       (callparan, resultdef = AnsiString = "AnsiString", pos = (519,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (stringconstn, resultdef = AnsiString = "AnsiString", pos = (519,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (519,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          (nothingn, resultdef = $void = "untyped", pos = (519,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          )

                                       )
                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (520,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                 (assignn, resultdef = $void = "untyped", pos = (520,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                                    (typeconvn, resultdef = Boolean = "Boolean", pos = (520,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (loadn, resultdef = Boolean = "Boolean", pos = (520,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                                          nil
                                          symbol = result
                                       )
                                    )
                                    (equaln, resultdef = Boolean = "Boolean", pos = (520,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                       (loadn, resultdef = LongInt = "LongInt", pos = (520,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                          nil
                                          symbol = VALUE
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (520,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                          value = 0
                                       )
                                    )
                                 )

                              )
                           )
                           (assignn, resultdef = $void = "untyped", pos = (523,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                              (typeconvn, resultdef = Boolean = "Boolean", pos = (523,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (loadn, resultdef = Boolean = "Boolean", pos = (523,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                                    nil
                                    symbol = result
                                 )
                              )
                              (ordconstn, resultdef = Boolean = "Boolean", pos = (523,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 value = 0
                              )
                           )
                           nil
                        )

                     )
                  )
                  (assignn, resultdef = $void = "untyped", pos = (526,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (typeconvn, resultdef = Boolean = "Boolean", pos = (526,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                        (loadn, resultdef = Boolean = "Boolean", pos = (526,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                           nil
                           symbol = result
                        )
                     )
                     (ordconstn, resultdef = Boolean = "Boolean", pos = (526,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 0
                     )
                  )
                  nil
               )

            )
         )
         (blockn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (528,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (528,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = Free(<TObject>);
                  methodpointer =
                  (loadn, resultdef = TRegistry = "TRegistry", pos = (528,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = REG
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (528,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (528,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
         )
      )

   )
)

*******************************************************************************
after the firstpass
IsDarkTheme:Boolean;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (512,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (512,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = TRegistry = "TRegistry", pos = (512,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = REG
         )
         (calln, resultdef = TRegistry = "TRegistry", pos = (512,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
            proc = constructor Create(<TRegistry>;<Class Of TRegistry>;LongWord);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TRegistry", pos = (512,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
               (typen, resultdef = TRegistry = "TRegistry", pos = (512,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = LongWord = "DWord", pos = (512,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (ordconstn, resultdef = LongWord = "DWord", pos = (512,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 131097
               )

            )
            (callparan, resultdef = <nil>, pos = (512,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (pointerconstn, resultdef = Pointer = "^untyped", pos = (512,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = $0000000000000001
               )

            )
            (callparan, resultdef = <nil>, pos = (512,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TRegistry", pos = (512,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TRegistry = "TRegistry", pos = (512,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (513,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (blockn, resultdef = $void = "untyped", pos = (527,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (514,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (514,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetRootKey(<TRegistry>;QWord);
                  methodpointer =
                  (loadn, resultdef = TRegistry = "TRegistry", pos = (514,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = REG
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (514,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TRegistry = "TRegistry", pos = (514,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = REG
                     )

                  )
                  (callparan, resultdef = QWord = "QWord", pos = (514,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = QWord = "QWord", pos = (514,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 18446744071562067969
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (526,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (ifn, resultdef = $void = "untyped", pos = (515,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (calln, resultdef = Boolean = "Boolean", pos = (515,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = OpenKeyReadOnly(<TRegistry>;const AnsiString):Boolean;
                     methodpointer =
                     (loadn, resultdef = TRegistry = "TRegistry", pos = (515,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = REG
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (515,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TRegistry = "TRegistry", pos = (515,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = REG
                        )

                     )
                     (callparan, resultdef = AnsiString = "AnsiString", pos = (515,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (stringconstn, resultdef = AnsiString = "AnsiString", pos = (515,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        )

                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (516,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (523,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (ifn, resultdef = $void = "untyped", pos = (517,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (calln, resultdef = Boolean = "Boolean", pos = (517,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                              proc = ValueExists(<TRegistry>;const AnsiString):Boolean;
                              methodpointer =
                              (loadn, resultdef = TRegistry = "TRegistry", pos = (517,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = REG
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (517,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TRegistry = "TRegistry", pos = (517,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = REG
                                 )

                              )
                              (callparan, resultdef = AnsiString = "AnsiString", pos = (517,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                 (stringconstn, resultdef = AnsiString = "AnsiString", pos = (517,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                 )

                              )
                           )
                           (blockn, resultdef = $void = "untyped", pos = (518,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (statementn, resultdef = <nil>, pos = (519,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (assignn, resultdef = $void = "untyped", pos = (519,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (loadn, resultdef = LongInt = "LongInt", pos = (519,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                       nil
                                       symbol = VALUE
                                    )
                                    (calln, resultdef = LongInt = "LongInt", pos = (519,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                       proc = ReadInteger(<TRegistry>;const AnsiString):LongInt;
                                       methodpointer =
                                       (loadn, resultdef = TRegistry = "TRegistry", pos = (519,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = REG
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (519,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                          (loadn, resultdef = TRegistry = "TRegistry", pos = (519,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = REG
                                          )

                                       )
                                       (callparan, resultdef = AnsiString = "AnsiString", pos = (519,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                          (stringconstn, resultdef = AnsiString = "AnsiString", pos = (519,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                          )

                                       )
                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (520,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                                 (assignn, resultdef = $void = "untyped", pos = (520,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                    (typeconvn, resultdef = Boolean = "Boolean", pos = (520,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (loadn, resultdef = Boolean = "Boolean", pos = (520,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                          nil
                                          symbol = result
                                       )
                                    )
                                    (equaln, resultdef = Boolean = "Boolean", pos = (520,19), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 2
                                       (loadn, resultdef = LongInt = "LongInt", pos = (520,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = VALUE
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (520,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                          value = 0
                                       )
                                    )
                                 )

                              )
                           )
                           (assignn, resultdef = $void = "untyped", pos = (523,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                              (typeconvn, resultdef = Boolean = "Boolean", pos = (523,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (loadn, resultdef = Boolean = "Boolean", pos = (523,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    nil
                                    symbol = result
                                 )
                              )
                              (ordconstn, resultdef = Boolean = "Boolean", pos = (523,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = 0
                              )
                           )
                           nil
                        )

                     )
                  )
                  (assignn, resultdef = $void = "untyped", pos = (526,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                     (typeconvn, resultdef = Boolean = "Boolean", pos = (526,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                        (loadn, resultdef = Boolean = "Boolean", pos = (526,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = result
                        )
                     )
                     (ordconstn, resultdef = Boolean = "Boolean", pos = (526,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 0
                     )
                  )
                  nil
               )

            )
         )
         (calln, resultdef = $void = "untyped", pos = (513,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            proc = $fin$000001BB(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (513,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (513,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  nil
               )

            )
         )
      )

   )
)

*******************************************************************************
right before code generation
IsDarkTheme:Boolean;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (511,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (512,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (512,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = TRegistry = "TRegistry", pos = (512,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = REG
               )
               (calln, resultdef = TRegistry = "TRegistry", pos = (512,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                  proc = constructor Create(<TRegistry>;<Class Of TRegistry>;LongWord);
                  methodpointer =
                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TRegistry", pos = (512,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                     (typen, resultdef = TRegistry = "TRegistry", pos = (512,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     )
                  )
                  left =
                  (callparan, resultdef = LongWord = "DWord", pos = (512,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = LongWord = "DWord", pos = (512,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 131097
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (512,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (pointerconstn, resultdef = Pointer = "^untyped", pos = (512,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = $0000000000000001
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (512,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TRegistry", pos = (512,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TRegistry = "TRegistry", pos = (512,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )

                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (tryfinallyn, resultdef = $void = "untyped", pos = (513,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (blockn, resultdef = $void = "untyped", pos = (527,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (514,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (514,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetRootKey(<TRegistry>;QWord);
                        methodpointer =
                        (loadn, resultdef = TRegistry = "TRegistry", pos = (514,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = REG
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (514,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TRegistry = "TRegistry", pos = (514,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = REG
                           )

                        )
                        (callparan, resultdef = QWord = "QWord", pos = (514,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = QWord = "QWord", pos = (514,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 18446744071562067969
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (526,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (ifn, resultdef = $void = "untyped", pos = (515,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (calln, resultdef = Boolean = "Boolean", pos = (515,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                           proc = OpenKeyReadOnly(<TRegistry>;const AnsiString):Boolean;
                           methodpointer =
                           (loadn, resultdef = TRegistry = "TRegistry", pos = (515,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = REG
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (515,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TRegistry = "TRegistry", pos = (515,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = REG
                              )

                           )
                           (callparan, resultdef = AnsiString = "AnsiString", pos = (515,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                              (stringconstn, resultdef = AnsiString = "AnsiString", pos = (515,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                              )

                           )
                        )
                        (blockn, resultdef = $void = "untyped", pos = (516,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (523,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (ifn, resultdef = $void = "untyped", pos = (517,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (calln, resultdef = Boolean = "Boolean", pos = (517,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                    proc = ValueExists(<TRegistry>;const AnsiString):Boolean;
                                    methodpointer =
                                    (loadn, resultdef = TRegistry = "TRegistry", pos = (517,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = REG
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (517,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                       (loadn, resultdef = TRegistry = "TRegistry", pos = (517,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = REG
                                       )

                                    )
                                    (callparan, resultdef = AnsiString = "AnsiString", pos = (517,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                       (stringconstn, resultdef = AnsiString = "AnsiString", pos = (517,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                       )

                                    )
                                 )
                                 (blockn, resultdef = $void = "untyped", pos = (518,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (statementn, resultdef = <nil>, pos = (519,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (assignn, resultdef = $void = "untyped", pos = (519,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (loadn, resultdef = LongInt = "LongInt", pos = (519,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = VALUE
                                          )
                                          (calln, resultdef = LongInt = "LongInt", pos = (519,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                             proc = ReadInteger(<TRegistry>;const AnsiString):LongInt;
                                             methodpointer =
                                             (loadn, resultdef = TRegistry = "TRegistry", pos = (519,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = REG
                                             )
                                             left =
                                             (callparan, resultdef = <nil>, pos = (519,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                (loadn, resultdef = TRegistry = "TRegistry", pos = (519,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = REG
                                                )

                                             )
                                             (callparan, resultdef = AnsiString = "AnsiString", pos = (519,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                (stringconstn, resultdef = AnsiString = "AnsiString", pos = (519,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                                )

                                             )
                                          )
                                       )

                                    )
                                    (statementn, resultdef = <nil>, pos = (520,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                                       (assignn, resultdef = $void = "untyped", pos = (520,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                                          (typeconvn, resultdef = Boolean = "Boolean", pos = (520,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                             (loadn, resultdef = Boolean = "Boolean", pos = (520,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                nil
                                                symbol = result
                                             )
                                          )
                                          (equaln, resultdef = Boolean = "Boolean", pos = (520,19), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 2
                                             (loadn, resultdef = LongInt = "LongInt", pos = (520,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = VALUE
                                             )
                                             (ordconstn, resultdef = LongInt = "LongInt", pos = (520,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                value = 0
                                             )
                                          )
                                       )

                                    )
                                 )
                                 (assignn, resultdef = $void = "untyped", pos = (523,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                                    (typeconvn, resultdef = Boolean = "Boolean", pos = (523,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                       (loadn, resultdef = Boolean = "Boolean", pos = (523,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                          nil
                                          symbol = result
                                       )
                                    )
                                    (ordconstn, resultdef = Boolean = "Boolean", pos = (523,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 0
                                    )
                                 )
                                 nil
                              )

                           )
                        )
                        (assignn, resultdef = $void = "untyped", pos = (526,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                           (typeconvn, resultdef = Boolean = "Boolean", pos = (526,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                              (loadn, resultdef = Boolean = "Boolean", pos = (526,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                 nil
                                 symbol = result
                              )
                           )
                           (ordconstn, resultdef = Boolean = "Boolean", pos = (526,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )
                        )
                        nil
                     )

                  )
               )
               (calln, resultdef = $void = "untyped", pos = (513,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = $fin$000001BB(<^untyped>) is nested; Register;
                  left =
                  (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (513,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (513,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        nil
                     )

                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (530,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (530,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (530,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (530,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (530,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (530,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after the firstpass
$fin$000001BB is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (528,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (528,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Free(<TObject>);
         methodpointer =
         (loadn, resultdef = TRegistry = "TRegistry", pos = (528,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = REG
         )
         left =
         (callparan, resultdef = <nil>, pos = (528,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TRegistry = "TRegistry", pos = (528,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = REG
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
$fin$000001BB is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (528,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (528,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Free(<TObject>);
               methodpointer =
               (loadn, resultdef = TRegistry = "TRegistry", pos = (528,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = REG
               )
               left =
               (callparan, resultdef = <nil>, pos = (528,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TRegistry = "TRegistry", pos = (528,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = REG
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (529,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ToolButtonFillClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (545,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
   (statementn, resultdef = <nil>, pos = (546,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
      (assignn, resultdef = $void = "untyped", pos = (546,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (546,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (546,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 11
         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonFillClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 2
   (statementn, resultdef = <nil>, pos = (546,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef = $void = "untyped", pos = (546,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (546,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (546,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 11
         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonFillClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (545,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 2
         (statementn, resultdef = <nil>, pos = (546,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
            (assignn, resultdef = $void = "untyped", pos = (546,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = TToolType = "<enumeration type>", pos = (546,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = HCTOOL
               )
               (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (546,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 11
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (547,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (547,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (547,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (547,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (547,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (547,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ToolButtonNewClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (556,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (556,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (556,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = DIALOGFORM
         )
         (calln, resultdef = TFormNewImage = "TFormNewImage", pos = (556,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (556,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (556,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = TComponent = "TComponent", pos = (556,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (niln, resultdef = TComponent = "TComponent", pos = (556,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (556,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (556,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (556,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (556,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (557,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (blockn, resultdef = LongInt = "LongInt", pos = (560,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (558,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = LongInt = "LongInt", pos = (558,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = ShowModal(<TCustomForm>):LongInt;
                  methodpointer =
                  (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (558,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = DIALOGFORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (558,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (558,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
         )
         (blockn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (581,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (ifn, resultdef = $void = "untyped", pos = (561,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (equaln, resultdef = Boolean = "Boolean", pos = (561,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (561,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                        (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (561,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = DIALOGFORM
                        )
                     )
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (561,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 1
                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (562,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (563,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (563,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (563,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                              nil
                              symbol = NEWPAGE
                           )
                           (calln, resultdef = TTabSheet = "TTabSheet", pos = (563,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              proc = AddTabSheet(<TPageControl>):TTabSheet;
                              methodpointer =
                              (subscriptn, resultdef = TPageControl = "TPageControl", pos = (563,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (563,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (563,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (563,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (564,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (564,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (564,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                           (calln, resultdef = TFormDocument = "TFormDocument", pos = (564,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                              methodpointer =
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (564,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (typen, resultdef = TFormDocument = "TFormDocument", pos = (564,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 )
                              )
                              left =
                              (callparan, resultdef = TComponent = "TComponent", pos = (564,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                                 (typeconvn, resultdef = TComponent = "TComponent", pos = (564,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (564,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (564,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (564,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (564,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (564,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (565,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (565,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                           proc = SetFormBorderStyle(<TCustomForm>;TFormBorderStyle);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (565,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = TFormBorderStyle = "<enumeration type>", pos = (565,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (ordconstn, resultdef = TFormBorderStyle = "<enumeration type>", pos = (565,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 value = 0
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (565,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (565,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (566,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (566,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (566,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (566,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = NEWDOC
                              )
                           )
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (566,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (566,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = DIALOGFORM
                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (567,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (567,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (567,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (567,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = NEWDOC
                              )
                           )
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (567,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (567,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = DIALOGFORM
                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (568,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (568,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                           proc = SetText(<TControl>;const TTranslateString);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (568,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = TTranslateString = "AnsiString", pos = (568,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (stringconstn, resultdef = AnsiString = "AnsiString", pos = (568,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (568,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (568,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (569,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (569,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                           (subscriptn, resultdef = Boolean = "Boolean", pos = (569,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (569,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = NEWDOC
                              )
                           )
                           (ordconstn, resultdef = Boolean = "Boolean", pos = (569,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              value = 1
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (570,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (570,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                           proc = SetParent(<TControl>;TWinControl);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (570,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = TWinControl = "TWinControl", pos = (570,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                              (typeconvn, resultdef = TWinControl = "TWinControl", pos = (570,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (loadn, resultdef = TTabSheet = "TTabSheet", pos = (570,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                    nil
                                    symbol = NEWPAGE
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (570,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (570,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (571,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (571,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                           proc = SetAlign(<TControl>;TAlign);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (571,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = TAlign = "<enumeration type>", pos = (571,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (571,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 value = 5
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (571,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (571,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (572,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (572,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                           proc = SetWindowState(<TCustomForm>;TWindowState);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (572,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = TWindowState = "<enumeration type>", pos = (572,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (ordconstn, resultdef = TWindowState = "<enumeration type>", pos = (572,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 value = 2
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (572,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (572,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (573,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (inlinen, resultdef = $void = "untyped", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, inlinenumber = in_inc_x
                           (callparan, resultdef = LongInt = "LongInt", pos = (573,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                              (loadn, resultdef = LongInt = "LongInt", pos = (573,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_modify], cmplx = 1
                                 nil
                                 symbol = IMAGECOUNTER
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (574,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                           proc = SetText(<TControl>;const TTranslateString);
                           methodpointer =
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (574,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = NEWPAGE
                           )
                           left =
                           (callparan, resultdef = TTranslateString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              (addn, resultdef = TTranslateString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 (stringconstn, resultdef = AnsiString = "AnsiString", pos = (574,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 )
                                 (calln, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                    proc = ToString(<var LongInt>;<var AnsiString>):AnsiString;
                                    methodpointer =
                                    (loadn, resultdef = LongInt = "LongInt", pos = (574,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       nil
                                       symbol = IMAGECOUNTER
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       (nothingn, resultdef = $void = "untyped", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                       (nothingn, resultdef = $void = "untyped", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                       )

                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (574,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (574,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (575,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (575,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 6
                           (subscriptn, resultdef = Int64 = "Int64", pos = (575,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write,nf_isproperty], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (575,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = NEWDOC
                              )
                           )
                           (typeconvn, resultdef = Int64 = "Int64", pos = (575,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (575,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = IMAGECOUNTER
                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (576,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           (subscriptn, resultdef = AnsiString = "AnsiString", pos = (576,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 3
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = NEWDOC
                              )
                           )
                           (calln, resultdef = AnsiString = "AnsiString", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetText(<TControl>;<var TTranslateString>):AnsiString;
                              methodpointer =
                              (loadn, resultdef = TTabSheet = "TTabSheet", pos = (576,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = NEWPAGE
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (576,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (576,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (576,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 (nothingn, resultdef = $void = "untyped", pos = (576,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (577,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (577,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           proc = Show(<TCustomForm>);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (577,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (577,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (577,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (578,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (578,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           proc = Invalidate(<TWinControl>);
                           methodpointer =
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (578,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = NEWPAGE
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (578,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (578,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (579,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        (calln, resultdef = $void = "untyped", pos = (579,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                           proc = SetActiveTabSheet(<TPageControl>;const TTabSheet);
                           methodpointer =
                           (subscriptn, resultdef = TPageControl = "TPageControl", pos = (579,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (579,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                           left =
                           (callparan, resultdef = TTabSheet = "TTabSheet", pos = (579,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                              (loadn, resultdef = TTabSheet = "TTabSheet", pos = (579,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = NEWPAGE
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (579,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              (nothingn, resultdef = $void = "untyped", pos = (579,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                              )

                           )
                        )

                     )
                  )
                  nil
                  nil
               )

            )
            (statementn, resultdef = <nil>, pos = (583,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (583,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = Free(<TObject>);
                  methodpointer =
                  (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (583,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = DIALOGFORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (583,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (583,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonNewClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (556,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (556,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (556,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = DIALOGFORM
         )
         (calln, resultdef = TFormNewImage = "TFormNewImage", pos = (556,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
            proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (556,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
               (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (556,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = TComponent = "TComponent", pos = (556,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (niln, resultdef = TComponent = "TComponent", pos = (556,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (556,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (pointerconstn, resultdef = Pointer = "^untyped", pos = (556,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = $0000000000000001
               )

            )
            (callparan, resultdef = <nil>, pos = (556,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (556,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (556,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (557,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (blockn, resultdef = LongInt = "LongInt", pos = (560,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (558,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = LongInt = "LongInt", pos = (558,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = ShowModal(<TCustomForm>):LongInt;
                  methodpointer =
                  (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (558,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = DIALOGFORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (558,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (558,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = DIALOGFORM
                     )

                  )
               )

            )
         )
         (calln, resultdef = $void = "untyped", pos = (557,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            proc = $fin$000001BC(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (557,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (557,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  nil
               )

            )
         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonNewClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (blockn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
            (statementn, resultdef = <nil>, pos = (556,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (556,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (556,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = DIALOGFORM
                  )
                  (calln, resultdef = TFormNewImage = "TFormNewImage", pos = (556,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (556,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (556,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (556,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (niln, resultdef = TComponent = "TComponent", pos = (556,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (556,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (556,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (556,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (556,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                           (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (556,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           )
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tryfinallyn, resultdef = $void = "untyped", pos = (557,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (blockn, resultdef = LongInt = "LongInt", pos = (560,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (558,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (calln, resultdef = LongInt = "LongInt", pos = (558,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           proc = ShowModal(<TCustomForm>):LongInt;
                           methodpointer =
                           (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (558,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = DIALOGFORM
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (558,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (558,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = DIALOGFORM
                              )

                           )
                        )

                     )
                  )
                  (calln, resultdef = $void = "untyped", pos = (557,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     proc = $fin$000001BC(<^untyped>) is nested; Register;
                     left =
                     (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (557,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (557,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                           nil
                        )

                     )
                  )
               )

            )
         )
         (calln, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            proc = $fin$000001BD(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  nil
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
      (blockn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
)

*******************************************************************************
after the firstpass
$fin$000001BC is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (581,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (561,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (equaln, resultdef = Boolean = "Boolean", pos = (561,31), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (561,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
               (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (561,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = DIALOGFORM
               )
            )
            (ordconstn, resultdef = LongInt = "LongInt", pos = (561,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 1
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (562,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (563,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (563,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = TTabSheet = "TTabSheet", pos = (563,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = NEWPAGE
                  )
                  (calln, resultdef = TTabSheet = "TTabSheet", pos = (563,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = AddTabSheet(<TPageControl>):TTabSheet;
                     methodpointer =
                     (subscriptn, resultdef = TPageControl = "TPageControl", pos = (563,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (563,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (563,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TPageControl = "TPageControl", pos = (563,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (563,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (564,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (564,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (564,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  (calln, resultdef = TFormDocument = "TFormDocument", pos = (564,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (564,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TFormDocument = "TFormDocument", pos = (564,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (564,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (typeconvn, resultdef = TComponent = "TComponent", pos = (564,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (564,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (564,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (564,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (564,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (564,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                           (typen, resultdef = TFormDocument = "TFormDocument", pos = (564,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                           )
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (565,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (565,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetFormBorderStyle(<TCustomForm>;TFormBorderStyle);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (565,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (565,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (565,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )

                  )
                  (callparan, resultdef = TFormBorderStyle = "<enumeration type>", pos = (565,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = TFormBorderStyle = "<enumeration type>", pos = (565,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (566,52), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (566,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 7
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (566,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (566,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )
                  )
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (566,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (566,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = DIALOGFORM
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (567,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (567,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 7
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (567,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (567,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )
                  )
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (567,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (567,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = DIALOGFORM
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (568,35), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (568,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetText(<TControl>;const TTranslateString);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (568,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (568,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (568,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )

                  )
                  (callparan, resultdef = TTranslateString = "AnsiString", pos = (568,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (stringconstn, resultdef = AnsiString = "AnsiString", pos = (568,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (569,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (569,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                  (subscriptn, resultdef = Boolean = "Boolean", pos = (569,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (569,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )
                  )
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (569,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (570,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (570,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetParent(<TControl>;TWinControl);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (570,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = TWinControl = "TWinControl", pos = (570,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (typeconvn, resultdef = TWinControl = "TWinControl", pos = (570,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                        (loadn, resultdef = TTabSheet = "TTabSheet", pos = (570,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = NEWPAGE
                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (570,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (570,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (571,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (571,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetAlign(<TControl>;TAlign);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (571,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (571,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (571,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )

                  )
                  (callparan, resultdef = TAlign = "<enumeration type>", pos = (571,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (571,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 5
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (572,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (572,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetWindowState(<TCustomForm>;TWindowState);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (572,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (572,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (572,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )

                  )
                  (callparan, resultdef = TWindowState = "<enumeration type>", pos = (572,40), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = TWindowState = "<enumeration type>", pos = (572,40), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 2
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (573,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (blockn, resultdef = $void = "untyped", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                  (statementn, resultdef = <nil>, pos = (573,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                     (nothingn, resultdef = $void = "untyped", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (573,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                     (assignn, resultdef = $void = "untyped", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                        (loadn, resultdef = LongInt = "LongInt", pos = (573,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_modify], cmplx = 1
                           nil
                           symbol = IMAGECOUNTER
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_int_2_int, convnodeflags = []
                           (addn, resultdef = Int64 = "Int64", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 3
                              (typeconvn, resultdef = Int64 = "Int64", pos = (573,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                 (loadn, resultdef = LongInt = "LongInt", pos = (573,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = IMAGECOUNTER
                                 )
                              )
                              (ordconstn, resultdef = Int64 = "Int64", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = 1
                              )
                           )
                        )
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (574,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetText(<TControl>;const TTranslateString);
                  methodpointer =
                  (loadn, resultdef = TTabSheet = "TTabSheet", pos = (574,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWPAGE
                  )
                  left =
                  (callparan, resultdef = TTranslateString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                     (blockn, resultdef = TTranslateString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
                        (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (nothingn, resultdef = $void = "untyped", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (tempcreaten, resultdef = $void = "untyped", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              size = 8, temptypedef = TTranslateString = "AnsiString", tempinfo = $000000009081F880
                              []
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (calln, resultdef = $void = "untyped", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              proc = $fpc_ansistr_concat(var RawByteString;const RawByteString;const RawByteString;Word);
                              left =
                              (callparan, resultdef = RawByteString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                 (blockn, resultdef = RawByteString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                    (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (tempcreaten, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                          size = 8, temptypedef = AnsiString = "AnsiString", tempinfo = $000000009081F900
                                          [ti_addr_taken,ti_nofini]
                                          tempinit =
                                          nil
                                       )

                                    )
                                    (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                       (blockn, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                          (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (tempcreaten, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F980
                                                []
                                                tempinit =
                                                nil
                                             )

                                          )
                                          (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                                                (temprefn, resultdef = LongInt = "LongInt", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                   temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F980 flags = [])
                                                )
                                                (loadn, resultdef = LongInt = "LongInt", pos = (574,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = IMAGECOUNTER
                                                )
                                             )

                                          )
                                          (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (calln, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                callinitblock =
                                                (blockn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                   (statementn, resultdef = <nil>, pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (tempcreaten, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                         size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000009081F800
                                                         [ti_may_be_in_reg]
                                                         tempinit =
                                                         nil
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (assignn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                         (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                            temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                         )
                                                         (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                            (addrn, resultdef = Pointer = "^untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                               (typeconvn, resultdef = RawByteString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                  (typeconvn, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                     (temprefn, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                        temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F900 flags = [ti_addr_taken,ti_nofini])
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (calln, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         proc = $fpc_ansistr_decr_ref(var Pointer);
                                                         left =
                                                         (callparan, resultdef = Pointer = "^untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                            (typeconvn, resultdef = Pointer = "^untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                               (derefn, resultdef = RawByteString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                     temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                                  )
                                                               )
                                                            )

                                                         )
                                                      )

                                                   )
                                                )
                                                callcleanupblock =
                                                (blockn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                   (statementn, resultdef = <nil>, pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                      (tempdeleten, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                         release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000009081F800
                                                      )

                                                   )
                                                )
                                                left =
                                                (callparan, resultdef = RawByteString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                   (derefn, resultdef = RawByteString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                         temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = Word = "Word", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                   (ordconstn, resultdef = Word = "Word", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                      value = 0
                                                   )

                                                )
                                                (callparan, resultdef = Int64 = "Int64", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                   (ordconstn, resultdef = Int64 = "Int64", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                      value = -1
                                                   )

                                                )
                                                (callparan, resultdef = Int64 = "Int64", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                   (typeconvn, resultdef = Int64 = "Int64", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                      (temprefn, resultdef = LongInt = "LongInt", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F980 flags = [])
                                                      )
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                             (tempdeleten, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F980
                                             )

                                          )
                                          (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                             (typeconvn, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                (temprefn, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                   temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F900 flags = [ti_addr_taken,ti_nofini])
                                                )
                                             )

                                          )
                                       )

                                    )
                                    (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                       (tempdeleten, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                          release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString", temptype = tt_persistent, tempinfo = $000000009081F900
                                       )

                                    )
                                    (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       (temprefn, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                          temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F900 flags = [ti_addr_taken,ti_nofini])
                                       )

                                    )
                                 )

                              )
                              (callparan, resultdef = Word = "Word", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                 (ordconstn, resultdef = Word = "Word", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )

                              )
                              (callparan, resultdef = RawByteString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                 (stringconstn, resultdef = AnsiString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                 )

                              )
                              (callparan, resultdef = RawByteString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                 (temprefn, resultdef = RawByteString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = TTranslateString = "AnsiString", (tempinfo = $000000009081F880 flags = [])
                                 )

                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                           (tempdeleten, resultdef = $void = "untyped", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              release_to_normal: TRUE, temptypedef = TTranslateString = "AnsiString", temptype = tt_persistent, tempinfo = $000000009081F880
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (temprefn, resultdef = TTranslateString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = TTranslateString = "AnsiString", (tempinfo = $000000009081F880 flags = [])
                           )

                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (574,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TTabSheet = "TTabSheet", pos = (574,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWPAGE
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (575,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (575,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                  (subscriptn, resultdef = Int64 = "Int64", pos = (575,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_isproperty], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (575,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )
                  )
                  (typeconvn, resultdef = Int64 = "Int64", pos = (575,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                     (loadn, resultdef = LongInt = "LongInt", pos = (575,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = IMAGECOUNTER
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (576,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = $fpc_ansistr_assign(var Pointer;Pointer);
                  left =
                  (callparan, resultdef = Pointer = "^untyped", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                     (typeconvn, resultdef = Pointer = "^untyped", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 255, convtype = tc_equal, convnodeflags = []
                        (calln, resultdef = AnsiString = "AnsiString", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetText(<TControl>;<var TTranslateString>):AnsiString;
                           methodpointer =
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (576,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWPAGE
                           )
                           funcretnode =
                           (temprefn, resultdef = AnsiString = "AnsiString", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                              temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F600 flags = [ti_nofini])
                           )
                           callinitblock =
                           (blockn, resultdef = $void = "untyped", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              (statementn, resultdef = <nil>, pos = (576,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (tempcreaten, resultdef = $void = "untyped", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                    size = 8, temptypedef = AnsiString = "AnsiString", tempinfo = $000000009081F600
                                    [ti_nofini]
                                    tempinit =
                                    nil
                                 )

                              )
                           )
                           callcleanupblock =
                           (blockn, resultdef = $void = "untyped", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              (statementn, resultdef = <nil>, pos = (576,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (tempdeleten, resultdef = $void = "untyped", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString", temptype = tt_persistent, tempinfo = $000000009081F600
                                 )

                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (576,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TTabSheet = "TTabSheet", pos = (576,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = NEWPAGE
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (576,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              (temprefn, resultdef = AnsiString = "AnsiString", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                 temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F600 flags = [ti_nofini])
                              )

                           )
                        )
                     )

                  )
                  (callparan, resultdef = Pointer = "^untyped", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (typeconvn, resultdef = Pointer = "^untyped", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 3, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = AnsiString = "AnsiString", pos = (576,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                        )
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (577,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (577,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = Show(<TCustomForm>);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (577,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (577,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (577,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWDOC
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (578,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (578,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = Invalidate(<TWinControl>);
                  methodpointer =
                  (loadn, resultdef = TTabSheet = "TTabSheet", pos = (578,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = NEWPAGE
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (578,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TTabSheet = "TTabSheet", pos = (578,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWPAGE
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (579,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (579,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetActiveTabSheet(<TPageControl>;const TTabSheet);
                  methodpointer =
                  (subscriptn, resultdef = TPageControl = "TPageControl", pos = (579,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (579,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (579,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TPageControl = "TPageControl", pos = (579,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (579,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )

                  )
                  (callparan, resultdef = TTabSheet = "TTabSheet", pos = (579,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TTabSheet = "TTabSheet", pos = (579,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = NEWPAGE
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (583,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (583,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Free(<TObject>);
         methodpointer =
         (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (583,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = DIALOGFORM
         )
         left =
         (callparan, resultdef = <nil>, pos = (583,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (583,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = DIALOGFORM
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
$fin$000001BC is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (581,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (561,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (equaln, resultdef = Boolean = "Boolean", pos = (561,31), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 4
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (561,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                     (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (561,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = DIALOGFORM
                     )
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (561,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )
               )
               (blockn, resultdef = $void = "untyped", pos = (562,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (563,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (563,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (loadn, resultdef = TTabSheet = "TTabSheet", pos = (563,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = NEWPAGE
                        )
                        (calln, resultdef = TTabSheet = "TTabSheet", pos = (563,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                           proc = AddTabSheet(<TPageControl>):TTabSheet;
                           methodpointer =
                           (subscriptn, resultdef = TPageControl = "TPageControl", pos = (563,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (563,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (563,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                              (subscriptn, resultdef = TPageControl = "TPageControl", pos = (563,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (563,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (564,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (564,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (564,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = NEWDOC
                        )
                        (calln, resultdef = TFormDocument = "TFormDocument", pos = (564,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                           proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                           methodpointer =
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (564,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                              (typen, resultdef = TFormDocument = "TFormDocument", pos = (564,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                              )
                           )
                           left =
                           (callparan, resultdef = TComponent = "TComponent", pos = (564,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (typeconvn, resultdef = TComponent = "TComponent", pos = (564,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (564,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (564,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                              (pointerconstn, resultdef = Pointer = "^untyped", pos = (564,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                 value = $0000000000000001
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (564,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (564,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                 (typen, resultdef = TFormDocument = "TFormDocument", pos = (564,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                 )
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (565,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (565,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetFormBorderStyle(<TCustomForm>;TFormBorderStyle);
                        methodpointer =
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (565,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = NEWDOC
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (565,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (565,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )

                        )
                        (callparan, resultdef = TFormBorderStyle = "<enumeration type>", pos = (565,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = TFormBorderStyle = "<enumeration type>", pos = (565,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 0
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (566,52), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (566,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 7
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (566,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (566,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                        )
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (566,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (566,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = DIALOGFORM
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (567,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (567,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 7
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (567,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (567,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                        )
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (567,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (567,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = DIALOGFORM
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (568,35), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (568,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetText(<TControl>;const TTranslateString);
                        methodpointer =
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (568,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = NEWDOC
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (568,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (568,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )

                        )
                        (callparan, resultdef = TTranslateString = "AnsiString", pos = (568,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                           (stringconstn, resultdef = AnsiString = "AnsiString", pos = (568,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (569,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (569,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
                        (subscriptn, resultdef = Boolean = "Boolean", pos = (569,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (569,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                        )
                        (ordconstn, resultdef = Boolean = "Boolean", pos = (569,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = 1
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (570,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (570,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetParent(<TControl>;TWinControl);
                        methodpointer =
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (570,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = NEWDOC
                        )
                        left =
                        (callparan, resultdef = TWinControl = "TWinControl", pos = (570,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (typeconvn, resultdef = TWinControl = "TWinControl", pos = (570,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                              (loadn, resultdef = TTabSheet = "TTabSheet", pos = (570,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = NEWPAGE
                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (570,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (570,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (571,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (571,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetAlign(<TControl>;TAlign);
                        methodpointer =
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (571,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = NEWDOC
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (571,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (571,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )

                        )
                        (callparan, resultdef = TAlign = "<enumeration type>", pos = (571,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (571,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 5
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (572,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (572,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetWindowState(<TCustomForm>;TWindowState);
                        methodpointer =
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (572,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = NEWDOC
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (572,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (572,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )

                        )
                        (callparan, resultdef = TWindowState = "<enumeration type>", pos = (572,40), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = TWindowState = "<enumeration type>", pos = (572,40), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 2
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (573,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (blockn, resultdef = $void = "untyped", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                        (statementn, resultdef = <nil>, pos = (573,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                           (nothingn, resultdef = $void = "untyped", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (573,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
                           (assignn, resultdef = $void = "untyped", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                              (loadn, resultdef = LongInt = "LongInt", pos = (573,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_modify], cmplx = 1
                                 nil
                                 symbol = IMAGECOUNTER
                              )
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 4, convtype = tc_int_2_int, convnodeflags = []
                                 (addn, resultdef = Int64 = "Int64", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 3
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (573,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (573,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = IMAGECOUNTER
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (573,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                       value = 1
                                    )
                                 )
                              )
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (574,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetText(<TControl>;const TTranslateString);
                        methodpointer =
                        (loadn, resultdef = TTabSheet = "TTabSheet", pos = (574,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = NEWPAGE
                        )
                        left =
                        (callparan, resultdef = TTranslateString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                           (blockn, resultdef = TTranslateString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 255
                              (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (nothingn, resultdef = $void = "untyped", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (tempcreaten, resultdef = $void = "untyped", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    size = 8, temptypedef = TTranslateString = "AnsiString", tempinfo = $000000009081F880
                                    []
                                    tempinit =
                                    nil
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (calln, resultdef = $void = "untyped", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    proc = $fpc_ansistr_concat(var RawByteString;const RawByteString;const RawByteString;Word);
                                    left =
                                    (callparan, resultdef = RawByteString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                       (blockn, resultdef = RawByteString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                          (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (tempcreaten, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                                size = 8, temptypedef = AnsiString = "AnsiString", tempinfo = $000000009081F900
                                                [ti_addr_taken,ti_nofini]
                                                tempinit =
                                                nil
                                             )

                                          )
                                          (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                             (blockn, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_no_lvalue], cmplx = 255
                                                (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (tempcreaten, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                      size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081F980
                                                      []
                                                      tempinit =
                                                      nil
                                                   )

                                                )
                                                (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (assignn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                                                      (temprefn, resultdef = LongInt = "LongInt", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                         temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F980 flags = [])
                                                      )
                                                      (loadn, resultdef = LongInt = "LongInt", pos = (574,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = IMAGECOUNTER
                                                      )
                                                   )

                                                )
                                                (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (calln, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      proc = $fpc_ansistr_sint(Int64;Int64;out RawByteString;Word);
                                                      callinitblock =
                                                      (blockn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (statementn, resultdef = <nil>, pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            (tempcreaten, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                               size = 8, temptypedef = <no type symbol> = "^RawByteString", tempinfo = $000000009081F800
                                                               [ti_may_be_in_reg]
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (assignn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 1
                                                               (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                                  temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                               )
                                                               (typeconvn, resultdef = <no type symbol> = "^RawByteString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                  (addrn, resultdef = Pointer = "^untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, addrnodeflags = []
                                                                     (typeconvn, resultdef = RawByteString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                        (typeconvn, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                           (temprefn, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                                              temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F900 flags = [ti_addr_taken,ti_nofini])
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                            (calln, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                               proc = $fpc_ansistr_decr_ref(var Pointer);
                                                               left =
                                                               (callparan, resultdef = Pointer = "^untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                  (typeconvn, resultdef = Pointer = "^untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                     (derefn, resultdef = RawByteString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                        (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                                           temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                            )

                                                         )
                                                      )
                                                      callcleanupblock =
                                                      (blockn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                         (statementn, resultdef = <nil>, pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                            (tempdeleten, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                               release_to_normal: FALSE, temptypedef = <no type symbol> = "^RawByteString", temptype = tt_persistent, tempinfo = $000000009081F800
                                                            )

                                                         )
                                                      )
                                                      left =
                                                      (callparan, resultdef = RawByteString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                         (derefn, resultdef = RawByteString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            (temprefn, resultdef = <no type symbol> = "^RawByteString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                               temptypedef = <no type symbol> = "^RawByteString", (tempinfo = $000000009081F800 flags = [ti_may_be_in_reg])
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = Word = "Word", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                         (ordconstn, resultdef = Word = "Word", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                            value = 0
                                                         )

                                                      )
                                                      (callparan, resultdef = Int64 = "Int64", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                                            value = -1
                                                         )

                                                      )
                                                      (callparan, resultdef = Int64 = "Int64", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                         (typeconvn, resultdef = Int64 = "Int64", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                            (temprefn, resultdef = LongInt = "LongInt", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               temptypedef = LongInt = "LongInt", (tempinfo = $000000009081F980 flags = [])
                                                            )
                                                         )

                                                      )
                                                   )

                                                )
                                                (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                   (tempdeleten, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                      release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081F980
                                                   )

                                                )
                                                (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                   (typeconvn, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                      (temprefn, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_is_funcret], cmplx = 1
                                                         temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F900 flags = [ti_addr_taken,ti_nofini])
                                                      )
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                             (tempdeleten, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString", temptype = tt_persistent, tempinfo = $000000009081F900
                                             )

                                          )
                                          (statementn, resultdef = $void = "untyped", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                             (temprefn, resultdef = AnsiString = "AnsiString", pos = (574,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                                temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F900 flags = [ti_addr_taken,ti_nofini])
                                             )

                                          )
                                       )

                                    )
                                    (callparan, resultdef = Word = "Word", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                       (ordconstn, resultdef = Word = "Word", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                          value = 0
                                       )

                                    )
                                    (callparan, resultdef = RawByteString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                       (stringconstn, resultdef = AnsiString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                                       )

                                    )
                                    (callparan, resultdef = RawByteString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       (temprefn, resultdef = RawByteString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          temptypedef = TTranslateString = "AnsiString", (tempinfo = $000000009081F880 flags = [])
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                 (tempdeleten, resultdef = $void = "untyped", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    release_to_normal: TRUE, temptypedef = TTranslateString = "AnsiString", temptype = tt_persistent, tempinfo = $000000009081F880
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                 (temprefn, resultdef = TTranslateString = "AnsiString", pos = (574,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = TTranslateString = "AnsiString", (tempinfo = $000000009081F880 flags = [])
                                 )

                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (574,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (574,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWPAGE
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (575,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (575,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 6
                        (subscriptn, resultdef = Int64 = "Int64", pos = (575,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_isproperty], cmplx = 3
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (575,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )
                        )
                        (typeconvn, resultdef = Int64 = "Int64", pos = (575,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (575,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = IMAGECOUNTER
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (576,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = $fpc_ansistr_assign(var Pointer;Pointer);
                        left =
                        (callparan, resultdef = Pointer = "^untyped", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                           (typeconvn, resultdef = Pointer = "^untyped", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 255, convtype = tc_equal, convnodeflags = []
                              (calln, resultdef = AnsiString = "AnsiString", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetText(<TControl>;<var TTranslateString>):AnsiString;
                                 methodpointer =
                                 (loadn, resultdef = TTabSheet = "TTabSheet", pos = (576,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = NEWPAGE
                                 )
                                 funcretnode =
                                 (temprefn, resultdef = AnsiString = "AnsiString", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                    temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F600 flags = [ti_nofini])
                                 )
                                 callinitblock =
                                 (blockn, resultdef = $void = "untyped", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    (statementn, resultdef = <nil>, pos = (576,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (tempcreaten, resultdef = $void = "untyped", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_is_funcret], cmplx = 0
                                          size = 8, temptypedef = AnsiString = "AnsiString", tempinfo = $000000009081F600
                                          [ti_nofini]
                                          tempinit =
                                          nil
                                       )

                                    )
                                 )
                                 callcleanupblock =
                                 (blockn, resultdef = $void = "untyped", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    (statementn, resultdef = <nil>, pos = (576,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (tempdeleten, resultdef = $void = "untyped", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                          release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString", temptype = tt_persistent, tempinfo = $000000009081F600
                                       )

                                    )
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (576,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TTabSheet = "TTabSheet", pos = (576,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = NEWPAGE
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (576,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                    (temprefn, resultdef = AnsiString = "AnsiString", pos = (576,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_is_funcret], cmplx = 1
                                       temptypedef = AnsiString = "AnsiString", (tempinfo = $000000009081F600 flags = [ti_nofini])
                                    )

                                 )
                              )
                           )

                        )
                        (callparan, resultdef = Pointer = "^untyped", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (typeconvn, resultdef = Pointer = "^untyped", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 3, convtype = tc_equal, convnodeflags = []
                              (subscriptn, resultdef = AnsiString = "AnsiString", pos = (576,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 3
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (576,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = NEWDOC
                                 )
                              )
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (577,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (577,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = Show(<TCustomForm>);
                        methodpointer =
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (577,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = NEWDOC
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (577,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (577,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWDOC
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (578,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (578,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = Invalidate(<TWinControl>);
                        methodpointer =
                        (loadn, resultdef = TTabSheet = "TTabSheet", pos = (578,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = NEWPAGE
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (578,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (578,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWPAGE
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (579,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (579,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetActiveTabSheet(<TPageControl>;const TTabSheet);
                        methodpointer =
                        (subscriptn, resultdef = TPageControl = "TPageControl", pos = (579,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (579,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (579,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TPageControl = "TPageControl", pos = (579,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (579,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = TTabSheet = "TTabSheet", pos = (579,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (579,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = NEWPAGE
                           )

                        )
                     )

                  )
               )
               nil
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (583,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (583,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Free(<TObject>);
               methodpointer =
               (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (583,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = DIALOGFORM
               )
               left =
               (callparan, resultdef = <nil>, pos = (583,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (583,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = DIALOGFORM
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (585,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after the firstpass
$fin$000001BD is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
right before code generation
$fin$000001BD is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (nothingn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (asmn, resultdef = $void = "untyped", pos = (586,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (554,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ToolButtonBlurClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (603,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
ToolButtonBlurClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
ToolButtonBlurClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (603,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (605,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (605,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (605,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (605,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (605,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (605,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
HexaColorPicker1Change(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (608,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
   (statementn, resultdef = <nil>, pos = (609,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
      (assignn, resultdef = $void = "untyped", pos = (609,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 7
         (loadn, resultdef = TGraphicsColor = "LongInt", pos = (609,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = FORECOLOR
         )
         (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (609,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
            (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (609,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormMain = "TFormMain", pos = (609,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
         )
      )

   )
)

*******************************************************************************
after the firstpass
HexaColorPicker1Change(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 7
   (statementn, resultdef = <nil>, pos = (609,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 7
      (assignn, resultdef = $void = "untyped", pos = (609,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 7
         (loadn, resultdef = TGraphicsColor = "LongInt", pos = (609,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = FORECOLOR
         )
         (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (609,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
            (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (609,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
               (loadn, resultdef = TFormMain = "TFormMain", pos = (609,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
            )
         )
      )

   )
)

*******************************************************************************
right before code generation
HexaColorPicker1Change(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (608,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 7
         (statementn, resultdef = <nil>, pos = (609,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 7
            (assignn, resultdef = $void = "untyped", pos = (609,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 7
               (loadn, resultdef = TGraphicsColor = "LongInt", pos = (609,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = FORECOLOR
               )
               (subscriptn, resultdef = TGraphicsColor = "LongInt", pos = (609,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (609,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (609,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (610,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (610,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (610,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (610,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (610,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (610,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
BCMaterialProgressBarMarquee1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (615,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
BCMaterialProgressBarMarquee1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
BCMaterialProgressBarMarquee1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (615,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (617,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (617,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (617,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (617,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (617,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (617,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
BCToolBar1Redraw(TObject;TBGRABitmap);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (620,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (622,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (622,4), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Fill(<TGenericUniversalBitmap$2$crcA6578794>;const TBGRAPixel);
         methodpointer =
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (622,4), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = BITMAP
         )
         left =
         (callparan, resultdef = TBGRAPixel = "<record type>", pos = (622,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (calln, resultdef = TBGRAPixel = "<record type>", pos = (622,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               proc = operator :=(TGraphicsColor):<record type>; Static;
               left =
               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (622,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (622,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = -2147483633
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (622,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (622,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
BCToolBar1Redraw(TObject;TBGRABitmap);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (622,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (622,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Fill(<TGenericUniversalBitmap$2$crcA6578794>;const TBGRAPixel);
         methodpointer =
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (622,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = BITMAP
         )
         left =
         (callparan, resultdef = TBGRAPixel = "<record type>", pos = (622,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            (calln, resultdef = TBGRAPixel = "<record type>", pos = (622,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
               proc = operator :=(TGraphicsColor):<record type>; Static;
               left =
               (callparan, resultdef = TGraphicsColor = "LongInt", pos = (622,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (622,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = -2147483633
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (622,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (622,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = BITMAP
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
BCToolBar1Redraw(TObject;TBGRABitmap);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (620,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (622,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (622,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Fill(<TGenericUniversalBitmap$2$crcA6578794>;const TBGRAPixel);
               methodpointer =
               (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (622,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = BITMAP
               )
               left =
               (callparan, resultdef = TBGRAPixel = "<record type>", pos = (622,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                  (calln, resultdef = TBGRAPixel = "<record type>", pos = (622,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_address_taken], cmplx = 255
                     proc = operator :=(TGraphicsColor):<record type>; Static;
                     left =
                     (callparan, resultdef = TGraphicsColor = "LongInt", pos = (622,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                        (ordconstn, resultdef = TGraphicsColor = "LongInt", pos = (622,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = -2147483633
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (622,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (622,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = BITMAP
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (623,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (623,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (623,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (623,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (623,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (623,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
BCTrackbarUpdown1Change(TObject;Boolean);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (626,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
BCTrackbarUpdown1Change(TObject;Boolean);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
BCTrackbarUpdown1Change(TObject;Boolean);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (626,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (628,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (628,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (628,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (628,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (628,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (628,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
CheckBoxWebSafeChange(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (631,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
CheckBoxWebSafeChange(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
CheckBoxWebSafeChange(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (631,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (633,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (633,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (633,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (633,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (633,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (633,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ImageColorBoxMouseUp(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (640,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
ImageColorBoxMouseUp(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
ImageColorBoxMouseUp(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (640,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (642,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (642,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (642,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (642,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (642,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (642,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
Label1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (645,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
Label1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
Label1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (645,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (647,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (647,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (647,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (647,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (647,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (647,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
MainPanelClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (650,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
MainPanelClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
MainPanelClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (650,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (652,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (652,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (652,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (652,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (652,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (652,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
MenuItemCanvasSizeClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (657,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (659,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (659,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (659,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = MYFORM
         )
         (calln, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (659,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormSetCanvasSize", pos = (659,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (typen, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (659,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = TComponent = "TComponent", pos = (659,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (niln, resultdef = TComponent = "TComponent", pos = (659,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (659,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (659,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (659,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (659,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (660,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (blockn, resultdef = LongInt = "LongInt", pos = (663,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (661,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = LongInt = "LongInt", pos = (661,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = ShowModal(<TCustomForm>):LongInt;
                  methodpointer =
                  (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (661,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = MYFORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (661,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (661,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
         )
         (blockn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (667,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (ifn, resultdef = $void = "untyped", pos = (664,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (equaln, resultdef = Boolean = "Boolean", pos = (664,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (664,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                        (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (664,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = MYFORM
                        )
                     )
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (664,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 1
                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (665,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     nil
                  )
                  nil
                  nil
               )

            )
            (statementn, resultdef = <nil>, pos = (669,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (669,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = Free(<TObject>);
                  methodpointer =
                  (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (669,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = MYFORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (669,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (669,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
         )
      )

   )
)

*******************************************************************************
after the firstpass
MenuItemCanvasSizeClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (659,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (659,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (659,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = MYFORM
         )
         (calln, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (659,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
            proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormSetCanvasSize", pos = (659,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
               (typen, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (659,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = TComponent = "TComponent", pos = (659,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (niln, resultdef = TComponent = "TComponent", pos = (659,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (659,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (pointerconstn, resultdef = Pointer = "^untyped", pos = (659,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = $0000000000000001
               )

            )
            (callparan, resultdef = <nil>, pos = (659,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormSetCanvasSize", pos = (659,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (659,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (660,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (blockn, resultdef = LongInt = "LongInt", pos = (663,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (661,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = LongInt = "LongInt", pos = (661,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = ShowModal(<TCustomForm>):LongInt;
                  methodpointer =
                  (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (661,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = MYFORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (661,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (661,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = MYFORM
                     )

                  )
               )

            )
         )
         (calln, resultdef = $void = "untyped", pos = (660,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            proc = $fin$000001BE(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (660,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (660,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  nil
               )

            )
         )
      )

   )
)

*******************************************************************************
right before code generation
MenuItemCanvasSizeClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (657,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (659,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (659,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (659,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = MYFORM
               )
               (calln, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (659,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                  proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                  methodpointer =
                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormSetCanvasSize", pos = (659,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                     (typen, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (659,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     )
                  )
                  left =
                  (callparan, resultdef = TComponent = "TComponent", pos = (659,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (niln, resultdef = TComponent = "TComponent", pos = (659,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (659,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (pointerconstn, resultdef = Pointer = "^untyped", pos = (659,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = $0000000000000001
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (659,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormSetCanvasSize", pos = (659,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (659,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )

                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (tryfinallyn, resultdef = $void = "untyped", pos = (660,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (blockn, resultdef = LongInt = "LongInt", pos = (663,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (661,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = LongInt = "LongInt", pos = (661,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = ShowModal(<TCustomForm>):LongInt;
                        methodpointer =
                        (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (661,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = MYFORM
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (661,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (661,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = MYFORM
                           )

                        )
                     )

                  )
               )
               (calln, resultdef = $void = "untyped", pos = (660,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = $fin$000001BE(<^untyped>) is nested; Register;
                  left =
                  (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (660,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (660,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        nil
                     )

                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (673,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (673,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (673,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (673,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (673,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (673,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after the firstpass
$fin$000001BE is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (667,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (664,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (equaln, resultdef = Boolean = "Boolean", pos = (664,27), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 4
            (subscriptn, resultdef = LongInt = "LongInt", pos = (664,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
               (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (664,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = MYFORM
               )
            )
            (ordconstn, resultdef = LongInt = "LongInt", pos = (664,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 1
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (665,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            nil
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (669,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (669,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Free(<TObject>);
         methodpointer =
         (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (669,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = MYFORM
         )
         left =
         (callparan, resultdef = <nil>, pos = (669,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (669,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = MYFORM
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
$fin$000001BE is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (667,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (664,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (equaln, resultdef = Boolean = "Boolean", pos = (664,27), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done], cmplx = 4
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (664,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 3
                     (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (664,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = MYFORM
                     )
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (664,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 1
                  )
               )
               (blockn, resultdef = $void = "untyped", pos = (665,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  nil
               )
               nil
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (669,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (669,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Free(<TObject>);
               methodpointer =
               (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (669,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = MYFORM
               )
               left =
               (callparan, resultdef = <nil>, pos = (669,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (669,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = MYFORM
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (671,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ImageWidthMouseMove(TObject;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (681,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (684,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (684,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (684,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (684,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (684,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (684,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = Y
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (684,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (684,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = X
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (684,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (684,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = SHIFT
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (684,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TObject = "TObject", pos = (684,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = SENDER
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
ImageWidthMouseMove(TObject;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (684,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (684,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (684,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
            (ordconstn, resultdef = Boolean = "Boolean", pos = (684,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (684,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (684,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = Y
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (684,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = LongInt = "LongInt", pos = (684,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = X
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (684,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (684,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = SHIFT
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (684,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TObject = "TObject", pos = (684,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = SENDER
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
ImageWidthMouseMove(TObject;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (681,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (684,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (684,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
               left =
               (callparan, resultdef = Boolean = "Boolean", pos = (684,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (684,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (684,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (684,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = Y
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (684,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (684,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = X
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (684,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (684,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SHIFT
                  )

               )
               (callparan, resultdef = TObject = "TObject", pos = (684,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TObject = "TObject", pos = (684,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = SENDER
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (685,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (685,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (685,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (685,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (685,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (685,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
MenuItemExitClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (688,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (689,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (689,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Close(<TCustomForm>);
         methodpointer =
         (loadn, resultdef = TFormMain = "TFormMain", pos = (689,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = <nil>, pos = (689,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (689,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
MenuItemExitClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (689,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (689,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Close(<TCustomForm>);
         methodpointer =
         (loadn, resultdef = TFormMain = "TFormMain", pos = (689,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = <nil>, pos = (689,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormMain = "TFormMain", pos = (689,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
MenuItemExitClick(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (688,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (689,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (689,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Close(<TCustomForm>);
               methodpointer =
               (loadn, resultdef = TFormMain = "TFormMain", pos = (689,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = <nil>, pos = (689,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (689,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (690,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (690,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (690,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (690,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (690,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (690,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
PageControl1Change(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (697,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (704,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (forn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (698,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = I
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (698,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 0
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (698,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (subn, resultdef = Int64 = "Int64", pos = (698,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (typeconvn, resultdef = Int64 = "Int64", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (calln, resultdef = LongInt = "LongInt", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetControlCount(<TWinControl>):LongInt;
                     methodpointer =
                     (calln, resultdef = TTabSheet = "TTabSheet", pos = (698,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                        methodpointer =
                        (subscriptn, resultdef = TPageControl = "TPageControl", pos = (698,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (698,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (698,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (698,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (698,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )
               (ordconstn, resultdef = Int64 = "Int64", pos = (698,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  value = 1
               )
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (699,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (700,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (700,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = TControl = "TControl", pos = (700,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = CHILDCONTROL
                  )
                  (calln, resultdef = TControl = "TControl", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetControl(<TWinControl>;const LongInt):TControl;
                     methodpointer =
                     (calln, resultdef = TTabSheet = "TTabSheet", pos = (700,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                        methodpointer =
                        (subscriptn, resultdef = TPageControl = "TPageControl", pos = (700,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (700,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (700,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (700,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (700,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = I
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (700,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (700,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (703,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (ifn, resultdef = $void = "untyped", pos = (702,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (isn, resultdef = Boolean = "Boolean", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (loadn, resultdef = TControl = "TControl", pos = (702,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = CHILDCONTROL
                     )
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (702,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (typen, resultdef = TFormDocument = "TFormDocument", pos = (702,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                  )
                  (calln, resultdef = $void = "untyped", pos = (703,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                     proc = SetText(<TControl>;const TTranslateString);
                     methodpointer =
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (703,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = FORMMAIN
                     )
                     left =
                     (callparan, resultdef = TTranslateString = "AnsiString", pos = (703,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
                        (subscriptn, resultdef = TTranslateString = "AnsiString", pos = (703,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (typeconvn, resultdef = TFormDocument = "TFormDocument", pos = (703,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                              (loadn, resultdef = TControl = "TControl", pos = (703,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = CHILDCONTROL
                              )
                           )
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (703,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (703,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
                  nil
                  nil
               )

            )
         )
      )

   )
)

*******************************************************************************
after the firstpass
PageControl1Change(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tempcreaten, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000090820000
         [ti_may_be_in_reg]
         tempinit =
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
         (temprefn, resultdef = LongInt = "LongInt", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
            temptypedef = LongInt = "LongInt", (tempinfo = $0000000090820000 flags = [ti_may_be_in_reg])
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (698,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (subn, resultdef = Int64 = "Int64", pos = (698,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
               (typeconvn, resultdef = Int64 = "Int64", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (calln, resultdef = LongInt = "LongInt", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetControlCount(<TWinControl>):LongInt;
                     methodpointer =
                     (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                        temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820080 flags = [ti_may_be_in_reg])
                     )
                     callinitblock =
                     (blockn, resultdef = $void = "untyped", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (statementn, resultdef = <nil>, pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (tempcreaten, resultdef = $void = "untyped", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              size = 8, temptypedef = TTabSheet = "TTabSheet", tempinfo = $0000000090820080
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef = $void = "untyped", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (assignn, resultdef = $void = "untyped", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                 temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820080 flags = [ti_may_be_in_reg])
                              )
                              (calln, resultdef = TTabSheet = "TTabSheet", pos = (698,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                                 methodpointer =
                                 (subscriptn, resultdef = TPageControl = "TPageControl", pos = (698,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (698,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                    (subscriptn, resultdef = TPageControl = "TPageControl", pos = (698,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormMain = "TFormMain", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )

                                 )
                              )
                           )

                        )
                     )
                     callcleanupblock =
                     (blockn, resultdef = $void = "untyped", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        (statementn, resultdef = <nil>, pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           (tempdeleten, resultdef = $void = "untyped", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              release_to_normal: FALSE, temptypedef = TTabSheet = "TTabSheet", temptype = tt_persistent, tempinfo = $0000000090820080
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (698,54), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                        (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                           temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820080 flags = [ti_may_be_in_reg])
                        )

                     )
                  )
               )
               (ordconstn, resultdef = Int64 = "Int64", pos = (698,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 1
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (lten, resultdef = Boolean = "Boolean", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
            (ordconstn, resultdef = LongInt = "LongInt", pos = (698,12), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               value = 0
            )
            (temprefn, resultdef = LongInt = "LongInt", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = LongInt = "LongInt", (tempinfo = $0000000090820000 flags = [ti_may_be_in_reg])
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (nothingn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (698,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                     value = -1
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (whilerepeatn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (gten, resultdef = Boolean = "Boolean", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                     (loadn, resultdef = LongInt = "LongInt", pos = (698,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                        nil
                        symbol = I
                     )
                     (temprefn, resultdef = LongInt = "LongInt", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                        temptypedef = LongInt = "LongInt", (tempinfo = $0000000090820000 flags = [ti_may_be_in_reg])
                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (nothingn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                           (loadn, resultdef = LongInt = "LongInt", pos = (698,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                              nil
                              symbol = I
                           )
                           (inlinen, resultdef = LongInt = "LongInt", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                              (loadn, resultdef = LongInt = "LongInt", pos = (698,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                 nil
                                 symbol = I
                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (blockn, resultdef = $void = "untyped", pos = (699,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (700,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (700,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (loadn, resultdef = TControl = "TControl", pos = (700,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    nil
                                    symbol = CHILDCONTROL
                                 )
                                 (calln, resultdef = TControl = "TControl", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    proc = GetControl(<TWinControl>;const LongInt):TControl;
                                    methodpointer =
                                    (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                       temptypedef = TTabSheet = "TTabSheet", (tempinfo = $000000009081FF80 flags = [ti_may_be_in_reg])
                                    )
                                    callinitblock =
                                    (blockn, resultdef = $void = "untyped", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (statementn, resultdef = <nil>, pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (tempcreaten, resultdef = $void = "untyped", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             size = 8, temptypedef = TTabSheet = "TTabSheet", tempinfo = $000000009081FF80
                                             [ti_may_be_in_reg]
                                             tempinit =
                                             nil
                                          )

                                       )
                                       (statementn, resultdef = $void = "untyped", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (assignn, resultdef = $void = "untyped", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                             (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                temptypedef = TTabSheet = "TTabSheet", (tempinfo = $000000009081FF80 flags = [ti_may_be_in_reg])
                                             )
                                             (calln, resultdef = TTabSheet = "TTabSheet", pos = (700,44), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                                                methodpointer =
                                                (subscriptn, resultdef = TPageControl = "TPageControl", pos = (700,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                   (loadn, resultdef = TFormMain = "TFormMain", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = self
                                                   )
                                                )
                                                left =
                                                (callparan, resultdef = <nil>, pos = (700,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                   (subscriptn, resultdef = TPageControl = "TPageControl", pos = (700,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                      (loadn, resultdef = TFormMain = "TFormMain", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = self
                                                      )
                                                   )

                                                )
                                             )
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef = $void = "untyped", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                       (statementn, resultdef = <nil>, pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          (tempdeleten, resultdef = $void = "untyped", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             release_to_normal: FALSE, temptypedef = TTabSheet = "TTabSheet", temptype = tt_persistent, tempinfo = $000000009081FF80
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = LongInt = "LongInt", pos = (700,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                       (loadn, resultdef = LongInt = "LongInt", pos = (700,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = I
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (700,56), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                       (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                          temptypedef = TTabSheet = "TTabSheet", (tempinfo = $000000009081FF80 flags = [ti_may_be_in_reg])
                                       )

                                    )
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (703,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (ifn, resultdef = $void = "untyped", pos = (702,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (calln, resultdef = Boolean = "Boolean", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                    proc = $fpc_do_is(TClass;TObject):Boolean;
                                    left =
                                    (callparan, resultdef = TObject = "TObject", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                       (typeconvn, resultdef = TObject = "TObject", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                          (loadn, resultdef = TControl = "TControl", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = CHILDCONTROL
                                          )
                                       )

                                    )
                                    (callparan, resultdef = TClass = "Class Of TObject", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                       (typeconvn, resultdef = TClass = "Class Of TObject", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                          (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                             (typen, resultdef = TFormDocument = "TFormDocument", pos = (702,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                             )
                                          )
                                       )

                                    )
                                 )
                                 (calln, resultdef = $void = "untyped", pos = (703,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                    proc = SetText(<TControl>;const TTranslateString);
                                    methodpointer =
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (703,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = FORMMAIN
                                    )
                                    left =
                                    (callparan, resultdef = TTranslateString = "AnsiString", pos = (703,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                       (subscriptn, resultdef = TTranslateString = "AnsiString", pos = (703,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (typeconvn, resultdef = TFormDocument = "TFormDocument", pos = (703,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                             (loadn, resultdef = TControl = "TControl", pos = (703,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = CHILDCONTROL
                                             )
                                          )
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (703,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                       (loadn, resultdef = TFormMain = "TFormMain", pos = (703,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = FORMMAIN
                                       )

                                    )
                                 )
                                 nil
                                 nil
                              )

                           )
                        )

                     )
                  )
                  nil
                  nil
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
      (tempdeleten, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000090820000
      )

   )
)

*******************************************************************************
right before code generation
PageControl1Change(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (697,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (nothingn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (tempcreaten, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
               size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000090820000
               [ti_may_be_in_reg]
               tempinit =
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
               (temprefn, resultdef = LongInt = "LongInt", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                  temptypedef = LongInt = "LongInt", (tempinfo = $0000000090820000 flags = [ti_may_be_in_reg])
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (698,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (subn, resultdef = Int64 = "Int64", pos = (698,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     (typeconvn, resultdef = Int64 = "Int64", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                        (calln, resultdef = LongInt = "LongInt", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetControlCount(<TWinControl>):LongInt;
                           methodpointer =
                           (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820080 flags = [ti_may_be_in_reg])
                           )
                           callinitblock =
                           (blockn, resultdef = $void = "untyped", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (statementn, resultdef = <nil>, pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (tempcreaten, resultdef = $void = "untyped", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    size = 8, temptypedef = TTabSheet = "TTabSheet", tempinfo = $0000000090820080
                                    [ti_may_be_in_reg]
                                    tempinit =
                                    nil
                                 )

                              )
                              (statementn, resultdef = $void = "untyped", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (assignn, resultdef = $void = "untyped", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                       temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820080 flags = [ti_may_be_in_reg])
                                    )
                                    (calln, resultdef = TTabSheet = "TTabSheet", pos = (698,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                                       methodpointer =
                                       (subscriptn, resultdef = TPageControl = "TPageControl", pos = (698,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (698,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                          (subscriptn, resultdef = TPageControl = "TPageControl", pos = (698,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = self
                                             )
                                          )

                                       )
                                    )
                                 )

                              )
                           )
                           callcleanupblock =
                           (blockn, resultdef = $void = "untyped", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              (statementn, resultdef = <nil>, pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (tempdeleten, resultdef = $void = "untyped", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    release_to_normal: FALSE, temptypedef = TTabSheet = "TTabSheet", temptype = tt_persistent, tempinfo = $0000000090820080
                                 )

                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (698,54), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                              (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (698,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                 temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820080 flags = [ti_may_be_in_reg])
                              )

                           )
                        )
                     )
                     (ordconstn, resultdef = Int64 = "Int64", pos = (698,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 1
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (lten, resultdef = Boolean = "Boolean", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (698,12), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )
                  (temprefn, resultdef = LongInt = "LongInt", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = LongInt = "LongInt", (tempinfo = $0000000090820000 flags = [ti_may_be_in_reg])
                  )
               )
               (blockn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (nothingn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (698,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = I
                        )
                        (ordconstn, resultdef = LongInt = "LongInt", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                           value = -1
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (whilerepeatn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (gten, resultdef = Boolean = "Boolean", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                           (loadn, resultdef = LongInt = "LongInt", pos = (698,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                              nil
                              symbol = I
                           )
                           (temprefn, resultdef = LongInt = "LongInt", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = LongInt = "LongInt", (tempinfo = $0000000090820000 flags = [ti_may_be_in_reg])
                           )
                        )
                        (blockn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (nothingn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                 (loadn, resultdef = LongInt = "LongInt", pos = (698,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    nil
                                    symbol = I
                                 )
                                 (inlinen, resultdef = LongInt = "LongInt", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                    (loadn, resultdef = LongInt = "LongInt", pos = (698,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                       nil
                                       symbol = I
                                    )
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (blockn, resultdef = $void = "untyped", pos = (699,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (statementn, resultdef = <nil>, pos = (700,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (assignn, resultdef = $void = "untyped", pos = (700,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (loadn, resultdef = TControl = "TControl", pos = (700,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                          nil
                                          symbol = CHILDCONTROL
                                       )
                                       (calln, resultdef = TControl = "TControl", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetControl(<TWinControl>;const LongInt):TControl;
                                          methodpointer =
                                          (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                             temptypedef = TTabSheet = "TTabSheet", (tempinfo = $000000009081FF80 flags = [ti_may_be_in_reg])
                                          )
                                          callinitblock =
                                          (blockn, resultdef = $void = "untyped", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                             (statementn, resultdef = <nil>, pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                (tempcreaten, resultdef = $void = "untyped", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                   size = 8, temptypedef = TTabSheet = "TTabSheet", tempinfo = $000000009081FF80
                                                   [ti_may_be_in_reg]
                                                   tempinit =
                                                   nil
                                                )

                                             )
                                             (statementn, resultdef = $void = "untyped", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (assignn, resultdef = $void = "untyped", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                   (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                      temptypedef = TTabSheet = "TTabSheet", (tempinfo = $000000009081FF80 flags = [ti_may_be_in_reg])
                                                   )
                                                   (calln, resultdef = TTabSheet = "TTabSheet", pos = (700,44), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                      proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                                                      methodpointer =
                                                      (subscriptn, resultdef = TPageControl = "TPageControl", pos = (700,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                         (loadn, resultdef = TFormMain = "TFormMain", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = self
                                                         )
                                                      )
                                                      left =
                                                      (callparan, resultdef = <nil>, pos = (700,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                         (subscriptn, resultdef = TPageControl = "TPageControl", pos = (700,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                            (loadn, resultdef = TFormMain = "TFormMain", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               nil
                                                               symbol = self
                                                            )
                                                         )

                                                      )
                                                   )
                                                )

                                             )
                                          )
                                          callcleanupblock =
                                          (blockn, resultdef = $void = "untyped", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             (statementn, resultdef = <nil>, pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                (tempdeleten, resultdef = $void = "untyped", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                   release_to_normal: FALSE, temptypedef = TTabSheet = "TTabSheet", temptype = tt_persistent, tempinfo = $000000009081FF80
                                                )

                                             )
                                          )
                                          left =
                                          (callparan, resultdef = LongInt = "LongInt", pos = (700,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                             (loadn, resultdef = LongInt = "LongInt", pos = (700,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = I
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (700,56), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                             (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (700,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                temptypedef = TTabSheet = "TTabSheet", (tempinfo = $000000009081FF80 flags = [ti_may_be_in_reg])
                                             )

                                          )
                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (703,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (ifn, resultdef = $void = "untyped", pos = (702,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (calln, resultdef = Boolean = "Boolean", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                          proc = $fpc_do_is(TClass;TObject):Boolean;
                                          left =
                                          (callparan, resultdef = TObject = "TObject", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                             (typeconvn, resultdef = TObject = "TObject", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                (loadn, resultdef = TControl = "TControl", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = CHILDCONTROL
                                                )
                                             )

                                          )
                                          (callparan, resultdef = TClass = "Class Of TObject", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                             (typeconvn, resultdef = TClass = "Class Of TObject", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (702,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                   (typen, resultdef = TFormDocument = "TFormDocument", pos = (702,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                   )
                                                )
                                             )

                                          )
                                       )
                                       (calln, resultdef = $void = "untyped", pos = (703,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                                          proc = SetText(<TControl>;const TTranslateString);
                                          methodpointer =
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (703,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = FORMMAIN
                                          )
                                          left =
                                          (callparan, resultdef = TTranslateString = "AnsiString", pos = (703,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                             (subscriptn, resultdef = TTranslateString = "AnsiString", pos = (703,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                (typeconvn, resultdef = TFormDocument = "TFormDocument", pos = (703,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                   (loadn, resultdef = TControl = "TControl", pos = (703,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = CHILDCONTROL
                                                   )
                                                )
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (703,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (703,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = FORMMAIN
                                             )

                                          )
                                       )
                                       nil
                                       nil
                                    )

                                 )
                              )

                           )
                        )
                        nil
                        nil
                     )

                  )
               )
               nil
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
            (tempdeleten, resultdef = $void = "untyped", pos = (698,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
               release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000090820000
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (706,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (706,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (706,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (706,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (706,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (706,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
PageControl1CloseTabClicked(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (709,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (711,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Free(<TObject>);
         methodpointer =
         (calln, resultdef = TTabSheet = "TTabSheet", pos = (711,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
            proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
            methodpointer =
            (subscriptn, resultdef = TPageControl = "TPageControl", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
               (loadn, resultdef = TFormMain = "TFormMain", pos = (711,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  nil
                  symbol = self
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (711,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (711,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (711,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (711,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
PageControl1CloseTabClicked(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (711,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Free(<TObject>);
         methodpointer =
         (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
            temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820000 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  size = 8, temptypedef = TTabSheet = "TTabSheet", tempinfo = $0000000090820000
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                     temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820000 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TTabSheet = "TTabSheet", pos = (711,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                     methodpointer =
                     (subscriptn, resultdef = TPageControl = "TPageControl", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (711,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (711,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TPageControl = "TPageControl", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (711,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            (statementn, resultdef = <nil>, pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TTabSheet = "TTabSheet", temptype = tt_persistent, tempinfo = $0000000090820000
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (711,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
               temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820000 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
PageControl1CloseTabClicked(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (709,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (711,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Free(<TObject>);
               methodpointer =
               (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                  temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820000 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        size = 8, temptypedef = TTabSheet = "TTabSheet", tempinfo = $0000000090820000
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                           temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820000 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TTabSheet = "TTabSheet", pos = (711,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                           methodpointer =
                           (subscriptn, resultdef = TPageControl = "TPageControl", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (711,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (711,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                              (subscriptn, resultdef = TPageControl = "TPageControl", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (711,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                    nil
                                    symbol = self
                                 )
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  (statementn, resultdef = <nil>, pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef = $void = "untyped", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TTabSheet = "TTabSheet", temptype = tt_persistent, tempinfo = $0000000090820000
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (711,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (711,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820000 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (712,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (712,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (712,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (712,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (712,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (712,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
PageControl1MouseDown(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (716,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
PageControl1MouseDown(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
PageControl1MouseDown(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (716,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (718,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (718,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (718,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (718,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (718,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (718,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
findDocument(LongInt):TFormDocument;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (726,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (727,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (727,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (typeconvn, resultdef = TFormDocument = "TFormDocument", pos = (727,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (727,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
               nil
               symbol = result
            )
         )
         (niln, resultdef = TFormDocument = "TFormDocument", pos = (727,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (736,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (forn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (728,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = I
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (728,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 0
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (728,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (subn, resultdef = Int64 = "Int64", pos = (728,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (typeconvn, resultdef = Int64 = "Int64", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (calln, resultdef = LongInt = "LongInt", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetControlCount(<TWinControl>):LongInt;
                     methodpointer =
                     (calln, resultdef = TTabSheet = "TTabSheet", pos = (728,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                        methodpointer =
                        (subscriptn, resultdef = TPageControl = "TPageControl", pos = (728,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (728,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = FORMMAIN
                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (728,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (728,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (728,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (728,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )
               (ordconstn, resultdef = Int64 = "Int64", pos = (728,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                  value = 1
               )
            )
         )
         (blockn, resultdef = $void = "untyped", pos = (729,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (730,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (730,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (loadn, resultdef = TControl = "TControl", pos = (730,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = CHILDCONTROL
                  )
                  (calln, resultdef = TControl = "TControl", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetControl(<TWinControl>;const LongInt):TControl;
                     methodpointer =
                     (calln, resultdef = TTabSheet = "TTabSheet", pos = (730,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                        proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                        methodpointer =
                        (subscriptn, resultdef = TPageControl = "TPageControl", pos = (730,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (730,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = FORMMAIN
                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (730,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           (nothingn, resultdef = $void = "untyped", pos = (730,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (730,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (730,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                           nil
                           symbol = I
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (730,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (730,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (735,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (ifn, resultdef = $void = "untyped", pos = (732,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  (isn, resultdef = Boolean = "Boolean", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     (loadn, resultdef = TControl = "TControl", pos = (732,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = CHILDCONTROL
                     )
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (732,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (typen, resultdef = TFormDocument = "TFormDocument", pos = (732,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                  )
                  (blockn, resultdef = $void = "untyped", pos = (733,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (statementn, resultdef = <nil>, pos = (734,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                        (assignn, resultdef = $void = "untyped", pos = (734,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (typeconvn, resultdef = TFormDocument = "TFormDocument", pos = (734,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (734,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                                 nil
                                 symbol = result
                              )
                           )
                           (typeconvn, resultdef = TFormDocument = "TFormDocument", pos = (734,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                              (loadn, resultdef = TControl = "TControl", pos = (734,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                                 nil
                                 symbol = CHILDCONTROL
                              )
                           )
                        )

                     )
                  )
                  nil
                  nil
               )

            )
         )
      )

   )
)

*******************************************************************************
after the firstpass
findDocument(LongInt):TFormDocument;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (727,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (727,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (typeconvn, resultdef = TFormDocument = "TFormDocument", pos = (727,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (727,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
               nil
               symbol = result
            )
         )
         (niln, resultdef = TFormDocument = "TFormDocument", pos = (727,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (736,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (nothingn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (tempcreaten, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
               size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081FF00
               [ti_may_be_in_reg]
               tempinit =
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
               (temprefn, resultdef = LongInt = "LongInt", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                  temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FF00 flags = [ti_may_be_in_reg])
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (728,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                  (subn, resultdef = Int64 = "Int64", pos = (728,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                     (typeconvn, resultdef = Int64 = "Int64", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                        (calln, resultdef = LongInt = "LongInt", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetControlCount(<TWinControl>):LongInt;
                           methodpointer =
                           (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820100 flags = [ti_may_be_in_reg])
                           )
                           callinitblock =
                           (blockn, resultdef = $void = "untyped", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (statementn, resultdef = <nil>, pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (tempcreaten, resultdef = $void = "untyped", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    size = 8, temptypedef = TTabSheet = "TTabSheet", tempinfo = $0000000090820100
                                    [ti_may_be_in_reg]
                                    tempinit =
                                    nil
                                 )

                              )
                              (statementn, resultdef = $void = "untyped", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (assignn, resultdef = $void = "untyped", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                       temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820100 flags = [ti_may_be_in_reg])
                                    )
                                    (calln, resultdef = TTabSheet = "TTabSheet", pos = (728,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                                       methodpointer =
                                       (subscriptn, resultdef = TPageControl = "TPageControl", pos = (728,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (728,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = FORMMAIN
                                          )
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (728,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                          (subscriptn, resultdef = TPageControl = "TPageControl", pos = (728,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (728,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = FORMMAIN
                                             )
                                          )

                                       )
                                    )
                                 )

                              )
                           )
                           callcleanupblock =
                           (blockn, resultdef = $void = "untyped", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              (statementn, resultdef = <nil>, pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (tempdeleten, resultdef = $void = "untyped", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    release_to_normal: FALSE, temptypedef = TTabSheet = "TTabSheet", temptype = tt_persistent, tempinfo = $0000000090820100
                                 )

                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (728,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                              (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                 temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820100 flags = [ti_may_be_in_reg])
                              )

                           )
                        )
                     )
                     (ordconstn, resultdef = Int64 = "Int64", pos = (728,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 1
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (lten, resultdef = Boolean = "Boolean", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (728,12), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )
                  (temprefn, resultdef = LongInt = "LongInt", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FF00 flags = [ti_may_be_in_reg])
                  )
               )
               (blockn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (nothingn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                        (loadn, resultdef = LongInt = "LongInt", pos = (728,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = I
                        )
                        (ordconstn, resultdef = LongInt = "LongInt", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                           value = -1
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (whilerepeatn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (gten, resultdef = Boolean = "Boolean", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                           (loadn, resultdef = LongInt = "LongInt", pos = (728,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                              nil
                              symbol = I
                           )
                           (temprefn, resultdef = LongInt = "LongInt", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FF00 flags = [ti_may_be_in_reg])
                           )
                        )
                        (blockn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (nothingn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                 (loadn, resultdef = LongInt = "LongInt", pos = (728,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    nil
                                    symbol = I
                                 )
                                 (inlinen, resultdef = LongInt = "LongInt", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                    (loadn, resultdef = LongInt = "LongInt", pos = (728,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                       nil
                                       symbol = I
                                    )
                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (blockn, resultdef = $void = "untyped", pos = (729,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (statementn, resultdef = <nil>, pos = (730,65), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (assignn, resultdef = $void = "untyped", pos = (730,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (loadn, resultdef = TControl = "TControl", pos = (730,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                          nil
                                          symbol = CHILDCONTROL
                                       )
                                       (calln, resultdef = TControl = "TControl", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetControl(<TWinControl>;const LongInt):TControl;
                                          methodpointer =
                                          (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                             temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820080 flags = [ti_may_be_in_reg])
                                          )
                                          callinitblock =
                                          (blockn, resultdef = $void = "untyped", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                             (statementn, resultdef = <nil>, pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                (tempcreaten, resultdef = $void = "untyped", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                   size = 8, temptypedef = TTabSheet = "TTabSheet", tempinfo = $0000000090820080
                                                   [ti_may_be_in_reg]
                                                   tempinit =
                                                   nil
                                                )

                                             )
                                             (statementn, resultdef = $void = "untyped", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                (assignn, resultdef = $void = "untyped", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                   (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                      temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820080 flags = [ti_may_be_in_reg])
                                                   )
                                                   (calln, resultdef = TTabSheet = "TTabSheet", pos = (730,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                      proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                                                      methodpointer =
                                                      (subscriptn, resultdef = TPageControl = "TPageControl", pos = (730,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                         (loadn, resultdef = TFormMain = "TFormMain", pos = (730,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = FORMMAIN
                                                         )
                                                      )
                                                      left =
                                                      (callparan, resultdef = <nil>, pos = (730,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                         (subscriptn, resultdef = TPageControl = "TPageControl", pos = (730,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                            (loadn, resultdef = TFormMain = "TFormMain", pos = (730,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                               nil
                                                               symbol = FORMMAIN
                                                            )
                                                         )

                                                      )
                                                   )
                                                )

                                             )
                                          )
                                          callcleanupblock =
                                          (blockn, resultdef = $void = "untyped", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                             (statementn, resultdef = <nil>, pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                (tempdeleten, resultdef = $void = "untyped", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                   release_to_normal: FALSE, temptypedef = TTabSheet = "TTabSheet", temptype = tt_persistent, tempinfo = $0000000090820080
                                                )

                                             )
                                          )
                                          left =
                                          (callparan, resultdef = LongInt = "LongInt", pos = (730,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                             (loadn, resultdef = LongInt = "LongInt", pos = (730,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = I
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (730,65), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                             (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820080 flags = [ti_may_be_in_reg])
                                             )

                                          )
                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (735,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (ifn, resultdef = $void = "untyped", pos = (732,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (calln, resultdef = Boolean = "Boolean", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                          proc = $fpc_do_is(TClass;TObject):Boolean;
                                          left =
                                          (callparan, resultdef = TObject = "TObject", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                             (typeconvn, resultdef = TObject = "TObject", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                (loadn, resultdef = TControl = "TControl", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = CHILDCONTROL
                                                )
                                             )

                                          )
                                          (callparan, resultdef = TClass = "Class Of TObject", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                             (typeconvn, resultdef = TClass = "Class Of TObject", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                   (typen, resultdef = TFormDocument = "TFormDocument", pos = (732,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                   )
                                                )
                                             )

                                          )
                                       )
                                       (blockn, resultdef = $void = "untyped", pos = (733,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                                          (statementn, resultdef = <nil>, pos = (734,44), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3
                                             (assignn, resultdef = $void = "untyped", pos = (734,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                                                (typeconvn, resultdef = TFormDocument = "TFormDocument", pos = (734,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                   (loadn, resultdef = TFormDocument = "TFormDocument", pos = (734,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                      nil
                                                      symbol = result
                                                   )
                                                )
                                                (typeconvn, resultdef = TFormDocument = "TFormDocument", pos = (734,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                   (loadn, resultdef = TControl = "TControl", pos = (734,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = CHILDCONTROL
                                                   )
                                                )
                                             )

                                          )
                                       )
                                       nil
                                       nil
                                    )

                                 )
                              )

                           )
                        )
                        nil
                        nil
                     )

                  )
               )
               nil
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
            (tempdeleten, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
               release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081FF00
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
findDocument(LongInt):TFormDocument;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (726,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (727,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (727,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (typeconvn, resultdef = TFormDocument = "TFormDocument", pos = (727,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (727,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = result
                  )
               )
               (niln, resultdef = TFormDocument = "TFormDocument", pos = (727,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (736,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (blockn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (nothingn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                  )

               )
               (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (tempcreaten, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     size = 4, temptypedef = LongInt = "LongInt", tempinfo = $000000009081FF00
                     [ti_may_be_in_reg]
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (assignn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 255
                     (temprefn, resultdef = LongInt = "LongInt", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                        temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FF00 flags = [ti_may_be_in_reg])
                     )
                     (typeconvn, resultdef = LongInt = "LongInt", pos = (728,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (728,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                           (typeconvn, resultdef = Int64 = "Int64", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                              (calln, resultdef = LongInt = "LongInt", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetControlCount(<TWinControl>):LongInt;
                                 methodpointer =
                                 (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820100 flags = [ti_may_be_in_reg])
                                 )
                                 callinitblock =
                                 (blockn, resultdef = $void = "untyped", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                    (statementn, resultdef = <nil>, pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (tempcreaten, resultdef = $void = "untyped", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                          size = 8, temptypedef = TTabSheet = "TTabSheet", tempinfo = $0000000090820100
                                          [ti_may_be_in_reg]
                                          tempinit =
                                          nil
                                       )

                                    )
                                    (statementn, resultdef = $void = "untyped", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (assignn, resultdef = $void = "untyped", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                          (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820100 flags = [ti_may_be_in_reg])
                                          )
                                          (calln, resultdef = TTabSheet = "TTabSheet", pos = (728,49), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                             proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                                             methodpointer =
                                             (subscriptn, resultdef = TPageControl = "TPageControl", pos = (728,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                (loadn, resultdef = TFormMain = "TFormMain", pos = (728,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                   nil
                                                   symbol = FORMMAIN
                                                )
                                             )
                                             left =
                                             (callparan, resultdef = <nil>, pos = (728,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                (subscriptn, resultdef = TPageControl = "TPageControl", pos = (728,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                   (loadn, resultdef = TFormMain = "TFormMain", pos = (728,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = FORMMAIN
                                                   )
                                                )

                                             )
                                          )
                                       )

                                    )
                                 )
                                 callcleanupblock =
                                 (blockn, resultdef = $void = "untyped", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    (statementn, resultdef = <nil>, pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (tempdeleten, resultdef = $void = "untyped", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                          release_to_normal: FALSE, temptypedef = TTabSheet = "TTabSheet", temptype = tt_persistent, tempinfo = $0000000090820100
                                       )

                                    )
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (728,63), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                    (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (728,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                       temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820100 flags = [ti_may_be_in_reg])
                                    )

                                 )
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (728,65), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 1
                           )
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (ifn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (lten, resultdef = Boolean = "Boolean", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                        (ordconstn, resultdef = LongInt = "LongInt", pos = (728,12), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = 0
                        )
                        (temprefn, resultdef = LongInt = "LongInt", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                           temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FF00 flags = [ti_may_be_in_reg])
                        )
                     )
                     (blockn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (nothingn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (assignn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 2
                              (loadn, resultdef = LongInt = "LongInt", pos = (728,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                 nil
                                 symbol = I
                              )
                              (ordconstn, resultdef = LongInt = "LongInt", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done,nf_explicit,nf_internal], cmplx = 0
                                 value = -1
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (whilerepeatn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (gten, resultdef = Boolean = "Boolean", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_pass1_done,nf_internal], cmplx = 1
                                 (loadn, resultdef = LongInt = "LongInt", pos = (728,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    nil
                                    symbol = I
                                 )
                                 (temprefn, resultdef = LongInt = "LongInt", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                    temptypedef = LongInt = "LongInt", (tempinfo = $000000009081FF00 flags = [ti_may_be_in_reg])
                                 )
                              )
                              (blockn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (nothingn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (assignn, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_internal], cmplx = 4
                                       (loadn, resultdef = LongInt = "LongInt", pos = (728,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                          nil
                                          symbol = I
                                       )
                                       (inlinen, resultdef = LongInt = "LongInt", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_internal], cmplx = 2, inlinenumber = in_succ_x
                                          (loadn, resultdef = LongInt = "LongInt", pos = (728,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                             nil
                                             symbol = I
                                          )
                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (blockn, resultdef = $void = "untyped", pos = (729,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                       (statementn, resultdef = <nil>, pos = (730,65), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (assignn, resultdef = $void = "untyped", pos = (730,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                             (loadn, resultdef = TControl = "TControl", pos = (730,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                nil
                                                symbol = CHILDCONTROL
                                             )
                                             (calln, resultdef = TControl = "TControl", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                proc = GetControl(<TWinControl>;const LongInt):TControl;
                                                methodpointer =
                                                (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                   temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820080 flags = [ti_may_be_in_reg])
                                                )
                                                callinitblock =
                                                (blockn, resultdef = $void = "untyped", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                   (statementn, resultdef = <nil>, pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      (tempcreaten, resultdef = $void = "untyped", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                         size = 8, temptypedef = TTabSheet = "TTabSheet", tempinfo = $0000000090820080
                                                         [ti_may_be_in_reg]
                                                         tempinit =
                                                         nil
                                                      )

                                                   )
                                                   (statementn, resultdef = $void = "untyped", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                      (assignn, resultdef = $void = "untyped", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                                         (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                            temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820080 flags = [ti_may_be_in_reg])
                                                         )
                                                         (calln, resultdef = TTabSheet = "TTabSheet", pos = (730,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                                            proc = GetActiveTabSheet(<TPageControl>):TTabSheet;
                                                            methodpointer =
                                                            (subscriptn, resultdef = TPageControl = "TPageControl", pos = (730,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                               (loadn, resultdef = TFormMain = "TFormMain", pos = (730,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                  nil
                                                                  symbol = FORMMAIN
                                                               )
                                                            )
                                                            left =
                                                            (callparan, resultdef = <nil>, pos = (730,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                               (subscriptn, resultdef = TPageControl = "TPageControl", pos = (730,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                                                  (loadn, resultdef = TFormMain = "TFormMain", pos = (730,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                                     nil
                                                                     symbol = FORMMAIN
                                                                  )
                                                               )

                                                            )
                                                         )
                                                      )

                                                   )
                                                )
                                                callcleanupblock =
                                                (blockn, resultdef = $void = "untyped", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                   (statementn, resultdef = <nil>, pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                      (tempdeleten, resultdef = $void = "untyped", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                                         release_to_normal: FALSE, temptypedef = TTabSheet = "TTabSheet", temptype = tt_persistent, tempinfo = $0000000090820080
                                                      )

                                                   )
                                                )
                                                left =
                                                (callparan, resultdef = LongInt = "LongInt", pos = (730,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (730,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                      nil
                                                      symbol = I
                                                   )

                                                )
                                                (callparan, resultdef = <nil>, pos = (730,65), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                   (temprefn, resultdef = TTabSheet = "TTabSheet", pos = (730,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                                                      temptypedef = TTabSheet = "TTabSheet", (tempinfo = $0000000090820080 flags = [ti_may_be_in_reg])
                                                   )

                                                )
                                             )
                                          )

                                       )
                                       (statementn, resultdef = <nil>, pos = (735,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (ifn, resultdef = $void = "untyped", pos = (732,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                             (calln, resultdef = Boolean = "Boolean", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                                                proc = $fpc_do_is(TClass;TObject):Boolean;
                                                left =
                                                (callparan, resultdef = TObject = "TObject", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                   (typeconvn, resultdef = TObject = "TObject", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                      (loadn, resultdef = TControl = "TControl", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                         nil
                                                         symbol = CHILDCONTROL
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = TClass = "Class Of TObject", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                   (typeconvn, resultdef = TClass = "Class Of TObject", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                      (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (732,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_ignore_for_wpo], cmplx = 1
                                                         (typen, resultdef = TFormDocument = "TFormDocument", pos = (732,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                                                         )
                                                      )
                                                   )

                                                )
                                             )
                                             (blockn, resultdef = $void = "untyped", pos = (733,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                                                (statementn, resultdef = <nil>, pos = (734,44), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3
                                                   (assignn, resultdef = $void = "untyped", pos = (734,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 3
                                                      (typeconvn, resultdef = TFormDocument = "TFormDocument", pos = (734,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (734,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                                                            nil
                                                            symbol = result
                                                         )
                                                      )
                                                      (typeconvn, resultdef = TFormDocument = "TFormDocument", pos = (734,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                         (loadn, resultdef = TControl = "TControl", pos = (734,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                            nil
                                                            symbol = CHILDCONTROL
                                                         )
                                                      )
                                                   )

                                                )
                                             )
                                             nil
                                             nil
                                          )

                                       )
                                    )

                                 )
                              )
                              nil
                              nil
                           )

                        )
                     )
                     nil
                     nil
                  )

               )
               (statementn, resultdef = <nil>, pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  (tempdeleten, resultdef = $void = "untyped", pos = (728,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $000000009081FF00
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (738,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (738,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (738,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (738,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (738,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (738,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ScrollBox1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (741,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
ScrollBox1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
ScrollBox1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (741,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (743,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (743,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (743,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (743,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (743,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (743,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
Timer1Timer(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (746,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
   nil
)

*******************************************************************************
after the firstpass
Timer1Timer(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
Timer1Timer(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (746,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (748,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (748,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (748,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (748,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (748,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (748,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
TimerStatusTimer(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (751,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (757,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (752,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = Boolean = "Boolean", pos = (752,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = STATUS
         )
         (blockn, resultdef = $void = "untyped", pos = (753,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (754,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetText(<TStatusPanel>;const TTranslateString);
                  methodpointer =
                  (calln, resultdef = TStatusPanel = "TStatusPanel", pos = (754,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetItem(<TStatusPanels>;LongInt):TStatusPanel;
                     methodpointer =
                     (subscriptn, resultdef = TStatusPanels = "TStatusPanels", pos = (754,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                        (subscriptn, resultdef = TStatusBar = "TStatusBar", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (754,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                     )
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (754,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (ordconstn, resultdef = LongInt = "LongInt", pos = (754,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                           value = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (754,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        (nothingn, resultdef = $void = "untyped", pos = (754,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = TTranslateString = "AnsiString", pos = (754,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                     (loadn, resultdef = TTranslateString = "AnsiString", pos = (754,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = STATUSTEXT
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (754,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (754,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (755,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (755,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
                  (loadn, resultdef = Boolean = "Boolean", pos = (755,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
                     nil
                     symbol = STATUS
                  )
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (755,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     value = 0
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (756,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (756,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty], cmplx = 255
                  proc = SetEnabled(<TCustomTimer>;Boolean);
                  methodpointer =
                  (subscriptn, resultdef = TTimer = "TTimer", pos = (756,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 3
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (756,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
                  left =
                  (callparan, resultdef = Boolean = "Boolean", pos = (756,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (ordconstn, resultdef = Boolean = "Boolean", pos = (756,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                        value = 1
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (756,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (756,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
after the firstpass
TimerStatusTimer(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (757,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef = $void = "untyped", pos = (752,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = Boolean = "Boolean", pos = (752,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = STATUS
         )
         (blockn, resultdef = $void = "untyped", pos = (753,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (754,44), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetText(<TStatusPanel>;const TTranslateString);
                  methodpointer =
                  (temprefn, resultdef = TStatusPanel = "TStatusPanel", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                     temptypedef = TStatusPanel = "TStatusPanel", (tempinfo = $000000009081FF00 flags = [ti_may_be_in_reg])
                  )
                  callinitblock =
                  (blockn, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                     (statementn, resultdef = <nil>, pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (tempcreaten, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           size = 8, temptypedef = TStatusPanel = "TStatusPanel", tempinfo = $000000009081FF00
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        (assignn, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (temprefn, resultdef = TStatusPanel = "TStatusPanel", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                              temptypedef = TStatusPanel = "TStatusPanel", (tempinfo = $000000009081FF00 flags = [ti_may_be_in_reg])
                           )
                           (calln, resultdef = TStatusPanel = "TStatusPanel", pos = (754,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetItem(<TStatusPanels>;LongInt):TStatusPanel;
                              methodpointer =
                              (subscriptn, resultdef = TStatusPanels = "TStatusPanels", pos = (754,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                 (subscriptn, resultdef = TStatusBar = "TStatusBar", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (754,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                       nil
                                       symbol = self
                                    )
                                 )
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (754,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                 (subscriptn, resultdef = TStatusPanels = "TStatusPanels", pos = (754,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                    (subscriptn, resultdef = TStatusBar = "TStatusBar", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                       (loadn, resultdef = TFormMain = "TFormMain", pos = (754,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                          nil
                                          symbol = self
                                       )
                                    )
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (754,24), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (754,24), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                    value = 0
                                 )

                              )
                           )
                        )

                     )
                  )
                  callcleanupblock =
                  (blockn, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                     (statementn, resultdef = <nil>, pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempdeleten, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           release_to_normal: FALSE, temptypedef = TStatusPanel = "TStatusPanel", temptype = tt_persistent, tempinfo = $000000009081FF00
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = TTranslateString = "AnsiString", pos = (754,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TTranslateString = "AnsiString", pos = (754,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = STATUSTEXT
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (754,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     (temprefn, resultdef = TStatusPanel = "TStatusPanel", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                        temptypedef = TStatusPanel = "TStatusPanel", (tempinfo = $000000009081FF00 flags = [ti_may_be_in_reg])
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (755,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef = $void = "untyped", pos = (755,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                  (loadn, resultdef = Boolean = "Boolean", pos = (755,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                     nil
                     symbol = STATUS
                  )
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (755,15), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     value = 0
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (756,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = $void = "untyped", pos = (756,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                  proc = SetEnabled(<TCustomTimer>;Boolean);
                  methodpointer =
                  (subscriptn, resultdef = TTimer = "TTimer", pos = (756,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (756,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = self
                     )
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (756,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TTimer = "TTimer", pos = (756,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (756,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = self
                        )
                     )

                  )
                  (callparan, resultdef = Boolean = "Boolean", pos = (756,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (ordconstn, resultdef = Boolean = "Boolean", pos = (756,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = 1
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
right before code generation
TimerStatusTimer(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (751,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (757,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (ifn, resultdef = $void = "untyped", pos = (752,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = Boolean = "Boolean", pos = (752,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = STATUS
               )
               (blockn, resultdef = $void = "untyped", pos = (753,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (754,44), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetText(<TStatusPanel>;const TTranslateString);
                        methodpointer =
                        (temprefn, resultdef = TStatusPanel = "TStatusPanel", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                           temptypedef = TStatusPanel = "TStatusPanel", (tempinfo = $000000009081FF00 flags = [ti_may_be_in_reg])
                        )
                        callinitblock =
                        (blockn, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                           (statementn, resultdef = <nil>, pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (tempcreaten, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 size = 8, temptypedef = TStatusPanel = "TStatusPanel", tempinfo = $000000009081FF00
                                 [ti_may_be_in_reg]
                                 tempinit =
                                 nil
                              )

                           )
                           (statementn, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                              (assignn, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                                 (temprefn, resultdef = TStatusPanel = "TStatusPanel", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done,nf_write], cmplx = 1
                                    temptypedef = TStatusPanel = "TStatusPanel", (tempinfo = $000000009081FF00 flags = [ti_may_be_in_reg])
                                 )
                                 (calln, resultdef = TStatusPanel = "TStatusPanel", pos = (754,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 255
                                    proc = GetItem(<TStatusPanels>;LongInt):TStatusPanel;
                                    methodpointer =
                                    (subscriptn, resultdef = TStatusPanels = "TStatusPanels", pos = (754,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                       (subscriptn, resultdef = TStatusBar = "TStatusBar", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (754,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                             nil
                                             symbol = self
                                          )
                                       )
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (754,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                       (subscriptn, resultdef = TStatusPanels = "TStatusPanels", pos = (754,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_isproperty,nf_no_lvalue], cmplx = 5
                                          (subscriptn, resultdef = TStatusBar = "TStatusBar", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (754,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                                nil
                                                symbol = self
                                             )
                                          )
                                       )

                                    )
                                    (callparan, resultdef = LongInt = "LongInt", pos = (754,24), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (754,24), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                                          value = 0
                                       )

                                    )
                                 )
                              )

                           )
                        )
                        callcleanupblock =
                        (blockn, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                           (statementn, resultdef = <nil>, pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (tempdeleten, resultdef = $void = "untyped", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
                                 release_to_normal: FALSE, temptypedef = TStatusPanel = "TStatusPanel", temptype = tt_persistent, tempinfo = $000000009081FF00
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = TTranslateString = "AnsiString", pos = (754,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TTranslateString = "AnsiString", pos = (754,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = STATUSTEXT
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (754,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                           (temprefn, resultdef = TStatusPanel = "TStatusPanel", pos = (754,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_pass1_done], cmplx = 1
                              temptypedef = TStatusPanel = "TStatusPanel", (tempinfo = $000000009081FF00 flags = [ti_may_be_in_reg])
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (755,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef = $void = "untyped", pos = (755,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
                        (loadn, resultdef = Boolean = "Boolean", pos = (755,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                           nil
                           symbol = STATUS
                        )
                        (ordconstn, resultdef = Boolean = "Boolean", pos = (755,15), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                           value = 0
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (756,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = $void = "untyped", pos = (756,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_isproperty], cmplx = 255
                        proc = SetEnabled(<TCustomTimer>;Boolean);
                        methodpointer =
                        (subscriptn, resultdef = TTimer = "TTimer", pos = (756,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (756,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = self
                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (756,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                           (subscriptn, resultdef = TTimer = "TTimer", pos = (756,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 3
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (756,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                                 nil
                                 symbol = self
                              )
                           )

                        )
                        (callparan, resultdef = Boolean = "Boolean", pos = (756,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                           (ordconstn, resultdef = Boolean = "Boolean", pos = (756,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                              value = 1
                           )

                        )
                     )

                  )
               )
               nil
               nil
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (758,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (758,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (758,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (758,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (758,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (758,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
ToolButton1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (764,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (766,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (766,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (loadn, resultdef = TFormEffect = "TFormEffect", pos = (766,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = FRMEFFECT
         )
         (calln, resultdef = TFormEffect = "TFormEffect", pos = (766,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormEffect", pos = (766,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (typen, resultdef = TFormEffect = "TFormEffect", pos = (766,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = TComponent = "TComponent", pos = (766,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (niln, resultdef = TComponent = "TComponent", pos = (766,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (766,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (766,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (766,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               (nothingn, resultdef = $void = "untyped", pos = (766,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (767,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         (blockn, resultdef = LongInt = "LongInt", pos = (769,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
            (statementn, resultdef = <nil>, pos = (768,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               (calln, resultdef = LongInt = "LongInt", pos = (768,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  proc = ShowModal(<TCustomForm>):LongInt;
                  methodpointer =
                  (loadn, resultdef = TFormEffect = "TFormEffect", pos = (768,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     nil
                     symbol = FRMEFFECT
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (768,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                     (nothingn, resultdef = $void = "untyped", pos = (768,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
                     )

                  )
               )

            )
         )
         (blockn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            nil
         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButton1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (766,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (766,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (loadn, resultdef = TFormEffect = "TFormEffect", pos = (766,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = FRMEFFECT
         )
         (calln, resultdef = TFormEffect = "TFormEffect", pos = (766,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
            proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormEffect", pos = (766,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
               (typen, resultdef = TFormEffect = "TFormEffect", pos = (766,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
               )
            )
            left =
            (callparan, resultdef = TComponent = "TComponent", pos = (766,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (niln, resultdef = TComponent = "TComponent", pos = (766,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (766,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               (pointerconstn, resultdef = Pointer = "^untyped", pos = (766,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = $0000000000000001
               )

            )
            (callparan, resultdef = <nil>, pos = (766,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormEffect", pos = (766,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TFormEffect = "TFormEffect", pos = (766,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tryfinallyn, resultdef = $void = "untyped", pos = (767,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         (blockn, resultdef = LongInt = "LongInt", pos = (769,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            (statementn, resultdef = <nil>, pos = (768,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = LongInt = "LongInt", pos = (768,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = ShowModal(<TCustomForm>):LongInt;
                  methodpointer =
                  (loadn, resultdef = TFormEffect = "TFormEffect", pos = (768,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = FRMEFFECT
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (768,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormEffect = "TFormEffect", pos = (768,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                        nil
                        symbol = FRMEFFECT
                     )

                  )
               )

            )
         )
         (calln, resultdef = $void = "untyped", pos = (767,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
            proc = $fin$000001BF(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (767,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (767,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  nil
               )

            )
         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButton1Click(TObject);
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (764,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (766,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (766,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (loadn, resultdef = TFormEffect = "TFormEffect", pos = (766,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = FRMEFFECT
               )
               (calln, resultdef = TFormEffect = "TFormEffect", pos = (766,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 255
                  proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                  methodpointer =
                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormEffect", pos = (766,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                     (typen, resultdef = TFormEffect = "TFormEffect", pos = (766,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                     )
                  )
                  left =
                  (callparan, resultdef = TComponent = "TComponent", pos = (766,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (niln, resultdef = TComponent = "TComponent", pos = (766,38), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (766,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     (pointerconstn, resultdef = Pointer = "^untyped", pos = (766,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                        value = $0000000000000001
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (766,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormEffect", pos = (766,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TFormEffect = "TFormEffect", pos = (766,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )

                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (tryfinallyn, resultdef = $void = "untyped", pos = (767,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               (blockn, resultdef = LongInt = "LongInt", pos = (769,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  (statementn, resultdef = <nil>, pos = (768,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef = LongInt = "LongInt", pos = (768,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                        proc = ShowModal(<TCustomForm>):LongInt;
                        methodpointer =
                        (loadn, resultdef = TFormEffect = "TFormEffect", pos = (768,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                           nil
                           symbol = FRMEFFECT
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (768,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormEffect = "TFormEffect", pos = (768,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                              nil
                              symbol = FRMEFFECT
                           )

                        )
                     )

                  )
               )
               (calln, resultdef = $void = "untyped", pos = (767,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
                  proc = $fin$000001BF(<^untyped>) is nested; Register;
                  left =
                  (callparan, resultdef = $parentfp_void_pointer = "^untyped", pos = (767,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (loadparentfpn, resultdef = $parentfp_void_pointer = "^untyped", pos = (767,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        nil
                     )

                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (771,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (771,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (771,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (771,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (771,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (771,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after the firstpass
$fin$000001BF is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
$fin$000001BF is nested; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (770,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)

*******************************************************************************
after parsing
$UNITFORMMAIN_$$_init$; Register;
*******************************************************************************
nil

*******************************************************************************
after parsing
$main; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (19,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
   (statementn, resultdef = <nil>, pos = (20,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
         (loadn, resultdef = Boolean = "Boolean", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write], cmplx = 1
            nil
            symbol = REQUIREDERIVEDFORMRESOURCE
         )
         (ordconstn, resultdef = Boolean = "Boolean", pos = (20,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (21,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 4
         (subscriptn, resultdef = Boolean = "Boolean", pos = (21,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write,nf_isproperty], cmplx = 3
            (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
               nil
               symbol = APPLICATION
            )
         )
         (ordconstn, resultdef = Boolean = "Boolean", pos = (21,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (22,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Initialize(<TApplication>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = <nil>, pos = (22,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (22,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (23,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (23,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (23,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = $formal = "<Formal type>", pos = (23,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TFormMain = "TFormMain", pos = (23,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write,nf_address_taken], cmplx = 1
               nil
               symbol = FORMMAIN
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (23,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (23,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormMain", pos = (23,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (typen, resultdef = TFormMain = "TFormMain", pos = (23,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (23,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (23,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (24,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (24,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (24,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = $formal = "<Formal type>", pos = (24,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (24,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write,nf_address_taken], cmplx = 1
               nil
               symbol = FORMNEWIMAGE
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (24,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (24,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (24,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (24,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (24,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (24,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (25,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (25,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (25,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = $formal = "<Formal type>", pos = (25,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 2
            (loadn, resultdef = TFormEffect = "TFormEffect", pos = (25,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write,nf_address_taken], cmplx = 1
               nil
               symbol = FORMEFFECT
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (25,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (25,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormEffect", pos = (25,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
                  (typen, resultdef = TFormEffect = "TFormEffect", pos = (25,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (25,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (25,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (26,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (26,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
         proc = Run(<TApplication>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (26,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = <nil>, pos = (26,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 1
            (nothingn, resultdef = $void = "untyped", pos = (26,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 0
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
$main; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
   (statementn, resultdef = <nil>, pos = (20,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
         (loadn, resultdef = Boolean = "Boolean", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
            nil
            symbol = REQUIREDERIVEDFORMRESOURCE
         )
         (ordconstn, resultdef = Boolean = "Boolean", pos = (20,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (21,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef = $void = "untyped", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
         (subscriptn, resultdef = Boolean = "Boolean", pos = (21,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_isproperty], cmplx = 3
            (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = APPLICATION
            )
         )
         (ordconstn, resultdef = Boolean = "Boolean", pos = (21,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (22,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Initialize(<TApplication>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = <nil>, pos = (22,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (23,46), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (23,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (23,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = $formal = "<Formal type>", pos = (23,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormMain = "TFormMain", pos = (23,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_address_taken], cmplx = 1
               nil
               symbol = FORMMAIN
            )

         )
         (callparan, resultdef = <nil>, pos = (23,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TApplication = "TApplication", pos = (23,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (23,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (23,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormMain", pos = (23,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TFormMain = "TFormMain", pos = (23,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (24,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (24,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (24,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = $formal = "<Formal type>", pos = (24,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (24,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_address_taken], cmplx = 1
               nil
               symbol = FORMNEWIMAGE
            )

         )
         (callparan, resultdef = <nil>, pos = (24,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TApplication = "TApplication", pos = (24,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (24,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (24,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (24,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (24,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (25,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (25,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (25,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = $formal = "<Formal type>", pos = (25,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormEffect = "TFormEffect", pos = (25,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_address_taken], cmplx = 1
               nil
               symbol = FORMEFFECT
            )

         )
         (callparan, resultdef = <nil>, pos = (25,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TApplication = "TApplication", pos = (25,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (25,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (25,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormEffect", pos = (25,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                  (typen, resultdef = TFormEffect = "TFormEffect", pos = (25,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (26,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = $void = "untyped", pos = (26,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
         proc = Run(<TApplication>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (26,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = <nil>, pos = (26,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TApplication = "TApplication", pos = (26,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
$main; Register;
*******************************************************************************
(blockn, resultdef = $void = "untyped", pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
   (statementn, resultdef = <nil>, pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (nothingn, resultdef = $void = "untyped", pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
      )

   )
   (statementn, resultdef = <nil>, pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (19,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_usercode_entry], cmplx = 255
         (statementn, resultdef = <nil>, pos = (20,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 2
               (loadn, resultdef = Boolean = "Boolean", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write], cmplx = 1
                  nil
                  symbol = REQUIREDERIVEDFORMRESOURCE
               )
               (ordconstn, resultdef = Boolean = "Boolean", pos = (20,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 1
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (21,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (assignn, resultdef = $void = "untyped", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 4
               (subscriptn, resultdef = Boolean = "Boolean", pos = (21,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_isproperty], cmplx = 3
                  (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = APPLICATION
                  )
               )
               (ordconstn, resultdef = Boolean = "Boolean", pos = (21,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_pass1_done], cmplx = 0
                  value = 1
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (22,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Initialize(<TApplication>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = APPLICATION
               )
               left =
               (callparan, resultdef = <nil>, pos = (22,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = APPLICATION
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (23,46), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (23,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (23,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = APPLICATION
               )
               left =
               (callparan, resultdef = $formal = "<Formal type>", pos = (23,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (23,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_address_taken], cmplx = 1
                     nil
                     symbol = FORMMAIN
                  )

               )
               (callparan, resultdef = <nil>, pos = (23,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TApplication = "TApplication", pos = (23,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = APPLICATION
                  )

               )
               (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (23,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (23,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormMain", pos = (23,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TFormMain = "TFormMain", pos = (23,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (24,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (24,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (24,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = APPLICATION
               )
               left =
               (callparan, resultdef = $formal = "<Formal type>", pos = (24,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (24,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_address_taken], cmplx = 1
                     nil
                     symbol = FORMNEWIMAGE
                  )

               )
               (callparan, resultdef = <nil>, pos = (24,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TApplication = "TApplication", pos = (24,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = APPLICATION
                  )

               )
               (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (24,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (24,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (24,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (24,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (25,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (25,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (25,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = APPLICATION
               )
               left =
               (callparan, resultdef = $formal = "<Formal type>", pos = (25,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormEffect = "TFormEffect", pos = (25,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done,nf_write,nf_address_taken], cmplx = 1
                     nil
                     symbol = FORMEFFECT
                  )

               )
               (callparan, resultdef = <nil>, pos = (25,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TApplication = "TApplication", pos = (25,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = APPLICATION
                  )

               )
               (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (25,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (25,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1, convtype = tc_equal, convnodeflags = []
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormEffect", pos = (25,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_pass1_done], cmplx = 1
                        (typen, resultdef = TFormEffect = "TFormEffect", pos = (25,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], cmplx = 255
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (26,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef = $void = "untyped", pos = (26,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 255
               proc = Run(<TApplication>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (26,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                  nil
                  symbol = APPLICATION
               )
               left =
               (callparan, resultdef = <nil>, pos = (26,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TApplication = "TApplication", pos = (26,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_pass1_done], cmplx = 1
                     nil
                     symbol = APPLICATION
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (27,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (27,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
   (statementn, resultdef = <nil>, pos = (27,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef = $void = "untyped", pos = (27,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done], cmplx = 0
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (27,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (asmn, resultdef = $void = "untyped", pos = (27,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_pass1_done,nf_get_asm_position], cmplx = 255
      )

   )
)
