
*******************************************************************************
after parsing
FormCreate(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (75,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (75,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )
            field = MAINPANEL
         )
         left =
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (75,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (75,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "<enumeration type>"
               value = 5
            )

         )
         (callparan, resultdef = <nil>, pos = (75,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (75,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (76,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (76,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )
            field = MAINPANEL
         )
         left =
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (76,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (76,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
            )

         )
         (callparan, resultdef = <nil>, pos = (76,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (76,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (77,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (77,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )
            field = SCROLLBOX1
         )
         left =
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (77,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (77,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "<enumeration type>"
               value = 5
            )

         )
         (callparan, resultdef = <nil>, pos = (77,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (77,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (78,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (78,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )
            field = SCROLLBOX1
         )
         left =
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (78,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (78,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
            )

         )
         (callparan, resultdef = <nil>, pos = (78,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (78,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (79,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (79,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )
            field = PANEL1
         )
         left =
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (79,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (79,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "<enumeration type>"
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (79,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (79,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (80,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (80,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )
            field = PANEL1
         )
         left =
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (80,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (80,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
            )

         )
         (callparan, resultdef = <nil>, pos = (80,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (80,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (81,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (81,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (81,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (81,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "<enumeration type>"
               value = 6
            )

         )
         (callparan, resultdef = <nil>, pos = (81,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (81,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (82,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (82,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (82,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (82,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
            )

         )
         (callparan, resultdef = <nil>, pos = (82,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (82,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (84,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (84,4), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Single = "Single", pos = (84,4), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = ZOOMFACTOR
         )
         (realconstn, resultdef = Single = "Single", pos = (84,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            value =  1.0000000000000000E+000
         )
      )

   )
)

*******************************************************************************
after the firstpass
FormCreate(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (75,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (75,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )
            field = MAINPANEL
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(TAlign) of object;Register>", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
            (derefn, resultdef = TPanel. = "<record type>", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
               (typeconvn, resultdef = <no type symbol> = "^TPanel.<record type>", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TPanel = "TPanel", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (75,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = MAINPANEL
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f70
         )
         left =
         (callparan, resultdef = <nil>, pos = (75,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TPanel = "TPanel", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (75,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = MAINPANEL
            )

         )
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (75,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (75,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "<enumeration type>"
               value = 5
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (76,58), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (76,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )
            field = MAINPANEL
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(const TAnchors) of object;Register>", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
            (derefn, resultdef = TPanel. = "<record type>", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
               (typeconvn, resultdef = <no type symbol> = "^TPanel.<record type>", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TPanel = "TPanel", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (76,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = MAINPANEL
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f71
         )
         left =
         (callparan, resultdef = <nil>, pos = (76,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TPanel = "TPanel", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (76,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = MAINPANEL
            )

         )
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (76,58), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (76,58), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               nil
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (77,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (77,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )
            field = SCROLLBOX1
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(TAlign) of object;Register>", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
            (derefn, resultdef = TScrollBox. = "<record type>", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
               (typeconvn, resultdef = <no type symbol> = "^TScrollBox.<record type>", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (77,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = SCROLLBOX1
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f70
         )
         left =
         (callparan, resultdef = <nil>, pos = (77,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (77,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = SCROLLBOX1
            )

         )
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (77,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (77,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "<enumeration type>"
               value = 5
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (78,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (78,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )
            field = SCROLLBOX1
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(const TAnchors) of object;Register>", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
            (derefn, resultdef = TScrollBox. = "<record type>", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
               (typeconvn, resultdef = <no type symbol> = "^TScrollBox.<record type>", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (78,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = SCROLLBOX1
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f71
         )
         left =
         (callparan, resultdef = <nil>, pos = (78,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (78,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = SCROLLBOX1
            )

         )
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (78,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (78,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               nil
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (79,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (79,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )
            field = PANEL1
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(TAlign) of object;Register>", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
            (derefn, resultdef = TPanel. = "<record type>", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
               (typeconvn, resultdef = <no type symbol> = "^TPanel.<record type>", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TPanel = "TPanel", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (79,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = PANEL1
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f70
         )
         left =
         (callparan, resultdef = <nil>, pos = (79,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TPanel = "TPanel", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (79,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = PANEL1
            )

         )
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (79,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (79,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "<enumeration type>"
               value = 0
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (80,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (80,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )
            field = PANEL1
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(const TAnchors) of object;Register>", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
            (derefn, resultdef = TPanel. = "<record type>", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
               (typeconvn, resultdef = <no type symbol> = "^TPanel.<record type>", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TPanel = "TPanel", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (80,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = PANEL1
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f71
         )
         left =
         (callparan, resultdef = <nil>, pos = (80,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TPanel = "TPanel", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (80,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = PANEL1
            )

         )
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (80,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (80,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               nil
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (81,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (81,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )
            field = IMAGE1
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(TAlign) of object;Register>", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
            (derefn, resultdef = TImage. = "<record type>", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
               (typeconvn, resultdef = <no type symbol> = "^TImage.<record type>", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TImage = "TImage", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (81,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = IMAGE1
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f70
         )
         left =
         (callparan, resultdef = <nil>, pos = (81,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (81,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = IMAGE1
            )

         )
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (81,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (81,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "<enumeration type>"
               value = 6
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (82,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetAnchors(<TControl>;const TAnchors);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (82,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )
            field = IMAGE1
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(const TAnchors) of object;Register>", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
            (derefn, resultdef = TImage. = "<record type>", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
               (typeconvn, resultdef = <no type symbol> = "^TImage.<record type>", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TImage = "TImage", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (82,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = IMAGE1
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f71
         )
         left =
         (callparan, resultdef = <nil>, pos = (82,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (82,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = IMAGE1
            )

         )
         (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (82,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (82,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               nil
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (84,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef =  = "untyped", pos = (84,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (84,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = ZOOMFACTOR
         )
         (realconstn, resultdef = Single = "Single", pos = (84,18), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
            value =  1.0000000000000000E+000
         )
      )

   )
)

*******************************************************************************
right before code generation
FormCreate(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365E00
   (statementn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365E60
      (asmn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365EC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365F20
      (asmn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365F80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365FE0
      (asmn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366040
      )

   )
   (statementn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933660A0
      (asmn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366100
      )

   )
   (statementn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366160
      (blockn, resultdef =  = "untyped", pos = (72,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093364B40
         (statementn, resultdef =  = "untyped", pos = (75,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364BA0
            (calln, resultdef =  = "untyped", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093364C00
               proc = SetAlign(<TControl>;TAlign);
               methodpointer =
               (subscriptn, resultdef = TPanel = "TPanel", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933661C0
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (75,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365AA0
                     nil
                     symbol = self
                  )
                  field = MAINPANEL
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(TAlign) of object;Register>", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093366220
                  (derefn, resultdef = TPanel. = "<record type>", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093366280
                     (typeconvn, resultdef = <no type symbol> = "^TPanel.<record type>", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 00000000933662E0, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093366340
                           (subscriptn, resultdef = TPanel = "TPanel", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933663A0
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (75,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365B00
                                 nil
                                 symbol = self
                              )
                              field = MAINPANEL
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f70
               )
               left =
               (callparan, resultdef = <nil>, pos = (75,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093366400
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (75,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093366460
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (75,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365B60
                        nil
                        symbol = self
                     )
                     field = MAINPANEL
                  )

               )
               (callparan, resultdef = TAlign = "<enumeration type>", pos = (75,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933664C0
                  (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (75,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093366520
                     typedef = "<enumeration type>"
                     value = 5
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (76,58), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364C60
            (calln, resultdef =  = "untyped", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093364CC0
               proc = SetAnchors(<TControl>;const TAnchors);
               methodpointer =
               (subscriptn, resultdef = TPanel = "TPanel", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093366580
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (76,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365980
                     nil
                     symbol = self
                  )
                  field = MAINPANEL
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(const TAnchors) of object;Register>", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 00000000933665E0
                  (derefn, resultdef = TPanel. = "<record type>", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093366640
                     (typeconvn, resultdef = <no type symbol> = "^TPanel.<record type>", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 00000000933666A0, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093366700
                           (subscriptn, resultdef = TPanel = "TPanel", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093366760
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (76,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933659E0
                                 nil
                                 symbol = self
                              )
                              field = MAINPANEL
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f71
               )
               left =
               (callparan, resultdef = <nil>, pos = (76,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933667C0
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (76,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093366820
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (76,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365A40
                        nil
                        symbol = self
                     )
                     field = MAINPANEL
                  )

               )
               (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (76,58), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093366880
                  (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (76,58), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1, optinfo = 00000000933668E0
                     nil
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (77,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364D20
            (calln, resultdef =  = "untyped", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093364D80
               proc = SetAlign(<TControl>;TAlign);
               methodpointer =
               (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093366940
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (77,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365860
                     nil
                     symbol = self
                  )
                  field = SCROLLBOX1
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(TAlign) of object;Register>", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 00000000933669A0
                  (derefn, resultdef = TScrollBox. = "<record type>", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093366A00
                     (typeconvn, resultdef = <no type symbol> = "^TScrollBox.<record type>", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 0000000093366A60, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093366AC0
                           (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093366B20
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (77,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933658C0
                                 nil
                                 symbol = self
                              )
                              field = SCROLLBOX1
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f70
               )
               left =
               (callparan, resultdef = <nil>, pos = (77,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093366B80
                  (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (77,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093366BE0
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (77,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365920
                        nil
                        symbol = self
                     )
                     field = SCROLLBOX1
                  )

               )
               (callparan, resultdef = TAlign = "<enumeration type>", pos = (77,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093366C40
                  (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (77,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093366CA0
                     typedef = "<enumeration type>"
                     value = 5
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (78,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364DE0
            (calln, resultdef =  = "untyped", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093364E40
               proc = SetAnchors(<TControl>;const TAnchors);
               methodpointer =
               (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093366D00
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (78,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365740
                     nil
                     symbol = self
                  )
                  field = SCROLLBOX1
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(const TAnchors) of object;Register>", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093366D60
                  (derefn, resultdef = TScrollBox. = "<record type>", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093366DC0
                     (typeconvn, resultdef = <no type symbol> = "^TScrollBox.<record type>", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 0000000093366E20, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093366E80
                           (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093366EE0
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (78,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933657A0
                                 nil
                                 symbol = self
                              )
                              field = SCROLLBOX1
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f71
               )
               left =
               (callparan, resultdef = <nil>, pos = (78,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093366F40
                  (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093366FA0
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (78,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365800
                        nil
                        symbol = self
                     )
                     field = SCROLLBOX1
                  )

               )
               (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (78,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093367000
                  (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (78,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1, optinfo = 0000000093367060
                     nil
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (79,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364EA0
            (calln, resultdef =  = "untyped", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093364F00
               proc = SetAlign(<TControl>;TAlign);
               methodpointer =
               (subscriptn, resultdef = TPanel = "TPanel", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933670C0
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (79,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365620
                     nil
                     symbol = self
                  )
                  field = PANEL1
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(TAlign) of object;Register>", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093367120
                  (derefn, resultdef = TPanel. = "<record type>", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093367180
                     (typeconvn, resultdef = <no type symbol> = "^TPanel.<record type>", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 00000000933671E0, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093367240
                           (subscriptn, resultdef = TPanel = "TPanel", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933672A0
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (79,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365680
                                 nil
                                 symbol = self
                              )
                              field = PANEL1
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f70
               )
               left =
               (callparan, resultdef = <nil>, pos = (79,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093367300
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093367360
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (79,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933656E0
                        nil
                        symbol = self
                     )
                     field = PANEL1
                  )

               )
               (callparan, resultdef = TAlign = "<enumeration type>", pos = (79,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933673C0
                  (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (79,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093367420
                     typedef = "<enumeration type>"
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (80,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364F60
            (calln, resultdef =  = "untyped", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093364FC0
               proc = SetAnchors(<TControl>;const TAnchors);
               methodpointer =
               (subscriptn, resultdef = TPanel = "TPanel", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093367480
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (80,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365500
                     nil
                     symbol = self
                  )
                  field = PANEL1
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(const TAnchors) of object;Register>", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 00000000933674E0
                  (derefn, resultdef = TPanel. = "<record type>", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093367540
                     (typeconvn, resultdef = <no type symbol> = "^TPanel.<record type>", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 00000000933675A0, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093367600
                           (subscriptn, resultdef = TPanel = "TPanel", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093367660
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (80,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365560
                                 nil
                                 symbol = self
                              )
                              field = PANEL1
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f71
               )
               left =
               (callparan, resultdef = <nil>, pos = (80,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933676C0
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093367720
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (80,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933655C0
                        nil
                        symbol = self
                     )
                     field = PANEL1
                  )

               )
               (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (80,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093367780
                  (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (80,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1, optinfo = 00000000933677E0
                     nil
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (81,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365020
            (calln, resultdef =  = "untyped", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093365080
               proc = SetAlign(<TControl>;TAlign);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093367840
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (81,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933653E0
                     nil
                     symbol = self
                  )
                  field = IMAGE1
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(TAlign) of object;Register>", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 00000000933678A0
                  (derefn, resultdef = TImage. = "<record type>", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093367900
                     (typeconvn, resultdef = <no type symbol> = "^TImage.<record type>", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 0000000093367960, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 00000000933679C0
                           (subscriptn, resultdef = TImage = "TImage", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093367A20
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (81,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365440
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f70
               )
               left =
               (callparan, resultdef = <nil>, pos = (81,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093367A80
                  (subscriptn, resultdef = TImage = "TImage", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093367AE0
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (81,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933654A0
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )

               )
               (callparan, resultdef = TAlign = "<enumeration type>", pos = (81,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093367B40
                  (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (81,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093367BA0
                     typedef = "<enumeration type>"
                     value = 6
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (82,23), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933650E0
            (calln, resultdef =  = "untyped", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093365140
               proc = SetAnchors(<TControl>;const TAnchors);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093367C00
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (82,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933652C0
                     nil
                     symbol = self
                  )
                  field = IMAGE1
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(const TAnchors) of object;Register>", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093367C60
                  (derefn, resultdef = TImage. = "<record type>", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093367CC0
                     (typeconvn, resultdef = <no type symbol> = "^TImage.<record type>", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 0000000093367D20, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093367D80
                           (subscriptn, resultdef = TImage = "TImage", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093367DE0
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (82,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365320
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f71
               )
               left =
               (callparan, resultdef = <nil>, pos = (82,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093367E40
                  (subscriptn, resultdef = TImage = "TImage", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093367EA0
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (82,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365380
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )

               )
               (callparan, resultdef = TAnchors = "Set Of TAnchorKind", pos = (82,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093367F00
                  (setconstn, resultdef = TAnchors = "Set Of TAnchorKind", pos = (82,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1, optinfo = 0000000093367F60
                     nil
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (84,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933651A0
            (assignn, resultdef =  = "untyped", pos = (84,4), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093365200
               (loadn, resultdef = Single = "Single", pos = (84,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093365260
                  nil
                  symbol = ZOOMFACTOR
               )
               (realconstn, resultdef = Single = "Single", pos = (84,18), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 0000000093367FC0
                  value =  1.0000000000000000E+000
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (86,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093368020
      (asmn, resultdef =  = "untyped", pos = (86,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093368080
      )

   )
   (statementn, resultdef =  = "untyped", pos = (86,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933680E0
      (finalizetempsn, resultdef =  = "untyped", pos = (86,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093368140
      )

   )
)

*******************************************************************************
after parsing
FormShow(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
FormShow(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
FormShow(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367FC0
   (statementn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933650E0
      (asmn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365140
      )

   )
   (statementn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367F00
      (asmn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367F60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367E40
      (asmn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367EA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365380
      (asmn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367C60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367CC0
      (blockn, resultdef =  = "untyped", pos = (89,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 0000000093364B40
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (92,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367D20
      (asmn, resultdef =  = "untyped", pos = (92,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367D80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (92,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367DE0
      (finalizetempsn, resultdef =  = "untyped", pos = (92,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365320
      )

   )
)

*******************************************************************************
after parsing
Image1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
Image1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
Image1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367F00
   (statementn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367F60
      (asmn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933650E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365140
      (asmn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366160
      )

   )
   (statementn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367180
      (asmn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933671E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093367240
      (asmn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933672A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365680
      (blockn, resultdef =  = "untyped", pos = (95,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 0000000093365320
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (97,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933670C0
      (asmn, resultdef =  = "untyped", pos = (97,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365620
      )

   )
   (statementn, resultdef =  = "untyped", pos = (97,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364DE0
      (finalizetempsn, resultdef =  = "untyped", pos = (97,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364E40
      )

   )
)

*******************************************************************************
after parsing
MenuItemEmbossHighlightClick(TObject);
*******************************************************************************
(blockn, resultdef = TImage = "TImage", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (101,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef = TImage = "TImage", pos = (101,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = EmbossHighlight(TImage;Boolean):ExtCtrls.TImage;
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "Boolean"
               value = 0
            )

         )
         (callparan, resultdef = TImage = "TImage", pos = (101,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (101,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (101,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = self
               )
               field = IMAGE1
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
MenuItemEmbossHighlightClick(TObject);
*******************************************************************************
(blockn, resultdef = TImage = "TImage", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (101,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = TImage = "TImage", pos = (101,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = EmbossHighlight(TImage;Boolean):ExtCtrls.TImage;
         left =
         (callparan, resultdef = TImage = "TImage", pos = (101,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (101,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (101,35), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = IMAGE1
            )

         )
         (callparan, resultdef = Boolean = "Boolean", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "Boolean"
               value = 0
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
MenuItemEmbossHighlightClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933650E0
   (statementn, resultdef =  = "untyped", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364B40
      (asmn, resultdef =  = "untyped", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365980
      )

   )
   (statementn, resultdef =  = "untyped", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364BA0
      (asmn, resultdef =  = "untyped", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364C00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933664C0
      (asmn, resultdef =  = "untyped", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366520
      )

   )
   (statementn, resultdef =  = "untyped", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366400
      (asmn, resultdef =  = "untyped", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366460
      )

   )
   (statementn, resultdef =  = "untyped", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365B60
      (blockn, resultdef = TImage = "TImage", pos = (100,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093364E40
         (statementn, resultdef =  = "untyped", pos = (101,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933670C0
            (calln, resultdef = TImage = "TImage", pos = (101,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365620
               proc = EmbossHighlight(TImage;Boolean):ExtCtrls.TImage;
               left =
               (callparan, resultdef = TImage = "TImage", pos = (101,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093366220
                  (subscriptn, resultdef = TImage = "TImage", pos = (101,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093366280
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (101,35), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093367240
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )

               )
               (callparan, resultdef = Boolean = "Boolean", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933662E0
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (101,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093366340
                     typedef = "Boolean"
                     value = 0
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (102,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933663A0
      (asmn, resultdef =  = "untyped", pos = (102,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365B00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (102,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933661C0
      (finalizetempsn, resultdef =  = "untyped", pos = (102,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365AA0
      )

   )
)

*******************************************************************************
after parsing
MenuItemErodeBorderClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (106,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (106,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = ErodeBorderEffect(TImage);
         left =
         (callparan, resultdef = TImage = "TImage", pos = (106,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (106,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (106,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = self
               )
               field = IMAGE1
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
MenuItemErodeBorderClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (106,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (106,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = ErodeBorderEffect(TImage);
         left =
         (callparan, resultdef = TImage = "TImage", pos = (106,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (106,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (106,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = IMAGE1
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
MenuItemErodeBorderClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366400
   (statementn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366460
      (asmn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933664C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366520
      (asmn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364BA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364C00
      (asmn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364B40
      )

   )
   (statementn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365980
      (asmn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365320
      )

   )
   (statementn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336E740
      (blockn, resultdef =  = "untyped", pos = (105,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093365AA0
         (statementn, resultdef =  = "untyped", pos = (106,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933663A0
            (calln, resultdef =  = "untyped", pos = (106,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365B00
               proc = ErodeBorderEffect(TImage);
               left =
               (callparan, resultdef = TImage = "TImage", pos = (106,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009336E7A0
                  (subscriptn, resultdef = TImage = "TImage", pos = (106,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009336E800
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (106,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933670C0
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (107,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336E860
      (asmn, resultdef =  = "untyped", pos = (107,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336E8C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (107,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336E920
      (finalizetempsn, resultdef =  = "untyped", pos = (107,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336E980
      )

   )
)

*******************************************************************************
after parsing
MenuItemPixelateClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (111,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (111,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (subscriptn, resultdef = TImage = "TImage", pos = (111,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (111,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )
            field = IMAGE1
         )
         (calln, resultdef = TImage = "TImage", pos = (111,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            proc = Pixelate(TImage;LongInt):ExtCtrls.TImage;
            left =
            (callparan, resultdef = LongInt = "LongInt", pos = (111,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (ordconstn, resultdef = LongInt = "LongInt", pos = (111,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  typedef = "LongInt"
                  value = 10
               )

            )
            (callparan, resultdef = TImage = "TImage", pos = (111,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (111,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (111,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = self
                  )
                  field = IMAGE1
               )

            )
         )
      )

   )
)

*******************************************************************************
after the firstpass
MenuItemPixelateClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (111,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (111,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (subscriptn, resultdef = TImage = "TImage", pos = (111,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (111,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )
            field = IMAGE1
         )
         (calln, resultdef = TImage = "TImage", pos = (111,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            proc = Pixelate(TImage;LongInt):ExtCtrls.TImage;
            left =
            (callparan, resultdef = TImage = "TImage", pos = (111,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (111,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (111,28), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = self
                  )
                  field = IMAGE1
               )

            )
            (callparan, resultdef = LongInt = "LongInt", pos = (111,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
               (ordconstn, resultdef = LongInt = "LongInt", pos = (111,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                  typedef = "LongInt"
                  value = 10
               )

            )
         )
      )

   )
)

*******************************************************************************
right before code generation
MenuItemPixelateClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364B40
   (statementn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366520
      (asmn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364BA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366460
      (asmn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933664C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364E40
      (asmn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FD00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FD60
      (asmn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FDC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FE20
      (blockn, resultdef =  = "untyped", pos = (110,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 000000009336E980
         (statementn, resultdef =  = "untyped", pos = (111,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336E860
            (assignn, resultdef =  = "untyped", pos = (111,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336E8C0
               (subscriptn, resultdef = TImage = "TImage", pos = (111,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 2, optinfo = 000000009336FE80
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (111,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933663A0
                     nil
                     symbol = self
                  )
                  field = IMAGE1
               )
               (calln, resultdef = TImage = "TImage", pos = (111,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 000000009336FEE0
                  proc = Pixelate(TImage;LongInt):ExtCtrls.TImage;
                  left =
                  (callparan, resultdef = TImage = "TImage", pos = (111,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009336FF40
                     (subscriptn, resultdef = TImage = "TImage", pos = (111,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009336FFA0
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (111,28), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093365B00
                           nil
                           symbol = self
                        )
                        field = IMAGE1
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (111,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093370000
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (111,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093370060
                        typedef = "LongInt"
                        value = 10
                     )

                  )
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (112,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933700C0
      (asmn, resultdef =  = "untyped", pos = (112,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093370120
      )

   )
   (statementn, resultdef =  = "untyped", pos = (112,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093370180
      (finalizetempsn, resultdef =  = "untyped", pos = (112,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933701E0
      )

   )
)

*******************************************************************************
after parsing
ScrollBox1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
ScrollBox1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
ScrollBox1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FEE0
   (statementn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093370000
      (asmn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093370060
      )

   )
   (statementn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FF40
      (asmn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FFA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365B00
      (asmn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FD60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FDC0
      (asmn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364E40
      )

   )
   (statementn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FD00
      (blockn, resultdef =  = "untyped", pos = (115,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 00000000933701E0
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (117,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366460
      (asmn, resultdef =  = "untyped", pos = (117,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933664C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (117,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366520
      (finalizetempsn, resultdef =  = "untyped", pos = (117,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364BA0
      )

   )
)

*******************************************************************************
after parsing
Timer1Timer(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (126,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (ifn, resultdef =  = "untyped", pos = (123,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (subscriptn, resultdef = Boolean = "Boolean", pos = (123,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (123,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )
            field = EMPTYIMAGE
         )
         (calln, resultdef =  = "untyped", pos = (124,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            proc = NewImage(TFormDocument);
            left =
            (callparan, resultdef = TFormDocument = "TFormDocument", pos = (124,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (124,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = self
               )

            )
         )
         (calln, resultdef =  = "untyped", pos = (126,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            proc = LoadImage;
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (128,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (128,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (128,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = HMOUSEBUTTON
         )
         (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (128,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "<enumeration type>"
            value = 5
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (129,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (129,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = LongInt = "LongInt", pos = (129,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (129,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "LongInt"
            value = 1281104
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (130,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (130,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Single = "Single", pos = (130,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = ZOOMFACTOR
         )
         (realconstn, resultdef = Single = "Single", pos = (130,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            value =  1.0000000000000000E+000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (131,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (131,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Single = "Single", pos = (131,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = SCALEFACTOR
         )
         (realconstn, resultdef = Single = "Single", pos = (131,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            value =  1.0000000000000000E+000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (134,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetEnabled(<TCustomTimer>;Boolean);
         methodpointer =
         (subscriptn, resultdef = TTimer = "TTimer", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (134,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )
            field = TIMER1
         )
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (134,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (134,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "Boolean"
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (134,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (134,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
Timer1Timer(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (126,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef =  = "untyped", pos = (123,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (subscriptn, resultdef = Boolean = "Boolean", pos = (123,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (123,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )
            field = EMPTYIMAGE
         )
         (calln, resultdef =  = "untyped", pos = (124,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            proc = NewImage(TFormDocument);
            left =
            (callparan, resultdef = TFormDocument = "TFormDocument", pos = (124,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (124,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )

            )
         )
         (calln, resultdef =  = "untyped", pos = (126,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            proc = LoadImage;
         )
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (128,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (128,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (128,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEBUTTON
         )
         (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (128,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "<enumeration type>"
            value = 5
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (129,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (129,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (129,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (129,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "LongInt"
            value = 1281104
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (130,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (130,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (130,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = ZOOMFACTOR
         )
         (realconstn, resultdef = Single = "Single", pos = (130,19), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
            value =  1.0000000000000000E+000
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (131,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (131,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (131,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = SCALEFACTOR
         )
         (realconstn, resultdef = Single = "Single", pos = (131,20), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
            value =  1.0000000000000000E+000
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (134,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetEnabled(<TCustomTimer>;Boolean);
         methodpointer =
         (subscriptn, resultdef = TTimer = "TTimer", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (134,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )
            field = TIMER1
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(Boolean) of object;Register>", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
            (derefn, resultdef = TTimer. = "<record type>", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
               (typeconvn, resultdef = <no type symbol> = "^TTimer.<record type>", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TTimer = "TTimer", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (134,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = TIMER1
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f59
         )
         left =
         (callparan, resultdef = <nil>, pos = (134,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TTimer = "TTimer", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (134,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = TIMER1
            )

         )
         (callparan, resultdef = Boolean = "Boolean", pos = (134,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (134,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "Boolean"
               value = 0
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
Timer1Timer(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373480
   (statementn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933734E0
      (asmn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373540
      )

   )
   (statementn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933735A0
      (asmn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373600
      )

   )
   (statementn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373660
      (asmn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933736C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373720
      (asmn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373780
      )

   )
   (statementn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933737E0
      (blockn, resultdef =  = "untyped", pos = (121,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093364BA0
         (statementn, resultdef =  = "untyped", pos = (126,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366460
            (ifn, resultdef =  = "untyped", pos = (123,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933664C0
               (subscriptn, resultdef = Boolean = "Boolean", pos = (123,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093373840
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (123,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933730C0
                     nil
                     symbol = self
                  )
                  field = EMPTYIMAGE
               )
               (calln, resultdef =  = "untyped", pos = (124,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373120
                  proc = NewImage(TFormDocument);
                  left =
                  (callparan, resultdef = TFormDocument = "TFormDocument", pos = (124,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933738A0
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (124,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093373180
                        nil
                        symbol = self
                     )

                  )
               )
               (calln, resultdef =  = "untyped", pos = (126,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933731E0
                  proc = LoadImage;
               )
               nil
            )

         )
         (statementn, resultdef =  = "untyped", pos = (128,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FDC0
            (assignn, resultdef =  = "untyped", pos = (128,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093364E40
               (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (128,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093373060
                  nil
                  symbol = HMOUSEBUTTON
               )
               (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (128,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093373900
                  typedef = "<enumeration type>"
                  value = 5
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (129,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365B00
            (assignn, resultdef =  = "untyped", pos = (129,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009336FD60
               (loadn, resultdef = LongInt = "LongInt", pos = (129,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093373000
                  nil
                  symbol = HMOUSEEVENT
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (129,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093373960
                  typedef = "LongInt"
                  value = 1281104
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (130,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FF40
            (assignn, resultdef =  = "untyped", pos = (130,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009336FFA0
               (loadn, resultdef = Single = "Single", pos = (130,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093372FA0
                  nil
                  symbol = ZOOMFACTOR
               )
               (realconstn, resultdef = Single = "Single", pos = (130,19), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 00000000933739C0
                  value =  1.0000000000000000E+000
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (131,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093370000
            (assignn, resultdef =  = "untyped", pos = (131,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093370060
               (loadn, resultdef = Single = "Single", pos = (131,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093372F40
                  nil
                  symbol = SCALEFACTOR
               )
               (realconstn, resultdef = Single = "Single", pos = (131,20), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 0000000093373A20
                  value =  1.0000000000000000E+000
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (134,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336E980
            (calln, resultdef =  = "untyped", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093372DC0
               proc = SetEnabled(<TCustomTimer>;Boolean);
               methodpointer =
               (subscriptn, resultdef = TTimer = "TTimer", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093373A80
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (134,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093372E20
                     nil
                     symbol = self
                  )
                  field = TIMER1
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(Boolean) of object;Register>", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093373AE0
                  (derefn, resultdef = TTimer. = "<record type>", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093373B40
                     (typeconvn, resultdef = <no type symbol> = "^TTimer.<record type>", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 0000000093373BA0, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093373C00
                           (subscriptn, resultdef = TTimer = "TTimer", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093373C60
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (134,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093372E80
                                 nil
                                 symbol = self
                              )
                              field = TIMER1
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f59
               )
               left =
               (callparan, resultdef = <nil>, pos = (134,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093373CC0
                  (subscriptn, resultdef = TTimer = "TTimer", pos = (134,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093373D20
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (134,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093372EE0
                        nil
                        symbol = self
                     )
                     field = TIMER1
                  )

               )
               (callparan, resultdef = Boolean = "Boolean", pos = (134,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093373D80
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (134,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093373DE0
                     typedef = "Boolean"
                     value = 0
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (135,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373E40
      (asmn, resultdef =  = "untyped", pos = (135,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373EA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (135,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373F00
      (finalizetempsn, resultdef =  = "untyped", pos = (135,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373F60
      )

   )
)

*******************************************************************************
after parsing
ToolButtonAnimClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (139,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (139,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Boolean = "Boolean", pos = (139,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = ANIMRUN
         )
         (notn, resultdef = Boolean = "Boolean", pos = (139,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = Boolean = "Boolean", pos = (139,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = ANIMRUN
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (143,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (ifn, resultdef =  = "untyped", pos = (140,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Boolean = "Boolean", pos = (140,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = ANIMRUN
         )
         (blockn, resultdef =  = "untyped", pos = (141,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (142,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (142,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  proc = doAnim(TImage);
                  left =
                  (callparan, resultdef = TImage = "TImage", pos = (142,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (subscriptn, resultdef = TImage = "TImage", pos = (142,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (142,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           nil
                           symbol = self
                        )
                        field = IMAGE1
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonAnimClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (139,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (139,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
         (loadn, resultdef = Boolean = "Boolean", pos = (139,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = ANIMRUN
         )
         (notn, resultdef = Boolean = "Boolean", pos = (139,14), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 2
            (loadn, resultdef = Boolean = "Boolean", pos = (139,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = ANIMRUN
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (143,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef =  = "untyped", pos = (140,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (loadn, resultdef = Boolean = "Boolean", pos = (140,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
            nil
            symbol = ANIMRUN
         )
         (blockn, resultdef =  = "untyped", pos = (141,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (142,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (142,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  proc = doAnim(TImage);
                  left =
                  (callparan, resultdef = TImage = "TImage", pos = (142,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (subscriptn, resultdef = TImage = "TImage", pos = (142,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (142,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = IMAGE1
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonAnimClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093370000
   (statementn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093370060
      (asmn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093372F40
      )

   )
   (statementn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373A20
      (asmn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FF40
      )

   )
   (statementn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FFA0
      (asmn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093372FA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933739C0
      (asmn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365B00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FD60
      (blockn, resultdef =  = "untyped", pos = (138,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093373F60
         (statementn, resultdef =  = "untyped", pos = (139,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373E40
            (assignn, resultdef =  = "untyped", pos = (139,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4, optinfo = 0000000093373EA0
               (loadn, resultdef = Boolean = "Boolean", pos = (139,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093373AE0
                  nil
                  symbol = ANIMRUN
               )
               (notn, resultdef = Boolean = "Boolean", pos = (139,14), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 2, optinfo = 0000000093373000
                  (loadn, resultdef = Boolean = "Boolean", pos = (139,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093373B40
                     nil
                     symbol = ANIMRUN
                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (143,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336E980
            (ifn, resultdef =  = "untyped", pos = (140,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093372DC0
               (loadn, resultdef = Boolean = "Boolean", pos = (140,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093373D80
                  nil
                  symbol = ANIMRUN
               )
               (blockn, resultdef =  = "untyped", pos = (141,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373DE0
                  (statementn, resultdef =  = "untyped", pos = (142,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373CC0
                     (calln, resultdef =  = "untyped", pos = (142,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373D20
                        proc = doAnim(TImage);
                        left =
                        (callparan, resultdef = TImage = "TImage", pos = (142,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093373960
                           (subscriptn, resultdef = TImage = "TImage", pos = (142,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009336FDC0
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (142,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093372EE0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                     )

                  )
               )
               nil
               nil
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (145,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364E40
      (asmn, resultdef =  = "untyped", pos = (145,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373060
      )

   )
   (statementn, resultdef =  = "untyped", pos = (145,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373900
      (finalizetempsn, resultdef =  = "untyped", pos = (145,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093366460
      )

   )
)

*******************************************************************************
after parsing
NewImage(TFormDocument);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (154,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (154,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = BMP1
         )
         (calln, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            proc = constructor Create(<TGenericUniversalBitmap$2$crc4476F4D1_crcA4D36C3A>;<Class Of TGenericUniversalBitmap$2$crc4476F4D1_crcA4D36C3A>;LongInt;LongInt;const TBGRAPixel);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBGRABitmap", pos = (154,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (typen, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )
            )
            left =
            (callparan, resultdef = TBGRAPixel = "<record type>", pos = (154,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TBGRAPixel = "<record type>", pos = (154,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = BGRAWHITE
               )

            )
            (callparan, resultdef = LongInt = "LongInt", pos = (154,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (ordconstn, resultdef = LongInt = "LongInt", pos = (154,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  typedef = "LongInt"
                  value = 300
               )

            )
            (callparan, resultdef = LongInt = "LongInt", pos = (154,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (ordconstn, resultdef = LongInt = "LongInt", pos = (154,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  typedef = "LongInt"
                  value = 300
               )

            )
            (callparan, resultdef = <nil>, pos = (154,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (154,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
            (callparan, resultdef = <nil>, pos = (154,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (154,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (155,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = Draw(<TBGRAWinBitmap>;TCanvas;LongInt;LongInt;Boolean=`TRUE`);
         methodpointer =
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = BMP1
         )
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (155,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (155,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "Boolean"
               value = 1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (155,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (155,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "LongInt"
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (155,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (155,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "LongInt"
               value = 0
            )

         )
         (callparan, resultdef = TCanvas = "TCanvas", pos = (155,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef = TCanvas = "TCanvas", pos = (155,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (155,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (155,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE1
               )
               left =
               (callparan, resultdef = <nil>, pos = (155,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (155,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (155,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (155,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (156,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (156,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = Free(<TObject>);
         methodpointer =
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (156,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = BMP1
         )
         left =
         (callparan, resultdef = <nil>, pos = (156,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (156,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (161,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (161,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = TImage = "TImage", pos = (161,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = IMAGE1
         )
         (subscriptn, resultdef = TImage = "TImage", pos = (161,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (161,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (162,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (162,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = TImage = "TImage", pos = (162,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = IMAGE2
         )
         (subscriptn, resultdef = TImage = "TImage", pos = (162,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (162,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE2
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (163,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (163,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (163,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (163,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (163,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (163,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGEWIDTH
            )

         )
         (callparan, resultdef = <nil>, pos = (163,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (163,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (164,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (164,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (164,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (164,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (164,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (164,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGEHEIGHT
            )

         )
         (callparan, resultdef = <nil>, pos = (164,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (164,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (165,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (165,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetTop(<TControl>;LongInt);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (165,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (165,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (165,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "LongInt"
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (165,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (165,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (166,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (166,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetLeft(<TControl>;LongInt);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (166,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (166,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (166,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "LongInt"
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (166,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (166,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (167,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = SetSize(<TCustomBitmap>;LongInt;LongInt);
         methodpointer =
         (calln, resultdef = TBitmap = "TBitmap", pos = (167,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
            proc = GetBitmap(<TPicture>):Graphics.TBitmap;
            methodpointer =
            (subscriptn, resultdef = TPicture = "TPicture", pos = (167,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               (loadn, resultdef = TImage = "TImage", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = IMAGE1
               )
               field = FPICTURE
            )
            left =
            (callparan, resultdef = <nil>, pos = (167,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (167,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (167,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (167,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               (loadn, resultdef = TImage = "TImage", pos = (167,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = IMAGE1
               )
               field = FHEIGHT
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (167,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (167,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               (loadn, resultdef = TImage = "TImage", pos = (167,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = IMAGE1
               )
               field = FWIDTH
            )

         )
         (callparan, resultdef = <nil>, pos = (167,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (167,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (168,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = Clear(<TFPCustomCanvas>);
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (168,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
            proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
            methodpointer =
            (loadn, resultdef = TImage = "TImage", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = IMAGE1
            )
            left =
            (callparan, resultdef = <nil>, pos = (168,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (168,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (168,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (168,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (169,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = Clear(<TFPCustomCanvas>);
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (169,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
            proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
            methodpointer =
            (loadn, resultdef = TImage = "TImage", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = IMAGE2
            )
            left =
            (callparan, resultdef = <nil>, pos = (169,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (169,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (169,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (169,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (170,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = IMAGE2
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (170,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (170,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               (loadn, resultdef = TImage = "TImage", pos = (170,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = IMAGE1
               )
               field = FWIDTH
            )

         )
         (callparan, resultdef = <nil>, pos = (170,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (170,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (171,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (171,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (171,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = IMAGE2
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (171,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (171,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               (loadn, resultdef = TImage = "TImage", pos = (171,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = IMAGE1
               )
               field = FHEIGHT
            )

         )
         (callparan, resultdef = <nil>, pos = (171,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (171,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (172,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (172,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = AssignEmptyImage(TImage;LongInt;LongInt);
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (172,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (172,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               (loadn, resultdef = TImage = "TImage", pos = (172,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = IMAGE1
               )
               field = FHEIGHT
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (172,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (172,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               (loadn, resultdef = TImage = "TImage", pos = (172,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = IMAGE1
               )
               field = FWIDTH
            )

         )
         (callparan, resultdef = TImage = "TImage", pos = (172,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TImage = "TImage", pos = (172,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (174,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (174,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = AssignEmptyImage(TImage;LongInt;LongInt);
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (174,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (174,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               (loadn, resultdef = TImage = "TImage", pos = (174,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = IMAGE1
               )
               field = FHEIGHT
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (174,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (174,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               (loadn, resultdef = TImage = "TImage", pos = (174,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = IMAGE1
               )
               field = FWIDTH
            )

         )
         (callparan, resultdef = TImage = "TImage", pos = (174,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TImage = "TImage", pos = (174,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = IMAGE2
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (177,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = Hide(<TControl>);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = IMAGE2
         )
         left =
         (callparan, resultdef = <nil>, pos = (177,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (177,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (178,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Single = "Single", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = ZOOMFACTOR
         )
         (realconstn, resultdef = Single = "Single", pos = (178,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            value =  1.0000000000000000E+000
         )
      )

   )
)

*******************************************************************************
after the firstpass
NewImage(TFormDocument);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (154,55), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (154,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
            nil
            symbol = BMP1
         )
         (calln, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            proc = constructor Create(<TGenericUniversalBitmap$2$crc4476F4D1_crcA4D36C3A>;<Class Of TGenericUniversalBitmap$2$crc4476F4D1_crcA4D36C3A>;LongInt;LongInt;const TBGRAPixel);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBGRABitmap", pos = (154,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (typen, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )
            )
            vmt_entry =
            (subscriptn, resultdef = <no type symbol> = "<address of function(LongInt;LongInt;const TBGRAPixel):TGenericUniversalBitmap<BGRABITMAPTYPES.TBGRAPixel,BGRABITMAPTYPES.TBGRAPixelColorspace> of object;Register>", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               (derefn, resultdef = TBGRABitmap. = "<record type>", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  (typeconvn, resultdef = <no type symbol> = "^TBGRABitmap.<record type>", pos = (154,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBGRABitmap", pos = (154,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (typen, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                  )
               )
               field = f297
            )
            left =
            (callparan, resultdef = TBGRAPixel = "<record type>", pos = (154,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
               (loadn, resultdef = TBGRAPixel = "<record type>", pos = (154,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_address_taken], cmplx = 1
                  nil
                  symbol = BGRAWHITE
               )

            )
            (callparan, resultdef = <nil>, pos = (154,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBGRABitmap", pos = (154,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (typen, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )
               )

            )
            (callparan, resultdef = LongInt = "LongInt", pos = (154,40), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
               (ordconstn, resultdef = LongInt = "LongInt", pos = (154,40), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                  typedef = "LongInt"
                  value = 300
               )

            )
            (callparan, resultdef = LongInt = "LongInt", pos = (154,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
               (ordconstn, resultdef = LongInt = "LongInt", pos = (154,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                  typedef = "LongInt"
                  value = 300
               )

            )
            (callparan, resultdef = <nil>, pos = (154,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
               (pointerconstn, resultdef = Pointer = "^untyped", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                  value = $0000000000000001
               )

            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (155,52), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Draw(<TBGRAWinBitmap>;TCanvas;LongInt;LongInt;Boolean=`TRUE`);
         methodpointer =
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = BMP1
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(TCanvas;LongInt;LongInt;Boolean=`TRUE`) of object;Register>", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
            (derefn, resultdef = TBGRABitmap. = "<record type>", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
               (typeconvn, resultdef = <no type symbol> = "^TBGRABitmap.<record type>", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = BMP1
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f557
         )
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (155,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (155,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "Boolean"
               value = 1
            )

         )
         (callparan, resultdef = TCanvas = "TCanvas", pos = (155,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (calln, resultdef = TCanvas = "TCanvas", pos = (155,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (155,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (155,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE1
               )
               left =
               (callparan, resultdef = <nil>, pos = (155,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (155,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (155,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE1
                  )

               )
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (155,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (155,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (155,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (155,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (155,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = BMP1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (156,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (156,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Free(<TObject>);
         methodpointer =
         (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (156,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = BMP1
         )
         left =
         (callparan, resultdef = <nil>, pos = (156,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (156,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = BMP1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (161,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (161,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3
         (loadn, resultdef = TImage = "TImage", pos = (161,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
            nil
            symbol = IMAGE1
         )
         (subscriptn, resultdef = TImage = "TImage", pos = (161,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (161,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (162,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (162,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3
         (loadn, resultdef = TImage = "TImage", pos = (162,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
            nil
            symbol = IMAGE2
         )
         (subscriptn, resultdef = TImage = "TImage", pos = (162,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (162,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE2
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (163,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (163,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (163,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (163,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (163,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (163,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGEWIDTH
            )

         )
         (callparan, resultdef = <nil>, pos = (163,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TImage = "TImage", pos = (163,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (164,44), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (164,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (164,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (164,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (164,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (164,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGEHEIGHT
            )

         )
         (callparan, resultdef = <nil>, pos = (164,17), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TImage = "TImage", pos = (164,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (165,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (165,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetTop(<TControl>;LongInt);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (165,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (165,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (165,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (165,14), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TImage = "TImage", pos = (165,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (166,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (166,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetLeft(<TControl>;LongInt);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (166,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (166,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (166,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (166,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TImage = "TImage", pos = (166,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (167,61), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = SetSize(<TCustomBitmap>;LongInt;LongInt);
         methodpointer =
         (temprefn, resultdef = TBitmap = "TBitmap", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(LongInt;LongInt) of object;Register>", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
            (derefn, resultdef = TBitmap. = "<record type>", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               (typeconvn, resultdef = <no type symbol> = "^TBitmap.<record type>", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     (temprefn, resultdef = TBitmap = "TBitmap", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                        temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f86
         )
         callinitblock =
         (blockn, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $0000000091B9D570
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TBitmap = "TBitmap", pos = (167,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (167,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                        (loadn, resultdef = TImage = "TImage", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = IMAGE1
                        )
                        field = FPICTURE
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (167,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (167,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                           (loadn, resultdef = TImage = "TImage", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = IMAGE1
                           )
                           field = FPICTURE
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
            (statementn, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $0000000091B9D570
               )

            )
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (167,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (167,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
               (loadn, resultdef = TImage = "TImage", pos = (167,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = IMAGE1
               )
               field = FHEIGHT
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (167,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (167,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
               (loadn, resultdef = TImage = "TImage", pos = (167,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = IMAGE1
               )
               field = FWIDTH
            )

         )
         (callparan, resultdef = <nil>, pos = (167,61), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (temprefn, resultdef = TBitmap = "TBitmap", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
               temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (168,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Clear(<TFPCustomCanvas>);
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091B9D5F0
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (168,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                     methodpointer =
                     (loadn, resultdef = TImage = "TImage", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = IMAGE1
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (168,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                        (loadn, resultdef = TImage = "TImage", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = IMAGE1
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
            (statementn, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091B9D5F0
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (168,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (169,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Clear(<TFPCustomCanvas>);
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D670 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091B9D670
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D670 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (169,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                     methodpointer =
                     (loadn, resultdef = TImage = "TImage", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = IMAGE2
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (169,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                        (loadn, resultdef = TImage = "TImage", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = IMAGE2
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
            (statementn, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091B9D670
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (169,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D670 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (170,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = IMAGE2
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (170,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (170,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
               (loadn, resultdef = TImage = "TImage", pos = (170,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = IMAGE1
               )
               field = FWIDTH
            )

         )
         (callparan, resultdef = <nil>, pos = (170,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TImage = "TImage", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = IMAGE2
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (171,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (171,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (171,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = IMAGE2
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (171,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (171,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
               (loadn, resultdef = TImage = "TImage", pos = (171,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = IMAGE1
               )
               field = FHEIGHT
            )

         )
         (callparan, resultdef = <nil>, pos = (171,17), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TImage = "TImage", pos = (171,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = IMAGE2
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (172,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (172,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = AssignEmptyImage(TImage;LongInt;LongInt);
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (172,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (172,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
               (loadn, resultdef = TImage = "TImage", pos = (172,42), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = IMAGE1
               )
               field = FHEIGHT
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (172,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (172,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
               (loadn, resultdef = TImage = "TImage", pos = (172,28), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = IMAGE1
               )
               field = FWIDTH
            )

         )
         (callparan, resultdef = TImage = "TImage", pos = (172,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TImage = "TImage", pos = (172,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (174,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (174,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = AssignEmptyImage(TImage;LongInt;LongInt);
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (174,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (174,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
               (loadn, resultdef = TImage = "TImage", pos = (174,42), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = IMAGE1
               )
               field = FHEIGHT
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (174,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = LongInt = "LongInt", pos = (174,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
               (loadn, resultdef = TImage = "TImage", pos = (174,28), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = IMAGE1
               )
               field = FWIDTH
            )

         )
         (callparan, resultdef = TImage = "TImage", pos = (174,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TImage = "TImage", pos = (174,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = IMAGE2
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (177,14), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Hide(<TControl>);
         methodpointer =
         (loadn, resultdef = TImage = "TImage", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = IMAGE2
         )
         left =
         (callparan, resultdef = <nil>, pos = (177,14), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TImage = "TImage", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = IMAGE2
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (178,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef =  = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = ZOOMFACTOR
         )
         (realconstn, resultdef = Single = "Single", pos = (178,17), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
            value =  1.0000000000000000E+000
         )
      )

   )
)

*******************************************************************************
right before code generation
NewImage(TFormDocument);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AAA0
   (statementn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AB00
      (asmn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AB60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337ABC0
      (asmn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AC20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AC80
      (asmn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337ACE0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AD40
      (asmn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337ADA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AE00
      (blockn, resultdef =  = "untyped", pos = (151,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093364E40
         (statementn, resultdef =  = "untyped", pos = (154,55), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373060
            (assignn, resultdef =  = "untyped", pos = (154,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336E980
               (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 000000009337A740
                  nil
                  symbol = BMP1
               )
               (calln, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 000000009337AE60
                  proc = constructor Create(<TGenericUniversalBitmap$2$crc4476F4D1_crcA4D36C3A>;<Class Of TGenericUniversalBitmap$2$crc4476F4D1_crcA4D36C3A>;LongInt;LongInt;const TBGRAPixel);
                  methodpointer =
                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBGRABitmap", pos = (154,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 000000009337AEC0
                     (typen, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 000000009337AF20
                     )
                  )
                  vmt_entry =
                  (subscriptn, resultdef = <no type symbol> = "<address of function(LongInt;LongInt;const TBGRAPixel):TGenericUniversalBitmap<BGRABITMAPTYPES.TBGRAPixel,BGRABITMAPTYPES.TBGRAPixelColorspace> of object;Register>", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337AF80
                     (derefn, resultdef = TBGRABitmap. = "<record type>", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337AFE0
                        (typeconvn, resultdef = <no type symbol> = "^TBGRABitmap.<record type>", pos = (154,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, optinfo = 000000009337B040, convtype = tc_equal, convnodeflags = []
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBGRABitmap", pos = (154,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 000000009337B0A0
                              (typen, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 000000009337B100
                              )
                           )
                        )
                     )
                     field = f297
                  )
                  left =
                  (callparan, resultdef = TBGRAPixel = "<record type>", pos = (154,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337B160
                     (loadn, resultdef = TBGRAPixel = "<record type>", pos = (154,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_address_taken], cmplx = 1, optinfo = 000000009337A7A0
                        nil
                        symbol = BGRAWHITE
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (154,55), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 000000009337B1C0
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBGRABitmap", pos = (154,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 000000009337B220
                        (typen, resultdef = TBGRABitmap = "TBGRABitmap", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 000000009337B280
                        )
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (154,40), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 000000009337B2E0
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (154,40), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337B340
                        typedef = "LongInt"
                        value = 300
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (154,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 000000009337B3A0
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (154,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337B400
                        typedef = "LongInt"
                        value = 300
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (154,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 000000009337B460
                     (pointerconstn, resultdef = Pointer = "^untyped", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337B4C0
                        value = $0000000000000001
                     )

                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (155,52), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093372DC0
            (calln, resultdef =  = "untyped", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373D80
               proc = Draw(<TBGRAWinBitmap>;TCanvas;LongInt;LongInt;Boolean=`TRUE`);
               methodpointer =
               (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A560
                  nil
                  symbol = BMP1
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(TCanvas;LongInt;LongInt;Boolean=`TRUE`) of object;Register>", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337B520
                  (derefn, resultdef = TBGRABitmap. = "<record type>", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337B580
                     (typeconvn, resultdef = <no type symbol> = "^TBGRABitmap.<record type>", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, optinfo = 000000009337B5E0, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337B640
                           (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A5C0
                              nil
                              symbol = BMP1
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f557
               )
               left =
               (callparan, resultdef = Boolean = "Boolean", pos = (155,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 000000009337B6A0
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (155,51), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337B700
                     typedef = "Boolean"
                     value = 1
                  )

               )
               (callparan, resultdef = TCanvas = "TCanvas", pos = (155,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 000000009337B760
                  (calln, resultdef = TCanvas = "TCanvas", pos = (155,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337B7C0
                     proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (155,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337B820
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (155,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A620
                           nil
                           symbol = FORMDOCUMENT
                        )
                        field = IMAGE1
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (155,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337B880
                        (subscriptn, resultdef = TImage = "TImage", pos = (155,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337B8E0
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (155,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A680
                              nil
                              symbol = FORMDOCUMENT
                           )
                           field = IMAGE1
                        )

                     )
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (155,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 000000009337B940
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (155,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337B9A0
                     typedef = "LongInt"
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (155,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 000000009337BA00
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (155,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337BA60
                     typedef = "LongInt"
                     value = 0
                  )

               )
               (callparan, resultdef = <nil>, pos = (155,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337BAC0
                  (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A6E0
                     nil
                     symbol = BMP1
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (156,12), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373DE0
            (calln, resultdef =  = "untyped", pos = (156,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373CC0
               proc = Free(<TObject>);
               methodpointer =
               (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (156,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A4A0
                  nil
                  symbol = BMP1
               )
               left =
               (callparan, resultdef = <nil>, pos = (156,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337BB20
                  (loadn, resultdef = TBGRABitmap = "TBGRABitmap", pos = (156,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A500
                     nil
                     symbol = BMP1
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (161,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373D20
            (assignn, resultdef =  = "untyped", pos = (161,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3, optinfo = 0000000093373960
               (loadn, resultdef = TImage = "TImage", pos = (161,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 000000009337A3E0
                  nil
                  symbol = IMAGE1
               )
               (subscriptn, resultdef = TImage = "TImage", pos = (161,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337BB80
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (161,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A440
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE1
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (162,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FDC0
            (assignn, resultdef =  = "untyped", pos = (162,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3, optinfo = 0000000093372EE0
               (loadn, resultdef = TImage = "TImage", pos = (162,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 000000009337A320
                  nil
                  symbol = IMAGE2
               )
               (subscriptn, resultdef = TImage = "TImage", pos = (162,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337BBE0
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (162,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A380
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE2
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (163,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373E40
            (calln, resultdef =  = "untyped", pos = (163,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093373EA0
               proc = SetWidth(<TControl>;LongInt);
               methodpointer =
               (loadn, resultdef = TImage = "TImage", pos = (163,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A200
                  nil
                  symbol = IMAGE1
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (163,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337BC40
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (163,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337BCA0
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (163,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A260
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGEWIDTH
                  )

               )
               (callparan, resultdef = <nil>, pos = (163,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337BD00
                  (loadn, resultdef = TImage = "TImage", pos = (163,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A2C0
                     nil
                     symbol = IMAGE1
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (164,44), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373AE0
            (calln, resultdef =  = "untyped", pos = (164,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093373000
               proc = SetHeight(<TControl>;LongInt);
               methodpointer =
               (loadn, resultdef = TImage = "TImage", pos = (164,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A0E0
                  nil
                  symbol = IMAGE1
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (164,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337BD60
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (164,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337BDC0
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (164,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A140
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGEHEIGHT
                  )

               )
               (callparan, resultdef = <nil>, pos = (164,17), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337BE20
                  (loadn, resultdef = TImage = "TImage", pos = (164,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A1A0
                     nil
                     symbol = IMAGE1
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (165,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373B40
            (calln, resultdef =  = "untyped", pos = (165,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 00000000933739C0
               proc = SetTop(<TControl>;LongInt);
               methodpointer =
               (loadn, resultdef = TImage = "TImage", pos = (165,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A020
                  nil
                  symbol = IMAGE1
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (165,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 000000009337BE80
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (165,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337BEE0
                     typedef = "LongInt"
                     value = 0
                  )

               )
               (callparan, resultdef = <nil>, pos = (165,14), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337BF40
                  (loadn, resultdef = TImage = "TImage", pos = (165,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A080
                     nil
                     symbol = IMAGE1
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (166,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365B00
            (calln, resultdef =  = "untyped", pos = (166,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009336FFA0
               proc = SetLeft(<TControl>;LongInt);
               methodpointer =
               (loadn, resultdef = TImage = "TImage", pos = (166,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379F60
                  nil
                  symbol = IMAGE1
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (166,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 000000009337BFA0
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (166,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337C000
                     typedef = "LongInt"
                     value = 0
                  )

               )
               (callparan, resultdef = <nil>, pos = (166,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337C060
                  (loadn, resultdef = TImage = "TImage", pos = (166,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379FC0
                     nil
                     symbol = IMAGE1
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (167,61), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093372FA0
            (calln, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373A20
               proc = SetSize(<TCustomBitmap>;LongInt;LongInt);
               methodpointer =
               (temprefn, resultdef = TBitmap = "TBitmap", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093379D80
                  temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(LongInt;LongInt) of object;Register>", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337C420
                  (derefn, resultdef = TBitmap. = "<record type>", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337C480
                     (typeconvn, resultdef = <no type symbol> = "^TBitmap.<record type>", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, optinfo = 000000009337C4E0, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337C540
                           (temprefn, resultdef = TBitmap = "TBitmap", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093379DE0
                              temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f86
               )
               callinitblock =
               (blockn, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337C0C0
                  (statementn, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337C120
                     (tempcreaten, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337C180
                        size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $0000000091B9D570
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337C1E0
                     (assignn, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337C240
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093379C60
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TBitmap = "TBitmap", pos = (167,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337C2A0
                           proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (167,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337C300
                              (loadn, resultdef = TImage = "TImage", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379CC0
                                 nil
                                 symbol = IMAGE1
                              )
                              field = FPICTURE
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (167,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337C360
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (167,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337C3C0
                                 (loadn, resultdef = TImage = "TImage", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379D20
                                    nil
                                    symbol = IMAGE1
                                 )
                                 field = FPICTURE
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337C5A0
                  (statementn, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337C600
                     (tempdeleten, resultdef =  = "untyped", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337C660
                        release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $0000000091B9D570
                     )

                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (167,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337C6C0
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (167,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337C720
                     (loadn, resultdef = TImage = "TImage", pos = (167,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379E40
                        nil
                        symbol = IMAGE1
                     )
                     field = FHEIGHT
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (167,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337C780
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (167,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337C7E0
                     (loadn, resultdef = TImage = "TImage", pos = (167,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379EA0
                        nil
                        symbol = IMAGE1
                     )
                     field = FWIDTH
                  )

               )
               (callparan, resultdef = <nil>, pos = (167,61), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337C840
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (167,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093379F00
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (168,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FF40
            (calln, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093370060
               proc = Clear(<TFPCustomCanvas>);
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093379BA0
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337C8A0
                  (statementn, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337C900
                     (tempcreaten, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337C960
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091B9D5F0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337C9C0
                     (assignn, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337CA20
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093379A80
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (168,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337CA80
                           proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                           methodpointer =
                           (loadn, resultdef = TImage = "TImage", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379AE0
                              nil
                              symbol = IMAGE1
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (168,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337CAE0
                              (loadn, resultdef = TImage = "TImage", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379B40
                                 nil
                                 symbol = IMAGE1
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337CB40
                  (statementn, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337CBA0
                     (tempdeleten, resultdef =  = "untyped", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337CC00
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091B9D5F0
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (168,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337CC60
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (168,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093379C00
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (169,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093372F40
            (calln, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093364BA0
               proc = Clear(<TFPCustomCanvas>);
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933799C0
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D670 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337CCC0
                  (statementn, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337CD20
                     (tempcreaten, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337CD80
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091B9D670
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337CDE0
                     (assignn, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337CE40
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 00000000933798A0
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D670 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (169,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337CEA0
                           proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                           methodpointer =
                           (loadn, resultdef = TImage = "TImage", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379900
                              nil
                              symbol = IMAGE2
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (169,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337CF00
                              (loadn, resultdef = TImage = "TImage", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379960
                                 nil
                                 symbol = IMAGE2
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337CF60
                  (statementn, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337CFC0
                     (tempdeleten, resultdef =  = "untyped", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337D020
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091B9D670
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (169,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337D080
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (169,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093379A20
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D670 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (170,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093378E80
            (calln, resultdef =  = "untyped", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093378EE0
               proc = SetWidth(<TControl>;LongInt);
               methodpointer =
               (loadn, resultdef = TImage = "TImage", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379780
                  nil
                  symbol = IMAGE2
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (170,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337D0E0
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (170,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337D140
                     (loadn, resultdef = TImage = "TImage", pos = (170,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933797E0
                        nil
                        symbol = IMAGE1
                     )
                     field = FWIDTH
                  )

               )
               (callparan, resultdef = <nil>, pos = (170,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337D1A0
                  (loadn, resultdef = TImage = "TImage", pos = (170,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379840
                     nil
                     symbol = IMAGE2
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (171,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093378F40
            (calln, resultdef =  = "untyped", pos = (171,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093378FA0
               proc = SetHeight(<TControl>;LongInt);
               methodpointer =
               (loadn, resultdef = TImage = "TImage", pos = (171,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379660
                  nil
                  symbol = IMAGE2
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (171,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337D200
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (171,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337D260
                     (loadn, resultdef = TImage = "TImage", pos = (171,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933796C0
                        nil
                        symbol = IMAGE1
                     )
                     field = FHEIGHT
                  )

               )
               (callparan, resultdef = <nil>, pos = (171,17), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337D2C0
                  (loadn, resultdef = TImage = "TImage", pos = (171,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379720
                     nil
                     symbol = IMAGE2
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (172,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379000
            (calln, resultdef =  = "untyped", pos = (172,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379060
               proc = AssignEmptyImage(TImage;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (172,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337D320
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (172,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337D380
                     (loadn, resultdef = TImage = "TImage", pos = (172,42), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379540
                        nil
                        symbol = IMAGE1
                     )
                     field = FHEIGHT
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (172,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337D3E0
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (172,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337D440
                     (loadn, resultdef = TImage = "TImage", pos = (172,28), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933795A0
                        nil
                        symbol = IMAGE1
                     )
                     field = FWIDTH
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (172,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337D4A0
                  (loadn, resultdef = TImage = "TImage", pos = (172,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379600
                     nil
                     symbol = IMAGE1
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (174,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933790C0
            (calln, resultdef =  = "untyped", pos = (174,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379120
               proc = AssignEmptyImage(TImage;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (174,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337D500
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (174,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337D560
                     (loadn, resultdef = TImage = "TImage", pos = (174,42), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379420
                        nil
                        symbol = IMAGE1
                     )
                     field = FHEIGHT
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (174,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337D5C0
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (174,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337D620
                     (loadn, resultdef = TImage = "TImage", pos = (174,28), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379480
                        nil
                        symbol = IMAGE1
                     )
                     field = FWIDTH
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (174,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337D680
                  (loadn, resultdef = TImage = "TImage", pos = (174,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933794E0
                     nil
                     symbol = IMAGE2
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (177,14), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379180
            (calln, resultdef =  = "untyped", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933791E0
               proc = Hide(<TControl>);
               methodpointer =
               (loadn, resultdef = TImage = "TImage", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379360
                  nil
                  symbol = IMAGE2
               )
               left =
               (callparan, resultdef = <nil>, pos = (177,14), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337D6E0
                  (loadn, resultdef = TImage = "TImage", pos = (177,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933793C0
                     nil
                     symbol = IMAGE2
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (178,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093379240
            (assignn, resultdef =  = "untyped", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933792A0
               (loadn, resultdef = Single = "Single", pos = (178,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093379300
                  nil
                  symbol = ZOOMFACTOR
               )
               (realconstn, resultdef = Single = "Single", pos = (178,17), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 000000009337D740
                  value =  1.0000000000000000E+000
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (179,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D7A0
      (asmn, resultdef =  = "untyped", pos = (179,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D800
      )

   )
   (statementn, resultdef =  = "untyped", pos = (179,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D860
      (finalizetempsn, resultdef =  = "untyped", pos = (179,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D8C0
      )

   )
)

*******************************************************************************
after parsing
AssignEmptyImage(TImage;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (185,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (185,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetBitmap(<TPicture>;TBitmap);
         methodpointer =
         (subscriptn, resultdef = TPicture = "TPicture", pos = (185,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
            (loadn, resultdef = TImage = "TImage", pos = (185,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = _IMAGE
            )
            field = FPICTURE
         )
         left =
         (callparan, resultdef = TBitmap = "TBitmap", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef = TBitmap = "TBitmap", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = constructor Create(<TCustomBitmap>;<Class Of TCustomBitmap>);
               methodpointer =
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (185,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typen, resultdef = TBitmap = "TBitmap", pos = (185,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (185,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
               (callparan, resultdef = <nil>, pos = (185,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (185,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (185,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (202,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (tryfinallyn, resultdef =  = "untyped", pos = (186,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (blockn, resultdef =  = "untyped", pos = (200,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (194,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetWidth(<TGraphic>;LongInt);
                  methodpointer =
                  (calln, resultdef = TBitmap = "TBitmap", pos = (194,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                     proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (194,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        (loadn, resultdef = TImage = "TImage", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           nil
                           symbol = _IMAGE
                        )
                        field = FPICTURE
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (194,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (194,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (194,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = LongInt = "LongInt", pos = (194,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = _WIDTH
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (194,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (194,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (195,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetHeight(<TGraphic>;LongInt);
                  methodpointer =
                  (calln, resultdef = TBitmap = "TBitmap", pos = (195,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                     proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (195,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        (loadn, resultdef = TImage = "TImage", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           nil
                           symbol = _IMAGE
                        )
                        field = FPICTURE
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (195,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (195,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (195,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = LongInt = "LongInt", pos = (195,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = _HEIGHT
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (195,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (195,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (196,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetColor(<TBrush>;TColor);
                  methodpointer =
                  (subscriptn, resultdef = TBrush = "TBrush", pos = (196,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                     (calln, resultdef = TCanvas = "TCanvas", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        proc = GetCanvas(<TRasterImage>):Graphics.TCanvas;
                        methodpointer =
                        (calln, resultdef = TBitmap = "TBitmap", pos = (196,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                           proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (196,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                              (loadn, resultdef = TImage = "TImage", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = _IMAGE
                              )
                              field = FPICTURE
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (196,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (nothingn, resultdef =  = "untyped", pos = (196,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (196,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (nothingn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )

                        )
                     )
                     field = FLAZBRUSH
                  )
                  left =
                  (callparan, resultdef = TColor = "LongInt", pos = (196,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (ordconstn, resultdef = TColor = "LongInt", pos = (196,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "LongInt"
                        value = 16777215
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (196,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (196,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (197,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetStyle(<TFPCustomBrush>;TFPBrushStyle);
                  methodpointer =
                  (subscriptn, resultdef = TBrush = "TBrush", pos = (197,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                     (calln, resultdef = TCanvas = "TCanvas", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        proc = GetCanvas(<TRasterImage>):Graphics.TCanvas;
                        methodpointer =
                        (calln, resultdef = TBitmap = "TBitmap", pos = (197,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                           proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (197,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                              (loadn, resultdef = TImage = "TImage", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = _IMAGE
                              )
                              field = FPICTURE
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (197,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (nothingn, resultdef =  = "untyped", pos = (197,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (197,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (nothingn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )

                        )
                     )
                     field = FLAZBRUSH
                  )
                  left =
                  (callparan, resultdef = TFPBrushStyle = "<enumeration type>", pos = (197,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (ordconstn, resultdef = TFPBrushStyle = "<enumeration type>", pos = (197,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "<enumeration type>"
                        value = 0
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (197,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (197,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (198,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  proc = FillRect(<TCanvas>;LongInt;LongInt;LongInt;LongInt);
                  methodpointer =
                  (calln, resultdef = TCanvas = "TCanvas", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                     proc = GetCanvas(<TRasterImage>):Graphics.TCanvas;
                     methodpointer =
                     (calln, resultdef = TBitmap = "TBitmap", pos = (198,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                        methodpointer =
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (198,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                           (loadn, resultdef = TImage = "TImage", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = _IMAGE
                           )
                           field = FPICTURE
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (198,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (nothingn, resultdef =  = "untyped", pos = (198,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (198,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (198,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = LongInt = "LongInt", pos = (198,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = _HEIGHT
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (198,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = LongInt = "LongInt", pos = (198,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = _WIDTH
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (198,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (198,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "LongInt"
                        value = 0
                     )

                  )
                  (callparan, resultdef = LongInt = "LongInt", pos = (198,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (198,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "LongInt"
                        value = 0
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (198,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (198,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
         )
         (blockn, resultdef =  = "untyped", pos = (202,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
         )
         nil
      )

   )
)

*******************************************************************************
after the firstpass
AssignEmptyImage(TImage;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (185,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetBitmap(<TPicture>;TBitmap);
         methodpointer =
         (subscriptn, resultdef = TPicture = "TPicture", pos = (185,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
            (loadn, resultdef = TImage = "TImage", pos = (185,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = _IMAGE
            )
            field = FPICTURE
         )
         left =
         (callparan, resultdef = TBitmap = "TBitmap", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (calln, resultdef = TBitmap = "TBitmap", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
               proc = constructor Create(<TCustomBitmap>;<Class Of TCustomBitmap>);
               methodpointer =
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (185,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (typen, resultdef = TBitmap = "TBitmap", pos = (185,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of function:TCustomBitmap of object;Register>", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  (derefn, resultdef = TBitmap. = "<record type>", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     (typeconvn, resultdef = <no type symbol> = "^TBitmap.<record type>", pos = (185,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (185,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                           (typen, resultdef = TBitmap = "TBitmap", pos = (185,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )
                        )
                     )
                  )
                  field = f47
               )
               left =
               (callparan, resultdef = <nil>, pos = (185,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (185,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                     (typen, resultdef = TBitmap = "TBitmap", pos = (185,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (185,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                  (pointerconstn, resultdef = Pointer = "^untyped", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                     value = $0000000000000001
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (185,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TPicture = "TPicture", pos = (185,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
               (loadn, resultdef = TImage = "TImage", pos = (185,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = _IMAGE
               )
               field = FPICTURE
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (202,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (blockn, resultdef =  = "untyped", pos = (200,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (statementn, resultdef =  = "untyped", pos = (194,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
               proc = SetWidth(<TGraphic>;LongInt);
               methodpointer =
               (temprefn, resultdef = TBitmap = "TBitmap", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(LongInt) of object;Register>", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  (derefn, resultdef = TBitmap. = "<record type>", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     (typeconvn, resultdef = <no type symbol> = "^TBitmap.<record type>", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (temprefn, resultdef = TBitmap = "TBitmap", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                              temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f45
               )
               callinitblock =
               (blockn, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (statementn, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $0000000091B9D5F0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TBitmap = "TBitmap", pos = (194,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (194,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                              (loadn, resultdef = TImage = "TImage", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = _IMAGE
                              )
                              field = FPICTURE
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (194,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (194,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                 (loadn, resultdef = TImage = "TImage", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                    nil
                                    symbol = _IMAGE
                                 )
                                 field = FPICTURE
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  (statementn, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $0000000091B9D5F0
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (194,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (194,42), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (194,42), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = _WIDTH
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (195,44), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
               proc = SetHeight(<TGraphic>;LongInt);
               methodpointer =
               (temprefn, resultdef = TBitmap = "TBitmap", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(LongInt) of object;Register>", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  (derefn, resultdef = TBitmap. = "<record type>", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     (typeconvn, resultdef = <no type symbol> = "^TBitmap.<record type>", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (temprefn, resultdef = TBitmap = "TBitmap", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                              temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f42
               )
               callinitblock =
               (blockn, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (statementn, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $0000000091B9D570
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TBitmap = "TBitmap", pos = (195,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                           methodpointer =
                           (subscriptn, resultdef = TPicture = "TPicture", pos = (195,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                              (loadn, resultdef = TImage = "TImage", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = _IMAGE
                              )
                              field = FPICTURE
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (195,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                              (subscriptn, resultdef = TPicture = "TPicture", pos = (195,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                 (loadn, resultdef = TImage = "TImage", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                    nil
                                    symbol = _IMAGE
                                 )
                                 field = FPICTURE
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  (statementn, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $0000000091B9D570
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (195,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                  (temprefn, resultdef = TBitmap = "TBitmap", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (195,44), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (195,44), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = _HEIGHT
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (196,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
               proc = SetColor(<TBrush>;TColor);
               methodpointer =
               (temprefn, resultdef = TBrush = "TBrush", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D4F0 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (statementn, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        size = 8, temptypedef = TBrush = "TBrush", tempinfo = $0000000091B9D4F0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (temprefn, resultdef = TBrush = "TBrush", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                           temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D4F0 flags = [ti_may_be_in_reg])
                        )
                        (subscriptn, resultdef = TBrush = "TBrush", pos = (196,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                           (calln, resultdef = TCanvas = "TCanvas", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetCanvas(<TRasterImage>):Graphics.TCanvas;
                              methodpointer =
                              (temprefn, resultdef = TBitmap = "TBitmap", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                 temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D770 flags = [ti_may_be_in_reg])
                              )
                              callinitblock =
                              (blockn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (statementn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (tempcreaten, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $0000000091B9D770
                                       [ti_may_be_in_reg]
                                       tempinit =
                                       nil
                                    )

                                 )
                                 (statementn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (assignn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (temprefn, resultdef = TBitmap = "TBitmap", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                          temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D770 flags = [ti_may_be_in_reg])
                                       )
                                       (calln, resultdef = TBitmap = "TBitmap", pos = (196,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                                          methodpointer =
                                          (subscriptn, resultdef = TPicture = "TPicture", pos = (196,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                             (loadn, resultdef = TImage = "TImage", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                nil
                                                symbol = _IMAGE
                                             )
                                             field = FPICTURE
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (196,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                             (subscriptn, resultdef = TPicture = "TPicture", pos = (196,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                                (loadn, resultdef = TImage = "TImage", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                   nil
                                                   symbol = _IMAGE
                                                )
                                                field = FPICTURE
                                             )

                                          )
                                       )
                                    )

                                 )
                              )
                              callcleanupblock =
                              (blockn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (statementn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                    (tempdeleten, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $0000000091B9D770
                                    )

                                 )
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (196,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                 (temprefn, resultdef = TBitmap = "TBitmap", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                    temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D770 flags = [ti_may_be_in_reg])
                                 )

                              )
                           )
                           field = FLAZBRUSH
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  (statementn, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBrush = "TBrush", temptype = tt_persistent, tempinfo = $0000000091B9D4F0
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (196,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                  (temprefn, resultdef = TBrush = "TBrush", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D4F0 flags = [ti_may_be_in_reg])
                  )

               )
               (callparan, resultdef = TColor = "LongInt", pos = (196,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                  (ordconstn, resultdef = TColor = "LongInt", pos = (196,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                     typedef = "LongInt"
                     value = 16777215
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (197,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
               proc = SetStyle(<TFPCustomBrush>;TFPBrushStyle);
               methodpointer =
               (temprefn, resultdef = TBrush = "TBrush", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D7F0 flags = [ti_may_be_in_reg])
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(TFPBrushStyle) of object;Register>", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  (derefn, resultdef = TBrush. = "<record type>", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     (typeconvn, resultdef = <no type symbol> = "^TBrush.<record type>", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (temprefn, resultdef = TBrush = "TBrush", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                              temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D7F0 flags = [ti_may_be_in_reg])
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f40
               )
               callinitblock =
               (blockn, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (statementn, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        size = 8, temptypedef = TBrush = "TBrush", tempinfo = $0000000091B9D7F0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (temprefn, resultdef = TBrush = "TBrush", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                           temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D7F0 flags = [ti_may_be_in_reg])
                        )
                        (subscriptn, resultdef = TBrush = "TBrush", pos = (197,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                           (calln, resultdef = TCanvas = "TCanvas", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetCanvas(<TRasterImage>):Graphics.TCanvas;
                              methodpointer =
                              (temprefn, resultdef = TBitmap = "TBitmap", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                 temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D870 flags = [ti_may_be_in_reg])
                              )
                              callinitblock =
                              (blockn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (statementn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (tempcreaten, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $0000000091B9D870
                                       [ti_may_be_in_reg]
                                       tempinit =
                                       nil
                                    )

                                 )
                                 (statementn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (assignn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (temprefn, resultdef = TBitmap = "TBitmap", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                          temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D870 flags = [ti_may_be_in_reg])
                                       )
                                       (calln, resultdef = TBitmap = "TBitmap", pos = (197,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                          proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                                          methodpointer =
                                          (subscriptn, resultdef = TPicture = "TPicture", pos = (197,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                             (loadn, resultdef = TImage = "TImage", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                nil
                                                symbol = _IMAGE
                                             )
                                             field = FPICTURE
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (197,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                             (subscriptn, resultdef = TPicture = "TPicture", pos = (197,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                                (loadn, resultdef = TImage = "TImage", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                   nil
                                                   symbol = _IMAGE
                                                )
                                                field = FPICTURE
                                             )

                                          )
                                       )
                                    )

                                 )
                              )
                              callcleanupblock =
                              (blockn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (statementn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                    (tempdeleten, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $0000000091B9D870
                                    )

                                 )
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (197,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                 (temprefn, resultdef = TBitmap = "TBitmap", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                    temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D870 flags = [ti_may_be_in_reg])
                                 )

                              )
                           )
                           field = FLAZBRUSH
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  (statementn, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TBrush = "TBrush", temptype = tt_persistent, tempinfo = $0000000091B9D7F0
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (197,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                  (temprefn, resultdef = TBrush = "TBrush", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D7F0 flags = [ti_may_be_in_reg])
                  )

               )
               (callparan, resultdef = TFPBrushStyle = "<enumeration type>", pos = (197,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                  (ordconstn, resultdef = TFPBrushStyle = "<enumeration type>", pos = (197,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                     typedef = "<enumeration type>"
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (198,65), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (calln, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               proc = FillRect(<TCanvas>;LongInt;LongInt;LongInt;LongInt);
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (statementn, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (tempcreaten, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091B9D8F0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (assignn, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetCanvas(<TRasterImage>):Graphics.TCanvas;
                           methodpointer =
                           (temprefn, resultdef = TBitmap = "TBitmap", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                              temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                           )
                           callinitblock =
                           (blockn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (statementn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (tempcreaten, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                    size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $0000000091B9D970
                                    [ti_may_be_in_reg]
                                    tempinit =
                                    nil
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (assignn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (temprefn, resultdef = TBitmap = "TBitmap", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                       temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                    )
                                    (calln, resultdef = TBitmap = "TBitmap", pos = (198,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                                       methodpointer =
                                       (subscriptn, resultdef = TPicture = "TPicture", pos = (198,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                          (loadn, resultdef = TImage = "TImage", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                             nil
                                             symbol = _IMAGE
                                          )
                                          field = FPICTURE
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (198,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                          (subscriptn, resultdef = TPicture = "TPicture", pos = (198,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                             (loadn, resultdef = TImage = "TImage", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                nil
                                                symbol = _IMAGE
                                             )
                                             field = FPICTURE
                                          )

                                       )
                                    )
                                 )

                              )
                           )
                           callcleanupblock =
                           (blockn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (statementn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (tempdeleten, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                    release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $0000000091B9D970
                                 )

                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (198,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                              (temprefn, resultdef = TBitmap = "TBitmap", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                 temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  (statementn, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (tempdeleten, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091B9D8F0
                     )

                  )
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (198,64), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (198,64), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = _HEIGHT
                  )

               )
               (callparan, resultdef = <nil>, pos = (198,65), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (198,55), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (198,55), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = _WIDTH
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (198,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (198,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                     typedef = "LongInt"
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (198,44), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (198,44), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                     typedef = "LongInt"
                     value = 0
                  )

               )
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
AssignEmptyImage(TImage;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379420
   (statementn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379000
      (asmn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379060
      )

   )
   (statementn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D4A0
      (asmn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379600
      )

   )
   (statementn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D3E0
      (asmn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D440
      )

   )
   (statementn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933795A0
      (asmn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D320
      )

   )
   (statementn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D380
      (blockn, resultdef =  = "untyped", pos = (184,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093379540
         (statementn, resultdef =  = "untyped", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093378F40
            (calln, resultdef =  = "untyped", pos = (185,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093378FA0
               proc = SetBitmap(<TPicture>;TBitmap);
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (185,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337D2C0
                  (loadn, resultdef = TImage = "TImage", pos = (185,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379720
                     nil
                     symbol = _IMAGE
                  )
                  field = FPICTURE
               )
               left =
               (callparan, resultdef = TBitmap = "TBitmap", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 000000009337D200
                  (calln, resultdef = TBitmap = "TBitmap", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 000000009337D260
                     proc = constructor Create(<TCustomBitmap>;<Class Of TCustomBitmap>);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (185,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933796C0
                        (typen, resultdef = TBitmap = "TBitmap", pos = (185,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093379660
                        )
                     )
                     vmt_entry =
                     (subscriptn, resultdef = <no type symbol> = "<address of function:TCustomBitmap of object;Register>", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093378E80
                        (derefn, resultdef = TBitmap. = "<record type>", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093378EE0
                           (typeconvn, resultdef = <no type symbol> = "^TBitmap.<record type>", pos = (185,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, optinfo = 000000009337D1A0, convtype = tc_equal, convnodeflags = []
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (185,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093379840
                                 (typen, resultdef = TBitmap = "TBitmap", pos = (185,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 000000009337D0E0
                                 )
                              )
                           )
                        )
                        field = f47
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (185,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 000000009337D140
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TBitmap", pos = (185,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933797E0
                           (typen, resultdef = TBitmap = "TBitmap", pos = (185,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093379780
                           )
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (185,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093372F40
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (185,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093364BA0
                           value = $0000000000000001
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (185,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337D080
                  (subscriptn, resultdef = TPicture = "TPicture", pos = (185,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093379A20
                     (loadn, resultdef = TImage = "TImage", pos = (185,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337CF60
                        nil
                        symbol = _IMAGE
                     )
                     field = FPICTURE
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (202,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337CFC0
            (blockn, resultdef =  = "untyped", pos = (200,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D020
               (statementn, resultdef =  = "untyped", pos = (194,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337CCC0
                  (calln, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009337CDE0
                     proc = SetWidth(<TGraphic>;LongInt);
                     methodpointer =
                     (temprefn, resultdef = TBitmap = "TBitmap", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093379C00
                        temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                     )
                     vmt_entry =
                     (subscriptn, resultdef = <no type symbol> = "<address of procedure(LongInt) of object;Register>", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337CB40
                        (derefn, resultdef = TBitmap. = "<record type>", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337CBA0
                           (typeconvn, resultdef = <no type symbol> = "^TBitmap.<record type>", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, optinfo = 000000009337CC00, convtype = tc_equal, convnodeflags = []
                              (subscriptn, resultdef = Pointer = "^untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337C8A0
                                 (temprefn, resultdef = TBitmap = "TBitmap", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337C9C0
                                    temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                                 )
                                 field = hidden_vptr$TOBJECT
                              )
                           )
                        )
                        field = f45
                     )
                     callinitblock =
                     (blockn, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337CE40
                        (statementn, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933798A0
                           (tempcreaten, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337CEA0
                              size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $0000000091B9D5F0
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337CF00
                           (assignn, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379960
                              (temprefn, resultdef = TBitmap = "TBitmap", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093379900
                                 temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                              )
                              (calln, resultdef = TBitmap = "TBitmap", pos = (194,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337CD20
                                 proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                                 methodpointer =
                                 (subscriptn, resultdef = TPicture = "TPicture", pos = (194,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337CD80
                                    (loadn, resultdef = TImage = "TImage", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933799C0
                                       nil
                                       symbol = _IMAGE
                                    )
                                    field = FPICTURE
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (194,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009336FF40
                                    (subscriptn, resultdef = TPicture = "TPicture", pos = (194,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093370060
                                       (loadn, resultdef = TImage = "TImage", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337CC60
                                          nil
                                          symbol = _IMAGE
                                       )
                                       field = FPICTURE
                                    )

                                 )
                              )
                           )

                        )
                     )
                     callcleanupblock =
                     (blockn, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337CA20
                        (statementn, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093379A80
                           (tempdeleten, resultdef =  = "untyped", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337CA80
                              release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $0000000091B9D5F0
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (194,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337CAE0
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (194,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093379B40
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (194,42), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093379AE0
                        (loadn, resultdef = LongInt = "LongInt", pos = (194,42), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337C900
                           nil
                           symbol = _WIDTH
                        )

                     )
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (195,44), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337C960
                  (calln, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093379BA0
                     proc = SetHeight(<TGraphic>;LongInt);
                     methodpointer =
                     (temprefn, resultdef = TBitmap = "TBitmap", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337C4E0
                        temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
                     )
                     vmt_entry =
                     (subscriptn, resultdef = <no type symbol> = "<address of procedure(LongInt) of object;Register>", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337C540
                        (derefn, resultdef = TBitmap. = "<record type>", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093379DE0
                           (typeconvn, resultdef = <no type symbol> = "^TBitmap.<record type>", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, optinfo = 000000009337C5A0, convtype = tc_equal, convnodeflags = []
                              (subscriptn, resultdef = Pointer = "^untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337C600
                                 (temprefn, resultdef = TBitmap = "TBitmap", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337C660
                                    temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
                                 )
                                 field = hidden_vptr$TOBJECT
                              )
                           )
                        )
                        field = f42
                     )
                     callinitblock =
                     (blockn, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093372FA0
                        (statementn, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373A20
                           (tempcreaten, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337C840
                              size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $0000000091B9D570
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379F00
                           (assignn, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337C780
                              (temprefn, resultdef = TBitmap = "TBitmap", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009337C7E0
                                 temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
                              )
                              (calln, resultdef = TBitmap = "TBitmap", pos = (195,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093379EA0
                                 proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                                 methodpointer =
                                 (subscriptn, resultdef = TPicture = "TPicture", pos = (195,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337C6C0
                                    (loadn, resultdef = TImage = "TImage", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337C720
                                       nil
                                       symbol = _IMAGE
                                    )
                                    field = FPICTURE
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (195,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093379E40
                                    (subscriptn, resultdef = TPicture = "TPicture", pos = (195,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337C420
                                       (loadn, resultdef = TImage = "TImage", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337C480
                                          nil
                                          symbol = _IMAGE
                                       )
                                       field = FPICTURE
                                    )

                                 )
                              )
                           )

                        )
                     )
                     callcleanupblock =
                     (blockn, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337C0C0
                        (statementn, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337C1E0
                           (tempdeleten, resultdef =  = "untyped", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337C240
                              release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $0000000091B9D570
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (195,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093379C60
                        (temprefn, resultdef = TBitmap = "TBitmap", pos = (195,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337C2A0
                           temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D570 flags = [ti_may_be_in_reg])
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (195,44), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337C360
                        (loadn, resultdef = LongInt = "LongInt", pos = (195,44), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337C3C0
                           nil
                           symbol = _HEIGHT
                        )

                     )
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (196,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379D20
                  (calln, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009337C300
                     proc = SetColor(<TBrush>;TColor);
                     methodpointer =
                     (temprefn, resultdef = TBrush = "TBrush", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093373E40
                        temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D4F0 flags = [ti_may_be_in_reg])
                     )
                     callinitblock =
                     (blockn, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379CC0
                        (statementn, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337C120
                           (tempcreaten, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337C180
                              size = 8, temptypedef = TBrush = "TBrush", tempinfo = $0000000091B9D4F0
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379D80
                           (assignn, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093365B00
                              (temprefn, resultdef = TBrush = "TBrush", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009336FFA0
                                 temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D4F0 flags = [ti_may_be_in_reg])
                              )
                              (subscriptn, resultdef = TBrush = "TBrush", pos = (196,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337C060
                                 (calln, resultdef = TCanvas = "TCanvas", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093379FC0
                                    proc = GetCanvas(<TRasterImage>):Graphics.TCanvas;
                                    methodpointer =
                                    (temprefn, resultdef = TBitmap = "TBitmap", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337BE20
                                       temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D770 flags = [ti_may_be_in_reg])
                                    )
                                    callinitblock =
                                    (blockn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337BFA0
                                       (statementn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337C000
                                          (tempcreaten, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093379F60
                                             size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $0000000091B9D770
                                             [ti_may_be_in_reg]
                                             tempinit =
                                             nil
                                          )

                                       )
                                       (statementn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373B40
                                          (assignn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933739C0
                                             (temprefn, resultdef = TBitmap = "TBitmap", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009337BF40
                                                temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D770 flags = [ti_may_be_in_reg])
                                             )
                                             (calln, resultdef = TBitmap = "TBitmap", pos = (196,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337A080
                                                proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                                                methodpointer =
                                                (subscriptn, resultdef = TPicture = "TPicture", pos = (196,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337BE80
                                                   (loadn, resultdef = TImage = "TImage", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337BEE0
                                                      nil
                                                      symbol = _IMAGE
                                                   )
                                                   field = FPICTURE
                                                )
                                                left =
                                                (callparan, resultdef = <nil>, pos = (196,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337A020
                                                   (subscriptn, resultdef = TPicture = "TPicture", pos = (196,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093373AE0
                                                      (loadn, resultdef = TImage = "TImage", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093373000
                                                         nil
                                                         symbol = _IMAGE
                                                      )
                                                      field = FPICTURE
                                                   )

                                                )
                                             )
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337A1A0
                                       (statementn, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337BD60
                                          (tempdeleten, resultdef =  = "untyped", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337BDC0
                                             release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $0000000091B9D770
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (196,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337A140
                                       (temprefn, resultdef = TBitmap = "TBitmap", pos = (196,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337A0E0
                                          temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D770 flags = [ti_may_be_in_reg])
                                       )

                                    )
                                 )
                                 field = FLAZBRUSH
                              )
                           )

                        )
                     )
                     callcleanupblock =
                     (blockn, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093373EA0
                        (statementn, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337BD00
                           (tempdeleten, resultdef =  = "untyped", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337A2C0
                              release_to_normal: FALSE, temptypedef = TBrush = "TBrush", temptype = tt_persistent, tempinfo = $0000000091B9D4F0
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (196,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337BC40
                        (temprefn, resultdef = TBrush = "TBrush", pos = (196,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337BCA0
                           temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D4F0 flags = [ti_may_be_in_reg])
                        )

                     )
                     (callparan, resultdef = TColor = "LongInt", pos = (196,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 000000009337A260
                        (ordconstn, resultdef = TColor = "LongInt", pos = (196,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337A200
                           typedef = "LongInt"
                           value = 16777215
                        )

                     )
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (197,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FDC0
                  (calln, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093372EE0
                     proc = SetStyle(<TFPCustomBrush>;TFPBrushStyle);
                     methodpointer =
                     (temprefn, resultdef = TBrush = "TBrush", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337B8E0
                        temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D7F0 flags = [ti_may_be_in_reg])
                     )
                     vmt_entry =
                     (subscriptn, resultdef = <no type symbol> = "<address of procedure(TFPBrushStyle) of object;Register>", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337A680
                        (derefn, resultdef = TBrush. = "<record type>", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337B820
                           (typeconvn, resultdef = <no type symbol> = "^TBrush.<record type>", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, optinfo = 000000009337A620, convtype = tc_equal, convnodeflags = []
                              (subscriptn, resultdef = Pointer = "^untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337B520
                                 (temprefn, resultdef = TBrush = "TBrush", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337B580
                                    temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D7F0 flags = [ti_may_be_in_reg])
                                 )
                                 field = hidden_vptr$TOBJECT
                              )
                           )
                        )
                        field = f40
                     )
                     callinitblock =
                     (blockn, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A320
                        (statementn, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337BBE0
                           (tempcreaten, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337A380
                              size = 8, temptypedef = TBrush = "TBrush", tempinfo = $0000000091B9D7F0
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373D20
                           (assignn, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373960
                              (temprefn, resultdef = TBrush = "TBrush", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009337A3E0
                                 temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D7F0 flags = [ti_may_be_in_reg])
                              )
                              (subscriptn, resultdef = TBrush = "TBrush", pos = (197,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337BB80
                                 (calln, resultdef = TCanvas = "TCanvas", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337A440
                                    proc = GetCanvas(<TRasterImage>):Graphics.TCanvas;
                                    methodpointer =
                                    (temprefn, resultdef = TBitmap = "TBitmap", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337BA60
                                       temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D870 flags = [ti_may_be_in_reg])
                                    )
                                    callinitblock =
                                    (blockn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373DE0
                                       (statementn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373CC0
                                          (tempcreaten, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337BB20
                                             size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $0000000091B9D870
                                             [ti_may_be_in_reg]
                                             tempinit =
                                             nil
                                          )

                                       )
                                       (statementn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A500
                                          (assignn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A4A0
                                             (temprefn, resultdef = TBitmap = "TBitmap", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093372DC0
                                                temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D870 flags = [ti_may_be_in_reg])
                                             )
                                             (calln, resultdef = TBitmap = "TBitmap", pos = (197,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093373D80
                                                proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                                                methodpointer =
                                                (subscriptn, resultdef = TPicture = "TPicture", pos = (197,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337B6A0
                                                   (loadn, resultdef = TImage = "TImage", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337B700
                                                      nil
                                                      symbol = _IMAGE
                                                   )
                                                   field = FPICTURE
                                                )
                                                left =
                                                (callparan, resultdef = <nil>, pos = (197,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337BAC0
                                                   (subscriptn, resultdef = TPicture = "TPicture", pos = (197,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337A6E0
                                                      (loadn, resultdef = TImage = "TImage", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337BA00
                                                         nil
                                                         symbol = _IMAGE
                                                      )
                                                      field = FPICTURE
                                                   )

                                                )
                                             )
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337B940
                                       (statementn, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337B9A0
                                          (tempdeleten, resultdef =  = "untyped", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337B760
                                             release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $0000000091B9D870
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (197,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337B7C0
                                       (temprefn, resultdef = TBitmap = "TBitmap", pos = (197,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337B880
                                          temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D870 flags = [ti_may_be_in_reg])
                                       )

                                    )
                                 )
                                 field = FLAZBRUSH
                              )
                           )

                        )
                     )
                     callcleanupblock =
                     (blockn, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337B5E0
                        (statementn, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337B640
                           (tempdeleten, resultdef =  = "untyped", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337A5C0
                              release_to_normal: FALSE, temptypedef = TBrush = "TBrush", temptype = tt_persistent, tempinfo = $0000000091B9D7F0
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (197,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337A560
                        (temprefn, resultdef = TBrush = "TBrush", pos = (197,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093373060
                           temptypedef = TBrush = "TBrush", (tempinfo = $0000000091B9D7F0 flags = [ti_may_be_in_reg])
                        )

                     )
                     (callparan, resultdef = TFPBrushStyle = "<enumeration type>", pos = (197,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 000000009336E980
                        (ordconstn, resultdef = TFPBrushStyle = "<enumeration type>", pos = (197,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337A740
                           typedef = "<enumeration type>"
                           value = 0
                        )

                     )
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (198,65), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AE60
                  (calln, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B160
                     proc = FillRect(<TCanvas>;LongInt;LongInt;LongInt;LongInt);
                     methodpointer =
                     (temprefn, resultdef = TCanvas = "TCanvas", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093366460
                        temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                     )
                     callinitblock =
                     (blockn, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A7A0
                        (statementn, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B460
                           (tempcreaten, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337B4C0
                              size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091B9D8F0
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B3A0
                           (assignn, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B400
                              (temprefn, resultdef = TCanvas = "TCanvas", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009337B2E0
                                 temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                              )
                              (calln, resultdef = TCanvas = "TCanvas", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337B340
                                 proc = GetCanvas(<TRasterImage>):Graphics.TCanvas;
                                 methodpointer =
                                 (temprefn, resultdef = TBitmap = "TBitmap", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337AC80
                                    temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                 )
                                 callinitblock =
                                 (blockn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B1C0
                                    (statementn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B220
                                       (tempcreaten, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337B280
                                          size = 8, temptypedef = TBitmap = "TBitmap", tempinfo = $0000000091B9D970
                                          [ti_may_be_in_reg]
                                          tempinit =
                                          nil
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AF80
                                       (assignn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AFE0
                                          (temprefn, resultdef = TBitmap = "TBitmap", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009337B040
                                             temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                          )
                                          (calln, resultdef = TBitmap = "TBitmap", pos = (198,26), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337B0A0
                                             proc = GetBitmap(<TPicture>):Graphics.TBitmap;
                                             methodpointer =
                                             (subscriptn, resultdef = TPicture = "TPicture", pos = (198,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337B100
                                                (loadn, resultdef = TImage = "TImage", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337AEC0
                                                   nil
                                                   symbol = _IMAGE
                                                )
                                                field = FPICTURE
                                             )
                                             left =
                                             (callparan, resultdef = <nil>, pos = (198,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337AF20
                                                (subscriptn, resultdef = TPicture = "TPicture", pos = (198,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 000000009337AD40
                                                   (loadn, resultdef = TImage = "TImage", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337ADA0
                                                      nil
                                                      symbol = _IMAGE
                                                   )
                                                   field = FPICTURE
                                                )

                                             )
                                          )
                                       )

                                    )
                                 )
                                 callcleanupblock =
                                 (blockn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337ACE0
                                    (statementn, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337ABC0
                                       (tempdeleten, resultdef =  = "untyped", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337AC20
                                          release_to_normal: FALSE, temptypedef = TBitmap = "TBitmap", temptype = tt_persistent, tempinfo = $0000000091B9D970
                                       )

                                    )
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (198,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337AB00
                                    (temprefn, resultdef = TBitmap = "TBitmap", pos = (198,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009337AB60
                                       temptypedef = TBitmap = "TBitmap", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                    )

                                 )
                              )
                           )

                        )
                     )
                     callcleanupblock =
                     (blockn, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093387700
                        (statementn, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933875E0
                           (tempdeleten, resultdef =  = "untyped", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093387400
                              release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091B9D8F0
                           )

                        )
                     )
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (198,64), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093380140
                        (loadn, resultdef = LongInt = "LongInt", pos = (198,64), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933800E0
                           nil
                           symbol = _HEIGHT
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (198,65), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093380020
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (198,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093387340
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (198,55), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337FFC0
                        (loadn, resultdef = LongInt = "LongInt", pos = (198,55), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933874C0
                           nil
                           symbol = _WIDTH
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (198,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933873A0
                        (ordconstn, resultdef = LongInt = "LongInt", pos = (198,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933871C0
                           typedef = "LongInt"
                           value = 0
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (198,44), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 000000009337FA20
                        (ordconstn, resultdef = LongInt = "LongInt", pos = (198,44), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337F9C0
                           typedef = "LongInt"
                           value = 0
                        )

                     )
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (203,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337F900
      (asmn, resultdef =  = "untyped", pos = (203,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093387100
      )

   )
   (statementn, resultdef =  = "untyped", pos = (203,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337F8A0
      (finalizetempsn, resultdef =  = "untyped", pos = (203,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093387280
      )

   )
)

*******************************************************************************
after parsing
LoadImage;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (208,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (208,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = LoadFromFile(<TPicture>;const AnsiString);
         methodpointer =
         (subscriptn, resultdef = TPicture = "TPicture", pos = (208,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
            (subscriptn, resultdef = TImage = "TImage", pos = (208,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (208,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )
            field = FPICTURE
         )
         left =
         (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (208,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = AnsiString = "AnsiString(0)", pos = (208,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (208,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = FORMDOCUMENT
               )
               field = FILENAME
            )

         )
         (callparan, resultdef = <nil>, pos = (208,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (208,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (209,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (209,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (209,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (209,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (209,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef = LongInt = "LongInt", pos = (209,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               proc = GetWidth(<TPicture>):System.LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (209,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                  (subscriptn, resultdef = TImage = "TImage", pos = (209,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (209,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE1
                  )
                  field = FPICTURE
               )
               left =
               (callparan, resultdef = <nil>, pos = (209,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (209,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (209,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (209,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (210,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (210,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (210,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (210,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (210,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef = LongInt = "LongInt", pos = (210,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               proc = GetHeight(<TPicture>):System.LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (210,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                  (subscriptn, resultdef = TImage = "TImage", pos = (210,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (210,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE1
                  )
                  field = FPICTURE
               )
               left =
               (callparan, resultdef = <nil>, pos = (210,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (210,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (210,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (210,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (211,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (211,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (211,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (211,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE2
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (211,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef = LongInt = "LongInt", pos = (211,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               proc = GetWidth(<TPicture>):System.LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (211,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                  (subscriptn, resultdef = TImage = "TImage", pos = (211,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (211,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE1
                  )
                  field = FPICTURE
               )
               left =
               (callparan, resultdef = <nil>, pos = (211,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (211,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (211,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (211,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (212,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (212,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (212,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (212,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE2
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (212,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef = LongInt = "LongInt", pos = (212,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               proc = GetHeight(<TPicture>):System.LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (212,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                  (subscriptn, resultdef = TImage = "TImage", pos = (212,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (212,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE1
                  )
                  field = FPICTURE
               )
               left =
               (callparan, resultdef = <nil>, pos = (212,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (212,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (212,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (212,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
LoadImage;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (208,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (208,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = LoadFromFile(<TPicture>;const AnsiString);
         methodpointer =
         (subscriptn, resultdef = TPicture = "TPicture", pos = (208,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
            (subscriptn, resultdef = TImage = "TImage", pos = (208,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (208,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )
            field = FPICTURE
         )
         left =
         (callparan, resultdef = <nil>, pos = (208,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TPicture = "TPicture", pos = (208,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
               (subscriptn, resultdef = TImage = "TImage", pos = (208,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (208,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE1
               )
               field = FPICTURE
            )

         )
         (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (208,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = AnsiString = "AnsiString(0)", pos = (208,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (208,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  nil
                  symbol = FORMDOCUMENT
               )
               field = FILENAME
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (209,65), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (209,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (209,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (209,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (209,65), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (calln, resultdef = LongInt = "LongInt", pos = (209,65), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetWidth(<TPicture>):System.LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (209,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (209,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (209,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE1
                  )
                  field = FPICTURE
               )
               left =
               (callparan, resultdef = <nil>, pos = (209,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (subscriptn, resultdef = TPicture = "TPicture", pos = (209,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (209,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (209,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           nil
                           symbol = FORMDOCUMENT
                        )
                        field = IMAGE1
                     )
                     field = FPICTURE
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (209,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (209,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (209,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (210,67), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (210,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (210,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (210,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (210,67), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (calln, resultdef = LongInt = "LongInt", pos = (210,67), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetHeight(<TPicture>):System.LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (210,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (210,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (210,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE1
                  )
                  field = FPICTURE
               )
               left =
               (callparan, resultdef = <nil>, pos = (210,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (subscriptn, resultdef = TPicture = "TPicture", pos = (210,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (210,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (210,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           nil
                           symbol = FORMDOCUMENT
                        )
                        field = IMAGE1
                     )
                     field = FPICTURE
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (210,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (210,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (210,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (211,65), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (211,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (211,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (211,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE2
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (211,65), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (calln, resultdef = LongInt = "LongInt", pos = (211,65), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetWidth(<TPicture>):System.LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (211,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (211,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (211,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE1
                  )
                  field = FPICTURE
               )
               left =
               (callparan, resultdef = <nil>, pos = (211,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (subscriptn, resultdef = TPicture = "TPicture", pos = (211,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (211,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (211,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           nil
                           symbol = FORMDOCUMENT
                        )
                        field = IMAGE1
                     )
                     field = FPICTURE
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (211,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (211,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (211,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE2
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (212,67), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (212,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (212,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (212,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE2
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (212,67), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (calln, resultdef = LongInt = "LongInt", pos = (212,67), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
               proc = GetHeight(<TPicture>):System.LongInt;
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (212,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                  (subscriptn, resultdef = TImage = "TImage", pos = (212,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (212,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE1
                  )
                  field = FPICTURE
               )
               left =
               (callparan, resultdef = <nil>, pos = (212,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (subscriptn, resultdef = TPicture = "TPicture", pos = (212,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5
                     (subscriptn, resultdef = TImage = "TImage", pos = (212,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (212,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           nil
                           symbol = FORMDOCUMENT
                        )
                        field = IMAGE1
                     )
                     field = FPICTURE
                  )

               )
            )

         )
         (callparan, resultdef = <nil>, pos = (212,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (212,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (212,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE2
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
LoadImage;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AC20
   (statementn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B1C0
      (asmn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AF80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AFE0
      (asmn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B040
      )

   )
   (statementn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B0A0
      (asmn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AF20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AD40
      (asmn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337ADA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B100
      (blockn, resultdef =  = "untyped", pos = (206,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 000000009337F900
         (statementn, resultdef =  = "untyped", pos = (208,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093387100
            (calln, resultdef =  = "untyped", pos = (208,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D380
               proc = LoadFromFile(<TPicture>;const AnsiString);
               methodpointer =
               (subscriptn, resultdef = TPicture = "TPicture", pos = (208,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5, optinfo = 000000009337AEC0
                  (subscriptn, resultdef = TImage = "TImage", pos = (208,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337B220
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (208,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337AB60
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE1
                  )
                  field = FPICTURE
               )
               left =
               (callparan, resultdef = <nil>, pos = (208,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337B280
                  (subscriptn, resultdef = TPicture = "TPicture", pos = (208,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5, optinfo = 000000009337AC80
                     (subscriptn, resultdef = TImage = "TImage", pos = (208,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337B460
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (208,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337ACE0
                           nil
                           symbol = FORMDOCUMENT
                        )
                        field = IMAGE1
                     )
                     field = FPICTURE
                  )

               )
               (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (208,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337B4C0
                  (subscriptn, resultdef = AnsiString = "AnsiString(0)", pos = (208,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093366460
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (208,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337ABC0
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = FILENAME
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (209,65), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379540
            (calln, resultdef =  = "untyped", pos = (209,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009337CFC0
               proc = SetWidth(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (209,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009336FDC0
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (209,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337B400
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE1
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (209,65), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093372EE0
                  (calln, resultdef = LongInt = "LongInt", pos = (209,65), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009336E980
                     proc = GetWidth(<TPicture>):System.LongInt;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (209,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5, optinfo = 000000009337A740
                        (subscriptn, resultdef = TImage = "TImage", pos = (209,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337A560
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (209,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337B2E0
                              nil
                              symbol = FORMDOCUMENT
                           )
                           field = IMAGE1
                        )
                        field = FPICTURE
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (209,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093373060
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (209,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5, optinfo = 000000009337A680
                           (subscriptn, resultdef = TImage = "TImage", pos = (209,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337B820
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (209,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337B340
                                 nil
                                 symbol = FORMDOCUMENT
                              )
                              field = IMAGE1
                           )
                           field = FPICTURE
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (209,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337A620
                  (subscriptn, resultdef = TImage = "TImage", pos = (209,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337B520
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (209,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337AB00
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE1
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (210,67), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D020
            (calln, resultdef =  = "untyped", pos = (210,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009337AE60
               proc = SetHeight(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (210,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337B580
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (210,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933875E0
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE1
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (210,67), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 000000009337B5E0
                  (calln, resultdef = LongInt = "LongInt", pos = (210,67), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337B640
                     proc = GetHeight(<TPicture>):System.LongInt;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (210,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5, optinfo = 000000009337A5C0
                        (subscriptn, resultdef = TImage = "TImage", pos = (210,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337A320
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (210,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093387400
                              nil
                              symbol = FORMDOCUMENT
                           )
                           field = IMAGE1
                        )
                        field = FPICTURE
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (210,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093373D20
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (210,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5, optinfo = 0000000093373960
                           (subscriptn, resultdef = TImage = "TImage", pos = (210,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337A3E0
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (210,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337A7A0
                                 nil
                                 symbol = FORMDOCUMENT
                              )
                              field = IMAGE1
                           )
                           field = FPICTURE
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (210,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337BB80
                  (subscriptn, resultdef = TImage = "TImage", pos = (210,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337A440
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (210,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337B3A0
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE1
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (211,65), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B160
            (calln, resultdef =  = "untyped", pos = (211,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093380140
               proc = SetWidth(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (211,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337B7C0
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (211,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933874C0
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE2
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (211,65), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 000000009337B880
                  (calln, resultdef = LongInt = "LongInt", pos = (211,65), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337B940
                     proc = GetWidth(<TPicture>):System.LongInt;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (211,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5, optinfo = 000000009337B9A0
                        (subscriptn, resultdef = TImage = "TImage", pos = (211,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337B760
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (211,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093380020
                              nil
                              symbol = FORMDOCUMENT
                           )
                           field = IMAGE1
                        )
                        field = FPICTURE
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (211,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093373DE0
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (211,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5, optinfo = 000000009337A500
                           (subscriptn, resultdef = TImage = "TImage", pos = (211,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337A4A0
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (211,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093387340
                                 nil
                                 symbol = FORMDOCUMENT
                              )
                              field = IMAGE1
                           )
                           field = FPICTURE
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (211,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093372DC0
                  (subscriptn, resultdef = TImage = "TImage", pos = (211,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093373D80
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (211,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093387700
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE2
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (212,67), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933800E0
            (calln, resultdef =  = "untyped", pos = (212,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009337FA20
               proc = SetHeight(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (212,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337BAC0
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (212,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337F9C0
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE2
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (212,67), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 000000009337A6E0
                  (calln, resultdef = LongInt = "LongInt", pos = (212,67), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337BA00
                     proc = GetHeight(<TPicture>):System.LongInt;
                     methodpointer =
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (212,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5, optinfo = 000000009337B6A0
                        (subscriptn, resultdef = TImage = "TImage", pos = (212,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337B700
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (212,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933873A0
                              nil
                              symbol = FORMDOCUMENT
                           )
                           field = IMAGE1
                        )
                        field = FPICTURE
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (212,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093373CC0
                        (subscriptn, resultdef = TPicture = "TPicture", pos = (212,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 5, optinfo = 000000009337BB20
                           (subscriptn, resultdef = TImage = "TImage", pos = (212,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337BA60
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (212,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933871C0
                                 nil
                                 symbol = FORMDOCUMENT
                              )
                              field = IMAGE1
                           )
                           field = FPICTURE
                        )

                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (212,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337BBE0
                  (subscriptn, resultdef = TImage = "TImage", pos = (212,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 000000009337A380
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (212,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337FFC0
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = IMAGE2
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (214,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B8E0
      (asmn, resultdef =  = "untyped", pos = (214,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379D20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (214,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337C300
      (finalizetempsn, resultdef =  = "untyped", pos = (214,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A260
      )

   )
)

*******************************************************************************
after parsing
SetZoom(Single;TPoint;TFormDocument);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (219,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (228,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (blockn, resultdef =  = "untyped", pos = (220,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (statementn, resultdef = <nil>, pos = (222,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef =  = "untyped", pos = (222,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
               proc = SetWidth(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (222,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE1
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (222,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (222,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (222,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                        (muln, resultdef = Single = "Single", pos = (222,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Single = "Single", pos = (222,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (222,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                 (subscriptn, resultdef = TImage = "TImage", pos = (222,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = FORMDOCUMENT
                                    )
                                    field = IMAGE2
                                 )
                                 field = FWIDTH
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (222,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = _ZOOMFACTOR
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (222,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (222,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (224,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef =  = "untyped", pos = (224,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
               proc = SetHeight(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (224,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE1
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (224,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (224,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (224,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                        (muln, resultdef = Single = "Single", pos = (224,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Single = "Single", pos = (224,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (224,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                 (subscriptn, resultdef = TImage = "TImage", pos = (224,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = FORMDOCUMENT
                                    )
                                    field = IMAGE2
                                 )
                                 field = FHEIGHT
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (224,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = _ZOOMFACTOR
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (224,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (224,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (225,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef =  = "untyped", pos = (225,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = Refresh(<TControl>);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (225,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE1
               )
               left =
               (callparan, resultdef = <nil>, pos = (225,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (225,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (227,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef =  = "untyped", pos = (227,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = MyResize(TPoint;TFormDocument);
               left =
               (callparan, resultdef = TFormDocument = "TFormDocument", pos = (227,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = FORMDOCUMENT
                  )

               )
               (callparan, resultdef = TPoint = "<record type>", pos = (227,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TPoint = "<record type>", pos = (227,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = MOUSEPOINT
                  )

               )
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
SetZoom(Single;TPoint;TFormDocument);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (220,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (222,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (222,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (222,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (222,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (typeconvn, resultdef = LongInt = "LongInt", pos = (222,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 12, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (222,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 11, inlinenumber = in_round_real
                  (muln, resultdef = Single = "Single", pos = (222,53), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 10
                     (typeconvn, resultdef = Single = "Single", pos = (222,33), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 5, convtype = tc_int_2_real, convnodeflags = []
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (222,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (222,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = FORMDOCUMENT
                              )
                              field = IMAGE2
                           )
                           field = FWIDTH
                        )
                     )
                     (loadn, resultdef = Single = "Single", pos = (222,42), loc = LOC_INVALID, expectloc = LOC_CMMREG, flags = [], cmplx = 0
                        nil
                        symbol = _ZOOMFACTOR
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (222,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (222,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (224,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (224,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (224,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (224,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (typeconvn, resultdef = LongInt = "LongInt", pos = (224,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 12, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (224,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 11, inlinenumber = in_round_real
                  (muln, resultdef = Single = "Single", pos = (224,55), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 10
                     (typeconvn, resultdef = Single = "Single", pos = (224,34), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 5, convtype = tc_int_2_real, convnodeflags = []
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (224,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                           (subscriptn, resultdef = TImage = "TImage", pos = (224,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = FORMDOCUMENT
                              )
                              field = IMAGE2
                           )
                           field = FHEIGHT
                        )
                     )
                     (loadn, resultdef = Single = "Single", pos = (224,44), loc = LOC_INVALID, expectloc = LOC_CMMREG, flags = [], cmplx = 0
                        nil
                        symbol = _ZOOMFACTOR
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (224,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (224,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (225,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (225,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Refresh(<TControl>);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (225,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = <nil>, pos = (225,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (225,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (227,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (227,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = MyResize(TPoint;TFormDocument);
         left =
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (227,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = FORMDOCUMENT
            )

         )
         (callparan, resultdef = TPoint = "<record type>", pos = (227,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TPoint = "<record type>", pos = (227,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = MOUSEPOINT
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
SetZoom(Single;TPoint;TFormDocument);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (219,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 000000009337A4A0
   (statementn, resultdef =  = "untyped", pos = (219,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093387340
      (asmn, resultdef =  = "untyped", pos = (219,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B9A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (219,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B760
      (asmn, resultdef =  = "untyped", pos = (219,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093380020
      )

   )
   (statementn, resultdef =  = "untyped", pos = (219,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B7C0
      (asmn, resultdef =  = "untyped", pos = (219,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933874C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (219,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D020
      (asmn, resultdef =  = "untyped", pos = (219,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337AE60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (222,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337FFC0
      (calln, resultdef =  = "untyped", pos = (222,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009337A380
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (222,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337BB80
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933873A0
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (222,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 000000009337A440
            (typeconvn, resultdef = LongInt = "LongInt", pos = (222,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 12, optinfo = 000000009337B3A0, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (222,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 11, optinfo = 000000009337B5E0, inlinenumber = in_round_real
                  (muln, resultdef = Single = "Single", pos = (222,53), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 10, optinfo = 000000009337B640
                     (typeconvn, resultdef = Single = "Single", pos = (222,33), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 5, optinfo = 0000000093373D20, convtype = tc_int_2_real, convnodeflags = []
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (222,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093373960
                           (subscriptn, resultdef = TImage = "TImage", pos = (222,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337A3E0
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337BAC0
                                 nil
                                 symbol = FORMDOCUMENT
                              )
                              field = IMAGE2
                           )
                           field = FWIDTH
                        )
                     )
                     (loadn, resultdef = Single = "Single", pos = (222,42), loc = LOC_INVALID, expectloc = LOC_CMMREG, flags = [], cmplx = 0, optinfo = 000000009337F9C0
                        nil
                        symbol = _ZOOMFACTOR
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (222,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337A7A0
            (subscriptn, resultdef = TImage = "TImage", pos = (222,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337A5C0
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337B160
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (224,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337BBE0
      (calln, resultdef =  = "untyped", pos = (224,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009337FA20
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (224,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337A320
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337BA60
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (224,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093387400
            (typeconvn, resultdef = LongInt = "LongInt", pos = (224,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 12, optinfo = 000000009337B580, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (224,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 11, optinfo = 00000000933875E0, inlinenumber = in_round_real
                  (muln, resultdef = Single = "Single", pos = (224,55), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 10, optinfo = 0000000093379540
                     (typeconvn, resultdef = Single = "Single", pos = (224,34), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 5, optinfo = 000000009337CFC0, convtype = tc_int_2_real, convnodeflags = []
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (224,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 000000009337A620
                           (subscriptn, resultdef = TImage = "TImage", pos = (224,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337B520
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933871C0
                                 nil
                                 symbol = FORMDOCUMENT
                              )
                              field = IMAGE2
                           )
                           field = FHEIGHT
                        )
                     )
                     (loadn, resultdef = Single = "Single", pos = (224,44), loc = LOC_INVALID, expectloc = LOC_CMMREG, flags = [], cmplx = 0, optinfo = 000000009337B6A0
                        nil
                        symbol = _ZOOMFACTOR
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (224,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337AB00
            (subscriptn, resultdef = TImage = "TImage", pos = (224,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093372EE0
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337B700
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (225,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933800E0
      (calln, resultdef =  = "untyped", pos = (225,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379D20
         proc = Refresh(<TControl>);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (225,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009336E980
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093373CC0
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = <nil>, pos = (225,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093373060
            (subscriptn, resultdef = TImage = "TImage", pos = (225,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009337A680
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (220,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337BB20
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (227,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B8E0
      (calln, resultdef =  = "untyped", pos = (227,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A260
         proc = MyResize(TPoint;TFormDocument);
         left =
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (227,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337B820
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (227,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337F900
               nil
               symbol = FORMDOCUMENT
            )

         )
         (callparan, resultdef = TPoint = "<record type>", pos = (227,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337B340
            (loadn, resultdef = TPoint = "<record type>", pos = (227,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337B100
               nil
               symbol = MOUSEPOINT
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (229,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A740
      (asmn, resultdef =  = "untyped", pos = (229,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A560
      )

   )
   (statementn, resultdef =  = "untyped", pos = (229,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B2E0
      (finalizetempsn, resultdef =  = "untyped", pos = (229,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FDC0
      )

   )
)

*******************************************************************************
after parsing
ToolButtonZoomInClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (233,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (233,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Single = "Single", pos = (233,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = ZOOMFACTOR
         )
         (muln, resultdef = Double = "Double", pos = (233,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (typeconvn, resultdef = Double = "Double", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_real_2_real, convnodeflags = []
               (loadn, resultdef = Single = "Single", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = ZOOMFACTOR
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (233,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               value =  1.2000000000000000E+000
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (234,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (234,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = SetZoom(Single;TPoint;TFormDocument);
         left =
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (234,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (234,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )

         )
         (callparan, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = Point(LongInt;LongInt):windows.TPoint;
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (234,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (234,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (234,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (234,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )

               )
            )

         )
         (callparan, resultdef = Single = "Single", pos = (234,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = Single = "Single", pos = (234,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = ZOOMFACTOR
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonZoomInClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (233,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (233,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (233,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = ZOOMFACTOR
         )
         (muln, resultdef = Double = "Double", pos = (233,28), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2
            (typeconvn, resultdef = Double = "Double", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, convtype = tc_real_2_real, convnodeflags = []
               (loadn, resultdef = Single = "Single", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  nil
                  symbol = ZOOMFACTOR
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (233,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
               value =  1.2000000000000000E+000
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (234,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (234,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = SetZoom(Single;TPoint;TFormDocument);
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (blockn, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_no_lvalue], cmplx = 5
               (statementn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (tempcreaten, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                     size = 8, temptypedef = TPoint = "<record type>", tempinfo = $0000000091B9D970
                     [ti_may_be_in_reg]
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (blockn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 4
                     (statementn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                        (assignn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                 )
                              )
                              field = X
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (234,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                              typedef = "LongInt"
                              value = 0
                           )
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                        (assignn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                 )
                              )
                              field = Y
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (234,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                              typedef = "LongInt"
                              value = 0
                           )
                        )

                     )
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (tempdeleten, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $0000000091B9D970
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_is_funcret], cmplx = 1
                     temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (callparan, resultdef = Single = "Single", pos = (234,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (loadn, resultdef = Single = "Single", pos = (234,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = ZOOMFACTOR
            )

         )
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (234,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (234,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonZoomInClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B700
   (statementn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093387400
      (asmn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B580
      )

   )
   (statementn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933875E0
      (asmn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379540
      )

   )
   (statementn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337CFC0
      (asmn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A620
      )

   )
   (statementn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B520
      (asmn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933871C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B6A0
      (blockn, resultdef =  = "untyped", pos = (232,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 000000009336FDC0
         (statementn, resultdef =  = "untyped", pos = (233,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A740
            (assignn, resultdef =  = "untyped", pos = (233,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009337A560
               (loadn, resultdef = Single = "Single", pos = (233,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009337A680
                  nil
                  symbol = ZOOMFACTOR
               )
               (muln, resultdef = Double = "Double", pos = (233,28), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 000000009337A320
                  (typeconvn, resultdef = Double = "Double", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 000000009337BA60, convtype = tc_real_2_real, convnodeflags = []
                     (loadn, resultdef = Single = "Single", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337BB20
                        nil
                        symbol = ZOOMFACTOR
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (233,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 000000009337FFC0
                     value =  1.2000000000000000E+000
                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (234,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B340
            (calln, resultdef =  = "untyped", pos = (234,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B100
               proc = SetZoom(Single;TPoint;TFormDocument);
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337A380
                  (blockn, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_no_lvalue], cmplx = 5, optinfo = 000000009337A7A0
                     (statementn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5, optinfo = 000000009337A5C0
                        (tempcreaten, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 000000009337B160
                           size = 8, temptypedef = TPoint = "<record type>", tempinfo = $0000000091B9D970
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5, optinfo = 000000009337A440
                        (blockn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 4, optinfo = 000000009337B3A0
                           (statementn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4, optinfo = 000000009337B5E0
                              (assignn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009337B640
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093373D20
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, optinfo = 0000000093373960, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009337B820
                                          temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                    field = X
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (234,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337A3E0
                                    typedef = "LongInt"
                                    value = 0
                                 )
                              )

                           )
                           (statementn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009337BAC0
                              (assignn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009337F9C0
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1, optinfo = 000000009337BB80
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, optinfo = 00000000933873A0, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009337F900
                                          temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                    field = Y
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (234,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337D020
                                    typedef = "LongInt"
                                    value = 0
                                 )
                              )

                           )
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 000000009337AE60
                        (tempdeleten, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009337B7C0
                           release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $0000000091B9D970
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933874C0
                        (temprefn, resultdef = TPoint = "<record type>", pos = (234,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_is_funcret], cmplx = 1, optinfo = 00000000933800E0
                           temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                        )

                     )
                  )

               )
               (callparan, resultdef = Single = "Single", pos = (234,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337B760
                  (loadn, resultdef = Single = "Single", pos = (234,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093379D20
                     nil
                     symbol = ZOOMFACTOR
                  )

               )
               (callparan, resultdef = TFormDocument = "TFormDocument", pos = (234,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093380020
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (234,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093373060
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (235,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093387340
      (asmn, resultdef =  = "untyped", pos = (235,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B9A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (235,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337BA00
      (finalizetempsn, resultdef =  = "untyped", pos = (235,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093397660
      )

   )
)

*******************************************************************************
after parsing
ToolButtonZoomOutClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (239,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Single = "Single", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = ZOOMFACTOR
         )
         (muln, resultdef = Double = "Double", pos = (239,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (typeconvn, resultdef = Double = "Double", pos = (239,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_real_2_real, convnodeflags = []
               (loadn, resultdef = Single = "Single", pos = (239,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = ZOOMFACTOR
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (239,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               value =  8.3333333333333337E-001
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (240,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (240,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = SetZoom(Single;TPoint;TFormDocument);
         left =
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (240,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (240,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )

         )
         (callparan, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = Point(LongInt;LongInt):windows.TPoint;
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (240,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (240,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (240,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (240,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )

               )
            )

         )
         (callparan, resultdef = Single = "Single", pos = (240,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = Single = "Single", pos = (240,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = ZOOMFACTOR
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonZoomOutClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (239,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = ZOOMFACTOR
         )
         (muln, resultdef = Double = "Double", pos = (239,28), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2
            (typeconvn, resultdef = Double = "Double", pos = (239,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, convtype = tc_real_2_real, convnodeflags = []
               (loadn, resultdef = Single = "Single", pos = (239,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  nil
                  symbol = ZOOMFACTOR
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (239,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
               value =  8.3333333333333337E-001
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (240,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (240,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = SetZoom(Single;TPoint;TFormDocument);
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (blockn, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_no_lvalue], cmplx = 5
               (statementn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (tempcreaten, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                     size = 8, temptypedef = TPoint = "<record type>", tempinfo = $0000000091B9D8F0
                     [ti_may_be_in_reg]
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (blockn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 4
                     (statementn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                        (assignn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                                 )
                              )
                              field = X
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (240,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                              typedef = "LongInt"
                              value = 0
                           )
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                        (assignn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                                 )
                              )
                              field = Y
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (240,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                              typedef = "LongInt"
                              value = 0
                           )
                        )

                     )
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (tempdeleten, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $0000000091B9D8F0
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_is_funcret], cmplx = 1
                     temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (callparan, resultdef = Single = "Single", pos = (240,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (loadn, resultdef = Single = "Single", pos = (240,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = ZOOMFACTOR
            )

         )
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (240,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (240,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonZoomOutClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337F9C0
   (statementn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337BB80
      (asmn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933873A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337F900
      (asmn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D020
      )

   )
   (statementn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B5E0
      (asmn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B640
      )

   )
   (statementn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373D20
      (asmn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373960
      )

   )
   (statementn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B820
      (blockn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093397660
         (statementn, resultdef =  = "untyped", pos = (239,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093387340
            (assignn, resultdef =  = "untyped", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009337B9A0
               (loadn, resultdef = Single = "Single", pos = (239,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009337A7A0
                  nil
                  symbol = ZOOMFACTOR
               )
               (muln, resultdef = Double = "Double", pos = (239,28), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 000000009337A3E0
                  (typeconvn, resultdef = Double = "Double", pos = (239,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 000000009337A5C0, convtype = tc_real_2_real, convnodeflags = []
                     (loadn, resultdef = Single = "Single", pos = (239,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933874C0
                        nil
                        symbol = ZOOMFACTOR
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (239,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 000000009337B160
                     value =  8.3333333333333337E-001
                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (240,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B340
            (calln, resultdef =  = "untyped", pos = (240,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B100
               proc = SetZoom(Single;TPoint;TFormDocument);
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337A740
                  (blockn, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_no_lvalue], cmplx = 5, optinfo = 000000009337A560
                     (statementn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5, optinfo = 000000009337A680
                        (tempcreaten, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 000000009337A320
                           size = 8, temptypedef = TPoint = "<record type>", tempinfo = $0000000091B9D8F0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5, optinfo = 000000009337BA60
                        (blockn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 4, optinfo = 000000009337BB20
                           (statementn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4, optinfo = 000000009337FFC0
                              (assignn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009337B520
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1, optinfo = 00000000933871C0
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, optinfo = 000000009337CFC0, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 0000000093380020
                                          temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                    field = X
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (240,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337A620
                                    typedef = "LongInt"
                                    value = 0
                                 )
                              )

                           )
                           (statementn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933875E0
                              (assignn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093379540
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093387400
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, optinfo = 000000009337B580, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 0000000093373060
                                          temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                    field = Y
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (240,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337A260
                                    typedef = "LongInt"
                                    value = 0
                                 )
                              )

                           )
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093399820
                        (tempdeleten, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093399880
                           release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $0000000091B9D8F0
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933998E0
                        (temprefn, resultdef = TPoint = "<record type>", pos = (240,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_is_funcret], cmplx = 1, optinfo = 000000009337B760
                           temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                        )

                     )
                  )

               )
               (callparan, resultdef = Single = "Single", pos = (240,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093399940
                  (loadn, resultdef = Single = "Single", pos = (240,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093379D20
                     nil
                     symbol = ZOOMFACTOR
                  )

               )
               (callparan, resultdef = TFormDocument = "TFormDocument", pos = (240,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933999A0
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (240,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A380
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093399A00
      (asmn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093399A60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093399AC0
      (finalizetempsn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093399B20
      )

   )
)

*******************************************************************************
after parsing
ToolButtonZoomResetClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (245,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (245,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Single = "Single", pos = (245,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = ZOOMFACTOR
         )
         (realconstn, resultdef = Single = "Single", pos = (245,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            value =  1.0000000000000000E+000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (246,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (246,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = SetZoom(Single;TPoint;TFormDocument);
         left =
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (246,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (246,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )

         )
         (callparan, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = Point(LongInt;LongInt):windows.TPoint;
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (246,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (246,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (246,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (246,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )

               )
            )

         )
         (callparan, resultdef = Single = "Single", pos = (246,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = Single = "Single", pos = (246,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = ZOOMFACTOR
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonZoomResetClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (245,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (245,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (245,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = ZOOMFACTOR
         )
         (realconstn, resultdef = Single = "Single", pos = (245,17), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
            value =  1.0000000000000000E+000
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (246,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (246,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = SetZoom(Single;TPoint;TFormDocument);
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (blockn, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_no_lvalue], cmplx = 5
               (statementn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (tempcreaten, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                     size = 8, temptypedef = TPoint = "<record type>", tempinfo = $0000000091B9D970
                     [ti_may_be_in_reg]
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (blockn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 4
                     (statementn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                        (assignn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                 )
                              )
                              field = X
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (246,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                              typedef = "LongInt"
                              value = 0
                           )
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                        (assignn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                 )
                              )
                              field = Y
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (246,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                              typedef = "LongInt"
                              value = 0
                           )
                        )

                     )
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (tempdeleten, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $0000000091B9D970
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_is_funcret], cmplx = 1
                     temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (callparan, resultdef = Single = "Single", pos = (246,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (loadn, resultdef = Single = "Single", pos = (246,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = ZOOMFACTOR
            )

         )
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (246,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (246,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonZoomResetClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933875E0
   (statementn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379540
      (asmn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093387400
      )

   )
   (statementn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B580
      (asmn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373060
      )

   )
   (statementn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A260
      (asmn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337FFC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B520
      (asmn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933871C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337CFC0
      (blockn, resultdef =  = "untyped", pos = (244,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093399B20
         (statementn, resultdef =  = "untyped", pos = (245,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093399A00
            (assignn, resultdef =  = "untyped", pos = (245,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093399A60
               (loadn, resultdef = Single = "Single", pos = (245,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009337A560
                  nil
                  symbol = ZOOMFACTOR
               )
               (realconstn, resultdef = Single = "Single", pos = (245,17), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 0000000093380020
                  value =  1.0000000000000000E+000
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (246,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B340
            (calln, resultdef =  = "untyped", pos = (246,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B100
               proc = SetZoom(Single;TPoint;TFormDocument);
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009337A620
                  (blockn, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_no_lvalue], cmplx = 5, optinfo = 000000009337A680
                     (statementn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5, optinfo = 000000009337A320
                        (tempcreaten, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 0000000093387340
                           size = 8, temptypedef = TPoint = "<record type>", tempinfo = $0000000091B9D970
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5, optinfo = 000000009337B9A0
                        (blockn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 4, optinfo = 000000009337A7A0
                           (statementn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4, optinfo = 000000009337A3E0
                              (assignn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009337A5C0
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1, optinfo = 00000000933874C0
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, optinfo = 000000009337B160, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 00000000933999A0
                                          temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                    field = X
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (246,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093373D20
                                    typedef = "LongInt"
                                    value = 0
                                 )
                              )

                           )
                           (statementn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093373960
                              (assignn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009337B5E0
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1, optinfo = 000000009337B640
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, optinfo = 000000009337F900, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009337A380
                                          temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                    field = Y
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (246,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337D020
                                    typedef = "LongInt"
                                    value = 0
                                 )
                              )

                           )
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 000000009337BB80
                        (tempdeleten, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933873A0
                           release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $0000000091B9D970
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009336FDC0
                        (temprefn, resultdef = TPoint = "<record type>", pos = (246,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_is_funcret], cmplx = 1, optinfo = 0000000093399940
                           temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                        )

                     )
                  )

               )
               (callparan, resultdef = Single = "Single", pos = (246,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339BCE0
                  (loadn, resultdef = Single = "Single", pos = (246,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093379D20
                     nil
                     symbol = ZOOMFACTOR
                  )

               )
               (callparan, resultdef = TFormDocument = "TFormDocument", pos = (246,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009339BD40
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (246,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A740
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (247,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BDA0
      (asmn, resultdef =  = "untyped", pos = (247,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BE00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (247,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BE60
      (finalizetempsn, resultdef =  = "untyped", pos = (247,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BEC0
      )

   )
)

*******************************************************************************
after parsing
MyResize(TPoint;TFormDocument);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (283,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (blockn, resultdef =  = "untyped", pos = (257,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (statementn, resultdef = <nil>, pos = (260,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (assignn, resultdef =  = "untyped", pos = (260,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = Single = "Single", pos = (260,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                  nil
                  symbol = SCALEFACTOR
               )
               (muln, resultdef = Double = "Double", pos = (260,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = Double = "Double", pos = (260,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (260,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        (loadn, resultdef = TScreen = "TScreen", pos = (260,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           nil
                           symbol = SCREEN
                        )
                        field = FPIXELSPERINCH
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (260,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     value =  1.0416666666666666E-002
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (261,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (assignn, resultdef =  = "untyped", pos = (261,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = LongInt = "LongInt", pos = (261,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                  nil
                  symbol = PX
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (261,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (261,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                     (slashn, resultdef = Single = "Single", pos = (261,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typeconvn, resultdef = Single = "Single", pos = (261,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (261,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (261,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (typeconvn, resultdef = Single = "Single", pos = (261,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (261,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (loadn, resultdef = TPoint = "<record type>", pos = (261,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          nil
                                          symbol = MOUSEPOINT
                                       )
                                       field = X
                                    )
                                 )
                                 (loadn, resultdef = Single = "Single", pos = (261,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    nil
                                    symbol = ZOOMFACTOR
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = Single = "Single", pos = (261,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           nil
                           symbol = SCALEFACTOR
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (262,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (assignn, resultdef =  = "untyped", pos = (262,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = LongInt = "LongInt", pos = (262,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                  nil
                  symbol = PY
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (262,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (262,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                     (slashn, resultdef = Single = "Single", pos = (262,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typeconvn, resultdef = Single = "Single", pos = (262,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (262,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (262,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (typeconvn, resultdef = Single = "Single", pos = (262,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (262,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (loadn, resultdef = TPoint = "<record type>", pos = (262,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          nil
                                          symbol = MOUSEPOINT
                                       )
                                       field = Y
                                    )
                                 )
                                 (loadn, resultdef = Single = "Single", pos = (262,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    nil
                                    symbol = ZOOMFACTOR
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = Single = "Single", pos = (262,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           nil
                           symbol = SCALEFACTOR
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (264,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (assignn, resultdef =  = "untyped", pos = (264,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = LongInt = "LongInt", pos = (264,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                  nil
                  symbol = BORDER
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (264,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (264,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                     (muln, resultdef = Double = "Double", pos = (264,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typeconvn, resultdef = Double = "Double", pos = (264,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (264,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              proc = max(LongInt;LongInt):System.LongInt;
                              left =
                              (callparan, resultdef = LongInt = "LongInt", pos = (264,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (264,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                    (subscriptn, resultdef = TImage = "TImage", pos = (264,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          nil
                                          symbol = FORMDOCUMENT
                                       )
                                       field = IMAGE1
                                    )
                                    field = FHEIGHT
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (264,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (264,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                    (subscriptn, resultdef = TImage = "TImage", pos = (264,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          nil
                                          symbol = FORMDOCUMENT
                                       )
                                       field = IMAGE1
                                    )
                                    field = FWIDTH
                                 )

                              )
                           )
                        )
                        (realconstn, resultdef = Double = "Double", pos = (264,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           value =  2.0000000000000000E-002
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (265,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef =  = "untyped", pos = (265,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
               proc = SetLeft(<TControlBorderSpacing>;const LongInt);
               methodpointer =
               (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (265,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (265,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = PANEL1
                  )
                  field = FBORDERSPACING
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (265,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (265,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (265,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                        (muln, resultdef = Double = "Double", pos = (265,77), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Double = "Double", pos = (265,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (265,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (265,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (265,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (265,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORMDOCUMENT
                                          )
                                          field = SCROLLBOX1
                                       )
                                       field = FWIDTH
                                    )
                                 )
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (265,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (265,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       (subscriptn, resultdef = TImage = "TImage", pos = (265,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORMDOCUMENT
                                          )
                                          field = IMAGE1
                                       )
                                       field = FWIDTH
                                    )
                                 )
                              )
                           )
                           (realconstn, resultdef = Double = "Double", pos = (265,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              value =  5.0000000000000000E-001
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (265,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (265,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (266,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef =  = "untyped", pos = (266,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
               proc = SetTop(<TControlBorderSpacing>;const LongInt);
               methodpointer =
               (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (266,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                  (subscriptn, resultdef = TPanel = "TPanel", pos = (266,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = FORMDOCUMENT
                     )
                     field = PANEL1
                  )
                  field = FBORDERSPACING
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (266,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (266,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (266,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                        (muln, resultdef = Double = "Double", pos = (266,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Double = "Double", pos = (266,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (266,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (266,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (266,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (266,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORMDOCUMENT
                                          )
                                          field = SCROLLBOX1
                                       )
                                       field = FHEIGHT
                                    )
                                 )
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (266,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (266,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       (subscriptn, resultdef = TImage = "TImage", pos = (266,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORMDOCUMENT
                                          )
                                          field = IMAGE1
                                       )
                                       field = FHEIGHT
                                    )
                                 )
                              )
                           )
                           (realconstn, resultdef = Double = "Double", pos = (266,77), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              value =  5.0000000000000000E-001
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (266,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (266,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (267,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef =  = "untyped", pos = (267,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
               proc = SetLeft(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (267,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE1
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (267,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (267,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = BORDER
                  )

               )
               (callparan, resultdef = <nil>, pos = (267,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (267,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (268,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef =  = "untyped", pos = (268,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
               proc = SetTop(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TImage = "TImage", pos = (268,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = IMAGE1
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (268,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (268,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = BORDER
                  )

               )
               (callparan, resultdef = <nil>, pos = (268,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (268,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (270,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef =  = "untyped", pos = (270,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
               proc = SetWidth(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TPanel = "TPanel", pos = (270,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = PANEL1
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (270,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (270,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                     (addn, resultdef = Int64 = "Int64", pos = (270,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typeconvn, resultdef = Int64 = "Int64", pos = (270,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (270,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                              (subscriptn, resultdef = TImage = "TImage", pos = (270,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    nil
                                    symbol = FORMDOCUMENT
                                 )
                                 field = IMAGE1
                              )
                              field = FWIDTH
                           )
                        )
                        (muln, resultdef = Int64 = "Int64", pos = (270,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Int64 = "Int64", pos = (270,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (270,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = BORDER
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (270,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              typedef = "Int64"
                              value = 2
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (270,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (270,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (271,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef =  = "untyped", pos = (271,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
               proc = SetHeight(<TControl>;LongInt);
               methodpointer =
               (subscriptn, resultdef = TPanel = "TPanel", pos = (271,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = PANEL1
               )
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (271,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (271,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                     (addn, resultdef = Int64 = "Int64", pos = (271,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typeconvn, resultdef = Int64 = "Int64", pos = (271,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (271,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                              (subscriptn, resultdef = TImage = "TImage", pos = (271,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    nil
                                    symbol = FORMDOCUMENT
                                 )
                                 field = IMAGE1
                              )
                              field = FHEIGHT
                           )
                        )
                        (muln, resultdef = Int64 = "Int64", pos = (271,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Int64 = "Int64", pos = (271,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (271,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = BORDER
                              )
                           )
                           (ordconstn, resultdef = Int64 = "Int64", pos = (271,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              typedef = "Int64"
                              value = 2
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (271,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (271,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (278,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ifn, resultdef =  = "untyped", pos = (272,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (orn, resultdef = Boolean = "Boolean", pos = (272,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (unequaln, resultdef = Boolean = "Boolean", pos = (272,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (272,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (loadn, resultdef = TPoint = "<record type>", pos = (272,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           nil
                           symbol = MOUSEPOINT
                        )
                        field = X
                     )
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (272,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "LongInt"
                        value = 0
                     )
                  )
                  (unequaln, resultdef = Boolean = "Boolean", pos = (272,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (272,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (loadn, resultdef = TPoint = "<record type>", pos = (272,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           nil
                           symbol = MOUSEPOINT
                        )
                        field = Y
                     )
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (272,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "LongInt"
                        value = 0
                     )
                  )
               )
               (blockn, resultdef =  = "untyped", pos = (273,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (statementn, resultdef = <nil>, pos = (274,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (assignn, resultdef =  = "untyped", pos = (274,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (loadn, resultdef = LongInt = "LongInt", pos = (274,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                           nil
                           symbol = SCROLLPOSX
                        )
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (274,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TPoint = "<record type>", pos = (274,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = MOUSEPOINT
                           )
                           field = X
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (275,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (assignn, resultdef =  = "untyped", pos = (275,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (loadn, resultdef = LongInt = "LongInt", pos = (275,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                           nil
                           symbol = SCROLLPOSY
                        )
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (275,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TPoint = "<record type>", pos = (275,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = MOUSEPOINT
                           )
                           field = Y
                        )
                     )

                  )
               )
               nil
               nil
            )

         )
         (statementn, resultdef = <nil>, pos = (281,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef =  = "untyped", pos = (281,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = UpdateScrollbars(<TScrollingWinControl>);
               methodpointer =
               (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (281,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = SCROLLBOX1
               )
               left =
               (callparan, resultdef = <nil>, pos = (281,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (nothingn, resultdef =  = "untyped", pos = (281,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )

               )
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
MyResize(TPoint;TFormDocument);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (257,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (260,45), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (260,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (260,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = SCALEFACTOR
         )
         (muln, resultdef = Double = "Double", pos = (260,41), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2
            (typeconvn, resultdef = Double = "Double", pos = (260,26), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 4, convtype = tc_int_2_real, convnodeflags = []
               (subscriptn, resultdef = LongInt = "LongInt", pos = (260,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                  (loadn, resultdef = TScreen = "TScreen", pos = (260,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = SCREEN
                  )
                  field = FPIXELSPERINCH
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (260,43), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
               value =  1.0416666666666666E-002
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (261,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (261,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 30
         (loadn, resultdef = LongInt = "LongInt", pos = (261,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
            nil
            symbol = PX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (261,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (261,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (261,63), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27
                  (typeconvn, resultdef = Single = "Single", pos = (261,50), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (261,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (261,48), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13
                           (typeconvn, resultdef = Single = "Single", pos = (261,33), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, convtype = tc_int_2_real, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (261,33), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [], cmplx = 0
                                 (loadn, resultdef = TPoint = "<record type>", pos = (261,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                    nil
                                    symbol = MOUSEPOINT
                                 )
                                 field = X
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (261,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (261,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (262,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (262,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31
         (loadn, resultdef = LongInt = "LongInt", pos = (262,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
            nil
            symbol = PY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (262,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 30, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (262,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (262,63), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 28
                  (typeconvn, resultdef = Single = "Single", pos = (262,50), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 16, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (262,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 15, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (262,48), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 14
                           (typeconvn, resultdef = Single = "Single", pos = (262,33), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (262,33), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [], cmplx = 1
                                 (loadn, resultdef = TPoint = "<record type>", pos = (262,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                    nil
                                    symbol = MOUSEPOINT
                                 )
                                 field = Y
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (262,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (262,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (264,59), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (264,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (loadn, resultdef = LongInt = "LongInt", pos = (264,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
            nil
            symbol = BORDER
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (264,59), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (264,59), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, inlinenumber = in_round_real
               (muln, resultdef = Double = "Double", pos = (264,58), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 255
                  (typeconvn, resultdef = Double = "Double", pos = (264,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 255, convtype = tc_int_2_real, convnodeflags = []
                     (calln, resultdef = LongInt = "LongInt", pos = (264,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                        proc = max(LongInt;LongInt):System.LongInt;
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (264,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (264,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                              (subscriptn, resultdef = TImage = "TImage", pos = (264,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                    nil
                                    symbol = FORMDOCUMENT
                                 )
                                 field = IMAGE1
                              )
                              field = FHEIGHT
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (264,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (264,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                              (subscriptn, resultdef = TImage = "TImage", pos = (264,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                    nil
                                    symbol = FORMDOCUMENT
                                 )
                                 field = IMAGE1
                              )
                              field = FWIDTH
                           )

                        )
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (264,56), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
                     value =  2.0000000000000000E-002
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (265,78), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (265,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetLeft(<TControlBorderSpacing>;const LongInt);
         methodpointer =
         (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (265,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
            (subscriptn, resultdef = TPanel = "TPanel", pos = (265,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = PANEL1
            )
            field = FBORDERSPACING
         )
         left =
         (callparan, resultdef = <nil>, pos = (265,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (265,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
               (subscriptn, resultdef = TPanel = "TPanel", pos = (265,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = PANEL1
               )
               field = FBORDERSPACING
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (265,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (typeconvn, resultdef = LongInt = "LongInt", pos = (265,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (265,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, inlinenumber = in_round_real
                  (muln, resultdef = Double = "Double", pos = (265,77), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2
                     (typeconvn, resultdef = Double = "Double", pos = (265,40), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 12, convtype = tc_int_2_real, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (265,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 11
                           (typeconvn, resultdef = Int64 = "Int64", pos = (265,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (265,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                 (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (265,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                       nil
                                       symbol = FORMDOCUMENT
                                    )
                                    field = SCROLLBOX1
                                 )
                                 field = FWIDTH
                              )
                           )
                           (typeconvn, resultdef = Int64 = "Int64", pos = (265,66), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (265,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                 (subscriptn, resultdef = TImage = "TImage", pos = (265,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                       nil
                                       symbol = FORMDOCUMENT
                                    )
                                    field = IMAGE1
                                 )
                                 field = FWIDTH
                              )
                           )
                        )
                     )
                     (realconstn, resultdef = Double = "Double", pos = (265,76), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
                        value =  5.0000000000000000E-001
                     )
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (266,79), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (266,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetTop(<TControlBorderSpacing>;const LongInt);
         methodpointer =
         (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (266,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
            (subscriptn, resultdef = TPanel = "TPanel", pos = (266,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = PANEL1
            )
            field = FBORDERSPACING
         )
         left =
         (callparan, resultdef = <nil>, pos = (266,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (266,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
               (subscriptn, resultdef = TPanel = "TPanel", pos = (266,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = PANEL1
               )
               field = FBORDERSPACING
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (266,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (typeconvn, resultdef = LongInt = "LongInt", pos = (266,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (266,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, inlinenumber = in_round_real
                  (muln, resultdef = Double = "Double", pos = (266,78), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2
                     (typeconvn, resultdef = Double = "Double", pos = (266,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 12, convtype = tc_int_2_real, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (266,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 11
                           (typeconvn, resultdef = Int64 = "Int64", pos = (266,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (266,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                 (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (266,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                       nil
                                       symbol = FORMDOCUMENT
                                    )
                                    field = SCROLLBOX1
                                 )
                                 field = FHEIGHT
                              )
                           )
                           (typeconvn, resultdef = Int64 = "Int64", pos = (266,66), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (266,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                 (subscriptn, resultdef = TImage = "TImage", pos = (266,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                       nil
                                       symbol = FORMDOCUMENT
                                    )
                                    field = IMAGE1
                                 )
                                 field = FHEIGHT
                              )
                           )
                        )
                     )
                     (realconstn, resultdef = Double = "Double", pos = (266,77), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
                        value =  5.0000000000000000E-001
                     )
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (267,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (267,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetLeft(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (267,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = <nil>, pos = (267,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (267,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (267,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = LongInt = "LongInt", pos = (267,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = BORDER
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (268,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (268,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetTop(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (268,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = <nil>, pos = (268,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TImage = "TImage", pos = (268,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (268,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = LongInt = "LongInt", pos = (268,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = BORDER
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (270,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (270,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (270,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = FORMDOCUMENT
            )
            field = PANEL1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (270,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (typeconvn, resultdef = LongInt = "LongInt", pos = (270,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 13, convtype = tc_int_2_int, convnodeflags = []
               (addn, resultdef = Int64 = "Int64", pos = (270,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 12
                  (typeconvn, resultdef = Int64 = "Int64", pos = (270,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (270,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (270,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = FORMDOCUMENT
                           )
                           field = IMAGE1
                        )
                        field = FWIDTH
                     )
                  )
                  (muln, resultdef = Int64 = "Int64", pos = (270,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 6
                     (typeconvn, resultdef = Int64 = "Int64", pos = (270,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                        (loadn, resultdef = LongInt = "LongInt", pos = (270,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = BORDER
                        )
                     )
                     (ordconstn, resultdef = Int64 = "Int64", pos = (270,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        typedef = "Int64"
                        value = 2
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (270,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TPanel = "TPanel", pos = (270,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = PANEL1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (271,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (271,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (271,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = FORMDOCUMENT
            )
            field = PANEL1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (271,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (typeconvn, resultdef = LongInt = "LongInt", pos = (271,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 13, convtype = tc_int_2_int, convnodeflags = []
               (addn, resultdef = Int64 = "Int64", pos = (271,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 12
                  (typeconvn, resultdef = Int64 = "Int64", pos = (271,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, convtype = tc_int_2_int, convnodeflags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (271,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                        (subscriptn, resultdef = TImage = "TImage", pos = (271,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = FORMDOCUMENT
                           )
                           field = IMAGE1
                        )
                        field = FHEIGHT
                     )
                  )
                  (muln, resultdef = Int64 = "Int64", pos = (271,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 6
                     (typeconvn, resultdef = Int64 = "Int64", pos = (271,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                        (loadn, resultdef = LongInt = "LongInt", pos = (271,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = BORDER
                        )
                     )
                     (ordconstn, resultdef = Int64 = "Int64", pos = (271,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        typedef = "Int64"
                        value = 2
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (271,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TPanel = "TPanel", pos = (271,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = PANEL1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (278,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef =  = "untyped", pos = (272,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (orn, resultdef = Boolean = "Boolean", pos = (272,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 4
            (unequaln, resultdef = Boolean = "Boolean", pos = (272,8), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 1
               (subscriptn, resultdef = LongInt = "LongInt", pos = (272,19), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [], cmplx = 0
                  (loadn, resultdef = TPoint = "<record type>", pos = (272,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = MOUSEPOINT
                  )
                  field = X
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (272,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                  typedef = "LongInt"
                  value = 0
               )
            )
            (unequaln, resultdef = Boolean = "Boolean", pos = (272,31), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 2
               (subscriptn, resultdef = LongInt = "LongInt", pos = (272,42), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [], cmplx = 1
                  (loadn, resultdef = TPoint = "<record type>", pos = (272,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = MOUSEPOINT
                  )
                  field = Y
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (272,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                  typedef = "LongInt"
                  value = 0
               )
            )
         )
         (blockn, resultdef =  = "untyped", pos = (273,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3
            (statementn, resultdef =  = "untyped", pos = (274,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3
               (assignn, resultdef =  = "untyped", pos = (274,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (loadn, resultdef = LongInt = "LongInt", pos = (274,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = SCROLLPOSX
                  )
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (274,31), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [], cmplx = 0
                     (loadn, resultdef = TPoint = "<record type>", pos = (274,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = MOUSEPOINT
                     )
                     field = X
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (275,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
               (assignn, resultdef =  = "untyped", pos = (275,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                  (loadn, resultdef = LongInt = "LongInt", pos = (275,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = SCROLLPOSY
                  )
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (275,31), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [], cmplx = 1
                     (loadn, resultdef = TPoint = "<record type>", pos = (275,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = MOUSEPOINT
                     )
                     field = Y
                  )
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (281,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (281,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = UpdateScrollbars(<TScrollingWinControl>);
         methodpointer =
         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (281,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = FORMDOCUMENT
            )
            field = SCROLLBOX1
         )
         left =
         (callparan, resultdef = <nil>, pos = (281,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (281,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = SCROLLBOX1
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
MyResize(TPoint;TFormDocument);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 000000009339EE60
   (statementn, resultdef =  = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339EEC0
      (asmn, resultdef =  = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339EF20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339EF80
      (asmn, resultdef =  = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339EFE0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339F040
      (asmn, resultdef =  = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339F0A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339F100
      (asmn, resultdef =  = "untyped", pos = (256,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339F160
      )

   )
   (statementn, resultdef =  = "untyped", pos = (260,45), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009336FDC0
      (assignn, resultdef =  = "untyped", pos = (260,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093379D20
         (loadn, resultdef = Single = "Single", pos = (260,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009339E9E0
            nil
            symbol = SCALEFACTOR
         )
         (muln, resultdef = Double = "Double", pos = (260,41), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 000000009339F1C0
            (typeconvn, resultdef = Double = "Double", pos = (260,26), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 4, optinfo = 000000009339F220, convtype = tc_int_2_real, convnodeflags = []
               (subscriptn, resultdef = LongInt = "LongInt", pos = (260,26), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3, optinfo = 000000009339F280
                  (loadn, resultdef = TScreen = "TScreen", pos = (260,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339EA40
                     nil
                     symbol = SCREEN
                  )
                  field = FPIXELSPERINCH
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (260,43), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 000000009339F2E0
               value =  1.0416666666666666E-002
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (261,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BCE0
      (assignn, resultdef =  = "untyped", pos = (261,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 30, optinfo = 000000009337A740
         (loadn, resultdef = LongInt = "LongInt", pos = (261,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 000000009339E860
            nil
            symbol = PX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (261,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, optinfo = 000000009339F340, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (261,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, optinfo = 000000009339F3A0, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (261,63), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27, optinfo = 000000009339F400
                  (typeconvn, resultdef = Single = "Single", pos = (261,50), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, optinfo = 000000009339F460, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (261,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, optinfo = 000000009339F4C0, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (261,48), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13, optinfo = 000000009339F520
                           (typeconvn, resultdef = Single = "Single", pos = (261,33), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, optinfo = 000000009339F580, convtype = tc_int_2_real, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (261,33), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [], cmplx = 0, optinfo = 000000009339F5E0
                                 (loadn, resultdef = TPoint = "<record type>", pos = (261,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E8C0
                                    nil
                                    symbol = MOUSEPOINT
                                 )
                                 field = X
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (261,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E920
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (261,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E980
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (262,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BD40
      (assignn, resultdef =  = "untyped", pos = (262,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31, optinfo = 000000009337B100
         (loadn, resultdef = LongInt = "LongInt", pos = (262,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 000000009339E6E0
            nil
            symbol = PY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (262,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 30, optinfo = 000000009339F640, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (262,64), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, optinfo = 000000009339F6A0, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (262,63), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 28, optinfo = 000000009339F700
                  (typeconvn, resultdef = Single = "Single", pos = (262,50), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 16, optinfo = 000000009339F760, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (262,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 15, optinfo = 000000009339F7C0, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (262,48), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 14, optinfo = 000000009339F820
                           (typeconvn, resultdef = Single = "Single", pos = (262,33), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 000000009339F880, convtype = tc_int_2_real, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (262,33), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [], cmplx = 1, optinfo = 000000009339F8E0
                                 (loadn, resultdef = TPoint = "<record type>", pos = (262,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E740
                                    nil
                                    symbol = MOUSEPOINT
                                 )
                                 field = Y
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (262,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E7A0
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (262,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E800
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (264,59), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B340
      (assignn, resultdef =  = "untyped", pos = (264,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BE00
         (loadn, resultdef = LongInt = "LongInt", pos = (264,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 000000009339E5C0
            nil
            symbol = BORDER
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (264,59), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 000000009339F940, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (264,59), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 000000009339F9A0, inlinenumber = in_round_real
               (muln, resultdef = Double = "Double", pos = (264,58), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 255, optinfo = 000000009339FA00
                  (typeconvn, resultdef = Double = "Double", pos = (264,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 255, optinfo = 000000009339FA60, convtype = tc_int_2_real, convnodeflags = []
                     (calln, resultdef = LongInt = "LongInt", pos = (264,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 000000009339FAC0
                        proc = max(LongInt;LongInt):System.LongInt;
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (264,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339FB20
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (264,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 000000009339FB80
                              (subscriptn, resultdef = TImage = "TImage", pos = (264,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009339FBE0
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E620
                                    nil
                                    symbol = FORMDOCUMENT
                                 )
                                 field = IMAGE1
                              )
                              field = FHEIGHT
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (264,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339FC40
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (264,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 000000009339FCA0
                              (subscriptn, resultdef = TImage = "TImage", pos = (264,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009339FD00
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E680
                                    nil
                                    symbol = FORMDOCUMENT
                                 )
                                 field = IMAGE1
                              )
                              field = FWIDTH
                           )

                        )
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (264,56), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 000000009339FD60
                     value =  2.0000000000000000E-002
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (265,78), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BDA0
      (calln, resultdef =  = "untyped", pos = (265,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009339BEC0
         proc = SetLeft(<TControlBorderSpacing>;const LongInt);
         methodpointer =
         (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (265,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 000000009339FDC0
            (subscriptn, resultdef = TPanel = "TPanel", pos = (265,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009339FE20
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E440
                  nil
                  symbol = FORMDOCUMENT
               )
               field = PANEL1
            )
            field = FBORDERSPACING
         )
         left =
         (callparan, resultdef = <nil>, pos = (265,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339FE80
            (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (265,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 000000009339FEE0
               (subscriptn, resultdef = TPanel = "TPanel", pos = (265,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009339FF40
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E4A0
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = PANEL1
               )
               field = FBORDERSPACING
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (265,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 000000009339FFA0
            (typeconvn, resultdef = LongInt = "LongInt", pos = (265,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, optinfo = 00000000933A0000, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (265,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, optinfo = 00000000933A0060, inlinenumber = in_round_real
                  (muln, resultdef = Double = "Double", pos = (265,77), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 00000000933A00C0
                     (typeconvn, resultdef = Double = "Double", pos = (265,40), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 12, optinfo = 00000000933A0120, convtype = tc_int_2_real, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (265,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 11, optinfo = 00000000933A0180
                           (typeconvn, resultdef = Int64 = "Int64", pos = (265,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, optinfo = 00000000933A01E0, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (265,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933E02A0
                                 (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (265,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E0300
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E500
                                       nil
                                       symbol = FORMDOCUMENT
                                    )
                                    field = SCROLLBOX1
                                 )
                                 field = FWIDTH
                              )
                           )
                           (typeconvn, resultdef = Int64 = "Int64", pos = (265,66), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, optinfo = 00000000933E0360, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (265,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933E03C0
                                 (subscriptn, resultdef = TImage = "TImage", pos = (265,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E0420
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E560
                                       nil
                                       symbol = FORMDOCUMENT
                                    )
                                    field = IMAGE1
                                 )
                                 field = FWIDTH
                              )
                           )
                        )
                     )
                     (realconstn, resultdef = Double = "Double", pos = (265,76), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 00000000933E0480
                        value =  5.0000000000000000E-001
                     )
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (266,79), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093399940
      (calln, resultdef =  = "untyped", pos = (266,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009337BB80
         proc = SetTop(<TControlBorderSpacing>;const LongInt);
         methodpointer =
         (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (266,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933E04E0
            (subscriptn, resultdef = TPanel = "TPanel", pos = (266,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E0540
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E2C0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = PANEL1
            )
            field = FBORDERSPACING
         )
         left =
         (callparan, resultdef = <nil>, pos = (266,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E05A0
            (subscriptn, resultdef = TControlBorderSpacing = "TControlBorderSpacing", pos = (266,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933E0600
               (subscriptn, resultdef = TPanel = "TPanel", pos = (266,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E0660
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E320
                     nil
                     symbol = FORMDOCUMENT
                  )
                  field = PANEL1
               )
               field = FBORDERSPACING
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (266,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 00000000933E06C0
            (typeconvn, resultdef = LongInt = "LongInt", pos = (266,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, optinfo = 00000000933E0720, convtype = tc_int_2_int, convnodeflags = []
               (inlinen, resultdef = Int64 = "Int64", pos = (266,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, optinfo = 00000000933E0780, inlinenumber = in_round_real
                  (muln, resultdef = Double = "Double", pos = (266,78), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 00000000933E07E0
                     (typeconvn, resultdef = Double = "Double", pos = (266,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 12, optinfo = 00000000933E0840, convtype = tc_int_2_real, convnodeflags = []
                        (subn, resultdef = Int64 = "Int64", pos = (266,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 11, optinfo = 00000000933E08A0
                           (typeconvn, resultdef = Int64 = "Int64", pos = (266,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, optinfo = 00000000933E0900, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (266,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933E0960
                                 (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (266,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E09C0
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E380
                                       nil
                                       symbol = FORMDOCUMENT
                                    )
                                    field = SCROLLBOX1
                                 )
                                 field = FHEIGHT
                              )
                           )
                           (typeconvn, resultdef = Int64 = "Int64", pos = (266,66), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, optinfo = 00000000933E0A20, convtype = tc_int_2_int, convnodeflags = []
                              (subscriptn, resultdef = LongInt = "LongInt", pos = (266,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933E0A80
                                 (subscriptn, resultdef = TImage = "TImage", pos = (266,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E0AE0
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E3E0
                                       nil
                                       symbol = FORMDOCUMENT
                                    )
                                    field = IMAGE1
                                 )
                                 field = FHEIGHT
                              )
                           )
                        )
                     )
                     (realconstn, resultdef = Double = "Double", pos = (266,77), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 00000000933E0B40
                        value =  5.0000000000000000E-001
                     )
                  )
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (267,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933873A0
      (calln, resultdef =  = "untyped", pos = (267,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009337B9A0
         proc = SetLeft(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (267,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E0BA0
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E1A0
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = <nil>, pos = (267,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E0C00
            (subscriptn, resultdef = TImage = "TImage", pos = (267,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E0C60
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E200
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (267,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933E0CC0
            (loadn, resultdef = LongInt = "LongInt", pos = (267,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E260
               nil
               symbol = BORDER
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (268,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A7A0
      (calln, resultdef =  = "untyped", pos = (268,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093373960
         proc = SetTop(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TImage = "TImage", pos = (268,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E0D20
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E080
               nil
               symbol = FORMDOCUMENT
            )
            field = IMAGE1
         )
         left =
         (callparan, resultdef = <nil>, pos = (268,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E0D80
            (subscriptn, resultdef = TImage = "TImage", pos = (268,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E0DE0
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E0E0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = IMAGE1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (268,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933E0E40
            (loadn, resultdef = LongInt = "LongInt", pos = (268,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E140
               nil
               symbol = BORDER
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (270,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B5E0
      (calln, resultdef =  = "untyped", pos = (270,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009337B640
         proc = SetWidth(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (270,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E0EA0
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093397660
               nil
               symbol = FORMDOCUMENT
            )
            field = PANEL1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (270,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 00000000933E0F00
            (typeconvn, resultdef = LongInt = "LongInt", pos = (270,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 13, optinfo = 00000000933E0F60, convtype = tc_int_2_int, convnodeflags = []
               (addn, resultdef = Int64 = "Int64", pos = (270,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 12, optinfo = 00000000933E0FC0
                  (typeconvn, resultdef = Int64 = "Int64", pos = (270,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, optinfo = 00000000933E1020, convtype = tc_int_2_int, convnodeflags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (270,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933E1080
                        (subscriptn, resultdef = TImage = "TImage", pos = (270,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E10E0
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339DF60
                              nil
                              symbol = FORMDOCUMENT
                           )
                           field = IMAGE1
                        )
                        field = FWIDTH
                     )
                  )
                  (muln, resultdef = Int64 = "Int64", pos = (270,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 6, optinfo = 00000000933E1140
                     (typeconvn, resultdef = Int64 = "Int64", pos = (270,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933E11A0, convtype = tc_int_2_int, convnodeflags = []
                        (loadn, resultdef = LongInt = "LongInt", pos = (270,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339DFC0
                           nil
                           symbol = BORDER
                        )
                     )
                     (ordconstn, resultdef = Int64 = "Int64", pos = (270,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933E1200
                        typedef = "Int64"
                        value = 2
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (270,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E1260
            (subscriptn, resultdef = TPanel = "TPanel", pos = (270,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E12C0
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E020
                  nil
                  symbol = FORMDOCUMENT
               )
               field = PANEL1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (271,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337F900
      (calln, resultdef =  = "untyped", pos = (271,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009337A380
         proc = SetHeight(<TControl>;LongInt);
         methodpointer =
         (subscriptn, resultdef = TPanel = "TPanel", pos = (271,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E1320
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337B580
               nil
               symbol = FORMDOCUMENT
            )
            field = PANEL1
         )
         left =
         (callparan, resultdef = LongInt = "LongInt", pos = (271,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 00000000933E1380
            (typeconvn, resultdef = LongInt = "LongInt", pos = (271,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 13, optinfo = 00000000933E13E0, convtype = tc_int_2_int, convnodeflags = []
               (addn, resultdef = Int64 = "Int64", pos = (271,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 12, optinfo = 00000000933E1440
                  (typeconvn, resultdef = Int64 = "Int64", pos = (271,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, optinfo = 00000000933E14A0, convtype = tc_int_2_int, convnodeflags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (271,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933E1500
                        (subscriptn, resultdef = TImage = "TImage", pos = (271,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E1560
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093373060
                              nil
                              symbol = FORMDOCUMENT
                           )
                           field = IMAGE1
                        )
                        field = FHEIGHT
                     )
                  )
                  (muln, resultdef = Int64 = "Int64", pos = (271,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 6, optinfo = 00000000933E15C0
                     (typeconvn, resultdef = Int64 = "Int64", pos = (271,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933E1620, convtype = tc_int_2_int, convnodeflags = []
                        (loadn, resultdef = LongInt = "LongInt", pos = (271,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093379540
                           nil
                           symbol = BORDER
                        )
                     )
                     (ordconstn, resultdef = Int64 = "Int64", pos = (271,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933E1680
                        typedef = "Int64"
                        value = 2
                     )
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (271,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E16E0
            (subscriptn, resultdef = TPanel = "TPanel", pos = (271,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E1740
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093387400
                  nil
                  symbol = FORMDOCUMENT
               )
               field = PANEL1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (278,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337D020
      (ifn, resultdef =  = "untyped", pos = (272,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A3E0
         (orn, resultdef = Boolean = "Boolean", pos = (272,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 4, optinfo = 00000000933E17A0
            (unequaln, resultdef = Boolean = "Boolean", pos = (272,8), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 1, optinfo = 00000000933E1800
               (subscriptn, resultdef = LongInt = "LongInt", pos = (272,19), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [], cmplx = 0, optinfo = 00000000933E1860
                  (loadn, resultdef = TPoint = "<record type>", pos = (272,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093373D20
                     nil
                     symbol = MOUSEPOINT
                  )
                  field = X
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (272,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933E18C0
                  typedef = "LongInt"
                  value = 0
               )
            )
            (unequaln, resultdef = Boolean = "Boolean", pos = (272,31), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 2, optinfo = 00000000933E1920
               (subscriptn, resultdef = LongInt = "LongInt", pos = (272,42), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [], cmplx = 1, optinfo = 00000000933E1980
                  (loadn, resultdef = TPoint = "<record type>", pos = (272,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A320
                     nil
                     symbol = MOUSEPOINT
                  )
                  field = Y
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (272,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933E19E0
                  typedef = "LongInt"
                  value = 0
               )
            )
         )
         (blockn, resultdef =  = "untyped", pos = (273,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3, optinfo = 0000000093387340
            (statementn, resultdef =  = "untyped", pos = (274,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3, optinfo = 0000000093399A00
               (assignn, resultdef =  = "untyped", pos = (274,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093399A60
                  (loadn, resultdef = LongInt = "LongInt", pos = (274,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 000000009337A260
                     nil
                     symbol = SCROLLPOSX
                  )
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (274,31), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [], cmplx = 0, optinfo = 00000000933E1A40
                     (loadn, resultdef = TPoint = "<record type>", pos = (274,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337FFC0
                        nil
                        symbol = MOUSEPOINT
                     )
                     field = X
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (275,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009337A560
               (assignn, resultdef =  = "untyped", pos = (275,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093380020
                  (loadn, resultdef = LongInt = "LongInt", pos = (275,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 000000009337B520
                     nil
                     symbol = SCROLLPOSY
                  )
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (275,31), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [], cmplx = 1, optinfo = 00000000933E1AA0
                     (loadn, resultdef = TPoint = "<record type>", pos = (275,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933871C0
                        nil
                        symbol = MOUSEPOINT
                     )
                     field = Y
                  )
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (281,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A5C0
      (calln, resultdef =  = "untyped", pos = (281,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933874C0
         proc = UpdateScrollbars(<TScrollingWinControl>);
         methodpointer =
         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (281,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E1B00
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337B160
               nil
               symbol = FORMDOCUMENT
            )
            field = SCROLLBOX1
         )
         left =
         (callparan, resultdef = <nil>, pos = (281,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E1B60
            (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (281,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E1BC0
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (257,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933999A0
                  nil
                  symbol = FORMDOCUMENT
               )
               field = SCROLLBOX1
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (285,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1C20
      (asmn, resultdef =  = "untyped", pos = (285,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1C80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (285,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1CE0
      (finalizetempsn, resultdef =  = "untyped", pos = (285,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1D40
      )

   )
)

*******************************************************************************
after parsing
Image1MouseDown(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (294,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (294,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Single = "Single", pos = (294,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = SCALEFACTOR
         )
         (muln, resultdef = Double = "Double", pos = (294,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (typeconvn, resultdef = Double = "Double", pos = (294,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
               (subscriptn, resultdef = LongInt = "LongInt", pos = (294,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                  (loadn, resultdef = TScreen = "TScreen", pos = (294,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = SCREEN
                  )
                  field = FPIXELSPERINCH
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (294,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               value =  1.0416666666666666E-002
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (295,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (295,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = LongInt = "LongInt", pos = (295,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = OLDX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (295,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (295,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (295,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = Single = "Single", pos = (295,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (295,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (295,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Single = "Single", pos = (295,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (295,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = X
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (295,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (295,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (296,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (296,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = LongInt = "LongInt", pos = (296,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = OLDY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (296,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (296,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (296,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = Single = "Single", pos = (296,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (296,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (296,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Single = "Single", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = Y
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (296,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (296,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (299,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = LongInt = "LongInt", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (299,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "LongInt"
            value = 1281101
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (325,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (ifn, resultdef =  = "untyped", pos = (302,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (equaln, resultdef = Boolean = "Boolean", pos = (302,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (302,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = BUTTON
            )
            (ordconstn, resultdef = TMouseButton = "<enumeration type>", pos = (302,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "<enumeration type>"
               value = 0
            )
         )
         (blockn, resultdef =  = "untyped", pos = (303,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (304,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (assignn, resultdef =  = "untyped", pos = (304,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (304,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = HMOUSEBUTTON
                  )
                  (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (304,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "<enumeration type>"
                     value = 0
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (305,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetWidth(<TFPCustomPen>;LongInt);
                  methodpointer =
                  (subscriptn, resultdef = TPen = "TPen", pos = (305,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                     (calln, resultdef = TCanvas = "TCanvas", pos = (305,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                        methodpointer =
                        (subscriptn, resultdef = TImage = "TImage", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (305,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = self
                           )
                           field = IMAGE1
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (305,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (nothingn, resultdef =  = "untyped", pos = (305,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )

                        )
                     )
                     field = FLAZPEN
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (305,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = LongInt = "LongInt", pos = (305,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = PENWIDTH
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (305,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (305,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (306,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetColor(<TPen>;TColor);
                  methodpointer =
                  (subscriptn, resultdef = TPen = "TPen", pos = (306,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                     (calln, resultdef = TCanvas = "TCanvas", pos = (306,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                        methodpointer =
                        (subscriptn, resultdef = TImage = "TImage", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (306,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = self
                           )
                           field = IMAGE1
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (306,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (nothingn, resultdef =  = "untyped", pos = (306,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )

                        )
                     )
                     field = FLAZPEN
                  )
                  left =
                  (callparan, resultdef = TColor = "LongInt", pos = (306,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TColor = "LongInt", pos = (306,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = FORECOLOR
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (306,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (306,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (312,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (assignn, resultdef =  = "untyped", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = HCSHIFT
                  )
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (312,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = SHIFT
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (313,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (assignn, resultdef =  = "untyped", pos = (313,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (313,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = PX
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (313,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Single = "Single", pos = (313,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                              (inlinen, resultdef = Int64 = "Int64", pos = (313,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                                 (slashn, resultdef = Single = "Single", pos = (313,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (typeconvn, resultdef = Single = "Single", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          nil
                                          symbol = X
                                       )
                                    )
                                    (loadn, resultdef = Single = "Single", pos = (313,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = ZOOMFACTOR
                                    )
                                 )
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (313,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = SCALEFACTOR
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (314,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (assignn, resultdef =  = "untyped", pos = (314,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (314,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = PY
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (314,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Single = "Single", pos = (314,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                              (inlinen, resultdef = Int64 = "Int64", pos = (314,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                                 (slashn, resultdef = Single = "Single", pos = (314,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (typeconvn, resultdef = Single = "Single", pos = (314,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (314,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          nil
                                          symbol = Y
                                       )
                                    )
                                    (loadn, resultdef = Single = "Single", pos = (314,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = ZOOMFACTOR
                                    )
                                 )
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (314,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = SCALEFACTOR
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (324,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (casen, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TToolType = "<enumeration type>", pos = (316,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = HCTOOL
                  )
                  (caseblock blockid: 0
                     (calln, resultdef =  = "untyped", pos = (317,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (317,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (317,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (317,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (317,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (317,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (317,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = HCSHIFT
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (317,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (317,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (317,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                     )
                  )
                  (caseblock blockid: 1
                     (calln, resultdef =  = "untyped", pos = (318,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (318,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (318,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (318,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (318,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (318,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (318,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = HCSHIFT
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (318,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (318,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (318,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = IMAGE2
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (318,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (318,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (318,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                     )
                  )
                  (caseblock blockid: 2
                     (calln, resultdef =  = "untyped", pos = (319,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (319,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (319,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (319,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (319,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (319,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (319,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = HCSHIFT
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (319,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (319,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (319,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = IMAGE2
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (319,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (319,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (319,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                     )
                  )
                  (caseblock blockid: 3
                     (calln, resultdef =  = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        proc = hc_Fill(TImage;TImage;TMouseButton;TShiftState;LongInt;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (320,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (320,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = HMOUSEEVENT
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (320,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (320,65), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (320,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (320,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (320,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (320,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = HCSHIFT
                           )

                        )
                        (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (320,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (320,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = BUTTON
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (320,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (320,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (320,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = IMAGE2
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (320,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (320,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (320,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                     )
                  )
                  (else: 3
                     (blockn, resultdef =  = "untyped", pos = (324,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                     )
                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
after the firstpass
Image1MouseDown(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (294,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (294,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (294,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = SCALEFACTOR
         )
         (muln, resultdef = Double = "Double", pos = (294,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2
            (typeconvn, resultdef = Double = "Double", pos = (294,24), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 4, convtype = tc_int_2_real, convnodeflags = []
               (subscriptn, resultdef = LongInt = "LongInt", pos = (294,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3
                  (loadn, resultdef = TScreen = "TScreen", pos = (294,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = SCREEN
                  )
                  field = FPIXELSPERINCH
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (294,41), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
               value =  1.0416666666666666E-002
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (295,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (295,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31
         (loadn, resultdef = LongInt = "LongInt", pos = (295,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = OLDX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (295,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (295,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (295,52), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27
                  (typeconvn, resultdef = Single = "Single", pos = (295,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (295,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (295,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13
                           (typeconvn, resultdef = Single = "Single", pos = (295,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (295,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = X
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (295,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (295,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (296,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (296,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31
         (loadn, resultdef = LongInt = "LongInt", pos = (296,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = OLDY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (296,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (296,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (296,52), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27
                  (typeconvn, resultdef = Single = "Single", pos = (296,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (296,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (296,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13
                           (typeconvn, resultdef = Single = "Single", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = Y
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (296,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (296,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (299,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (299,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "LongInt"
            value = 1281101
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (325,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef =  = "untyped", pos = (302,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (equaln, resultdef = Boolean = "Boolean", pos = (302,13), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 1
            (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (302,6), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = BUTTON
            )
            (ordconstn, resultdef = TMouseButton = "<enumeration type>", pos = (302,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "<enumeration type>"
               value = 0
            )
         )
         (blockn, resultdef =  = "untyped", pos = (303,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (304,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (304,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                  (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (304,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                     nil
                     symbol = HMOUSEBUTTON
                  )
                  (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (304,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                     typedef = "<enumeration type>"
                     value = 0
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (305,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetWidth(<TFPCustomPen>;LongInt);
                  methodpointer =
                  (temprefn, resultdef = TPen = "TPen", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                  )
                  vmt_entry =
                  (subscriptn, resultdef = <no type symbol> = "<address of procedure(LongInt) of object;Register>", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     (derefn, resultdef = TPen. = "<record type>", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        (typeconvn, resultdef = <no type symbol> = "^TPen.<record type>", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                           (subscriptn, resultdef = Pointer = "^untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              (temprefn, resultdef = TPen = "TPen", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                 temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                              )
                              field = hidden_vptr$TOBJECT
                           )
                        )
                     )
                     field = f41
                  )
                  callinitblock =
                  (blockn, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (statementn, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (tempcreaten, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           size = 8, temptypedef = TPen = "TPen", tempinfo = $0000000091B9D970
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (assignn, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (temprefn, resultdef = TPen = "TPen", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                              temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                           )
                           (subscriptn, resultdef = TPen = "TPen", pos = (305,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              (calln, resultdef = TCanvas = "TCanvas", pos = (305,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                                 methodpointer =
                                 (subscriptn, resultdef = TImage = "TImage", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (305,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                       nil
                                       symbol = self
                                    )
                                    field = IMAGE1
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (305,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                    (subscriptn, resultdef = TImage = "TImage", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (305,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                          nil
                                          symbol = self
                                       )
                                       field = IMAGE1
                                    )

                                 )
                              )
                              field = FLAZPEN
                           )
                        )

                     )
                  )
                  callcleanupblock =
                  (blockn, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (statementn, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempdeleten, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           release_to_normal: FALSE, temptypedef = TPen = "TPen", temptype = tt_persistent, tempinfo = $0000000091B9D970
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = LongInt = "LongInt", pos = (305,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (loadn, resultdef = LongInt = "LongInt", pos = (305,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        nil
                        symbol = PENWIDTH
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (305,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (temprefn, resultdef = TPen = "TPen", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                        temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (306,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TPen>;TColor);
                  methodpointer =
                  (temprefn, resultdef = TPen = "TPen", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                  )
                  callinitblock =
                  (blockn, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (statementn, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (tempcreaten, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           size = 8, temptypedef = TPen = "TPen", tempinfo = $0000000091B9D8F0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (assignn, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (temprefn, resultdef = TPen = "TPen", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                              temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                           )
                           (subscriptn, resultdef = TPen = "TPen", pos = (306,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              (calln, resultdef = TCanvas = "TCanvas", pos = (306,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                 proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                                 methodpointer =
                                 (subscriptn, resultdef = TImage = "TImage", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (306,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                       nil
                                       symbol = self
                                    )
                                    field = IMAGE1
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (306,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                    (subscriptn, resultdef = TImage = "TImage", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                       (loadn, resultdef = TFormDocument = "TFormDocument", pos = (306,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                          nil
                                          symbol = self
                                       )
                                       field = IMAGE1
                                    )

                                 )
                              )
                              field = FLAZPEN
                           )
                        )

                     )
                  )
                  callcleanupblock =
                  (blockn, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (statementn, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempdeleten, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           release_to_normal: FALSE, temptypedef = TPen = "TPen", temptype = tt_persistent, tempinfo = $0000000091B9D8F0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = TColor = "LongInt", pos = (306,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (loadn, resultdef = TColor = "LongInt", pos = (306,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        nil
                        symbol = FORECOLOR
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (306,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (temprefn, resultdef = TPen = "TPen", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                        temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (312,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (312,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = SHIFT
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (313,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31
                  (loadn, resultdef = LongInt = "LongInt", pos = (313,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                     nil
                     symbol = PX
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (313,52), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27
                           (typeconvn, resultdef = Single = "Single", pos = (313,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, convtype = tc_int_2_real, convnodeflags = []
                              (inlinen, resultdef = Int64 = "Int64", pos = (313,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, inlinenumber = in_round_real
                                 (slashn, resultdef = Single = "Single", pos = (313,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13
                                    (typeconvn, resultdef = Single = "Single", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, convtype = tc_int_2_real, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                          nil
                                          symbol = X
                                       )
                                    )
                                    (loadn, resultdef = Single = "Single", pos = (313,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       nil
                                       symbol = ZOOMFACTOR
                                    )
                                 )
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (313,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = SCALEFACTOR
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (314,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31
                  (loadn, resultdef = LongInt = "LongInt", pos = (314,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                     nil
                     symbol = PY
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, convtype = tc_int_2_int, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (314,52), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27
                           (typeconvn, resultdef = Single = "Single", pos = (314,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, convtype = tc_int_2_real, convnodeflags = []
                              (inlinen, resultdef = Int64 = "Int64", pos = (314,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, inlinenumber = in_round_real
                                 (slashn, resultdef = Single = "Single", pos = (314,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13
                                    (typeconvn, resultdef = Single = "Single", pos = (314,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, convtype = tc_int_2_real, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (314,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                          nil
                                          symbol = Y
                                       )
                                    )
                                    (loadn, resultdef = Single = "Single", pos = (314,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       nil
                                       symbol = ZOOMFACTOR
                                    )
                                 )
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (314,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = SCALEFACTOR
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (324,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (casen, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = TToolType = "<enumeration type>", pos = (316,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = HCTOOL
                  )
                  (caseblock blockid: 0
                     (calln, resultdef =  = "untyped", pos = (317,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = TImage = "TImage", pos = (317,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (317,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (317,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (317,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (317,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (317,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (317,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (317,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (317,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )

                        )
                     )
                  )
                  (caseblock blockid: 1
                     (calln, resultdef =  = "untyped", pos = (318,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (318,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (318,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (318,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (318,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (318,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE2
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (318,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (318,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (318,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (318,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (318,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (318,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (318,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )

                        )
                     )
                  )
                  (caseblock blockid: 2
                     (calln, resultdef =  = "untyped", pos = (319,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (319,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (319,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (319,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (319,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (319,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE2
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (319,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (319,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (319,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (319,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (319,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (319,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (319,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )

                        )
                     )
                  )
                  (caseblock blockid: 3
                     (calln, resultdef =  = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        proc = hc_Fill(TImage;TImage;TMouseButton;TShiftState;LongInt;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (320,78), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (320,78), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = HMOUSEEVENT
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (320,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (320,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (320,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (320,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (320,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (320,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (320,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE2
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (320,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (320,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (320,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (320,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (320,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = HCSHIFT
                           )

                        )
                        (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (320,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                           (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (320,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = BUTTON
                           )

                        )
                     )
                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
right before code generation
Image1MouseDown(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BDA0
   (statementn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BEC0
      (asmn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339FFA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933A0000
      (asmn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933A0060
      )

   )
   (statementn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933A00C0
      (asmn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933A0120
      )

   )
   (statementn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933A0180
      (asmn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933A01E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E02A0
      (blockn, resultdef =  = "untyped", pos = (292,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 00000000933E1B00
         (statementn, resultdef =  = "untyped", pos = (294,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B160
            (assignn, resultdef =  = "untyped", pos = (294,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009337D020
               (loadn, resultdef = Single = "Single", pos = (294,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933E0900
                  nil
                  symbol = SCALEFACTOR
               )
               (muln, resultdef = Double = "Double", pos = (294,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 00000000933E0300
                  (typeconvn, resultdef = Double = "Double", pos = (294,24), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 4, optinfo = 000000009339E500, convtype = tc_int_2_real, convnodeflags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (294,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 3, optinfo = 00000000933E0360
                        (loadn, resultdef = TScreen = "TScreen", pos = (294,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E0960
                           nil
                           symbol = SCREEN
                        )
                        field = FPIXELSPERINCH
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (294,41), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 00000000933E03C0
                     value =  1.0416666666666666E-002
                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (295,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A3E0
            (assignn, resultdef =  = "untyped", pos = (295,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31, optinfo = 00000000933E17A0
               (loadn, resultdef = LongInt = "LongInt", pos = (295,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933E0780
                  nil
                  symbol = OLDX
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (295,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, optinfo = 00000000933E0420, convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (295,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, optinfo = 000000009339E560, inlinenumber = in_round_real
                     (slashn, resultdef = Single = "Single", pos = (295,52), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27, optinfo = 00000000933E0480
                        (typeconvn, resultdef = Single = "Single", pos = (295,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, optinfo = 000000009339FE80, convtype = tc_int_2_real, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (295,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, optinfo = 000000009339FEE0, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (295,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13, optinfo = 000000009339FF40
                                 (typeconvn, resultdef = Single = "Single", pos = (295,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, optinfo = 000000009339E4A0, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (295,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E07E0
                                       nil
                                       symbol = X
                                    )
                                 )
                                 (loadn, resultdef = Single = "Single", pos = (295,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E0840
                                    nil
                                    symbol = ZOOMFACTOR
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = Single = "Single", pos = (295,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E08A0
                           nil
                           symbol = SCALEFACTOR
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (296,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1920
            (assignn, resultdef =  = "untyped", pos = (296,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31, optinfo = 00000000933E1980
               (loadn, resultdef = LongInt = "LongInt", pos = (296,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093399940
                  nil
                  symbol = OLDY
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (296,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, optinfo = 000000009339FDC0, convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (296,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, optinfo = 000000009339FE20, inlinenumber = in_round_real
                     (slashn, resultdef = Single = "Single", pos = (296,52), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27, optinfo = 000000009339E440
                        (typeconvn, resultdef = Single = "Single", pos = (296,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, optinfo = 000000009337B340, convtype = tc_int_2_real, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (296,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, optinfo = 000000009339BE00, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (296,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13, optinfo = 000000009339E5C0
                                 (typeconvn, resultdef = Single = "Single", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, optinfo = 000000009339F940, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337BB80
                                       nil
                                       symbol = Y
                                    )
                                 )
                                 (loadn, resultdef = Single = "Single", pos = (296,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E06C0
                                    nil
                                    symbol = ZOOMFACTOR
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = Single = "Single", pos = (296,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E0720
                           nil
                           symbol = SCALEFACTOR
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (299,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A320
            (assignn, resultdef =  = "untyped", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933E19E0
               (loadn, resultdef = LongInt = "LongInt", pos = (299,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009339E1A0
                  nil
                  symbol = HMOUSEEVENT
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (299,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009339F9A0
                  typedef = "LongInt"
                  value = 1281101
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (325,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1800
            (ifn, resultdef =  = "untyped", pos = (302,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1860
               (equaln, resultdef = Boolean = "Boolean", pos = (302,13), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 1, optinfo = 000000009339FA00
                  (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (302,6), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093373D20
                     nil
                     symbol = BUTTON
                  )
                  (ordconstn, resultdef = TMouseButton = "<enumeration type>", pos = (302,27), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009339FA60
                     typedef = "<enumeration type>"
                     value = 0
                  )
               )
               (blockn, resultdef =  = "untyped", pos = (303,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E18C0
                  (statementn, resultdef =  = "untyped", pos = (304,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093387340
                     (assignn, resultdef =  = "untyped", pos = (304,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009337A560
                        (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (304,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933E0BA0
                           nil
                           symbol = HMOUSEBUTTON
                        )
                        (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (304,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009339FAC0
                           typedef = "<enumeration type>"
                           value = 0
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (305,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093380020
                     (calln, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009337B520
                        proc = SetWidth(<TFPCustomPen>;LongInt);
                        methodpointer =
                        (temprefn, resultdef = TPen = "TPen", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009339E260
                           temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                        )
                        vmt_entry =
                        (subscriptn, resultdef = <no type symbol> = "<address of procedure(LongInt) of object;Register>", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337B100
                           (derefn, resultdef = TPen. = "<record type>", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E6E0
                              (typeconvn, resultdef = <no type symbol> = "^TPen.<record type>", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, optinfo = 000000009339F640, convtype = tc_equal, convnodeflags = []
                                 (subscriptn, resultdef = Pointer = "^untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339F6A0
                                    (temprefn, resultdef = TPen = "TPen", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933E0C00
                                       temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                    )
                                    field = hidden_vptr$TOBJECT
                                 )
                              )
                           )
                           field = f41
                        )
                        callinitblock =
                        (blockn, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339FC40
                           (statementn, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339FCA0
                              (tempcreaten, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009339FD00
                                 size = 8, temptypedef = TPen = "TPen", tempinfo = $0000000091B9D970
                                 [ti_may_be_in_reg]
                                 tempinit =
                                 nil
                              )

                           )
                           (statementn, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339E680
                              (assignn, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339FB20
                                 (temprefn, resultdef = TPen = "TPen", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 00000000933873A0
                                    temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                                 )
                                 (subscriptn, resultdef = TPen = "TPen", pos = (305,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009339FB80
                                    (calln, resultdef = TCanvas = "TCanvas", pos = (305,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009339FBE0
                                       proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                                       methodpointer =
                                       (subscriptn, resultdef = TImage = "TImage", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009339E620
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (305,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337B9A0
                                             nil
                                             symbol = self
                                          )
                                          field = IMAGE1
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (305,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339FD60
                                          (subscriptn, resultdef = TImage = "TImage", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009339BD40
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (305,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0CC0
                                                nil
                                                symbol = self
                                             )
                                             field = IMAGE1
                                          )

                                       )
                                    )
                                    field = FLAZPEN
                                 )
                              )

                           )
                        )
                        callcleanupblock =
                        (blockn, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009339F700
                           (statementn, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009339F760
                              (tempdeleten, resultdef =  = "untyped", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009339F7C0
                                 release_to_normal: FALSE, temptypedef = TPen = "TPen", temptype = tt_persistent, tempinfo = $0000000091B9D970
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (305,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339F820
                           (loadn, resultdef = LongInt = "LongInt", pos = (305,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E0C60
                              nil
                              symbol = PENWIDTH
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (305,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009339F880
                           (temprefn, resultdef = TPen = "TPen", pos = (305,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009339E200
                              temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (306,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1AA0
                     (calln, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 00000000933871C0
                        proc = SetColor(<TPen>;TColor);
                        methodpointer =
                        (temprefn, resultdef = TPen = "TPen", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009339E0E0
                           temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                        )
                        callinitblock =
                        (blockn, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339F8E0
                           (statementn, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339E740
                              (tempcreaten, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009339E7A0
                                 size = 8, temptypedef = TPen = "TPen", tempinfo = $0000000091B9D8F0
                                 [ti_may_be_in_reg]
                                 tempinit =
                                 nil
                              )

                           )
                           (statementn, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339E800
                              (assignn, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BCE0
                                 (temprefn, resultdef = TPen = "TPen", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009339E140
                                    temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                                 )
                                 (subscriptn, resultdef = TPen = "TPen", pos = (306,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009337A740
                                    (calln, resultdef = TCanvas = "TCanvas", pos = (306,18), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 000000009339E860
                                       proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                                       methodpointer =
                                       (subscriptn, resultdef = TImage = "TImage", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009339F340
                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (306,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0D80
                                             nil
                                             symbol = self
                                          )
                                          field = IMAGE1
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (306,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339F3A0
                                          (subscriptn, resultdef = TImage = "TImage", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009339F400
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (306,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0DE0
                                                nil
                                                symbol = self
                                             )
                                             field = IMAGE1
                                          )

                                       )
                                    )
                                    field = FLAZPEN
                                 )
                              )

                           )
                        )
                        callcleanupblock =
                        (blockn, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009339F460
                           (statementn, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009339F4C0
                              (tempdeleten, resultdef =  = "untyped", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009339F520
                                 release_to_normal: FALSE, temptypedef = TPen = "TPen", temptype = tt_persistent, tempinfo = $0000000091B9D8F0
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = TColor = "LongInt", pos = (306,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339F580
                           (loadn, resultdef = TColor = "LongInt", pos = (306,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E0D20
                              nil
                              symbol = FORECOLOR
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (306,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 000000009339F5E0
                           (temprefn, resultdef = TPen = "TPen", pos = (306,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009339E080
                              temptypedef = TPen = "TPen", (tempinfo = $0000000091B9D8F0 flags = [ti_may_be_in_reg])
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (312,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093399A00
                     (assignn, resultdef =  = "untyped", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093399A60
                        (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (312,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093373960
                           nil
                           symbol = HCSHIFT
                        )
                        (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (312,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0E40
                           nil
                           symbol = SHIFT
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A260
                     (assignn, resultdef =  = "untyped", pos = (313,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31, optinfo = 00000000933E1A40
                        (loadn, resultdef = LongInt = "LongInt", pos = (313,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009339DF60
                           nil
                           symbol = PX
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, optinfo = 000000009339E8C0, convtype = tc_int_2_int, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (313,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, optinfo = 000000009339E920, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (313,52), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27, optinfo = 000000009339E980
                                 (typeconvn, resultdef = Single = "Single", pos = (313,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, optinfo = 000000009336FDC0, convtype = tc_int_2_real, convnodeflags = []
                                    (inlinen, resultdef = Int64 = "Int64", pos = (313,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, optinfo = 0000000093379D20, inlinenumber = in_round_real
                                       (slashn, resultdef = Single = "Single", pos = (313,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13, optinfo = 000000009339E9E0
                                          (typeconvn, resultdef = Single = "Single", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, optinfo = 000000009339F1C0, convtype = tc_int_2_real, convnodeflags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (313,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0EA0
                                                nil
                                                symbol = X
                                             )
                                          )
                                          (loadn, resultdef = Single = "Single", pos = (313,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093397660
                                             nil
                                             symbol = ZOOMFACTOR
                                          )
                                       )
                                    )
                                 )
                                 (loadn, resultdef = Single = "Single", pos = (313,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337A7A0
                                    nil
                                    symbol = SCALEFACTOR
                                 )
                              )
                           )
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337FFC0
                     (assignn, resultdef =  = "untyped", pos = (314,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31, optinfo = 000000009337F900
                        (loadn, resultdef = LongInt = "LongInt", pos = (314,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933E1200
                           nil
                           symbol = PY
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, optinfo = 000000009339F220, convtype = tc_int_2_int, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (314,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, optinfo = 000000009339F280, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (314,52), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27, optinfo = 000000009339EA40
                                 (typeconvn, resultdef = Single = "Single", pos = (314,39), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, optinfo = 000000009339F2E0, convtype = tc_int_2_real, convnodeflags = []
                                    (inlinen, resultdef = Int64 = "Int64", pos = (314,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, optinfo = 000000009339F100, inlinenumber = in_round_real
                                       (slashn, resultdef = Single = "Single", pos = (314,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13, optinfo = 000000009339F160
                                          (typeconvn, resultdef = Single = "Single", pos = (314,23), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, optinfo = 000000009339F040, convtype = tc_int_2_real, convnodeflags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (314,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E1020
                                                nil
                                                symbol = Y
                                             )
                                          )
                                          (loadn, resultdef = Single = "Single", pos = (314,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E1080
                                             nil
                                             symbol = ZOOMFACTOR
                                          )
                                       )
                                    )
                                 )
                                 (loadn, resultdef = Single = "Single", pos = (314,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E10E0
                                    nil
                                    symbol = SCALEFACTOR
                                 )
                              )
                           )
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (324,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A380
                     (casen, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E16E0
                        (loadn, resultdef = TToolType = "<enumeration type>", pos = (316,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E1740
                           nil
                           symbol = HCTOOL
                        )
                        (caseblock blockid: 0
                           (calln, resultdef =  = "untyped", pos = (317,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093387400
                              proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                              left =
                              (callparan, resultdef = TImage = "TImage", pos = (317,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339F0A0
                                 (subscriptn, resultdef = TImage = "TImage", pos = (317,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 000000009339EF80
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (317,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E1380
                                       nil
                                       symbol = self
                                    )
                                    field = IMAGE1
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (317,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339EFE0
                                 (loadn, resultdef = LongInt = "LongInt", pos = (317,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E13E0
                                    nil
                                    symbol = PY
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (317,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339EEC0
                                 (loadn, resultdef = LongInt = "LongInt", pos = (317,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E1440
                                    nil
                                    symbol = PX
                                 )

                              )
                              (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (317,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339EF20
                                 (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (317,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E15C0
                                    nil
                                    symbol = HCSHIFT
                                 )

                              )
                           )
                        )
                        (caseblock blockid: 1
                           (calln, resultdef =  = "untyped", pos = (318,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1620
                              proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                              left =
                              (callparan, resultdef = LongInt = "LongInt", pos = (318,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337A680
                                 (loadn, resultdef = LongInt = "LongInt", pos = (318,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093379540
                                    nil
                                    symbol = PY
                                 )

                              )
                              (callparan, resultdef = TImage = "TImage", pos = (318,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933EA980
                                 (subscriptn, resultdef = TImage = "TImage", pos = (318,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E2BE0
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (318,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E1680
                                       nil
                                       symbol = self
                                    )
                                    field = IMAGE2
                                 )

                              )
                              (callparan, resultdef = TImage = "TImage", pos = (318,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E2760
                                 (subscriptn, resultdef = TImage = "TImage", pos = (318,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E2280
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (318,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E14A0
                                       nil
                                       symbol = self
                                    )
                                    field = IMAGE1
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (318,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E2220
                                 (loadn, resultdef = LongInt = "LongInt", pos = (318,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E1500
                                    nil
                                    symbol = PX
                                 )

                              )
                              (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (318,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E2160
                                 (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (318,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E1560
                                    nil
                                    symbol = HCSHIFT
                                 )

                              )
                           )
                        )
                        (caseblock blockid: 2
                           (calln, resultdef =  = "untyped", pos = (319,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093373060
                              proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                              left =
                              (callparan, resultdef = LongInt = "LongInt", pos = (319,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933EA7A0
                                 (loadn, resultdef = LongInt = "LongInt", pos = (319,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E1320
                                    nil
                                    symbol = PY
                                 )

                              )
                              (callparan, resultdef = TImage = "TImage", pos = (319,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E2100
                                 (subscriptn, resultdef = TImage = "TImage", pos = (319,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933EA920
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (319,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337B580
                                       nil
                                       symbol = self
                                    )
                                    field = IMAGE2
                                 )

                              )
                              (callparan, resultdef = TImage = "TImage", pos = (319,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E9300
                                 (subscriptn, resultdef = TImage = "TImage", pos = (319,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E92A0
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (319,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337B5E0
                                       nil
                                       symbol = self
                                    )
                                    field = IMAGE1
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (319,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E9180
                                 (loadn, resultdef = LongInt = "LongInt", pos = (319,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337B640
                                    nil
                                    symbol = PX
                                 )

                              )
                              (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (319,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E9120
                                 (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (319,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E1260
                                    nil
                                    symbol = HCSHIFT
                                 )

                              )
                           )
                        )
                        (caseblock blockid: 3
                           (calln, resultdef =  = "untyped", pos = (320,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E12C0
                              proc = hc_Fill(TImage;TImage;TMouseButton;TShiftState;LongInt;LongInt;LongInt);
                              left =
                              (callparan, resultdef = LongInt = "LongInt", pos = (320,78), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933EA140
                                 (loadn, resultdef = LongInt = "LongInt", pos = (320,78), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E020
                                    nil
                                    symbol = HMOUSEEVENT
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (320,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933EA320
                                 (loadn, resultdef = LongInt = "LongInt", pos = (320,65), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E0F00
                                    nil
                                    symbol = PY
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (320,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933EA2C0
                                 (loadn, resultdef = LongInt = "LongInt", pos = (320,61), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E0F60
                                    nil
                                    symbol = PX
                                 )

                              )
                              (callparan, resultdef = TImage = "TImage", pos = (320,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933EA260
                                 (subscriptn, resultdef = TImage = "TImage", pos = (320,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E9000
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (320,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0FC0
                                       nil
                                       symbol = self
                                    )
                                    field = IMAGE2
                                 )

                              )
                              (callparan, resultdef = TImage = "TImage", pos = (320,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E8FA0
                                 (subscriptn, resultdef = TImage = "TImage", pos = (320,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933E8E80
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (320,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E1140
                                       nil
                                       symbol = self
                                    )
                                    field = IMAGE1
                                 )

                              )
                              (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (320,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E8E20
                                 (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (320,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E11A0
                                    nil
                                    symbol = HCSHIFT
                                 )

                              )
                              (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (320,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933E9C00
                                 (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (320,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339DFC0
                                    nil
                                    symbol = BUTTON
                                 )

                              )
                           )
                        )
                     )

                  )
               )
               nil
               nil
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (327,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E9DE0
      (asmn, resultdef =  = "untyped", pos = (327,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E9D80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (327,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E9D20
      (finalizetempsn, resultdef =  = "untyped", pos = (327,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E8D00
      )

   )
)

*******************************************************************************
after parsing
Image1MouseMove(TObject;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (332,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (332,2), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = LongInt = "LongInt", pos = (332,2), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (332,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "LongInt"
            value = 1281102
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (333,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (333,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = LongInt = "LongInt", pos = (333,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = PX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (333,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (333,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (333,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = Single = "Single", pos = (333,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (333,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (333,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Single = "Single", pos = (333,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (333,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = X
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (333,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (333,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (334,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (334,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = LongInt = "LongInt", pos = (334,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = PY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (334,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (334,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (334,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = Single = "Single", pos = (334,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (334,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (334,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Single = "Single", pos = (334,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (334,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = Y
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (334,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (334,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (364,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (ifn, resultdef =  = "untyped", pos = (336,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (equaln, resultdef = Boolean = "Boolean", pos = (336,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (336,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = HMOUSEBUTTON
            )
            (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (336,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "<enumeration type>"
               value = 0
            )
         )
         (blockn, resultdef =  = "untyped", pos = (337,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (338,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (assignn, resultdef =  = "untyped", pos = (338,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (338,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = HCSHIFT
                  )
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (338,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = SHIFT
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (350,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (casen, resultdef =  = "untyped", pos = (341,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TToolType = "<enumeration type>", pos = (341,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = HCTOOL
                  )
                  (caseblock blockid: 0
                     (calln, resultdef =  = "untyped", pos = (342,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (342,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (342,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (342,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (342,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (342,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (342,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = SHIFT
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (342,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (342,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (342,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                     )
                  )
                  (caseblock blockid: 1
                     (calln, resultdef =  = "untyped", pos = (343,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (343,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (343,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (343,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (343,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (343,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (343,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = SHIFT
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (343,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (343,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (343,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = IMAGE2
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (343,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (343,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (343,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                     )
                  )
                  (caseblock blockid: 2
                     (calln, resultdef =  = "untyped", pos = (344,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (344,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (344,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (344,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (344,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (344,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (344,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = SHIFT
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (344,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (344,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (344,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = IMAGE2
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (344,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (344,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (344,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                     )
                  )
                  (caseblock blockid: 3
                     (nothingn, resultdef =  = "untyped", pos = (345,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )
                  )
                  (else: 3
                     (blockn, resultdef =  = "untyped", pos = (350,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                     )
                  )
               )

            )
         )
         (ifn, resultdef =  = "untyped", pos = (352,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (equaln, resultdef = Boolean = "Boolean", pos = (352,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (352,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = HMOUSEBUTTON
               )
               (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (352,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  typedef = "<enumeration type>"
                  value = 1
               )
            )
            (blockn, resultdef =  = "untyped", pos = (353,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
            )
            (ifn, resultdef =  = "untyped", pos = (356,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (equaln, resultdef = Boolean = "Boolean", pos = (356,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (356,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = SHIFT
                  )
                  (setconstn, resultdef = <no type symbol> = "Set Of TShiftStateEnum", pos = (356,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                  )
               )
               (blockn, resultdef =  = "untyped", pos = (357,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (statementn, resultdef = <nil>, pos = (361,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (calln, resultdef =  = "untyped", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                        proc = SetPosition(<TControlScrollBar>;const LongInt);
                        methodpointer =
                        (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (361,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                           (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = SCROLLBOX1
                           )
                           field = FHORZSCROLLBAR
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (361,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = LongInt = "LongInt", pos = (361,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (361,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                                    (calln, resultdef = LongInt = "LongInt", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       proc = GetPosition(<TControlScrollBar>):System.LongInt;
                                       methodpointer =
                                       (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (361,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (361,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = self
                                             )
                                             field = SCROLLBOX1
                                          )
                                          field = FHORZSCROLLBAR
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (361,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (nothingn, resultdef =  = "untyped", pos = (361,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          )

                                       )
                                    )
                                 )
                                 (subn, resultdef = Int64 = "Int64", pos = (361,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (361,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (361,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          nil
                                          symbol = PX
                                       )
                                    )
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (361,84), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (361,84), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          nil
                                          symbol = OLDX
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (361,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (nothingn, resultdef =  = "untyped", pos = (361,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (362,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (calln, resultdef =  = "untyped", pos = (362,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                        proc = SetPosition(<TControlScrollBar>;const LongInt);
                        methodpointer =
                        (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (362,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                           (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (362,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = SCROLLBOX1
                           )
                           field = FVERTSCROLLBAR
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (362,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = LongInt = "LongInt", pos = (362,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (362,89), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                                    (calln, resultdef = LongInt = "LongInt", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       proc = GetPosition(<TControlScrollBar>):System.LongInt;
                                       methodpointer =
                                       (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (362,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (362,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = self
                                             )
                                             field = SCROLLBOX1
                                          )
                                          field = FVERTSCROLLBAR
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (362,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (nothingn, resultdef =  = "untyped", pos = (362,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          )

                                       )
                                    )
                                 )
                                 (subn, resultdef = Int64 = "Int64", pos = (362,78), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (362,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (362,79), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          nil
                                          symbol = PY
                                       )
                                    )
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (362,84), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (362,84), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          nil
                                          symbol = OLDY
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (362,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (nothingn, resultdef =  = "untyped", pos = (362,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )

                        )
                     )

                  )
               )
               nil
               nil
            )
            nil
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (371,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (366,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = UpdateText(AnsiString);
         left =
         (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (addn, resultdef = AnsiString = "AnsiString(0)", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (addn, resultdef = AnsiString = "AnsiString(0)", pos = (370,86), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (addn, resultdef = AnsiString = "AnsiString(0)", pos = (370,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (addn, resultdef = AnsiString = "AnsiString(0)", pos = (370,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (addn, resultdef = AnsiString = "AnsiString(0)", pos = (369,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (addn, resultdef = AnsiString = "AnsiString(0)", pos = (369,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (addn, resultdef = AnsiString = "AnsiString(0)", pos = (369,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (addn, resultdef = AnsiString = "AnsiString(0)", pos = (368,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (addn, resultdef = AnsiString = "AnsiString(0)", pos = (368,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (addn, resultdef = AnsiString = "AnsiString(0)", pos = (368,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (addn, resultdef = AnsiString = "AnsiString(0)", pos = (367,69), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (addn, resultdef = AnsiString = "AnsiString(0)", pos = (367,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                (addn, resultdef = AnsiString = "AnsiString(0)", pos = (367,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                   (addn, resultdef = AnsiString = "AnsiString(0)", pos = (366,81), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      (addn, resultdef = AnsiString = "AnsiString(0)", pos = (366,71), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                         (addn, resultdef = AnsiString = "AnsiString(0)", pos = (366,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            (addn, resultdef = AnsiString = "AnsiString(0)", pos = (366,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                               (addn, resultdef = AnsiString = "AnsiString(0)", pos = (366,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                  (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (366,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                     value = "X: "
                                                                  )
                                                                  (calln, resultdef = AnsiString = "AnsiString(0)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                     proc = ToString(<var LongInt>;<var AnsiString>):System.AnsiString;
                                                                     methodpointer =
                                                                     (loadn, resultdef = LongInt = "LongInt", pos = (366,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                        nil
                                                                        symbol = X
                                                                     )
                                                                     left =
                                                                     (callparan, resultdef = <nil>, pos = (366,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                        (nothingn, resultdef =  = "untyped", pos = (366,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = <nil>, pos = (366,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                        (nothingn, resultdef =  = "untyped", pos = (366,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                        )

                                                                     )
                                                                  )
                                                               )
                                                               (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (366,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                  value = "  Y: "
                                                               )
                                                            )
                                                            (calln, resultdef = AnsiString = "AnsiString(0)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                               proc = ToString(<var LongInt>;<var AnsiString>):System.AnsiString;
                                                               methodpointer =
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (366,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                  nil
                                                                  symbol = Y
                                                               )
                                                               left =
                                                               (callparan, resultdef = <nil>, pos = (366,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                  (nothingn, resultdef =  = "untyped", pos = (366,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                  )

                                                               )
                                                               (callparan, resultdef = <nil>, pos = (366,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                  (nothingn, resultdef =  = "untyped", pos = (366,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                  )

                                                               )
                                                            )
                                                         )
                                                         (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (366,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            value = " -  PX: "
                                                         )
                                                      )
                                                      (calln, resultdef = AnsiString = "AnsiString(0)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                         proc = ToString(<var LongInt>;<var AnsiString>):System.AnsiString;
                                                         methodpointer =
                                                         (loadn, resultdef = LongInt = "LongInt", pos = (367,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            nil
                                                            symbol = PX
                                                         )
                                                         left =
                                                         (callparan, resultdef = <nil>, pos = (367,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            (nothingn, resultdef =  = "untyped", pos = (367,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (367,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            (nothingn, resultdef =  = "untyped", pos = (367,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            )

                                                         )
                                                      )
                                                   )
                                                   (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (367,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      value = "  PY: "
                                                   )
                                                )
                                                (calln, resultdef = AnsiString = "AnsiString(0)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                   proc = ToString(<var LongInt>;<var AnsiString>):System.AnsiString;
                                                   methodpointer =
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (367,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      nil
                                                      symbol = PY
                                                   )
                                                   left =
                                                   (callparan, resultdef = <nil>, pos = (367,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      (nothingn, resultdef =  = "untyped", pos = (367,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      )

                                                   )
                                                   (callparan, resultdef = <nil>, pos = (367,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      (nothingn, resultdef =  = "untyped", pos = (367,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      )

                                                   )
                                                )
                                             )
                                             (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (367,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                value = " -   Scale:  Image1 Left :"
                                             )
                                          )
                                          (calln, resultdef = AnsiString = "AnsiString(0)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             proc = ToString(<var LongInt>;<var AnsiString>):System.AnsiString;
                                             methodpointer =
                                             (subscriptn, resultdef = LongInt = "LongInt", pos = (368,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                                (subscriptn, resultdef = TImage = "TImage", pos = (368,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                   (loadn, resultdef = TFormDocument = "TFormDocument", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      nil
                                                      symbol = self
                                                   )
                                                   field = IMAGE1
                                                )
                                                field = FLEFT
                                             )
                                             left =
                                             (callparan, resultdef = <nil>, pos = (368,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                (nothingn, resultdef =  = "untyped", pos = (368,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                )

                                             )
                                             (callparan, resultdef = <nil>, pos = (368,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                (nothingn, resultdef =  = "untyped", pos = (368,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                )

                                             )
                                          )
                                       )
                                       (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (368,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          value = " Image1 Top :"
                                       )
                                    )
                                    (calln, resultdef = AnsiString = "AnsiString(0)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       proc = ToString(<var LongInt>;<var AnsiString>):System.AnsiString;
                                       methodpointer =
                                       (subscriptn, resultdef = LongInt = "LongInt", pos = (369,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          (subscriptn, resultdef = TImage = "TImage", pos = (369,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = self
                                             )
                                             field = IMAGE1
                                          )
                                          field = FTOP
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (369,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (nothingn, resultdef =  = "untyped", pos = (369,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (369,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (nothingn, resultdef =  = "untyped", pos = (369,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          )

                                       )
                                    )
                                 )
                                 (calln, resultdef = AnsiString = "AnsiString(0)", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    proc = ToString(<var Single>;<var AnsiString>):System.AnsiString;
                                    methodpointer =
                                    (loadn, resultdef = Single = "Single", pos = (369,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = SCALEFACTOR
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (369,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (nothingn, resultdef =  = "untyped", pos = (369,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (369,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (nothingn, resultdef =  = "untyped", pos = (369,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )

                                    )
                                 )
                              )
                              (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (369,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 value = "  Zoom: "
                              )
                           )
                           (calln, resultdef = AnsiString = "AnsiString(0)", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              proc = ToString(<var Single>;<var AnsiString>):System.AnsiString;
                              methodpointer =
                              (loadn, resultdef = Single = "Single", pos = (370,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = ZOOMFACTOR
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (370,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (nothingn, resultdef =  = "untyped", pos = (370,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (370,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (nothingn, resultdef =  = "untyped", pos = (370,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )

                              )
                           )
                        )
                        (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (370,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           value = " H Scroll :"
                        )
                     )
                     (calln, resultdef = AnsiString = "AnsiString(0)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        proc = ToString(<var LongInt>;<var AnsiString>):System.AnsiString;
                        methodpointer =
                        (calln, resultdef = LongInt = "LongInt", pos = (370,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                           proc = GetPosition(<TControlScrollBar>):System.LongInt;
                           methodpointer =
                           (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (370,67), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                              (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (370,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    nil
                                    symbol = self
                                 )
                                 field = SCROLLBOX1
                              )
                              field = FHORZSCROLLBAR
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (370,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (nothingn, resultdef =  = "untyped", pos = (370,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (370,86), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (nothingn, resultdef =  = "untyped", pos = (370,86), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (370,86), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (nothingn, resultdef =  = "untyped", pos = (370,86), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )

                        )
                     )
                  )
                  (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (371,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     value = " V Scroll :"
                  )
               )
               (calln, resultdef = AnsiString = "AnsiString(0)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  proc = ToString(<var LongInt>;<var AnsiString>):System.AnsiString;
                  methodpointer =
                  (calln, resultdef = LongInt = "LongInt", pos = (371,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                     proc = GetPosition(<TControlScrollBar>):System.LongInt;
                     methodpointer =
                     (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (371,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (371,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = self
                           )
                           field = SCROLLBOX1
                        )
                        field = FVERTSCROLLBAR
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (371,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (371,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
Image1MouseMove(TObject;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (332,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (332,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (332,2), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (332,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "LongInt"
            value = 1281102
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (333,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (333,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 32
         (loadn, resultdef = LongInt = "LongInt", pos = (333,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = PX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (333,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 30, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (333,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (333,50), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 28
                  (typeconvn, resultdef = Single = "Single", pos = (333,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 16, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (333,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 15, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (333,35), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 14
                           (typeconvn, resultdef = Single = "Single", pos = (333,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (333,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                 nil
                                 symbol = X
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (333,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (333,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (334,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (334,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 32
         (loadn, resultdef = LongInt = "LongInt", pos = (334,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = PY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (334,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 30, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (334,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (334,50), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 28
                  (typeconvn, resultdef = Single = "Single", pos = (334,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 16, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (334,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 15, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (334,35), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 14
                           (typeconvn, resultdef = Single = "Single", pos = (334,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (334,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                 nil
                                 symbol = Y
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (334,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (334,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (364,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef =  = "untyped", pos = (336,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (equaln, resultdef = Boolean = "Boolean", pos = (336,19), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 2
            (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (336,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = HMOUSEBUTTON
            )
            (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (336,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "<enumeration type>"
               value = 0
            )
         )
         (blockn, resultdef =  = "untyped", pos = (337,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (338,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (338,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (338,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (338,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = SHIFT
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (350,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (casen, resultdef =  = "untyped", pos = (341,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = TToolType = "<enumeration type>", pos = (341,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = HCTOOL
                  )
                  (caseblock blockid: 0
                     (calln, resultdef =  = "untyped", pos = (342,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = TImage = "TImage", pos = (342,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (342,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (342,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (342,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (342,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (342,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (342,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (342,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (342,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = SHIFT
                           )

                        )
                     )
                  )
                  (caseblock blockid: 1
                     (calln, resultdef =  = "untyped", pos = (343,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (343,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (343,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (343,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (343,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (343,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE2
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (343,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (343,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (343,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (343,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (343,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (343,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (343,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = SHIFT
                           )

                        )
                     )
                  )
                  (caseblock blockid: 2
                     (calln, resultdef =  = "untyped", pos = (344,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (344,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (344,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PY
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (344,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (344,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (344,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE2
                           )

                        )
                        (callparan, resultdef = TImage = "TImage", pos = (344,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TImage = "TImage", pos = (344,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (344,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = IMAGE1
                           )

                        )
                        (callparan, resultdef = LongInt = "LongInt", pos = (344,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (loadn, resultdef = LongInt = "LongInt", pos = (344,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = PX
                           )

                        )
                        (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (344,55), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                           (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (344,55), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = SHIFT
                           )

                        )
                     )
                  )
                  (caseblock blockid: 3
                     (nothingn, resultdef =  = "untyped", pos = (345,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     )
                  )
               )

            )
         )
         (ifn, resultdef =  = "untyped", pos = (352,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (equaln, resultdef = Boolean = "Boolean", pos = (352,24), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 2
               (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (352,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  nil
                  symbol = HMOUSEBUTTON
               )
               (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (352,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                  typedef = "<enumeration type>"
                  value = 1
               )
            )
            (blockn, resultdef =  = "untyped", pos = (353,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               nil
            )
            (ifn, resultdef =  = "untyped", pos = (356,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (equaln, resultdef = Boolean = "Boolean", pos = (356,17), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 1
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (356,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = SHIFT
                  )
                  (setconstn, resultdef = <no type symbol> = "Set Of TShiftStateEnum", pos = (356,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
                     nil
                  )
               )
               (blockn, resultdef =  = "untyped", pos = (357,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (statementn, resultdef =  = "untyped", pos = (361,89), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef =  = "untyped", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                        proc = SetPosition(<TControlScrollBar>;const LongInt);
                        methodpointer =
                        (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (361,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                           (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = SCROLLBOX1
                           )
                           field = FHORZSCROLLBAR
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (361,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                           (typeconvn, resultdef = LongInt = "LongInt", pos = (361,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (361,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                    (calln, resultdef = LongInt = "LongInt", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetPosition(<TControlScrollBar>):System.LongInt;
                                       methodpointer =
                                       (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (361,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                          (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (361,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                nil
                                                symbol = self
                                             )
                                             field = SCROLLBOX1
                                          )
                                          field = FHORZSCROLLBAR
                                       )
                                       vmt_entry =
                                       (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7
                                          (derefn, resultdef = TControlScrollBar. = "<record type>", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7
                                             (typeconvn, resultdef = <no type symbol> = "^TControlScrollBar.<record type>", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 6, convtype = tc_equal, convnodeflags = []
                                                (subscriptn, resultdef = Pointer = "^untyped", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                   (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (361,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                                      (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (361,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                            nil
                                                            symbol = self
                                                         )
                                                         field = SCROLLBOX1
                                                      )
                                                      field = FHORZSCROLLBAR
                                                   )
                                                   field = hidden_vptr$TOBJECT
                                                )
                                             )
                                          )
                                          field = f34
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (361,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                          (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (361,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                             (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (361,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                   nil
                                                   symbol = self
                                                )
                                                field = SCROLLBOX1
                                             )
                                             field = FHORZSCROLLBAR
                                          )

                                       )
                                    )
                                 )
                                 (subn, resultdef = Int64 = "Int64", pos = (361,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (361,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (361,79), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                          nil
                                          symbol = PX
                                       )
                                    )
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (361,84), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (361,84), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                          nil
                                          symbol = OLDX
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (361,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (361,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                              (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                    nil
                                    symbol = self
                                 )
                                 field = SCROLLBOX1
                              )
                              field = FHORZSCROLLBAR
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (362,89), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (calln, resultdef =  = "untyped", pos = (362,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                        proc = SetPosition(<TControlScrollBar>;const LongInt);
                        methodpointer =
                        (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (362,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                           (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (362,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = SCROLLBOX1
                           )
                           field = FVERTSCROLLBAR
                        )
                        left =
                        (callparan, resultdef = LongInt = "LongInt", pos = (362,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                           (typeconvn, resultdef = LongInt = "LongInt", pos = (362,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                              (subn, resultdef = Int64 = "Int64", pos = (362,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                 (typeconvn, resultdef = Int64 = "Int64", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                    (calln, resultdef = LongInt = "LongInt", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetPosition(<TControlScrollBar>):System.LongInt;
                                       methodpointer =
                                       (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (362,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                          (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (362,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                nil
                                                symbol = self
                                             )
                                             field = SCROLLBOX1
                                          )
                                          field = FVERTSCROLLBAR
                                       )
                                       vmt_entry =
                                       (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7
                                          (derefn, resultdef = TControlScrollBar. = "<record type>", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7
                                             (typeconvn, resultdef = <no type symbol> = "^TControlScrollBar.<record type>", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 6, convtype = tc_equal, convnodeflags = []
                                                (subscriptn, resultdef = Pointer = "^untyped", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                   (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (362,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                                      (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (362,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                            nil
                                                            symbol = self
                                                         )
                                                         field = SCROLLBOX1
                                                      )
                                                      field = FVERTSCROLLBAR
                                                   )
                                                   field = hidden_vptr$TOBJECT
                                                )
                                             )
                                          )
                                          field = f34
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (362,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                          (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (362,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                             (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (362,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                   nil
                                                   symbol = self
                                                )
                                                field = SCROLLBOX1
                                             )
                                             field = FVERTSCROLLBAR
                                          )

                                       )
                                    )
                                 )
                                 (subn, resultdef = Int64 = "Int64", pos = (362,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (362,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (362,79), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                          nil
                                          symbol = PY
                                       )
                                    )
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (362,84), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (362,84), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                          nil
                                          symbol = OLDY
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (362,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                           (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (362,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                              (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (362,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                    nil
                                    symbol = self
                                 )
                                 field = SCROLLBOX1
                              )
                              field = FVERTSCROLLBAR
                           )

                        )
                     )

                  )
               )
               nil
               nil
            )
            nil
         )
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (371,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (366,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = UpdateText(AnsiString);
         left =
         (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (blockn, resultdef = AnsiString = "AnsiString(0)", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
               (statementn, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (tempcreaten, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     size = 8, temptypedef = AnsiString = "AnsiString(0)", tempinfo = $0000000091B9D970
                     []
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (calln, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     proc = $fpc_ansistr_concat_multi(var RawByteString;const {Open} Array Of RawByteString;<const Int64>;Word);
                     left =
                     (callparan, resultdef = <no type symbol> = "{Open} Array Of RawByteString", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CREF, flags = []
                        (typeconvn, resultdef = <no type symbol> = "{Array Of Const/Constant Open} Array of RawByteString", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 255, convtype = tc_equal, convnodeflags = []
                           (arrayconstructn, resultdef = <no type symbol> = "{Array Of Const/Constant Open} Array of RawByteString", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 255
                              (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (366,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                 value = "X: "
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255
                                    (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (tempcreaten, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                                          size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9D870
                                          [ti_nofini]
                                          tempinit =
                                          nil
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (tempcreaten, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          size = 8, temptypedef = Int64 = "Int64", tempinfo = $0000000091B9D4F0
                                          [ti_may_be_in_reg]
                                          tempinit =
                                          nil
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (assignn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                                          (temprefn, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                             temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9D4F0 flags = [ti_may_be_in_reg])
                                          )
                                          (typeconvn, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (366,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                nil
                                                symbol = X
                                             )
                                          )
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (tempcreaten, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9D770
                                          []
                                          tempinit =
                                          nil
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (blockn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255
                                          (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (calln, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                intrinsiccode = in_str_x_string
                                                left =
                                                (callparan, resultdef = OpenString = "ShortString[0]", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                   (temprefn, resultdef = ShortString = "ShortString[255]", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                                                      temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9D770 flags = [])
                                                   )

                                                )
                                                (callparan, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                   (temprefn, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                      temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9D4F0 flags = [ti_may_be_in_reg])
                                                   )

                                                )
                                                (callparan, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                   (ordconstn, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0
                                                      typedef = "Int64"
                                                      value = 255
                                                   )

                                                )
                                                (callparan, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                   (ordconstn, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                      typedef = "Int64"
                                                      value = -1
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                             (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                left =
                                                (callparan, resultdef = ShortString = "ShortString[255]", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                   (temprefn, resultdef = ShortString = "ShortString[255]", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                      temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9D770 flags = [])
                                                   )

                                                )
                                                (callparan, resultdef = <nil>, pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                   (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                      (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                         temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9D870 flags = [ti_nofini])
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = Word = "Word", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                   (ordconstn, resultdef = Word = "Word", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                      typedef = "Word"
                                                      value = 0
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (calln, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                left =
                                                (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                   (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                      (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                         temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9D870 flags = [ti_nofini])
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = Boolean = "Boolean", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                   (ordconstn, resultdef = Boolean = "Boolean", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                      typedef = "Boolean"
                                                      value = 0
                                                   )

                                                )
                                                (callparan, resultdef = Word = "Word", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                   (ordconstn, resultdef = Word = "Word", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                      typedef = "Word"
                                                      value = 0
                                                   )

                                                )
                                             )

                                          )
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                       (tempdeleten, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          release_to_normal: FALSE, temptypedef = Int64 = "Int64", temptype = tt_persistent, tempinfo = $0000000091B9D4F0
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                       (tempdeleten, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9D770
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                       (tempdeleten, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9D870
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                                          temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9D870 flags = [ti_nofini])
                                       )

                                    )
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (366,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                       value = "  Y: "
                                    )
                                    (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255
                                          (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (tempcreaten, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                                                size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9D570
                                                [ti_nofini]
                                                tempinit =
                                                nil
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (tempcreaten, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                size = 8, temptypedef = Int64 = "Int64", tempinfo = $0000000091B9D5F0
                                                [ti_may_be_in_reg]
                                                tempinit =
                                                nil
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (assignn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                                                (temprefn, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                   temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                                                )
                                                (typeconvn, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (366,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                      nil
                                                      symbol = Y
                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (tempcreaten, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9D9F0
                                                []
                                                tempinit =
                                                nil
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (blockn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255
                                                (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (calln, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                      intrinsiccode = in_str_x_string
                                                      left =
                                                      (callparan, resultdef = OpenString = "ShortString[0]", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                         (temprefn, resultdef = ShortString = "ShortString[255]", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                                                            temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9D9F0 flags = [])
                                                         )

                                                      )
                                                      (callparan, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                         (temprefn, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                            temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                                                         )

                                                      )
                                                      (callparan, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0
                                                            typedef = "Int64"
                                                            value = 255
                                                         )

                                                      )
                                                      (callparan, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                            typedef = "Int64"
                                                            value = -1
                                                         )

                                                      )
                                                   )

                                                )
                                                (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                   (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                      proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                      left =
                                                      (callparan, resultdef = ShortString = "ShortString[255]", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                         (temprefn, resultdef = ShortString = "ShortString[255]", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                            temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9D9F0 flags = [])
                                                         )

                                                      )
                                                      (callparan, resultdef = <nil>, pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                         (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                            (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                               temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9D570 flags = [ti_nofini])
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = Word = "Word", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                         (ordconstn, resultdef = Word = "Word", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                            typedef = "Word"
                                                            value = 0
                                                         )

                                                      )
                                                   )

                                                )
                                                (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (calln, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                      proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                      left =
                                                      (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                         (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                            (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                               temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9D570 flags = [ti_nofini])
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = Boolean = "Boolean", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                         (ordconstn, resultdef = Boolean = "Boolean", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                            typedef = "Boolean"
                                                            value = 0
                                                         )

                                                      )
                                                      (callparan, resultdef = Word = "Word", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                         (ordconstn, resultdef = Word = "Word", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                            typedef = "Word"
                                                            value = 0
                                                         )

                                                      )
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                             (tempdeleten, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                release_to_normal: FALSE, temptypedef = Int64 = "Int64", temptype = tt_persistent, tempinfo = $0000000091B9D5F0
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                             (tempdeleten, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9D9F0
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                             (tempdeleten, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9D570
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                             (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                                                temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9D570 flags = [ti_nofini])
                                             )

                                          )
                                       )
                                       (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (366,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                             value = " -  PX: "
                                          )
                                          (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255
                                                (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (tempcreaten, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                                                      size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9DA70
                                                      [ti_nofini]
                                                      tempinit =
                                                      nil
                                                   )

                                                )
                                                (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (tempcreaten, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                      size = 8, temptypedef = Int64 = "Int64", tempinfo = $0000000091B9DAF0
                                                      [ti_may_be_in_reg]
                                                      tempinit =
                                                      nil
                                                   )

                                                )
                                                (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (assignn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                                                      (temprefn, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                         temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9DAF0 flags = [ti_may_be_in_reg])
                                                      )
                                                      (typeconvn, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                         (loadn, resultdef = LongInt = "LongInt", pos = (367,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                            nil
                                                            symbol = PX
                                                         )
                                                      )
                                                   )

                                                )
                                                (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (tempcreaten, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                      size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9DB70
                                                      []
                                                      tempinit =
                                                      nil
                                                   )

                                                )
                                                (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                   (blockn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255
                                                      (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                         (calln, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                            intrinsiccode = in_str_x_string
                                                            left =
                                                            (callparan, resultdef = OpenString = "ShortString[0]", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                               (temprefn, resultdef = ShortString = "ShortString[255]", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                                                                  temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9DB70 flags = [])
                                                               )

                                                            )
                                                            (callparan, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                               (temprefn, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                  temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9DAF0 flags = [ti_may_be_in_reg])
                                                               )

                                                            )
                                                            (callparan, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0
                                                                  typedef = "Int64"
                                                                  value = 255
                                                               )

                                                            )
                                                            (callparan, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                  typedef = "Int64"
                                                                  value = -1
                                                               )

                                                            )
                                                         )

                                                      )
                                                      (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                         (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                            proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                            left =
                                                            (callparan, resultdef = ShortString = "ShortString[255]", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                               (temprefn, resultdef = ShortString = "ShortString[255]", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                  temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9DB70 flags = [])
                                                               )

                                                            )
                                                            (callparan, resultdef = <nil>, pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                               (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                  (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                     temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DA70 flags = [ti_nofini])
                                                                  )
                                                               )

                                                            )
                                                            (callparan, resultdef = Word = "Word", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                               (ordconstn, resultdef = Word = "Word", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                  typedef = "Word"
                                                                  value = 0
                                                               )

                                                            )
                                                         )

                                                      )
                                                      (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                         (calln, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                            proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                            left =
                                                            (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                               (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                  (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                     temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DA70 flags = [ti_nofini])
                                                                  )
                                                               )

                                                            )
                                                            (callparan, resultdef = Boolean = "Boolean", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                               (ordconstn, resultdef = Boolean = "Boolean", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                  typedef = "Boolean"
                                                                  value = 0
                                                               )

                                                            )
                                                            (callparan, resultdef = Word = "Word", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                               (ordconstn, resultdef = Word = "Word", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                  typedef = "Word"
                                                                  value = 0
                                                               )

                                                            )
                                                         )

                                                      )
                                                   )

                                                )
                                                (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                   (tempdeleten, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                      release_to_normal: FALSE, temptypedef = Int64 = "Int64", temptype = tt_persistent, tempinfo = $0000000091B9DAF0
                                                   )

                                                )
                                                (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                   (tempdeleten, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                      release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9DB70
                                                   )

                                                )
                                                (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                   (tempdeleten, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                      release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9DA70
                                                   )

                                                )
                                                (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                   (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                                                      temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DA70 flags = [ti_nofini])
                                                   )

                                                )
                                             )
                                             (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (367,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                   value = "  PY: "
                                                )
                                                (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                   (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255
                                                      (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                         (tempcreaten, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                                                            size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9DBF0
                                                            [ti_nofini]
                                                            tempinit =
                                                            nil
                                                         )

                                                      )
                                                      (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                         (tempcreaten, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                            size = 8, temptypedef = Int64 = "Int64", tempinfo = $0000000091B9DC70
                                                            [ti_may_be_in_reg]
                                                            tempinit =
                                                            nil
                                                         )

                                                      )
                                                      (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                         (assignn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                                                            (temprefn, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                               temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9DC70 flags = [ti_may_be_in_reg])
                                                            )
                                                            (typeconvn, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, convtype = tc_int_2_int, convnodeflags = []
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (367,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                  nil
                                                                  symbol = PY
                                                               )
                                                            )
                                                         )

                                                      )
                                                      (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                         (tempcreaten, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                            size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9DCF0
                                                            []
                                                            tempinit =
                                                            nil
                                                         )

                                                      )
                                                      (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                         (blockn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255
                                                            (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (calln, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                  proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                                  intrinsiccode = in_str_x_string
                                                                  left =
                                                                  (callparan, resultdef = OpenString = "ShortString[0]", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                     (temprefn, resultdef = ShortString = "ShortString[255]", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                                                                        temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9DCF0 flags = [])
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                                     (temprefn, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                        temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9DC70 flags = [ti_may_be_in_reg])
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0
                                                                        typedef = "Int64"
                                                                        value = 255
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                        typedef = "Int64"
                                                                        value = -1
                                                                     )

                                                                  )
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                               (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                  proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                                  left =
                                                                  (callparan, resultdef = ShortString = "ShortString[255]", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                     (temprefn, resultdef = ShortString = "ShortString[255]", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                        temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9DCF0 flags = [])
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = <nil>, pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                     (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                        (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                           temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DBF0 flags = [ti_nofini])
                                                                        )
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = Word = "Word", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                     (ordconstn, resultdef = Word = "Word", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                        typedef = "Word"
                                                                        value = 0
                                                                     )

                                                                  )
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (calln, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                  proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                                  left =
                                                                  (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                     (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                        (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                           temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DBF0 flags = [ti_nofini])
                                                                        )
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = Boolean = "Boolean", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                     (ordconstn, resultdef = Boolean = "Boolean", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                        typedef = "Boolean"
                                                                        value = 0
                                                                     )

                                                                  )
                                                                  (callparan, resultdef = Word = "Word", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                     (ordconstn, resultdef = Word = "Word", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                        typedef = "Word"
                                                                        value = 0
                                                                     )

                                                                  )
                                                               )

                                                            )
                                                         )

                                                      )
                                                      (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                         (tempdeleten, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                            release_to_normal: FALSE, temptypedef = Int64 = "Int64", temptype = tt_persistent, tempinfo = $0000000091B9DC70
                                                         )

                                                      )
                                                      (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                         (tempdeleten, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                            release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9DCF0
                                                         )

                                                      )
                                                      (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                         (tempdeleten, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                            release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9DBF0
                                                         )

                                                      )
                                                      (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                         (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                                                            temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DBF0 flags = [ti_nofini])
                                                         )

                                                      )
                                                   )
                                                   (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (367,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                         value = " -   Scale:  Image1 Left :"
                                                      )
                                                      (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                         (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255
                                                            (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                                                                  size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9DD70
                                                                  [ti_nofini]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                  size = 8, temptypedef = <no type symbol> = "^LongInt", tempinfo = $0000000091B9DDF0
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (assignn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 7
                                                                  (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                                     temptypedef = <no type symbol> = "^LongInt", (tempinfo = $0000000091B9DDF0 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (addrn, resultdef = <no type symbol> = "^LongInt", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_internal], cmplx = 5, addrnodeflags = [anf_typedaddr]
                                                                     (subscriptn, resultdef = LongInt = "LongInt", pos = (368,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_address_taken,nf_isproperty,nf_no_lvalue], cmplx = 4
                                                                        (subscriptn, resultdef = TImage = "TImage", pos = (368,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                                              nil
                                                                              symbol = self
                                                                           )
                                                                           field = IMAGE1
                                                                        )
                                                                        field = FLEFT
                                                                     )
                                                                  )
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                  size = 8, temptypedef = Int64 = "Int64", tempinfo = $0000000091B9DE70
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (assignn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                  (temprefn, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                                     temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9DE70 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (typeconvn, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                     (derefn, resultdef = LongInt = "LongInt", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                        (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                           temptypedef = <no type symbol> = "^LongInt", (tempinfo = $0000000091B9DDF0 flags = [ti_may_be_in_reg])
                                                                        )
                                                                     )
                                                                  )
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (tempcreaten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                  size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9DEF0
                                                                  []
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                               (blockn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255
                                                                  (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (calln, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                        proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                                        intrinsiccode = in_str_x_string
                                                                        left =
                                                                        (callparan, resultdef = OpenString = "ShortString[0]", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                           (temprefn, resultdef = ShortString = "ShortString[255]", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                                                                              temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9DEF0 flags = [])
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                                           (temprefn, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                              temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9DE70 flags = [ti_may_be_in_reg])
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                           (ordconstn, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0
                                                                              typedef = "Int64"
                                                                              value = 255
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                           (ordconstn, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                              typedef = "Int64"
                                                                              value = -1
                                                                           )

                                                                        )
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                     (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                        proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                                        left =
                                                                        (callparan, resultdef = ShortString = "ShortString[255]", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                           (temprefn, resultdef = ShortString = "ShortString[255]", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                              temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9DEF0 flags = [])
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = <nil>, pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                           (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                              (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                                 temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DD70 flags = [ti_nofini])
                                                                              )
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = Word = "Word", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                           (ordconstn, resultdef = Word = "Word", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                              typedef = "Word"
                                                                              value = 0
                                                                           )

                                                                        )
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (calln, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                        proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                                        left =
                                                                        (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                           (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                              (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                                 temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DD70 flags = [ti_nofini])
                                                                              )
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = Boolean = "Boolean", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                           (ordconstn, resultdef = Boolean = "Boolean", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                              typedef = "Boolean"
                                                                              value = 0
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = Word = "Word", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                           (ordconstn, resultdef = Word = "Word", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                              typedef = "Word"
                                                                              value = 0
                                                                           )

                                                                        )
                                                                     )

                                                                  )
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                               (tempdeleten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = Int64 = "Int64", temptype = tt_persistent, tempinfo = $0000000091B9DE70
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                               (tempdeleten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9DEF0
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                               (tempdeleten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                  release_to_normal: FALSE, temptypedef = <no type symbol> = "^LongInt", temptype = tt_persistent, tempinfo = $0000000091B9DDF0
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                               (tempdeleten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                  release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9DD70
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                               (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                                                                  temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DD70 flags = [ti_nofini])
                                                               )

                                                            )
                                                         )
                                                         (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (368,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                               value = " Image1 Top :"
                                                            )
                                                            (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                               (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255
                                                                  (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (tempcreaten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                                                                        size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9DF70
                                                                        [ti_nofini]
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (tempcreaten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        size = 8, temptypedef = <no type symbol> = "^LongInt", tempinfo = $0000000091B9DFF0
                                                                        [ti_may_be_in_reg]
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (assignn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 7
                                                                        (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                                           temptypedef = <no type symbol> = "^LongInt", (tempinfo = $0000000091B9DFF0 flags = [ti_may_be_in_reg])
                                                                        )
                                                                        (addrn, resultdef = <no type symbol> = "^LongInt", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_internal], cmplx = 5, addrnodeflags = [anf_typedaddr]
                                                                           (subscriptn, resultdef = LongInt = "LongInt", pos = (369,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_address_taken,nf_isproperty,nf_no_lvalue], cmplx = 4
                                                                              (subscriptn, resultdef = TImage = "TImage", pos = (369,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                                                    nil
                                                                                    symbol = self
                                                                                 )
                                                                                 field = IMAGE1
                                                                              )
                                                                              field = FTOP
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (tempcreaten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        size = 8, temptypedef = Int64 = "Int64", tempinfo = $0000000091B9E070
                                                                        [ti_may_be_in_reg]
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (assignn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                        (temprefn, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                                           temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9E070 flags = [ti_may_be_in_reg])
                                                                        )
                                                                        (typeconvn, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                           (derefn, resultdef = LongInt = "LongInt", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                              (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                                 temptypedef = <no type symbol> = "^LongInt", (tempinfo = $0000000091B9DFF0 flags = [ti_may_be_in_reg])
                                                                              )
                                                                           )
                                                                        )
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (tempcreaten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9E0F0
                                                                        []
                                                                        tempinit =
                                                                        nil
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                     (blockn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255
                                                                        (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                           (calln, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                              proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                                              intrinsiccode = in_str_x_string
                                                                              left =
                                                                              (callparan, resultdef = OpenString = "ShortString[0]", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                 (temprefn, resultdef = ShortString = "ShortString[255]", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                                                                                    temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9E0F0 flags = [])
                                                                                 )

                                                                              )
                                                                              (callparan, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                                                 (temprefn, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                                                    temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9E070 flags = [ti_may_be_in_reg])
                                                                                 )

                                                                              )
                                                                              (callparan, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                 (ordconstn, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0
                                                                                    typedef = "Int64"
                                                                                    value = 255
                                                                                 )

                                                                              )
                                                                              (callparan, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                 (ordconstn, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                                    typedef = "Int64"
                                                                                    value = -1
                                                                                 )

                                                                              )
                                                                           )

                                                                        )
                                                                        (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                           (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                              proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                                              left =
                                                                              (callparan, resultdef = ShortString = "ShortString[255]", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                 (temprefn, resultdef = ShortString = "ShortString[255]", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                    temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9E0F0 flags = [])
                                                                                 )

                                                                              )
                                                                              (callparan, resultdef = <nil>, pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                 (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                    (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                                       temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DF70 flags = [ti_nofini])
                                                                                    )
                                                                                 )

                                                                              )
                                                                              (callparan, resultdef = Word = "Word", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                 (ordconstn, resultdef = Word = "Word", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                                    typedef = "Word"
                                                                                    value = 0
                                                                                 )

                                                                              )
                                                                           )

                                                                        )
                                                                        (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                           (calln, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                              proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                                              left =
                                                                              (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                 (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                    (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                                       temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DF70 flags = [ti_nofini])
                                                                                    )
                                                                                 )

                                                                              )
                                                                              (callparan, resultdef = Boolean = "Boolean", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                 (ordconstn, resultdef = Boolean = "Boolean", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                                    typedef = "Boolean"
                                                                                    value = 0
                                                                                 )

                                                                              )
                                                                              (callparan, resultdef = Word = "Word", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                 (ordconstn, resultdef = Word = "Word", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                                    typedef = "Word"
                                                                                    value = 0
                                                                                 )

                                                                              )
                                                                           )

                                                                        )
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                     (tempdeleten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        release_to_normal: FALSE, temptypedef = Int64 = "Int64", temptype = tt_persistent, tempinfo = $0000000091B9E070
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                     (tempdeleten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9E0F0
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                     (tempdeleten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        release_to_normal: FALSE, temptypedef = <no type symbol> = "^LongInt", temptype = tt_persistent, tempinfo = $0000000091B9DFF0
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                     (tempdeleten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                        release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9DF70
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                     (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                                                                        temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DF70 flags = [ti_nofini])
                                                                     )

                                                                  )
                                                               )
                                                               (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                  (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255
                                                                     (statementn, resultdef =  = "untyped", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                        (tempcreaten, resultdef =  = "untyped", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                                                                           size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9E170
                                                                           [ti_nofini]
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                        (calln, resultdef = AnsiString = "AnsiString(0)", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                           proc = FloatToStr(<var AnsiString>;Single;const TFormatSettings):System.AnsiString;
                                                                           left =
                                                                           (callparan, resultdef = TFormatSettings = "<record type>", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                              (loadn, resultdef = TFormatSettings = "<record type>", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_address_taken], cmplx = 1
                                                                                 nil
                                                                                 symbol = DEFAULTFORMATSETTINGS
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Single = "Single", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                              (loadn, resultdef = Single = "Single", pos = (369,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                 nil
                                                                                 symbol = SCALEFACTOR
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = <nil>, pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                              (typeconvn, resultdef = AnsiString = "AnsiString(0)", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                 (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                                    temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E170 flags = [ti_nofini])
                                                                                 )
                                                                              )

                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                        (tempdeleten, resultdef =  = "untyped", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                           release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9E170
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                        (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                                                                           temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E170 flags = [ti_nofini])
                                                                        )

                                                                     )
                                                                  )
                                                                  (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                     (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (369,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                        value = "  Zoom: "
                                                                     )
                                                                     (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                        (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255
                                                                           (statementn, resultdef =  = "untyped", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                              (tempcreaten, resultdef =  = "untyped", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                                                                                 size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9E1F0
                                                                                 [ti_nofini]
                                                                                 tempinit =
                                                                                 nil
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                              (calln, resultdef = AnsiString = "AnsiString(0)", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                 proc = FloatToStr(<var AnsiString>;Single;const TFormatSettings):System.AnsiString;
                                                                                 left =
                                                                                 (callparan, resultdef = TFormatSettings = "<record type>", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                    (loadn, resultdef = TFormatSettings = "<record type>", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_address_taken], cmplx = 1
                                                                                       nil
                                                                                       symbol = DEFAULTFORMATSETTINGS
                                                                                    )

                                                                                 )
                                                                                 (callparan, resultdef = Single = "Single", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                    (loadn, resultdef = Single = "Single", pos = (370,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                       nil
                                                                                       symbol = ZOOMFACTOR
                                                                                    )

                                                                                 )
                                                                                 (callparan, resultdef = <nil>, pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                    (typeconvn, resultdef = AnsiString = "AnsiString(0)", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                       (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                                          temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E1F0 flags = [ti_nofini])
                                                                                       )
                                                                                    )

                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                              (tempdeleten, resultdef =  = "untyped", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                 release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9E1F0
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                              (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                                                                                 temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E1F0 flags = [ti_nofini])
                                                                              )

                                                                           )
                                                                        )
                                                                        (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                           (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (370,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                              value = " H Scroll :"
                                                                           )
                                                                           (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                              (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255
                                                                                 (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (tempcreaten, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                       size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000091B9E2F0
                                                                                       []
                                                                                       tempinit =
                                                                                       nil
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (assignn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                       (temprefn, resultdef = LongInt = "LongInt", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                                                                                          temptypedef = LongInt = "LongInt", (tempinfo = $0000000091B9E2F0 flags = [])
                                                                                       )
                                                                                       (calln, resultdef = LongInt = "LongInt", pos = (370,76), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                                          proc = GetPosition(<TControlScrollBar>):System.LongInt;
                                                                                          methodpointer =
                                                                                          (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (370,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                                                                             (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (370,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                                (loadn, resultdef = TFormDocument = "TFormDocument", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                                                                   nil
                                                                                                   symbol = self
                                                                                                )
                                                                                                field = SCROLLBOX1
                                                                                             )
                                                                                             field = FHORZSCROLLBAR
                                                                                          )
                                                                                          vmt_entry =
                                                                                          (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (370,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7
                                                                                             (derefn, resultdef = TControlScrollBar. = "<record type>", pos = (370,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7
                                                                                                (typeconvn, resultdef = <no type symbol> = "^TControlScrollBar.<record type>", pos = (370,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 6, convtype = tc_equal, convnodeflags = []
                                                                                                   (subscriptn, resultdef = Pointer = "^untyped", pos = (370,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                                                                      (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (370,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                                                                                         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (370,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                                            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                                                                               nil
                                                                                                               symbol = self
                                                                                                            )
                                                                                                            field = SCROLLBOX1
                                                                                                         )
                                                                                                         field = FHORZSCROLLBAR
                                                                                                      )
                                                                                                      field = hidden_vptr$TOBJECT
                                                                                                   )
                                                                                                )
                                                                                             )
                                                                                             field = f34
                                                                                          )
                                                                                          left =
                                                                                          (callparan, resultdef = <nil>, pos = (370,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                             (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (370,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                                                                                (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (370,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                                   (loadn, resultdef = TFormDocument = "TFormDocument", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                                                                      nil
                                                                                                      symbol = self
                                                                                                   )
                                                                                                   field = SCROLLBOX1
                                                                                                )
                                                                                                field = FHORZSCROLLBAR
                                                                                             )

                                                                                          )
                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (tempcreaten, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                                                                                       size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9E370
                                                                                       [ti_nofini]
                                                                                       tempinit =
                                                                                       nil
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (tempcreaten, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                       size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9E3F0
                                                                                       []
                                                                                       tempinit =
                                                                                       nil
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                    (blockn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255
                                                                                       (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (calln, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                             proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                                                             intrinsiccode = in_str_x_string
                                                                                             left =
                                                                                             (callparan, resultdef = OpenString = "ShortString[0]", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                                (temprefn, resultdef = ShortString = "ShortString[255]", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                                                                                                   temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9E3F0 flags = [])
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Int64 = "Int64", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                                                                                (typeconvn, resultdef = Int64 = "Int64", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                                   (temprefn, resultdef = LongInt = "LongInt", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                      temptypedef = LongInt = "LongInt", (tempinfo = $0000000091B9E2F0 flags = [])
                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Int64 = "Int64", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                                (ordconstn, resultdef = Int64 = "Int64", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0
                                                                                                   typedef = "Int64"
                                                                                                   value = 255
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Int64 = "Int64", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                                (ordconstn, resultdef = Int64 = "Int64", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                                                   typedef = "Int64"
                                                                                                   value = -1
                                                                                                )

                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                          (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                             proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                                                             left =
                                                                                             (callparan, resultdef = ShortString = "ShortString[255]", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                                (temprefn, resultdef = ShortString = "ShortString[255]", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                   temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9E3F0 flags = [])
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = <nil>, pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                                (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                   (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                                                      temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E370 flags = [ti_nofini])
                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Word = "Word", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                                (ordconstn, resultdef = Word = "Word", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                                                   typedef = "Word"
                                                                                                   value = 0
                                                                                                )

                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (calln, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                             proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                                                             left =
                                                                                             (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                                (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                   (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                                                      temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E370 flags = [ti_nofini])
                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Boolean = "Boolean", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                                (ordconstn, resultdef = Boolean = "Boolean", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                                                   typedef = "Boolean"
                                                                                                   value = 0
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Word = "Word", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                                (ordconstn, resultdef = Word = "Word", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                                                   typedef = "Word"
                                                                                                   value = 0
                                                                                                )

                                                                                             )
                                                                                          )

                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                    (tempdeleten, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                       release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9E3F0
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                    (tempdeleten, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                       release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000091B9E2F0
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                    (tempdeleten, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                       release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9E370
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                    (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                                                                                       temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E370 flags = [ti_nofini])
                                                                                    )

                                                                                 )
                                                                              )
                                                                              (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                                 (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (371,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                                                                    value = " V Scroll :"
                                                                                 )
                                                                                 (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                                                    (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255
                                                                                       (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (tempcreaten, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                             size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000091B9E470
                                                                                             []
                                                                                             tempinit =
                                                                                             nil
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (assignn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                             (temprefn, resultdef = LongInt = "LongInt", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                                                                                                temptypedef = LongInt = "LongInt", (tempinfo = $0000000091B9E470 flags = [])
                                                                                             )
                                                                                             (calln, resultdef = LongInt = "LongInt", pos = (371,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                                                                proc = GetPosition(<TControlScrollBar>):System.LongInt;
                                                                                                methodpointer =
                                                                                                (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (371,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                                                                                   (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (371,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                                      (loadn, resultdef = TFormDocument = "TFormDocument", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                                                                         nil
                                                                                                         symbol = self
                                                                                                      )
                                                                                                      field = SCROLLBOX1
                                                                                                   )
                                                                                                   field = FVERTSCROLLBAR
                                                                                                )
                                                                                                vmt_entry =
                                                                                                (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (371,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7
                                                                                                   (derefn, resultdef = TControlScrollBar. = "<record type>", pos = (371,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7
                                                                                                      (typeconvn, resultdef = <no type symbol> = "^TControlScrollBar.<record type>", pos = (371,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 6, convtype = tc_equal, convnodeflags = []
                                                                                                         (subscriptn, resultdef = Pointer = "^untyped", pos = (371,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                                                                                                            (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (371,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                                                                                               (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (371,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                                                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                                                                                     nil
                                                                                                                     symbol = self
                                                                                                                  )
                                                                                                                  field = SCROLLBOX1
                                                                                                               )
                                                                                                               field = FVERTSCROLLBAR
                                                                                                            )
                                                                                                            field = hidden_vptr$TOBJECT
                                                                                                         )
                                                                                                      )
                                                                                                   )
                                                                                                   field = f34
                                                                                                )
                                                                                                left =
                                                                                                (callparan, resultdef = <nil>, pos = (371,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                                   (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (371,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                                                                                      (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (371,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                                                                         (loadn, resultdef = TFormDocument = "TFormDocument", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                                                                            nil
                                                                                                            symbol = self
                                                                                                         )
                                                                                                         field = SCROLLBOX1
                                                                                                      )
                                                                                                      field = FVERTSCROLLBAR
                                                                                                   )

                                                                                                )
                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (tempcreaten, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                                                                                             size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9E4F0
                                                                                             [ti_nofini]
                                                                                             tempinit =
                                                                                             nil
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (tempcreaten, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                             size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9E570
                                                                                             []
                                                                                             tempinit =
                                                                                             nil
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                          (blockn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255
                                                                                             (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                (calln, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                   proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                                                                   intrinsiccode = in_str_x_string
                                                                                                   left =
                                                                                                   (callparan, resultdef = OpenString = "ShortString[0]", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                                      (temprefn, resultdef = ShortString = "ShortString[255]", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                                                                                                         temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9E570 flags = [])
                                                                                                      )

                                                                                                   )
                                                                                                   (callparan, resultdef = Int64 = "Int64", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                                                                                      (typeconvn, resultdef = Int64 = "Int64", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                                                                         (temprefn, resultdef = LongInt = "LongInt", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                            temptypedef = LongInt = "LongInt", (tempinfo = $0000000091B9E470 flags = [])
                                                                                                         )
                                                                                                      )

                                                                                                   )
                                                                                                   (callparan, resultdef = Int64 = "Int64", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                                      (ordconstn, resultdef = Int64 = "Int64", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0
                                                                                                         typedef = "Int64"
                                                                                                         value = 255
                                                                                                      )

                                                                                                   )
                                                                                                   (callparan, resultdef = Int64 = "Int64", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                                      (ordconstn, resultdef = Int64 = "Int64", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                                                         typedef = "Int64"
                                                                                                         value = -1
                                                                                                      )

                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                                                                   proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                                                                   left =
                                                                                                   (callparan, resultdef = ShortString = "ShortString[255]", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                                      (temprefn, resultdef = ShortString = "ShortString[255]", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                                         temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9E570 flags = [])
                                                                                                      )

                                                                                                   )
                                                                                                   (callparan, resultdef = <nil>, pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                                      (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                         (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                                                            temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E4F0 flags = [ti_nofini])
                                                                                                         )
                                                                                                      )

                                                                                                   )
                                                                                                   (callparan, resultdef = Word = "Word", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                                      (ordconstn, resultdef = Word = "Word", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                                                         typedef = "Word"
                                                                                                         value = 0
                                                                                                      )

                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                (calln, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                                                                   proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                                                                   left =
                                                                                                   (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                                                                      (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                                                                         (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                                                                            temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E4F0 flags = [ti_nofini])
                                                                                                         )
                                                                                                      )

                                                                                                   )
                                                                                                   (callparan, resultdef = Boolean = "Boolean", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                                      (ordconstn, resultdef = Boolean = "Boolean", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                                                         typedef = "Boolean"
                                                                                                         value = 0
                                                                                                      )

                                                                                                   )
                                                                                                   (callparan, resultdef = Word = "Word", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                                                                      (ordconstn, resultdef = Word = "Word", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                                                                         typedef = "Word"
                                                                                                         value = 0
                                                                                                      )

                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                          (tempdeleten, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                             release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9E570
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                          (tempdeleten, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                             release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000091B9E470
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                                                                          (tempdeleten, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                                                                             release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9E4F0
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                                                          (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                                                                                             temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E4F0 flags = [ti_nofini])
                                                                                          )

                                                                                       )
                                                                                    )
                                                                                    nil
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )

                     )
                     (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                        (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091B9D970 flags = [])
                        )

                     )
                     (callparan, resultdef = Word = "Word", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                        (ordconstn, resultdef = Word = "Word", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                           typedef = "Word"
                           value = 0
                        )

                     )
                     (callparan, resultdef = Int64 = "Int64", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                        (ordconstn, resultdef = Int64 = "Int64", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0
                           typedef = "Int64"
                           value = 18
                        )

                     )
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (tempdeleten, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString(0)", temptype = tt_persistent, tempinfo = $0000000091B9D970
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  (temprefn, resultdef = AnsiString = "AnsiString(0)", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091B9D970 flags = [])
                  )

               )
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
Image1MouseMove(TObject;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F86C0
   (statementn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8720
      (asmn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8780
      )

   )
   (statementn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F87E0
      (asmn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8840
      )

   )
   (statementn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F88A0
      (asmn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8900
      )

   )
   (statementn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8960
      (asmn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F89C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8A20
      (tryfinallyn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8A80
         (blockn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8AE0
            (statementn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8B40
               (blockn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 00000000933E1620
                  (statementn, resultdef =  = "untyped", pos = (332,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093379540
                     (assignn, resultdef =  = "untyped", pos = (332,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933E2160
                        (loadn, resultdef = LongInt = "LongInt", pos = (332,2), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933A0120
                           nil
                           symbol = HMOUSEEVENT
                        )
                        (ordconstn, resultdef = LongInt = "LongInt", pos = (332,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933F8BA0
                           typedef = "LongInt"
                           value = 1281102
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (333,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1560
                     (assignn, resultdef =  = "untyped", pos = (333,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 32, optinfo = 00000000933E2220
                        (loadn, resultdef = LongInt = "LongInt", pos = (333,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933E03C0
                           nil
                           symbol = PX
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (333,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 30, optinfo = 00000000933F8C00, convtype = tc_int_2_int, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (333,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, optinfo = 00000000933F8C60, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (333,50), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 28, optinfo = 00000000933F8CC0
                                 (typeconvn, resultdef = Single = "Single", pos = (333,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 16, optinfo = 00000000933F8D20, convtype = tc_int_2_real, convnodeflags = []
                                    (inlinen, resultdef = Int64 = "Int64", pos = (333,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 15, optinfo = 00000000933F8D80, inlinenumber = in_round_real
                                       (slashn, resultdef = Single = "Single", pos = (333,35), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 14, optinfo = 00000000933F8DE0
                                          (typeconvn, resultdef = Single = "Single", pos = (333,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 00000000933F8E40, convtype = tc_int_2_real, convnodeflags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (333,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933A0180
                                                nil
                                                symbol = X
                                             )
                                          )
                                          (loadn, resultdef = Single = "Single", pos = (333,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933A01E0
                                             nil
                                             symbol = ZOOMFACTOR
                                          )
                                       )
                                    )
                                 )
                                 (loadn, resultdef = Single = "Single", pos = (333,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933A00C0
                                    nil
                                    symbol = SCALEFACTOR
                                 )
                              )
                           )
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (334,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1500
                     (assignn, resultdef =  = "untyped", pos = (334,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 32, optinfo = 00000000933E2760
                        (loadn, resultdef = LongInt = "LongInt", pos = (334,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933E0300
                           nil
                           symbol = PY
                        )
                        (typeconvn, resultdef = LongInt = "LongInt", pos = (334,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 30, optinfo = 00000000933F8EA0, convtype = tc_int_2_int, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (334,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, optinfo = 00000000933F8F00, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (334,50), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 28, optinfo = 00000000933F8F60
                                 (typeconvn, resultdef = Single = "Single", pos = (334,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 16, optinfo = 00000000933F8FC0, convtype = tc_int_2_real, convnodeflags = []
                                    (inlinen, resultdef = Int64 = "Int64", pos = (334,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 15, optinfo = 00000000933F9020, inlinenumber = in_round_real
                                       (slashn, resultdef = Single = "Single", pos = (334,35), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 14, optinfo = 00000000933F9080
                                          (typeconvn, resultdef = Single = "Single", pos = (334,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 00000000933F90E0, convtype = tc_int_2_real, convnodeflags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (334,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009339E500
                                                nil
                                                symbol = Y
                                             )
                                          )
                                          (loadn, resultdef = Single = "Single", pos = (334,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E0360
                                             nil
                                             symbol = ZOOMFACTOR
                                          )
                                       )
                                    )
                                 )
                                 (loadn, resultdef = Single = "Single", pos = (334,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E0960
                                    nil
                                    symbol = SCALEFACTOR
                                 )
                              )
                           )
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (364,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E2280
                     (ifn, resultdef =  = "untyped", pos = (336,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E14A0
                        (equaln, resultdef = Boolean = "Boolean", pos = (336,19), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 2, optinfo = 00000000933F9140
                           (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (336,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339FC40
                              nil
                              symbol = HMOUSEBUTTON
                           )
                           (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (336,21), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933F91A0
                              typedef = "<enumeration type>"
                              value = 0
                           )
                        )
                        (blockn, resultdef =  = "untyped", pos = (337,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339E680
                           (statementn, resultdef =  = "untyped", pos = (338,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339FB20
                              (assignn, resultdef =  = "untyped", pos = (338,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933873A0
                                 (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (338,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009339FDC0
                                    nil
                                    symbol = HCSHIFT
                                 )
                                 (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (338,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339FE20
                                    nil
                                    symbol = SHIFT
                                 )
                              )

                           )
                           (statementn, resultdef =  = "untyped", pos = (350,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339FB80
                              (casen, resultdef =  = "untyped", pos = (341,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339FBE0
                                 (loadn, resultdef = TToolType = "<enumeration type>", pos = (341,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339FD60
                                    nil
                                    symbol = HCTOOL
                                 )
                                 (caseblock blockid: 0
                                    (calln, resultdef =  = "untyped", pos = (342,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BD40
                                       proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                                       left =
                                       (callparan, resultdef = TImage = "TImage", pos = (342,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933F9200
                                          (subscriptn, resultdef = TImage = "TImage", pos = (342,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933F9260
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (342,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0CC0
                                                nil
                                                symbol = self
                                             )
                                             field = IMAGE1
                                          )

                                       )
                                       (callparan, resultdef = LongInt = "LongInt", pos = (342,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933F92C0
                                          (loadn, resultdef = LongInt = "LongInt", pos = (342,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E620
                                             nil
                                             symbol = PY
                                          )

                                       )
                                       (callparan, resultdef = LongInt = "LongInt", pos = (342,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933F9320
                                          (loadn, resultdef = LongInt = "LongInt", pos = (342,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337B9A0
                                             nil
                                             symbol = PX
                                          )

                                       )
                                       (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (342,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933F9380
                                          (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (342,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339FCA0
                                             nil
                                             symbol = SHIFT
                                          )

                                       )
                                    )
                                 )
                                 (caseblock blockid: 1
                                    (calln, resultdef =  = "untyped", pos = (343,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339FD00
                                       proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                                       left =
                                       (callparan, resultdef = LongInt = "LongInt", pos = (343,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933F93E0
                                          (loadn, resultdef = LongInt = "LongInt", pos = (343,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E260
                                             nil
                                             symbol = PY
                                          )

                                       )
                                       (callparan, resultdef = TImage = "TImage", pos = (343,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933F9440
                                          (subscriptn, resultdef = TImage = "TImage", pos = (343,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933F94A0
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (343,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093387340
                                                nil
                                                symbol = self
                                             )
                                             field = IMAGE2
                                          )

                                       )
                                       (callparan, resultdef = TImage = "TImage", pos = (343,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933F9500
                                          (subscriptn, resultdef = TImage = "TImage", pos = (343,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933F9560
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (343,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009337A560
                                                nil
                                                symbol = self
                                             )
                                             field = IMAGE1
                                          )

                                       )
                                       (callparan, resultdef = LongInt = "LongInt", pos = (343,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933F95C0
                                          (loadn, resultdef = LongInt = "LongInt", pos = (343,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E0BA0
                                             nil
                                             symbol = PX
                                          )

                                       )
                                       (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (343,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933F9620
                                          (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (343,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339FAC0
                                             nil
                                             symbol = SHIFT
                                          )

                                       )
                                    )
                                 )
                                 (caseblock blockid: 2
                                    (calln, resultdef =  = "untyped", pos = (344,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A320
                                       proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                                       left =
                                       (callparan, resultdef = LongInt = "LongInt", pos = (344,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933F9680
                                          (loadn, resultdef = LongInt = "LongInt", pos = (344,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E19E0
                                             nil
                                             symbol = PY
                                          )

                                       )
                                       (callparan, resultdef = TImage = "TImage", pos = (344,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933F96E0
                                          (subscriptn, resultdef = TImage = "TImage", pos = (344,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933F9740
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (344,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E1A0
                                                nil
                                                symbol = self
                                             )
                                             field = IMAGE2
                                          )

                                       )
                                       (callparan, resultdef = TImage = "TImage", pos = (344,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933F97A0
                                          (subscriptn, resultdef = TImage = "TImage", pos = (344,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933F9800
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (344,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339F9A0
                                                nil
                                                symbol = self
                                             )
                                             field = IMAGE1
                                          )

                                       )
                                       (callparan, resultdef = LongInt = "LongInt", pos = (344,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933F9860
                                          (loadn, resultdef = LongInt = "LongInt", pos = (344,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E1920
                                             nil
                                             symbol = PX
                                          )

                                       )
                                       (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (344,55), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933F98C0
                                          (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (344,55), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E1980
                                             nil
                                             symbol = SHIFT
                                          )

                                       )
                                    )
                                 )
                                 (caseblock blockid: 3
                                    (nothingn, resultdef =  = "untyped", pos = (345,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093399940
                                    )
                                 )
                              )

                           )
                        )
                        (ifn, resultdef =  = "untyped", pos = (352,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339E440
                           (equaln, resultdef = Boolean = "Boolean", pos = (352,24), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 2, optinfo = 00000000933F9920
                              (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (352,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337B340
                                 nil
                                 symbol = HMOUSEBUTTON
                              )
                              (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (352,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933F9980
                                 typedef = "<enumeration type>"
                                 value = 1
                              )
                           )
                           (blockn, resultdef =  = "untyped", pos = (353,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009339BE00
                              nil
                           )
                           (ifn, resultdef =  = "untyped", pos = (356,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339E5C0
                              (equaln, resultdef = Boolean = "Boolean", pos = (356,17), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 1, optinfo = 00000000933F99E0
                                 (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (356,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339F940
                                    nil
                                    symbol = SHIFT
                                 )
                                 (setconstn, resultdef = <no type symbol> = "Set Of TShiftStateEnum", pos = (356,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1, optinfo = 00000000933F9A40
                                    nil
                                 )
                              )
                              (blockn, resultdef =  = "untyped", pos = (357,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337BB80
                                 (statementn, resultdef =  = "untyped", pos = (361,89), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E06C0
                                    (calln, resultdef =  = "untyped", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 00000000933E0720
                                       proc = SetPosition(<TControlScrollBar>;const LongInt);
                                       methodpointer =
                                       (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (361,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933F9AA0
                                          (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933F9B00
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E4A0
                                                nil
                                                symbol = self
                                             )
                                             field = SCROLLBOX1
                                          )
                                          field = FHORZSCROLLBAR
                                       )
                                       left =
                                       (callparan, resultdef = LongInt = "LongInt", pos = (361,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 00000000933F9B60
                                          (typeconvn, resultdef = LongInt = "LongInt", pos = (361,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 00000000933F9BC0, convtype = tc_int_2_int, convnodeflags = []
                                             (subn, resultdef = Int64 = "Int64", pos = (361,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 00000000933F9C20
                                                (typeconvn, resultdef = Int64 = "Int64", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 00000000933F9C80, convtype = tc_int_2_int, convnodeflags = []
                                                   (calln, resultdef = LongInt = "LongInt", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 00000000933F9CE0
                                                      proc = GetPosition(<TControlScrollBar>):System.LongInt;
                                                      methodpointer =
                                                      (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (361,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933F9D40
                                                         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (361,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933F9DA0
                                                            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E07E0
                                                               nil
                                                               symbol = self
                                                            )
                                                            field = SCROLLBOX1
                                                         )
                                                         field = FHORZSCROLLBAR
                                                      )
                                                      vmt_entry =
                                                      (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7, optinfo = 00000000933F9E00
                                                         (derefn, resultdef = TControlScrollBar. = "<record type>", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7, optinfo = 00000000933F9E60
                                                            (typeconvn, resultdef = <no type symbol> = "^TControlScrollBar.<record type>", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 6, optinfo = 00000000933F9EC0, convtype = tc_equal, convnodeflags = []
                                                               (subscriptn, resultdef = Pointer = "^untyped", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6, optinfo = 00000000933F9F20
                                                                  (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (361,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933F9F80
                                                                     (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (361,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933F9FE0
                                                                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0840
                                                                           nil
                                                                           symbol = self
                                                                        )
                                                                        field = SCROLLBOX1
                                                                     )
                                                                     field = FHORZSCROLLBAR
                                                                  )
                                                                  field = hidden_vptr$TOBJECT
                                                               )
                                                            )
                                                         )
                                                         field = f34
                                                      )
                                                      left =
                                                      (callparan, resultdef = <nil>, pos = (361,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FA040
                                                         (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (361,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933FA0A0
                                                            (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (361,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FA100
                                                               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E08A0
                                                                  nil
                                                                  symbol = self
                                                               )
                                                               field = SCROLLBOX1
                                                            )
                                                            field = FHORZSCROLLBAR
                                                         )

                                                      )
                                                   )
                                                )
                                                (subn, resultdef = Int64 = "Int64", pos = (361,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, optinfo = 00000000933FA160
                                                   (typeconvn, resultdef = Int64 = "Int64", pos = (361,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, optinfo = 00000000933FA1C0, convtype = tc_int_2_int, convnodeflags = []
                                                      (loadn, resultdef = LongInt = "LongInt", pos = (361,79), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337B160
                                                         nil
                                                         symbol = PX
                                                      )
                                                   )
                                                   (typeconvn, resultdef = Int64 = "Int64", pos = (361,84), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, optinfo = 00000000933FA220, convtype = tc_int_2_int, convnodeflags = []
                                                      (loadn, resultdef = LongInt = "LongInt", pos = (361,84), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337D020
                                                         nil
                                                         symbol = OLDX
                                                      )
                                                   )
                                                )
                                             )
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (361,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FA280
                                          (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (361,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933FA2E0
                                             (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FA340
                                                (loadn, resultdef = TFormDocument = "TFormDocument", pos = (361,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0900
                                                   nil
                                                   symbol = self
                                                )
                                                field = SCROLLBOX1
                                             )
                                             field = FHORZSCROLLBAR
                                          )

                                       )
                                    )

                                 )
                                 (statementn, resultdef =  = "untyped", pos = (362,89), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A3E0
                                    (calln, resultdef =  = "untyped", pos = (362,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 00000000933E17A0
                                       proc = SetPosition(<TControlScrollBar>;const LongInt);
                                       methodpointer =
                                       (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (362,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933FA3A0
                                          (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (362,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FA400
                                             (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0780
                                                nil
                                                symbol = self
                                             )
                                             field = SCROLLBOX1
                                          )
                                          field = FVERTSCROLLBAR
                                       )
                                       left =
                                       (callparan, resultdef = LongInt = "LongInt", pos = (362,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 00000000933FA460
                                          (typeconvn, resultdef = LongInt = "LongInt", pos = (362,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 00000000933FA4C0, convtype = tc_int_2_int, convnodeflags = []
                                             (subn, resultdef = Int64 = "Int64", pos = (362,89), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 00000000933FA520
                                                (typeconvn, resultdef = Int64 = "Int64", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 00000000933FA580, convtype = tc_int_2_int, convnodeflags = []
                                                   (calln, resultdef = LongInt = "LongInt", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 00000000933FA5E0
                                                      proc = GetPosition(<TControlScrollBar>):System.LongInt;
                                                      methodpointer =
                                                      (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (362,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933FA640
                                                         (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (362,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FA6A0
                                                            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0420
                                                               nil
                                                               symbol = self
                                                            )
                                                            field = SCROLLBOX1
                                                         )
                                                         field = FVERTSCROLLBAR
                                                      )
                                                      vmt_entry =
                                                      (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7, optinfo = 00000000933FA700
                                                         (derefn, resultdef = TControlScrollBar. = "<record type>", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7, optinfo = 00000000933FA760
                                                            (typeconvn, resultdef = <no type symbol> = "^TControlScrollBar.<record type>", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 6, optinfo = 00000000933FA7C0, convtype = tc_equal, convnodeflags = []
                                                               (subscriptn, resultdef = Pointer = "^untyped", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6, optinfo = 00000000933FA820
                                                                  (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (362,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933FA880
                                                                     (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (362,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FA8E0
                                                                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E560
                                                                           nil
                                                                           symbol = self
                                                                        )
                                                                        field = SCROLLBOX1
                                                                     )
                                                                     field = FVERTSCROLLBAR
                                                                  )
                                                                  field = hidden_vptr$TOBJECT
                                                               )
                                                            )
                                                         )
                                                         field = f34
                                                      )
                                                      left =
                                                      (callparan, resultdef = <nil>, pos = (362,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FA940
                                                         (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (362,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933FA9A0
                                                            (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (362,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FAA00
                                                               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0480
                                                                  nil
                                                                  symbol = self
                                                               )
                                                               field = SCROLLBOX1
                                                            )
                                                            field = FVERTSCROLLBAR
                                                         )

                                                      )
                                                   )
                                                )
                                                (subn, resultdef = Int64 = "Int64", pos = (362,78), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 5, optinfo = 00000000933FAA60
                                                   (typeconvn, resultdef = Int64 = "Int64", pos = (362,79), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, optinfo = 00000000933FAAC0, convtype = tc_int_2_int, convnodeflags = []
                                                      (loadn, resultdef = LongInt = "LongInt", pos = (362,79), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339FE80
                                                         nil
                                                         symbol = PY
                                                      )
                                                   )
                                                   (typeconvn, resultdef = Int64 = "Int64", pos = (362,84), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, optinfo = 00000000933FAB20, convtype = tc_int_2_int, convnodeflags = []
                                                      (loadn, resultdef = LongInt = "LongInt", pos = (362,84), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339FEE0
                                                         nil
                                                         symbol = OLDY
                                                      )
                                                   )
                                                )
                                             )
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (362,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FAB80
                                          (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (362,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933FABE0
                                             (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (362,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FAC40
                                                (loadn, resultdef = TFormDocument = "TFormDocument", pos = (362,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339FF40
                                                   nil
                                                   symbol = self
                                                )
                                                field = SCROLLBOX1
                                             )
                                             field = FVERTSCROLLBAR
                                          )

                                       )
                                    )

                                 )
                              )
                              nil
                              nil
                           )
                           nil
                        )
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (371,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933EA980
                     (calln, resultdef =  = "untyped", pos = (366,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E2BE0
                        proc = UpdateText(AnsiString);
                        left =
                        (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FACA0
                           (blockn, resultdef = AnsiString = "AnsiString(0)", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000933FAD00
                              (statementn, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FAD60
                                 (tempcreaten, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FADC0
                                    size = 8, temptypedef = AnsiString = "AnsiString(0)", tempinfo = $0000000091B9D970
                                    []
                                    tempinit =
                                    nil
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FAE20
                                 (calln, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FAE80
                                    proc = $fpc_ansistr_concat_multi(var RawByteString;const {Open} Array Of RawByteString;<const Int64>;Word);
                                    left =
                                    (callparan, resultdef = <no type symbol> = "{Open} Array Of RawByteString", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], optinfo = 00000000933FAEE0
                                       (typeconvn, resultdef = <no type symbol> = "{Array Of Const/Constant Open} Array of RawByteString", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 255, optinfo = 00000000933FAF40, convtype = tc_equal, convnodeflags = []
                                          (arrayconstructn, resultdef = <no type symbol> = "{Array Of Const/Constant Open} Array of RawByteString", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 255, optinfo = 00000000933FAFA0
                                             (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (366,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933FB000
                                                value = "X: "
                                             )
                                             (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000933FB060
                                                (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255, optinfo = 00000000933FB0C0
                                                   (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB120
                                                      (tempcreaten, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 00000000933FB180
                                                         size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9D870
                                                         [ti_nofini]
                                                         tempinit =
                                                         nil
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB1E0
                                                      (tempcreaten, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FB240
                                                         size = 8, temptypedef = Int64 = "Int64", tempinfo = $0000000091B9D4F0
                                                         [ti_may_be_in_reg]
                                                         tempinit =
                                                         nil
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB2A0
                                                      (assignn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4, optinfo = 00000000933FB300
                                                         (temprefn, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 00000000933E1680
                                                            temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9D4F0 flags = [ti_may_be_in_reg])
                                                         )
                                                         (typeconvn, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, optinfo = 00000000933FB360, convtype = tc_int_2_int, convnodeflags = []
                                                            (loadn, resultdef = LongInt = "LongInt", pos = (366,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093387400
                                                               nil
                                                               symbol = X
                                                            )
                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB3C0
                                                      (tempcreaten, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FB420
                                                         size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9D770
                                                         []
                                                         tempinit =
                                                         nil
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB480
                                                      (blockn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255, optinfo = 00000000933FB4E0
                                                         (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB540
                                                            (calln, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB5A0
                                                               proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                               intrinsiccode = in_str_x_string
                                                               left =
                                                               (callparan, resultdef = OpenString = "ShortString[0]", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FB600
                                                                  (temprefn, resultdef = ShortString = "ShortString[255]", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009339EF20
                                                                     temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9D770 flags = [])
                                                                  )

                                                               )
                                                               (callparan, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933FB660
                                                                  (temprefn, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933E15C0
                                                                     temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9D4F0 flags = [ti_may_be_in_reg])
                                                                  )

                                                               )
                                                               (callparan, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FB6C0
                                                                  (ordconstn, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0, optinfo = 00000000933FB720
                                                                     typedef = "Int64"
                                                                     value = 255
                                                                  )

                                                               )
                                                               (callparan, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FB780
                                                                  (ordconstn, resultdef = Int64 = "Int64", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FB7E0
                                                                     typedef = "Int64"
                                                                     value = -1
                                                                  )

                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000933FB840
                                                            (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000933FB8A0
                                                               proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                               left =
                                                               (callparan, resultdef = ShortString = "ShortString[255]", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FB900
                                                                  (temprefn, resultdef = ShortString = "ShortString[255]", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339EEC0
                                                                     temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9D770 flags = [])
                                                                  )

                                                               )
                                                               (callparan, resultdef = <nil>, pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FB960
                                                                  (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, optinfo = 00000000933FB9C0, convtype = tc_equal, convnodeflags = []
                                                                     (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 00000000933E1440
                                                                        temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9D870 flags = [ti_nofini])
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = Word = "Word", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FBA20
                                                                  (ordconstn, resultdef = Word = "Word", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FBA80
                                                                     typedef = "Word"
                                                                     value = 0
                                                                  )

                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FBAE0
                                                            (calln, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FBB40
                                                               proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                               left =
                                                               (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FBBA0
                                                                  (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, optinfo = 00000000933FBC00, convtype = tc_equal, convnodeflags = []
                                                                     (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009339EFE0
                                                                        temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9D870 flags = [ti_nofini])
                                                                     )
                                                                  )

                                                               )
                                                               (callparan, resultdef = Boolean = "Boolean", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FBC60
                                                                  (ordconstn, resultdef = Boolean = "Boolean", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FBCC0
                                                                     typedef = "Boolean"
                                                                     value = 0
                                                                  )

                                                               )
                                                               (callparan, resultdef = Word = "Word", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FBD20
                                                                  (ordconstn, resultdef = Word = "Word", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FBD80
                                                                     typedef = "Word"
                                                                     value = 0
                                                                  )

                                                               )
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FBDE0
                                                      (tempdeleten, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FBE40
                                                         release_to_normal: FALSE, temptypedef = Int64 = "Int64", temptype = tt_persistent, tempinfo = $0000000091B9D4F0
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FBEA0
                                                      (tempdeleten, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FBF00
                                                         release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9D770
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FBF60
                                                      (tempdeleten, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FBFC0
                                                         release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9D870
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FC020
                                                      (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 00000000933E13E0
                                                         temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9D870 flags = [ti_nofini])
                                                      )

                                                   )
                                                )
                                                (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000933FC080
                                                   (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (366,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933FC0E0
                                                      value = "  Y: "
                                                   )
                                                   (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000933FC140
                                                      (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255, optinfo = 00000000933FC1A0
                                                         (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC200
                                                            (tempcreaten, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 00000000933FC260
                                                               size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9D570
                                                               [ti_nofini]
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC2C0
                                                            (tempcreaten, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FC320
                                                               size = 8, temptypedef = Int64 = "Int64", tempinfo = $0000000091B9D5F0
                                                               [ti_may_be_in_reg]
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC380
                                                            (assignn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4, optinfo = 00000000933FC3E0
                                                               (temprefn, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009339F0A0
                                                                  temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                                                               )
                                                               (typeconvn, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, optinfo = 00000000933FC440, convtype = tc_int_2_int, convnodeflags = []
                                                                  (loadn, resultdef = LongInt = "LongInt", pos = (366,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339EF80
                                                                     nil
                                                                     symbol = Y
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC4A0
                                                            (tempcreaten, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FC500
                                                               size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9D9F0
                                                               []
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC560
                                                            (blockn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255, optinfo = 00000000933FC5C0
                                                               (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC620
                                                                  (calln, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC680
                                                                     proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                                     intrinsiccode = in_str_x_string
                                                                     left =
                                                                     (callparan, resultdef = OpenString = "ShortString[0]", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC6E0
                                                                        (temprefn, resultdef = ShortString = "ShortString[255]", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933E1380
                                                                           temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9D9F0 flags = [])
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933FC740
                                                                        (temprefn, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933E1D40
                                                                           temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9D5F0 flags = [ti_may_be_in_reg])
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FC7A0
                                                                        (ordconstn, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0, optinfo = 00000000933FC800
                                                                           typedef = "Int64"
                                                                           value = 255
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FC860
                                                                        (ordconstn, resultdef = Int64 = "Int64", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FC8C0
                                                                           typedef = "Int64"
                                                                           value = -1
                                                                        )

                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000933FC920
                                                                  (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000933FC980
                                                                     proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                                     left =
                                                                     (callparan, resultdef = ShortString = "ShortString[255]", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC9E0
                                                                        (temprefn, resultdef = ShortString = "ShortString[255]", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E1C20
                                                                           temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9D9F0 flags = [])
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = <nil>, pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FCA40
                                                                        (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, optinfo = 00000000933FCAA0, convtype = tc_equal, convnodeflags = []
                                                                           (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 00000000933E1C80
                                                                              temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9D570 flags = [ti_nofini])
                                                                           )
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = Word = "Word", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FCB00
                                                                        (ordconstn, resultdef = Word = "Word", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FCB60
                                                                           typedef = "Word"
                                                                           value = 0
                                                                        )

                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCBC0
                                                                  (calln, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCC20
                                                                     proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                                     left =
                                                                     (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FCC80
                                                                        (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, optinfo = 00000000933FCCE0, convtype = tc_equal, convnodeflags = []
                                                                           (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 00000000933E1B60
                                                                              temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9D570 flags = [ti_nofini])
                                                                           )
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = Boolean = "Boolean", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FCD40
                                                                        (ordconstn, resultdef = Boolean = "Boolean", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FCDA0
                                                                           typedef = "Boolean"
                                                                           value = 0
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = Word = "Word", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FCE00
                                                                        (ordconstn, resultdef = Word = "Word", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FCE60
                                                                           typedef = "Word"
                                                                           value = 0
                                                                        )

                                                                     )
                                                                  )

                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FCEC0
                                                            (tempdeleten, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FCF20
                                                               release_to_normal: FALSE, temptypedef = Int64 = "Int64", temptype = tt_persistent, tempinfo = $0000000091B9D5F0
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FCF80
                                                            (tempdeleten, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FCFE0
                                                               release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9D9F0
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FD040
                                                            (tempdeleten, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FD0A0
                                                               release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9D570
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FD100
                                                            (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 000000009337FFC0
                                                               temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9D570 flags = [ti_nofini])
                                                            )

                                                         )
                                                      )
                                                      (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000933FD160
                                                         (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (366,63), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933FD1C0
                                                            value = " -  PX: "
                                                         )
                                                         (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000933FD220
                                                            (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255, optinfo = 00000000933FD280
                                                               (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD2E0
                                                                  (tempcreaten, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 00000000933FD340
                                                                     size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9DA70
                                                                     [ti_nofini]
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD3A0
                                                                  (tempcreaten, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FD400
                                                                     size = 8, temptypedef = Int64 = "Int64", tempinfo = $0000000091B9DAF0
                                                                     [ti_may_be_in_reg]
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD460
                                                                  (assignn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4, optinfo = 00000000933FD4C0
                                                                     (temprefn, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009337F900
                                                                        temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9DAF0 flags = [ti_may_be_in_reg])
                                                                     )
                                                                     (typeconvn, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, optinfo = 00000000933FD520, convtype = tc_int_2_int, convnodeflags = []
                                                                        (loadn, resultdef = LongInt = "LongInt", pos = (367,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E1200
                                                                           nil
                                                                           symbol = PX
                                                                        )
                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD580
                                                                  (tempcreaten, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FD5E0
                                                                     size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9DB70
                                                                     []
                                                                     tempinit =
                                                                     nil
                                                                  )

                                                               )
                                                               (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD640
                                                                  (blockn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255, optinfo = 00000000933FD6A0
                                                                     (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD700
                                                                        (calln, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD760
                                                                           proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                                           intrinsiccode = in_str_x_string
                                                                           left =
                                                                           (callparan, resultdef = OpenString = "ShortString[0]", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FD7C0
                                                                              (temprefn, resultdef = ShortString = "ShortString[255]", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009339F220
                                                                                 temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9DB70 flags = [])
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933FD820
                                                                              (temprefn, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009339F280
                                                                                 temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9DAF0 flags = [ti_may_be_in_reg])
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FD880
                                                                              (ordconstn, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0, optinfo = 00000000933FD8E0
                                                                                 typedef = "Int64"
                                                                                 value = 255
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FD940
                                                                              (ordconstn, resultdef = Int64 = "Int64", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FD9A0
                                                                                 typedef = "Int64"
                                                                                 value = -1
                                                                              )

                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000933FDA00
                                                                        (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000933FDA60
                                                                           proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                                           left =
                                                                           (callparan, resultdef = ShortString = "ShortString[255]", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FDAC0
                                                                              (temprefn, resultdef = ShortString = "ShortString[255]", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339EA40
                                                                                 temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9DB70 flags = [])
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = <nil>, pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FDB20
                                                                              (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, optinfo = 00000000933FDB80, convtype = tc_equal, convnodeflags = []
                                                                                 (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009339F2E0
                                                                                    temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DA70 flags = [ti_nofini])
                                                                                 )
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Word = "Word", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FDBE0
                                                                              (ordconstn, resultdef = Word = "Word", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FDC40
                                                                                 typedef = "Word"
                                                                                 value = 0
                                                                              )

                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDCA0
                                                                        (calln, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDD00
                                                                           proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                                           left =
                                                                           (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FDD60
                                                                              (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, optinfo = 00000000933FDDC0, convtype = tc_equal, convnodeflags = []
                                                                                 (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009339F100
                                                                                    temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DA70 flags = [ti_nofini])
                                                                                 )
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Boolean = "Boolean", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FDE20
                                                                              (ordconstn, resultdef = Boolean = "Boolean", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FDE80
                                                                                 typedef = "Boolean"
                                                                                 value = 0
                                                                              )

                                                                           )
                                                                           (callparan, resultdef = Word = "Word", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FDEE0
                                                                              (ordconstn, resultdef = Word = "Word", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FDF40
                                                                                 typedef = "Word"
                                                                                 value = 0
                                                                              )

                                                                           )
                                                                        )

                                                                     )
                                                                  )

                                                               )
                                                               (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FDFA0
                                                                  (tempdeleten, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FE000
                                                                     release_to_normal: FALSE, temptypedef = Int64 = "Int64", temptype = tt_persistent, tempinfo = $0000000091B9DAF0
                                                                  )

                                                               )
                                                               (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FE060
                                                                  (tempdeleten, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FE0C0
                                                                     release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9DB70
                                                                  )

                                                               )
                                                               (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FE120
                                                                  (tempdeleten, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FE180
                                                                     release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9DA70
                                                                  )

                                                               )
                                                               (statementn, resultdef =  = "untyped", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FE1E0
                                                                  (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 000000009339F160
                                                                     temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DA70 flags = [ti_nofini])
                                                                  )

                                                               )
                                                            )
                                                            (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000933FE240
                                                               (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (367,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933FE2A0
                                                                  value = "  PY: "
                                                               )
                                                               (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000933FE300
                                                                  (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255, optinfo = 00000000933FE360
                                                                     (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FE3C0
                                                                        (tempcreaten, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 00000000933FE420
                                                                           size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9DBF0
                                                                           [ti_nofini]
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FE480
                                                                        (tempcreaten, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FE4E0
                                                                           size = 8, temptypedef = Int64 = "Int64", tempinfo = $0000000091B9DC70
                                                                           [ti_may_be_in_reg]
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FE540
                                                                        (assignn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4, optinfo = 00000000933FE5A0
                                                                           (temprefn, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009339F040
                                                                              temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9DC70 flags = [ti_may_be_in_reg])
                                                                           )
                                                                           (typeconvn, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 2, optinfo = 00000000933FE600, convtype = tc_int_2_int, convnodeflags = []
                                                                              (loadn, resultdef = LongInt = "LongInt", pos = (367,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E1020
                                                                                 nil
                                                                                 symbol = PY
                                                                              )
                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FE660
                                                                        (tempcreaten, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FE6C0
                                                                           size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9DCF0
                                                                           []
                                                                           tempinit =
                                                                           nil
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FE720
                                                                        (blockn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255, optinfo = 00000000933FE780
                                                                           (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FE7E0
                                                                              (calln, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FE840
                                                                                 proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                                                 intrinsiccode = in_str_x_string
                                                                                 left =
                                                                                 (callparan, resultdef = OpenString = "ShortString[0]", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FE8A0
                                                                                    (temprefn, resultdef = ShortString = "ShortString[255]", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933E1080
                                                                                       temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9DCF0 flags = [])
                                                                                    )

                                                                                 )
                                                                                 (callparan, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933FE900
                                                                                    (temprefn, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933E10E0
                                                                                       temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9DC70 flags = [ti_may_be_in_reg])
                                                                                    )

                                                                                 )
                                                                                 (callparan, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FE960
                                                                                    (ordconstn, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0, optinfo = 00000000933FE9C0
                                                                                       typedef = "Int64"
                                                                                       value = 255
                                                                                    )

                                                                                 )
                                                                                 (callparan, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FEA20
                                                                                    (ordconstn, resultdef = Int64 = "Int64", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FEA80
                                                                                       typedef = "Int64"
                                                                                       value = -1
                                                                                    )

                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000933FEAE0
                                                                              (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000933FEB40
                                                                                 proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                                                 left =
                                                                                 (callparan, resultdef = ShortString = "ShortString[255]", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FEBA0
                                                                                    (temprefn, resultdef = ShortString = "ShortString[255]", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009337A260
                                                                                       temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9DCF0 flags = [])
                                                                                    )

                                                                                 )
                                                                                 (callparan, resultdef = <nil>, pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FEC00
                                                                                    (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, optinfo = 00000000933FEC60, convtype = tc_equal, convnodeflags = []
                                                                                       (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 00000000933E1A40
                                                                                          temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DBF0 flags = [ti_nofini])
                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (callparan, resultdef = Word = "Word", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FECC0
                                                                                    (ordconstn, resultdef = Word = "Word", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FED20
                                                                                       typedef = "Word"
                                                                                       value = 0
                                                                                    )

                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FED80
                                                                              (calln, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FEDE0
                                                                                 proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                                                 left =
                                                                                 (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FEE40
                                                                                    (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, optinfo = 00000000933FEEA0, convtype = tc_equal, convnodeflags = []
                                                                                       (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009339DF60
                                                                                          temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DBF0 flags = [ti_nofini])
                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (callparan, resultdef = Boolean = "Boolean", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FEF00
                                                                                    (ordconstn, resultdef = Boolean = "Boolean", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FEF60
                                                                                       typedef = "Boolean"
                                                                                       value = 0
                                                                                    )

                                                                                 )
                                                                                 (callparan, resultdef = Word = "Word", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FEFC0
                                                                                    (ordconstn, resultdef = Word = "Word", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FF020
                                                                                       typedef = "Word"
                                                                                       value = 0
                                                                                    )

                                                                                 )
                                                                              )

                                                                           )
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FF080
                                                                        (tempdeleten, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FF0E0
                                                                           release_to_normal: FALSE, temptypedef = Int64 = "Int64", temptype = tt_persistent, tempinfo = $0000000091B9DC70
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FF140
                                                                        (tempdeleten, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FF1A0
                                                                           release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9DCF0
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FF200
                                                                        (tempdeleten, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FF260
                                                                           release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9DBF0
                                                                        )

                                                                     )
                                                                     (statementn, resultdef =  = "untyped", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FF2C0
                                                                        (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (367,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 000000009339E8C0
                                                                           temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DBF0 flags = [ti_nofini])
                                                                        )

                                                                     )
                                                                  )
                                                                  (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000933FF320
                                                                     (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (367,56), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933FF380
                                                                        value = " -   Scale:  Image1 Left :"
                                                                     )
                                                                     (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000933FF3E0
                                                                        (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255, optinfo = 00000000933FF440
                                                                           (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FF4A0
                                                                              (tempcreaten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 00000000933FF500
                                                                                 size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9DD70
                                                                                 [ti_nofini]
                                                                                 tempinit =
                                                                                 nil
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FF560
                                                                              (tempcreaten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FF5C0
                                                                                 size = 8, temptypedef = <no type symbol> = "^LongInt", tempinfo = $0000000091B9DDF0
                                                                                 [ti_may_be_in_reg]
                                                                                 tempinit =
                                                                                 nil
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FF620
                                                                              (assignn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 7, optinfo = 00000000933FF680
                                                                                 (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009339E920
                                                                                    temptypedef = <no type symbol> = "^LongInt", (tempinfo = $0000000091B9DDF0 flags = [ti_may_be_in_reg])
                                                                                 )
                                                                                 (addrn, resultdef = <no type symbol> = "^LongInt", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_internal], cmplx = 5, optinfo = 00000000933FF6E0, addrnodeflags = [anf_typedaddr]
                                                                                    (subscriptn, resultdef = LongInt = "LongInt", pos = (368,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_address_taken,nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000933FF740
                                                                                       (subscriptn, resultdef = TImage = "TImage", pos = (368,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FF7A0
                                                                                          (loadn, resultdef = TFormDocument = "TFormDocument", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E980
                                                                                             nil
                                                                                             symbol = self
                                                                                          )
                                                                                          field = IMAGE1
                                                                                       )
                                                                                       field = FLEFT
                                                                                    )
                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FF800
                                                                              (tempcreaten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FF860
                                                                                 size = 8, temptypedef = Int64 = "Int64", tempinfo = $0000000091B9DE70
                                                                                 [ti_may_be_in_reg]
                                                                                 tempinit =
                                                                                 nil
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FF8C0
                                                                              (assignn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933FF920
                                                                                 (temprefn, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009336FDC0
                                                                                    temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9DE70 flags = [ti_may_be_in_reg])
                                                                                 )
                                                                                 (typeconvn, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933FF980, convtype = tc_int_2_int, convnodeflags = []
                                                                                    (derefn, resultdef = LongInt = "LongInt", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FF9E0
                                                                                       (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093379D20
                                                                                          temptypedef = <no type symbol> = "^LongInt", (tempinfo = $0000000091B9DDF0 flags = [ti_may_be_in_reg])
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FFA40
                                                                              (tempcreaten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FFAA0
                                                                                 size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9DEF0
                                                                                 []
                                                                                 tempinit =
                                                                                 nil
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FFB00
                                                                              (blockn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255, optinfo = 00000000933FFB60
                                                                                 (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FFBC0
                                                                                    (calln, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FFC20
                                                                                       proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                                                       intrinsiccode = in_str_x_string
                                                                                       left =
                                                                                       (callparan, resultdef = OpenString = "ShortString[0]", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FFC80
                                                                                          (temprefn, resultdef = ShortString = "ShortString[255]", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009339E9E0
                                                                                             temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9DEF0 flags = [])
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933FFCE0
                                                                                          (temprefn, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009339F1C0
                                                                                             temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9DE70 flags = [ti_may_be_in_reg])
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FFD40
                                                                                          (ordconstn, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0, optinfo = 00000000933FFDA0
                                                                                             typedef = "Int64"
                                                                                             value = 255
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FFE00
                                                                                          (ordconstn, resultdef = Int64 = "Int64", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FFE60
                                                                                             typedef = "Int64"
                                                                                             value = -1
                                                                                          )

                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000933FFEC0
                                                                                    (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000933FFF20
                                                                                       proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                                                       left =
                                                                                       (callparan, resultdef = ShortString = "ShortString[255]", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FFF80
                                                                                          (temprefn, resultdef = ShortString = "ShortString[255]", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E0EA0
                                                                                             temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9DEF0 flags = [])
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = <nil>, pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FFFE0
                                                                                          (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, optinfo = 0000000093400040, convtype = tc_equal, convnodeflags = []
                                                                                             (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 0000000093397660
                                                                                                temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DD70 flags = [ti_nofini])
                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = Word = "Word", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000934000A0
                                                                                          (ordconstn, resultdef = Word = "Word", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093400100
                                                                                             typedef = "Word"
                                                                                             value = 0
                                                                                          )

                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400160
                                                                                    (calln, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934001C0
                                                                                       proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                                                       left =
                                                                                       (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093400220
                                                                                          (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, optinfo = 0000000093400280, convtype = tc_equal, convnodeflags = []
                                                                                             (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009337A7A0
                                                                                                temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DD70 flags = [ti_nofini])
                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = Boolean = "Boolean", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000934002E0
                                                                                          (ordconstn, resultdef = Boolean = "Boolean", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093400340
                                                                                             typedef = "Boolean"
                                                                                             value = 0
                                                                                          )

                                                                                       )
                                                                                       (callparan, resultdef = Word = "Word", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000934003A0
                                                                                          (ordconstn, resultdef = Word = "Word", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093400400
                                                                                             typedef = "Word"
                                                                                             value = 0
                                                                                          )

                                                                                       )
                                                                                    )

                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093400460
                                                                              (tempdeleten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000934004C0
                                                                                 release_to_normal: FALSE, temptypedef = Int64 = "Int64", temptype = tt_persistent, tempinfo = $0000000091B9DE70
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093400520
                                                                              (tempdeleten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093400580
                                                                                 release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9DEF0
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000934005E0
                                                                              (tempdeleten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093400640
                                                                                 release_to_normal: FALSE, temptypedef = <no type symbol> = "^LongInt", temptype = tt_persistent, tempinfo = $0000000091B9DDF0
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000934006A0
                                                                              (tempdeleten, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093400700
                                                                                 release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9DD70
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093400760
                                                                              (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (368,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 0000000093399A00
                                                                                 temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DD70 flags = [ti_nofini])
                                                                              )

                                                                           )
                                                                        )
                                                                        (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000934007C0
                                                                           (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (368,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093400820
                                                                              value = " Image1 Top :"
                                                                           )
                                                                           (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093400880
                                                                              (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255, optinfo = 00000000934008E0
                                                                                 (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400940
                                                                                    (tempcreaten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 00000000934009A0
                                                                                       size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9DF70
                                                                                       [ti_nofini]
                                                                                       tempinit =
                                                                                       nil
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400A00
                                                                                    (tempcreaten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093400A60
                                                                                       size = 8, temptypedef = <no type symbol> = "^LongInt", tempinfo = $0000000091B9DFF0
                                                                                       [ti_may_be_in_reg]
                                                                                       tempinit =
                                                                                       nil
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400AC0
                                                                                    (assignn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 7, optinfo = 0000000093400B20
                                                                                       (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093399A60
                                                                                          temptypedef = <no type symbol> = "^LongInt", (tempinfo = $0000000091B9DFF0 flags = [ti_may_be_in_reg])
                                                                                       )
                                                                                       (addrn, resultdef = <no type symbol> = "^LongInt", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_internal], cmplx = 5, optinfo = 0000000093400B80, addrnodeflags = [anf_typedaddr]
                                                                                          (subscriptn, resultdef = LongInt = "LongInt", pos = (369,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_address_taken,nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093400BE0
                                                                                             (subscriptn, resultdef = TImage = "TImage", pos = (369,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093400C40
                                                                                                (loadn, resultdef = TFormDocument = "TFormDocument", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093373960
                                                                                                   nil
                                                                                                   symbol = self
                                                                                                )
                                                                                                field = IMAGE1
                                                                                             )
                                                                                             field = FTOP
                                                                                          )
                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400CA0
                                                                                    (tempcreaten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093400D00
                                                                                       size = 8, temptypedef = Int64 = "Int64", tempinfo = $0000000091B9E070
                                                                                       [ti_may_be_in_reg]
                                                                                       tempinit =
                                                                                       nil
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400D60
                                                                                    (assignn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093400DC0
                                                                                       (temprefn, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 00000000933E0E40
                                                                                          temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9E070 flags = [ti_may_be_in_reg])
                                                                                       )
                                                                                       (typeconvn, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093400E20, convtype = tc_int_2_int, convnodeflags = []
                                                                                          (derefn, resultdef = LongInt = "LongInt", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093400E80
                                                                                             (temprefn, resultdef = <no type symbol> = "^LongInt", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933E1AA0
                                                                                                temptypedef = <no type symbol> = "^LongInt", (tempinfo = $0000000091B9DFF0 flags = [ti_may_be_in_reg])
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400EE0
                                                                                    (tempcreaten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093400F40
                                                                                       size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9E0F0
                                                                                       []
                                                                                       tempinit =
                                                                                       nil
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400FA0
                                                                                    (blockn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255, optinfo = 0000000093401000
                                                                                       (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093401060
                                                                                          (calln, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934010C0
                                                                                             proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                                                             intrinsiccode = in_str_x_string
                                                                                             left =
                                                                                             (callparan, resultdef = OpenString = "ShortString[0]", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093401120
                                                                                                (temprefn, resultdef = ShortString = "ShortString[255]", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933871C0
                                                                                                   temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9E0F0 flags = [])
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093401180
                                                                                                (temprefn, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009339F5E0
                                                                                                   temptypedef = Int64 = "Int64", (tempinfo = $0000000091B9E070 flags = [ti_may_be_in_reg])
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000934011E0
                                                                                                (ordconstn, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0, optinfo = 0000000093401240
                                                                                                   typedef = "Int64"
                                                                                                   value = 255
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000934012A0
                                                                                                (ordconstn, resultdef = Int64 = "Int64", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093401300
                                                                                                   typedef = "Int64"
                                                                                                   value = -1
                                                                                                )

                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 0000000093401360
                                                                                          (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000934013C0
                                                                                             proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                                                             left =
                                                                                             (callparan, resultdef = ShortString = "ShortString[255]", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093401420
                                                                                                (temprefn, resultdef = ShortString = "ShortString[255]", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E080
                                                                                                   temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9E0F0 flags = [])
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = <nil>, pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093401480
                                                                                                (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, optinfo = 00000000934014E0, convtype = tc_equal, convnodeflags = []
                                                                                                   (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009339F580
                                                                                                      temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DF70 flags = [ti_nofini])
                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Word = "Word", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093401540
                                                                                                (ordconstn, resultdef = Word = "Word", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000934015A0
                                                                                                   typedef = "Word"
                                                                                                   value = 0
                                                                                                )

                                                                                             )
                                                                                          )

                                                                                       )
                                                                                       (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093401600
                                                                                          (calln, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093401660
                                                                                             proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                                                             left =
                                                                                             (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000934016C0
                                                                                                (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, optinfo = 0000000093401720, convtype = tc_equal, convnodeflags = []
                                                                                                   (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 00000000933E0D20
                                                                                                      temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DF70 flags = [ti_nofini])
                                                                                                   )
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Boolean = "Boolean", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093401780
                                                                                                (ordconstn, resultdef = Boolean = "Boolean", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000934017E0
                                                                                                   typedef = "Boolean"
                                                                                                   value = 0
                                                                                                )

                                                                                             )
                                                                                             (callparan, resultdef = Word = "Word", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093401840
                                                                                                (ordconstn, resultdef = Word = "Word", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000934018A0
                                                                                                   typedef = "Word"
                                                                                                   value = 0
                                                                                                )

                                                                                             )
                                                                                          )

                                                                                       )
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093401900
                                                                                    (tempdeleten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093401960
                                                                                       release_to_normal: FALSE, temptypedef = Int64 = "Int64", temptype = tt_persistent, tempinfo = $0000000091B9E070
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000934019C0
                                                                                    (tempdeleten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093401A20
                                                                                       release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9E0F0
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093401A80
                                                                                    (tempdeleten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093401AE0
                                                                                       release_to_normal: FALSE, temptypedef = <no type symbol> = "^LongInt", temptype = tt_persistent, tempinfo = $0000000091B9DFF0
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093401B40
                                                                                    (tempdeleten, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093401BA0
                                                                                       release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9DF70
                                                                                    )

                                                                                 )
                                                                                 (statementn, resultdef =  = "untyped", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093401C00
                                                                                    (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 000000009339F460
                                                                                       temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9DF70 flags = [ti_nofini])
                                                                                    )

                                                                                 )
                                                                              )
                                                                              (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093401C60
                                                                                 (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255, optinfo = 0000000093401CC0
                                                                                    (statementn, resultdef =  = "untyped", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093401D20
                                                                                       (tempcreaten, resultdef =  = "untyped", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 0000000093401D80
                                                                                          size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9E170
                                                                                          [ti_nofini]
                                                                                          tempinit =
                                                                                          nil
                                                                                       )

                                                                                    )
                                                                                    (statementn, resultdef =  = "untyped", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 0000000093401DE0
                                                                                       (calln, resultdef = AnsiString = "AnsiString(0)", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 0000000093401E40
                                                                                          proc = FloatToStr(<var AnsiString>;Single;const TFormatSettings):System.AnsiString;
                                                                                          left =
                                                                                          (callparan, resultdef = TFormatSettings = "<record type>", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093401EA0
                                                                                             (loadn, resultdef = TFormatSettings = "<record type>", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_address_taken], cmplx = 1, optinfo = 000000009339F4C0
                                                                                                nil
                                                                                                symbol = DEFAULTFORMATSETTINGS
                                                                                             )

                                                                                          )
                                                                                          (callparan, resultdef = Single = "Single", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093401F00
                                                                                             (loadn, resultdef = Single = "Single", pos = (369,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339F520
                                                                                                nil
                                                                                                symbol = SCALEFACTOR
                                                                                             )

                                                                                          )
                                                                                          (callparan, resultdef = <nil>, pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093401F60
                                                                                             (typeconvn, resultdef = AnsiString = "AnsiString(0)", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret,nf_absolute], cmplx = 1, optinfo = 0000000093401FC0, convtype = tc_equal, convnodeflags = []
                                                                                                (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009339F8E0
                                                                                                   temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E170 flags = [ti_nofini])
                                                                                                )
                                                                                             )

                                                                                          )
                                                                                       )

                                                                                    )
                                                                                    (statementn, resultdef =  = "untyped", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093402020
                                                                                       (tempdeleten, resultdef =  = "untyped", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093402080
                                                                                          release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9E170
                                                                                       )

                                                                                    )
                                                                                    (statementn, resultdef =  = "untyped", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000934020E0
                                                                                       (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 000000009339E800
                                                                                          temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E170 flags = [ti_nofini])
                                                                                       )

                                                                                    )
                                                                                 )
                                                                                 (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093402140
                                                                                    (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (369,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000934021A0
                                                                                       value = "  Zoom: "
                                                                                    )
                                                                                    (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093402200
                                                                                       (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255, optinfo = 0000000093402260
                                                                                          (statementn, resultdef =  = "untyped", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934022C0
                                                                                             (tempcreaten, resultdef =  = "untyped", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 0000000093402320
                                                                                                size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9E1F0
                                                                                                [ti_nofini]
                                                                                                tempinit =
                                                                                                nil
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef =  = "untyped", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 0000000093402380
                                                                                             (calln, resultdef = AnsiString = "AnsiString(0)", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000934023E0
                                                                                                proc = FloatToStr(<var AnsiString>;Single;const TFormatSettings):System.AnsiString;
                                                                                                left =
                                                                                                (callparan, resultdef = TFormatSettings = "<record type>", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093402440
                                                                                                   (loadn, resultdef = TFormatSettings = "<record type>", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_address_taken], cmplx = 1, optinfo = 000000009339BCE0
                                                                                                      nil
                                                                                                      symbol = DEFAULTFORMATSETTINGS
                                                                                                   )

                                                                                                )
                                                                                                (callparan, resultdef = Single = "Single", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000934024A0
                                                                                                   (loadn, resultdef = Single = "Single", pos = (370,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E140
                                                                                                      nil
                                                                                                      symbol = ZOOMFACTOR
                                                                                                   )

                                                                                                )
                                                                                                (callparan, resultdef = <nil>, pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093402500
                                                                                                   (typeconvn, resultdef = AnsiString = "AnsiString(0)", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret,nf_absolute], cmplx = 1, optinfo = 0000000093402560, convtype = tc_equal, convnodeflags = []
                                                                                                      (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009337A740
                                                                                                         temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E1F0 flags = [ti_nofini])
                                                                                                      )
                                                                                                   )

                                                                                                )
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef =  = "untyped", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000934025C0
                                                                                             (tempdeleten, resultdef =  = "untyped", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093402620
                                                                                                release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9E1F0
                                                                                             )

                                                                                          )
                                                                                          (statementn, resultdef =  = "untyped", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093402680
                                                                                             (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,15), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 000000009339E860
                                                                                                temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E1F0 flags = [ti_nofini])
                                                                                             )

                                                                                          )
                                                                                       )
                                                                                       (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000934026E0
                                                                                          (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (370,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093402740
                                                                                             value = " H Scroll :"
                                                                                          )
                                                                                          (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000934027A0
                                                                                             (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255, optinfo = 0000000093402800
                                                                                                (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093402860
                                                                                                   (tempcreaten, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000934028C0
                                                                                                      size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000091B9E2F0
                                                                                                      []
                                                                                                      tempinit =
                                                                                                      nil
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093402920
                                                                                                   (assignn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093402980
                                                                                                      (temprefn, resultdef = LongInt = "LongInt", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009339F3A0
                                                                                                         temptypedef = LongInt = "LongInt", (tempinfo = $0000000091B9E2F0 flags = [])
                                                                                                      )
                                                                                                      (calln, resultdef = LongInt = "LongInt", pos = (370,76), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 00000000934029E0
                                                                                                         proc = GetPosition(<TControlScrollBar>):System.LongInt;
                                                                                                         methodpointer =
                                                                                                         (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (370,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093402A40
                                                                                                            (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (370,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093402AA0
                                                                                                               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339F400
                                                                                                                  nil
                                                                                                                  symbol = self
                                                                                                               )
                                                                                                               field = SCROLLBOX1
                                                                                                            )
                                                                                                            field = FHORZSCROLLBAR
                                                                                                         )
                                                                                                         vmt_entry =
                                                                                                         (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (370,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7, optinfo = 0000000093402B00
                                                                                                            (derefn, resultdef = TControlScrollBar. = "<record type>", pos = (370,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7, optinfo = 0000000093402B60
                                                                                                               (typeconvn, resultdef = <no type symbol> = "^TControlScrollBar.<record type>", pos = (370,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 6, optinfo = 0000000093402BC0, convtype = tc_equal, convnodeflags = []
                                                                                                                  (subscriptn, resultdef = Pointer = "^untyped", pos = (370,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6, optinfo = 0000000093402C20
                                                                                                                     (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (370,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093402C80
                                                                                                                        (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (370,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093402CE0
                                                                                                                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0DE0
                                                                                                                              nil
                                                                                                                              symbol = self
                                                                                                                           )
                                                                                                                           field = SCROLLBOX1
                                                                                                                        )
                                                                                                                        field = FHORZSCROLLBAR
                                                                                                                     )
                                                                                                                     field = hidden_vptr$TOBJECT
                                                                                                                  )
                                                                                                               )
                                                                                                            )
                                                                                                            field = f34
                                                                                                         )
                                                                                                         left =
                                                                                                         (callparan, resultdef = <nil>, pos = (370,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093402D40
                                                                                                            (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (370,67), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093402DA0
                                                                                                               (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (370,43), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093402E00
                                                                                                                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339F340
                                                                                                                     nil
                                                                                                                     symbol = self
                                                                                                                  )
                                                                                                                  field = SCROLLBOX1
                                                                                                               )
                                                                                                               field = FHORZSCROLLBAR
                                                                                                            )

                                                                                                         )
                                                                                                      )
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093402E60
                                                                                                   (tempcreaten, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 0000000093402EC0
                                                                                                      size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9E370
                                                                                                      [ti_nofini]
                                                                                                      tempinit =
                                                                                                      nil
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093402F20
                                                                                                   (tempcreaten, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093402F80
                                                                                                      size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9E3F0
                                                                                                      []
                                                                                                      tempinit =
                                                                                                      nil
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093402FE0
                                                                                                   (blockn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255, optinfo = 0000000093403040
                                                                                                      (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934030A0
                                                                                                         (calln, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093403100
                                                                                                            proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                                                                            intrinsiccode = in_str_x_string
                                                                                                            left =
                                                                                                            (callparan, resultdef = OpenString = "ShortString[0]", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093403160
                                                                                                               (temprefn, resultdef = ShortString = "ShortString[255]", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933E0D80
                                                                                                                  temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9E3F0 flags = [])
                                                                                                               )

                                                                                                            )
                                                                                                            (callparan, resultdef = Int64 = "Int64", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 00000000934031C0
                                                                                                               (typeconvn, resultdef = Int64 = "Int64", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093403220, convtype = tc_int_2_int, convnodeflags = []
                                                                                                                  (temprefn, resultdef = LongInt = "LongInt", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E740
                                                                                                                     temptypedef = LongInt = "LongInt", (tempinfo = $0000000091B9E2F0 flags = [])
                                                                                                                  )
                                                                                                               )

                                                                                                            )
                                                                                                            (callparan, resultdef = Int64 = "Int64", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093403280
                                                                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0, optinfo = 00000000934032E0
                                                                                                                  typedef = "Int64"
                                                                                                                  value = 255
                                                                                                               )

                                                                                                            )
                                                                                                            (callparan, resultdef = Int64 = "Int64", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093403340
                                                                                                               (ordconstn, resultdef = Int64 = "Int64", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000934033A0
                                                                                                                  typedef = "Int64"
                                                                                                                  value = -1
                                                                                                               )

                                                                                                            )
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 0000000093403400
                                                                                                         (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 0000000093403460
                                                                                                            proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                                                                            left =
                                                                                                            (callparan, resultdef = ShortString = "ShortString[255]", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000934034C0
                                                                                                               (temprefn, resultdef = ShortString = "ShortString[255]", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E7A0
                                                                                                                  temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9E3F0 flags = [])
                                                                                                               )

                                                                                                            )
                                                                                                            (callparan, resultdef = <nil>, pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093403520
                                                                                                               (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, optinfo = 0000000093403580, convtype = tc_equal, convnodeflags = []
                                                                                                                  (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009339E0E0
                                                                                                                     temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E370 flags = [ti_nofini])
                                                                                                                  )
                                                                                                               )

                                                                                                            )
                                                                                                            (callparan, resultdef = Word = "Word", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000934035E0
                                                                                                               (ordconstn, resultdef = Word = "Word", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093403640
                                                                                                                  typedef = "Word"
                                                                                                                  value = 0
                                                                                                               )

                                                                                                            )
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934036A0
                                                                                                         (calln, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093403700
                                                                                                            proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                                                                            left =
                                                                                                            (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093403760
                                                                                                               (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, optinfo = 00000000934037C0, convtype = tc_equal, convnodeflags = []
                                                                                                                  (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 0000000093380020
                                                                                                                     temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E370 flags = [ti_nofini])
                                                                                                                  )
                                                                                                               )

                                                                                                            )
                                                                                                            (callparan, resultdef = Boolean = "Boolean", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093403820
                                                                                                               (ordconstn, resultdef = Boolean = "Boolean", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093403880
                                                                                                                  typedef = "Boolean"
                                                                                                                  value = 0
                                                                                                               )

                                                                                                            )
                                                                                                            (callparan, resultdef = Word = "Word", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000934038E0
                                                                                                               (ordconstn, resultdef = Word = "Word", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093403940
                                                                                                                  typedef = "Word"
                                                                                                                  value = 0
                                                                                                               )

                                                                                                            )
                                                                                                         )

                                                                                                      )
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000934039A0
                                                                                                   (tempdeleten, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093403A00
                                                                                                      release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9E3F0
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093403A60
                                                                                                   (tempdeleten, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093403AC0
                                                                                                      release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000091B9E2F0
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093403B20
                                                                                                   (tempdeleten, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093403B80
                                                                                                      release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9E370
                                                                                                   )

                                                                                                )
                                                                                                (statementn, resultdef =  = "untyped", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093403BE0
                                                                                                   (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (370,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 000000009337B520
                                                                                                      temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E370 flags = [ti_nofini])
                                                                                                   )

                                                                                                )
                                                                                             )
                                                                                             (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093403C40
                                                                                                (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (371,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093403CA0
                                                                                                   value = " V Scroll :"
                                                                                                )
                                                                                                (arrayconstructn, resultdef = <nil>, pos = (371,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093403D00
                                                                                                   (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255, optinfo = 0000000093403D60
                                                                                                      (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093403DC0
                                                                                                         (tempcreaten, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093403E20
                                                                                                            size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000091B9E470
                                                                                                            []
                                                                                                            tempinit =
                                                                                                            nil
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093403E80
                                                                                                         (assignn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093403EE0
                                                                                                            (temprefn, resultdef = LongInt = "LongInt", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009339F880
                                                                                                               temptypedef = LongInt = "LongInt", (tempinfo = $0000000091B9E470 flags = [])
                                                                                                            )
                                                                                                            (calln, resultdef = LongInt = "LongInt", pos = (371,54), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093403F40
                                                                                                               proc = GetPosition(<TControlScrollBar>):System.LongInt;
                                                                                                               methodpointer =
                                                                                                               (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (371,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093403FA0
                                                                                                                  (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (371,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093404000
                                                                                                                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339E200
                                                                                                                        nil
                                                                                                                        symbol = self
                                                                                                                     )
                                                                                                                     field = SCROLLBOX1
                                                                                                                  )
                                                                                                                  field = FVERTSCROLLBAR
                                                                                                               )
                                                                                                               vmt_entry =
                                                                                                               (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (371,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7, optinfo = 0000000093404060
                                                                                                                  (derefn, resultdef = TControlScrollBar. = "<record type>", pos = (371,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 7, optinfo = 00000000934040C0
                                                                                                                     (typeconvn, resultdef = <no type symbol> = "^TControlScrollBar.<record type>", pos = (371,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 6, optinfo = 0000000093404120, convtype = tc_equal, convnodeflags = []
                                                                                                                        (subscriptn, resultdef = Pointer = "^untyped", pos = (371,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6, optinfo = 0000000093404180
                                                                                                                           (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (371,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000934041E0
                                                                                                                              (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (371,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093404240
                                                                                                                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339F820
                                                                                                                                    nil
                                                                                                                                    symbol = self
                                                                                                                                 )
                                                                                                                                 field = SCROLLBOX1
                                                                                                                              )
                                                                                                                              field = FVERTSCROLLBAR
                                                                                                                           )
                                                                                                                           field = hidden_vptr$TOBJECT
                                                                                                                        )
                                                                                                                     )
                                                                                                                  )
                                                                                                                  field = f34
                                                                                                               )
                                                                                                               left =
                                                                                                               (callparan, resultdef = <nil>, pos = (371,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000934042A0
                                                                                                                  (subscriptn, resultdef = TControlScrollBar = "TControlScrollBar", pos = (371,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093404300
                                                                                                                     (subscriptn, resultdef = TScrollBox = "TScrollBox", pos = (371,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093404360
                                                                                                                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E0C60
                                                                                                                           nil
                                                                                                                           symbol = self
                                                                                                                        )
                                                                                                                        field = SCROLLBOX1
                                                                                                                     )
                                                                                                                     field = FVERTSCROLLBAR
                                                                                                                  )

                                                                                                               )
                                                                                                            )
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934043C0
                                                                                                         (tempcreaten, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 0000000093404420
                                                                                                            size = 8, temptypedef = RawByteString = "AnsiString(65535)", tempinfo = $0000000091B9E4F0
                                                                                                            [ti_nofini]
                                                                                                            tempinit =
                                                                                                            nil
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093404480
                                                                                                         (tempcreaten, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000934044E0
                                                                                                            size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091B9E570
                                                                                                            []
                                                                                                            tempinit =
                                                                                                            nil
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093404540
                                                                                                         (blockn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255, optinfo = 00000000934045A0
                                                                                                            (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093404600
                                                                                                               (calln, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093404660
                                                                                                                  proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                                                                                  intrinsiccode = in_str_x_string
                                                                                                                  left =
                                                                                                                  (callparan, resultdef = OpenString = "ShortString[0]", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000934046C0
                                                                                                                     (temprefn, resultdef = ShortString = "ShortString[255]", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009337B100
                                                                                                                        temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9E570 flags = [])
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (callparan, resultdef = Int64 = "Int64", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093404720
                                                                                                                     (typeconvn, resultdef = Int64 = "Int64", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093404780, convtype = tc_int_2_int, convnodeflags = []
                                                                                                                        (temprefn, resultdef = LongInt = "LongInt", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339E6E0
                                                                                                                           temptypedef = LongInt = "LongInt", (tempinfo = $0000000091B9E470 flags = [])
                                                                                                                        )
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (callparan, resultdef = Int64 = "Int64", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000934047E0
                                                                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0, optinfo = 0000000093404840
                                                                                                                        typedef = "Int64"
                                                                                                                        value = 255
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (callparan, resultdef = Int64 = "Int64", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000934048A0
                                                                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093404900
                                                                                                                        typedef = "Int64"
                                                                                                                        value = -1
                                                                                                                     )

                                                                                                                  )
                                                                                                               )

                                                                                                            )
                                                                                                            (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 0000000093404960
                                                                                                               (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 00000000934049C0
                                                                                                                  proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                                                                                  left =
                                                                                                                  (callparan, resultdef = ShortString = "ShortString[255]", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093404A20
                                                                                                                     (temprefn, resultdef = ShortString = "ShortString[255]", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339F640
                                                                                                                        temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091B9E570 flags = [])
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (callparan, resultdef = <nil>, pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093404A80
                                                                                                                     (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, optinfo = 0000000093404AE0, convtype = tc_equal, convnodeflags = []
                                                                                                                        (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009339F6A0
                                                                                                                           temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E4F0 flags = [ti_nofini])
                                                                                                                        )
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (callparan, resultdef = Word = "Word", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093404B40
                                                                                                                     (ordconstn, resultdef = Word = "Word", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093404BA0
                                                                                                                        typedef = "Word"
                                                                                                                        value = 0
                                                                                                                     )

                                                                                                                  )
                                                                                                               )

                                                                                                            )
                                                                                                            (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093404C00
                                                                                                               (calln, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093404C60
                                                                                                                  proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                                                                                  left =
                                                                                                                  (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093404CC0
                                                                                                                     (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, optinfo = 0000000093404D20, convtype = tc_equal, convnodeflags = []
                                                                                                                        (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 00000000933E0C00
                                                                                                                           temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E4F0 flags = [ti_nofini])
                                                                                                                        )
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (callparan, resultdef = Boolean = "Boolean", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093404D80
                                                                                                                     (ordconstn, resultdef = Boolean = "Boolean", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093404DE0
                                                                                                                        typedef = "Boolean"
                                                                                                                        value = 0
                                                                                                                     )

                                                                                                                  )
                                                                                                                  (callparan, resultdef = Word = "Word", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093404E40
                                                                                                                     (ordconstn, resultdef = Word = "Word", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093404EA0
                                                                                                                        typedef = "Word"
                                                                                                                        value = 0
                                                                                                                     )

                                                                                                                  )
                                                                                                               )

                                                                                                            )
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093404F00
                                                                                                         (tempdeleten, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093404F60
                                                                                                            release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091B9E570
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093404FC0
                                                                                                         (tempdeleten, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093405020
                                                                                                            release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000091B9E470
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093405080
                                                                                                         (tempdeleten, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000934050E0
                                                                                                            release_to_normal: TRUE, temptypedef = RawByteString = "AnsiString(65535)", temptype = tt_persistent, tempinfo = $0000000091B9E4F0
                                                                                                         )

                                                                                                      )
                                                                                                      (statementn, resultdef =  = "untyped", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093405140
                                                                                                         (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 000000009339F700
                                                                                                            temptypedef = RawByteString = "AnsiString(65535)", (tempinfo = $0000000091B9E4F0 flags = [ti_nofini])
                                                                                                         )

                                                                                                      )
                                                                                                   )
                                                                                                   nil
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )

                                    )
                                    (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000934051A0
                                       (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339F760
                                          temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091B9D970 flags = [])
                                       )

                                    )
                                    (callparan, resultdef = Word = "Word", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093405200
                                       (ordconstn, resultdef = Word = "Word", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093405260
                                          typedef = "Word"
                                          value = 0
                                       )

                                    )
                                    (callparan, resultdef = Int64 = "Int64", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000934052C0
                                       (ordconstn, resultdef = Int64 = "Int64", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0, optinfo = 0000000093405320
                                          typedef = "Int64"
                                          value = 18
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093405380
                                 (tempdeleten, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000934053E0
                                    release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString(0)", temptype = tt_persistent, tempinfo = $0000000091B9D970
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093405440
                                 (temprefn, resultdef = AnsiString = "AnsiString(0)", pos = (371,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339F7C0
                                    temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091B9D970 flags = [])
                                 )

                              )
                           )

                        )
                     )

                  )
               )

            )
         )
         (calln, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934054A0
            proc = $fin$00000158(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef =  = "^untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093405500
               (loadparentfpn, resultdef =  = "^untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093405560
                  nil
               )

            )
         )
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934055C0
      (asmn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093405620
      )

   )
)

*******************************************************************************
after the firstpass
$fin$00000158 is nested; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (finalizetempsn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      )

   )
)

*******************************************************************************
right before code generation
$fin$00000158 is nested; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 00000000934678E0
   (statementn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093467940
      (asmn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934679A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093467A00
      (asmn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093467A60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093467AC0
      (asmn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093467B20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093467B80
      (asmn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093467BE0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093467C40
      (finalizetempsn, resultdef =  = "untyped", pos = (372,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093467CA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093467D00
      (asmn, resultdef =  = "untyped", pos = (331,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093467D60
      )

   )
)

*******************************************************************************
after parsing
Image1MouseUp(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (380,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (380,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = LongInt = "LongInt", pos = (380,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (380,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "LongInt"
            value = 1281103
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (381,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (381,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = LongInt = "LongInt", pos = (381,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = PX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (381,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (381,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (381,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = Single = "Single", pos = (381,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (381,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (381,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Single = "Single", pos = (381,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (381,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = X
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (381,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (381,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (382,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (382,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = LongInt = "LongInt", pos = (382,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = PY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (382,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (382,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (382,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typeconvn, resultdef = Single = "Single", pos = (382,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (382,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (382,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (typeconvn, resultdef = Single = "Single", pos = (382,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (382,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = Y
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (382,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (382,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (391,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (casen, resultdef =  = "untyped", pos = (383,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (383,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = HCTOOL
         )
         (caseblock blockid: 0
            (calln, resultdef =  = "untyped", pos = (384,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (384,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (384,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (384,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (384,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (384,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (384,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = HCSHIFT
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (384,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (384,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (384,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )

               )
            )
         )
         (caseblock blockid: 1
            (calln, resultdef =  = "untyped", pos = (385,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (385,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (385,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (385,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (385,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = HCSHIFT
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (385,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (385,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (385,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = self
                     )
                     field = IMAGE2
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (385,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (385,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (385,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )

               )
            )
         )
         (caseblock blockid: 2
            (calln, resultdef =  = "untyped", pos = (386,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (386,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (386,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (386,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (386,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (386,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (386,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = HCSHIFT
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (386,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (386,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (386,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = self
                     )
                     field = IMAGE2
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (386,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (386,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (386,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )

               )
            )
         )
         (caseblock blockid: 3
            (calln, resultdef =  = "untyped", pos = (387,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = hc_Fill(TImage;TImage;TMouseButton;TShiftState;LongInt;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (387,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (387,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = HMOUSEEVENT
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (387,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (387,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (387,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (387,59), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (387,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (387,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = HCSHIFT
                  )

               )
               (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (387,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (387,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = BUTTON
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = self
                     )
                     field = IMAGE2
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (387,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (387,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (387,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )

               )
            )
         )
         (else: 3
            (blockn, resultdef =  = "untyped", pos = (391,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (392,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = Draw(<TCanvas>;LongInt;LongInt;TGraphic);
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (392,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
            proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
            methodpointer =
            (subscriptn, resultdef = TImage = "TImage", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormDocument = "TFormDocument", pos = (392,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = self
               )
               field = IMAGE2
            )
            left =
            (callparan, resultdef = <nil>, pos = (392,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (392,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
         )
         left =
         (callparan, resultdef = TGraphic = "TGraphic", pos = (392,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (subscriptn, resultdef = TGraphic = "TGraphic", pos = (392,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
               (subscriptn, resultdef = TPicture = "TPicture", pos = (392,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                  (subscriptn, resultdef = TImage = "TImage", pos = (392,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (392,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )
                  field = FPICTURE
               )
               field = FGRAPHIC
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (392,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (392,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "LongInt"
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (392,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (392,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "LongInt"
               value = 0
            )

         )
         (callparan, resultdef = <nil>, pos = (392,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (392,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (393,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (393,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (393,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = HMOUSEBUTTON
         )
         (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (393,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "<enumeration type>"
            value = 5
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (394,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (394,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = LongInt = "LongInt", pos = (394,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (394,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "LongInt"
            value = 1281104
         )
      )

   )
)

*******************************************************************************
after the firstpass
Image1MouseUp(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (380,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (380,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (380,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (380,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "LongInt"
            value = 1281103
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (381,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (381,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31
         (loadn, resultdef = LongInt = "LongInt", pos = (381,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = PX
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (381,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (381,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (381,50), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27
                  (typeconvn, resultdef = Single = "Single", pos = (381,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (381,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (381,35), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13
                           (typeconvn, resultdef = Single = "Single", pos = (381,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (381,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = X
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (381,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (381,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (382,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (382,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31
         (loadn, resultdef = LongInt = "LongInt", pos = (382,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = PY
         )
         (typeconvn, resultdef = LongInt = "LongInt", pos = (382,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, convtype = tc_int_2_int, convnodeflags = []
            (inlinen, resultdef = Int64 = "Int64", pos = (382,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, inlinenumber = in_round_real
               (slashn, resultdef = Single = "Single", pos = (382,50), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27
                  (typeconvn, resultdef = Single = "Single", pos = (382,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, convtype = tc_int_2_real, convnodeflags = []
                     (inlinen, resultdef = Int64 = "Int64", pos = (382,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, inlinenumber = in_round_real
                        (slashn, resultdef = Single = "Single", pos = (382,35), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13
                           (typeconvn, resultdef = Single = "Single", pos = (382,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, convtype = tc_int_2_real, convnodeflags = []
                              (loadn, resultdef = LongInt = "LongInt", pos = (382,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = Y
                              )
                           )
                           (loadn, resultdef = Single = "Single", pos = (382,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = ZOOMFACTOR
                           )
                        )
                     )
                  )
                  (loadn, resultdef = Single = "Single", pos = (382,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = SCALEFACTOR
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (391,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (casen, resultdef =  = "untyped", pos = (383,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (383,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (caseblock blockid: 0
            (calln, resultdef =  = "untyped", pos = (384,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
               left =
               (callparan, resultdef = TImage = "TImage", pos = (384,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (384,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (384,28), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (384,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (384,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (384,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (384,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (384,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (384,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )

               )
            )
         )
         (caseblock blockid: 1
            (calln, resultdef =  = "untyped", pos = (385,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (385,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (385,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (385,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (385,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (385,38), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = self
                     )
                     field = IMAGE2
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (385,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (385,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (385,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (385,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (385,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )

               )
            )
         )
         (caseblock blockid: 2
            (calln, resultdef =  = "untyped", pos = (386,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (386,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (386,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (386,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (386,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (386,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = self
                     )
                     field = IMAGE2
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (386,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (386,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (386,38), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (386,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (386,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (386,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (386,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )

               )
            )
         )
         (caseblock blockid: 3
            (calln, resultdef =  = "untyped", pos = (387,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               proc = hc_Fill(TImage;TImage;TMouseButton;TShiftState;LongInt;LongInt;LongInt);
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (387,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (387,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = HMOUSEEVENT
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (387,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (387,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = PY
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (387,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (387,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = PX
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = self
                     )
                     field = IMAGE2
                  )

               )
               (callparan, resultdef = TImage = "TImage", pos = (387,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (subscriptn, resultdef = TImage = "TImage", pos = (387,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (387,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (387,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (387,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     nil
                     symbol = HCSHIFT
                  )

               )
               (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (387,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                  (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (387,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = BUTTON
                  )

               )
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (392,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Draw(<TCanvas>;LongInt;LongInt;TGraphic);
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(LongInt;LongInt;TGraphic) of object;Register>", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
            (derefn, resultdef = TCanvas. = "<record type>", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               (typeconvn, resultdef = <no type symbol> = "^TCanvas.<record type>", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                     (temprefn, resultdef = TCanvas = "TCanvas", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                        temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f139
         )
         callinitblock =
         (blockn, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091B9D970
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (392,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (392,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = IMAGE2
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (392,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                        (subscriptn, resultdef = TImage = "TImage", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (392,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = self
                           )
                           field = IMAGE2
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
            (statementn, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091B9D970
               )

            )
         )
         left =
         (callparan, resultdef = TGraphic = "TGraphic", pos = (392,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TGraphic = "TGraphic", pos = (392,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 6
               (subscriptn, resultdef = TPicture = "TPicture", pos = (392,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                  (subscriptn, resultdef = TImage = "TImage", pos = (392,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (392,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = self
                     )
                     field = IMAGE1
                  )
                  field = FPICTURE
               )
               field = FGRAPHIC
            )

         )
         (callparan, resultdef = <nil>, pos = (392,51), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (392,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (392,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (392,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (392,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = 0
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (393,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
      (assignn, resultdef =  = "untyped", pos = (393,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (393,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEBUTTON
         )
         (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (393,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "<enumeration type>"
            value = 5
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (394,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef =  = "untyped", pos = (394,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (394,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = HMOUSEEVENT
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (394,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "LongInt"
            value = 1281104
         )
      )

   )
)

*******************************************************************************
right before code generation
Image1MouseUp(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD100
   (statementn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337FFC0
      (asmn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD040
      )

   )
   (statementn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD0A0
      (asmn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCF80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCFE0
      (asmn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCEC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCF20
      (asmn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC560
      )

   )
   (statementn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC5C0
      (blockn, resultdef =  = "untyped", pos = (379,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 00000000933FACA0
         (statementn, resultdef =  = "untyped", pos = (380,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FAD00
            (assignn, resultdef =  = "untyped", pos = (380,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093405440
               (loadn, resultdef = LongInt = "LongInt", pos = (380,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933FB3C0
                  nil
                  symbol = HMOUSEEVENT
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (380,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FCBC0
                  typedef = "LongInt"
                  value = 1281103
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (381,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339F7C0
            (assignn, resultdef =  = "untyped", pos = (381,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31, optinfo = 0000000093405380
               (loadn, resultdef = LongInt = "LongInt", pos = (381,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933FB660
                  nil
                  symbol = PX
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (381,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, optinfo = 00000000933FCC20, convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (381,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, optinfo = 00000000933FCE00, inlinenumber = in_round_real
                     (slashn, resultdef = Single = "Single", pos = (381,50), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27, optinfo = 00000000933FCE60
                        (typeconvn, resultdef = Single = "Single", pos = (381,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, optinfo = 00000000933FCD40, convtype = tc_int_2_real, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (381,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, optinfo = 00000000933FCDA0, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (381,35), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13, optinfo = 00000000933FCC80
                                 (typeconvn, resultdef = Single = "Single", pos = (381,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, optinfo = 00000000933FCCE0, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (381,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933E15C0
                                       nil
                                       symbol = X
                                    )
                                 )
                                 (loadn, resultdef = Single = "Single", pos = (381,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FB600
                                    nil
                                    symbol = ZOOMFACTOR
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = Single = "Single", pos = (381,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339EF20
                           nil
                           symbol = SCALEFACTOR
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (382,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934053E0
            (assignn, resultdef =  = "untyped", pos = (382,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 31, optinfo = 00000000933FAE20
               (loadn, resultdef = LongInt = "LongInt", pos = (382,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933FB780
                  nil
                  symbol = PY
               )
               (typeconvn, resultdef = LongInt = "LongInt", pos = (382,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 29, optinfo = 00000000933E1B60, convtype = tc_int_2_int, convnodeflags = []
                  (inlinen, resultdef = Int64 = "Int64", pos = (382,51), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 28, optinfo = 00000000933FC920, inlinenumber = in_round_real
                     (slashn, resultdef = Single = "Single", pos = (382,50), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 27, optinfo = 00000000933FC980
                        (typeconvn, resultdef = Single = "Single", pos = (382,37), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 15, optinfo = 00000000933FCB00, convtype = tc_int_2_real, convnodeflags = []
                           (inlinen, resultdef = Int64 = "Int64", pos = (382,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 14, optinfo = 00000000933FCB60, inlinenumber = in_round_real
                              (slashn, resultdef = Single = "Single", pos = (382,35), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 13, optinfo = 00000000933FCA40
                                 (typeconvn, resultdef = Single = "Single", pos = (382,21), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 1, optinfo = 00000000933FCAA0, convtype = tc_int_2_real, convnodeflags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (382,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FB7E0
                                       nil
                                       symbol = Y
                                    )
                                 )
                                 (loadn, resultdef = Single = "Single", pos = (382,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FB6C0
                                    nil
                                    symbol = ZOOMFACTOR
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = Single = "Single", pos = (382,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FB720
                           nil
                           symbol = SCALEFACTOR
                        )
                     )
                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (391,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FAE80
            (casen, resultdef =  = "untyped", pos = (383,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934052C0
               (loadn, resultdef = TToolType = "<enumeration type>", pos = (383,8), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FBEA0
                  nil
                  symbol = HCTOOL
               )
               (caseblock blockid: 0
                  (calln, resultdef =  = "untyped", pos = (384,15), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FBF00
                     proc = hc_pen(TImage;TShiftState;LongInt;LongInt);
                     left =
                     (callparan, resultdef = TImage = "TImage", pos = (384,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E1C80
                        (subscriptn, resultdef = TImage = "TImage", pos = (384,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FC9E0
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (384,28), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FBDE0
                              nil
                              symbol = self
                           )
                           field = IMAGE1
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (384,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E1C20
                        (loadn, resultdef = LongInt = "LongInt", pos = (384,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FBE40
                           nil
                           symbol = PY
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (384,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC620
                        (loadn, resultdef = LongInt = "LongInt", pos = (384,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FB480
                           nil
                           symbol = PX
                        )

                     )
                     (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (384,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC680
                        (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (384,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FB4E0
                           nil
                           symbol = HCSHIFT
                        )

                     )
                  )
               )
               (caseblock blockid: 1
                  (calln, resultdef =  = "untyped", pos = (385,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FBAE0
                     proc = hc_line(TImage;TImage;TShiftState;LongInt;LongInt);
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (385,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC860
                        (loadn, resultdef = LongInt = "LongInt", pos = (385,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FBB40
                           nil
                           symbol = PY
                        )

                     )
                     (callparan, resultdef = TImage = "TImage", pos = (385,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC8C0
                        (subscriptn, resultdef = TImage = "TImage", pos = (385,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FC7A0
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (385,38), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FBD20
                              nil
                              symbol = self
                           )
                           field = IMAGE2
                        )

                     )
                     (callparan, resultdef = TImage = "TImage", pos = (385,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC800
                        (subscriptn, resultdef = TImage = "TImage", pos = (385,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FC740
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (385,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FBD80
                              nil
                              symbol = self
                           )
                           field = IMAGE1
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (385,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E1D40
                        (loadn, resultdef = LongInt = "LongInt", pos = (385,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FBC60
                           nil
                           symbol = PX
                        )

                     )
                     (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC6E0
                        (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (385,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FBCC0
                           nil
                           symbol = HCSHIFT
                        )

                     )
                  )
               )
               (caseblock blockid: 2
                  (calln, resultdef =  = "untyped", pos = (386,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FBBA0
                     proc = hc_ellipse1(TImage;TImage;TShiftState;LongInt;LongInt);
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (386,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933E1380
                        (loadn, resultdef = LongInt = "LongInt", pos = (386,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FBC00
                           nil
                           symbol = PY
                        )

                     )
                     (callparan, resultdef = TImage = "TImage", pos = (386,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC4A0
                        (subscriptn, resultdef = TImage = "TImage", pos = (386,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FC500
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (386,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339EFE0
                              nil
                              symbol = self
                           )
                           field = IMAGE2
                        )

                     )
                     (callparan, resultdef = TImage = "TImage", pos = (386,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC380
                        (subscriptn, resultdef = TImage = "TImage", pos = (386,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FC3E0
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (386,38), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FB840
                              nil
                              symbol = self
                           )
                           field = IMAGE1
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (386,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339F0A0
                        (loadn, resultdef = LongInt = "LongInt", pos = (386,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FB8A0
                           nil
                           symbol = PX
                        )

                     )
                     (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (386,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC440
                        (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (386,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FBA20
                           nil
                           symbol = HCSHIFT
                        )

                     )
                  )
               )
               (caseblock blockid: 3
                  (calln, resultdef =  = "untyped", pos = (387,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FBA80
                     proc = hc_Fill(TImage;TImage;TMouseButton;TShiftState;LongInt;LongInt;LongInt);
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (387,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339EF80
                        (loadn, resultdef = LongInt = "LongInt", pos = (387,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FB960
                           nil
                           symbol = HMOUSEEVENT
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (387,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC2C0
                        (loadn, resultdef = LongInt = "LongInt", pos = (387,63), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FB9C0
                           nil
                           symbol = PY
                        )

                     )
                     (callparan, resultdef = LongInt = "LongInt", pos = (387,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC320
                        (loadn, resultdef = LongInt = "LongInt", pos = (387,59), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933E1440
                           nil
                           symbol = PX
                        )

                     )
                     (callparan, resultdef = TImage = "TImage", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FC200
                        (subscriptn, resultdef = TImage = "TImage", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FC260
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (387,38), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FB900
                              nil
                              symbol = self
                           )
                           field = IMAGE2
                        )

                     )
                     (callparan, resultdef = TImage = "TImage", pos = (387,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FD160
                        (subscriptn, resultdef = TImage = "TImage", pos = (387,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FD1C0
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (387,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009339EEC0
                              nil
                              symbol = self
                           )
                           field = IMAGE1
                        )

                     )
                     (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (387,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FD220
                        (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (387,55), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FB540
                           nil
                           symbol = HCSHIFT
                        )

                     )
                     (callparan, resultdef = TMouseButton = "<enumeration type>", pos = (387,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933FD280
                        (loadn, resultdef = TMouseButton = "<enumeration type>", pos = (387,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FB5A0
                           nil
                           symbol = BUTTON
                        )

                     )
                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (392,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093405320
            (calln, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093405200
               proc = Draw(<TCanvas>;LongInt;LongInt;TGraphic);
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933FC020
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(LongInt;LongInt;TGraphic) of object;Register>", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FD6A0
                  (derefn, resultdef = TCanvas. = "<record type>", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FDCA0
                     (typeconvn, resultdef = <no type symbol> = "^TCanvas.<record type>", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, optinfo = 00000000933FDD00, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FDEE0
                           (temprefn, resultdef = TCanvas = "TCanvas", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933E13E0
                              temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f139
               )
               callinitblock =
               (blockn, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FE1E0
                  (statementn, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339F160
                     (tempcreaten, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FE120
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091B9D970
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FE180
                     (assignn, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FE060
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 00000000933FB000
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (392,16), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 00000000933FE0C0
                           proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                           methodpointer =
                           (subscriptn, resultdef = TImage = "TImage", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FDFA0
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (392,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FB060
                                 nil
                                 symbol = self
                              )
                              field = IMAGE2
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (392,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FE000
                              (subscriptn, resultdef = TImage = "TImage", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FD640
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (392,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FB0C0
                                    nil
                                    symbol = self
                                 )
                                 field = IMAGE2
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FDF40
                  (statementn, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FDE20
                     (tempdeleten, resultdef =  = "untyped", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FDE80
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091B9D970
                     )

                  )
               )
               left =
               (callparan, resultdef = TGraphic = "TGraphic", pos = (392,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FDD60
                  (subscriptn, resultdef = TGraphic = "TGraphic", pos = (392,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 6, optinfo = 00000000933FDDC0
                     (subscriptn, resultdef = TPicture = "TPicture", pos = (392,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 000000009339F100
                        (subscriptn, resultdef = TImage = "TImage", pos = (392,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000933FDA00
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (392,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FBF60
                              nil
                              symbol = self
                           )
                           field = IMAGE1
                        )
                        field = FPICTURE
                     )
                     field = FGRAPHIC
                  )

               )
               (callparan, resultdef = <nil>, pos = (392,51), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933FDA60
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (392,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933FBFC0
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9D970 flags = [ti_may_be_in_reg])
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (392,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FDBE0
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (392,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FDC40
                     typedef = "LongInt"
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (392,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000933FDB20
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (392,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FDB80
                     typedef = "LongInt"
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (393,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4, optinfo = 0000000093405260
            (assignn, resultdef =  = "untyped", pos = (393,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000934051A0
               (loadn, resultdef = hcMouseButton = "<enumeration type>", pos = (393,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933FAFA0
                  nil
                  symbol = HMOUSEBUTTON
               )
               (ordconstn, resultdef = hcMouseButton = "<enumeration type>", pos = (393,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009339F2E0
                  typedef = "<enumeration type>"
                  value = 5
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (394,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009339F760
            (assignn, resultdef =  = "untyped", pos = (394,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933FAEE0
               (loadn, resultdef = LongInt = "LongInt", pos = (394,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933FAF40
                  nil
                  symbol = HMOUSEEVENT
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (394,18), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FDAC0
                  typedef = "LongInt"
                  value = 1281104
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (396,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339EA40
      (asmn, resultdef =  = "untyped", pos = (396,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD700
      )

   )
   (statementn, resultdef =  = "untyped", pos = (396,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD760
      (finalizetempsn, resultdef =  = "untyped", pos = (396,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD940
      )

   )
)

*******************************************************************************
after parsing
Image1MouseWheelDown(TObject;TShiftState;TPoint;var Boolean);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (401,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (401,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Single = "Single", pos = (401,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = ZOOMFACTOR
         )
         (muln, resultdef = Double = "Double", pos = (401,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (typeconvn, resultdef = Double = "Double", pos = (401,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_real_2_real, convnodeflags = []
               (loadn, resultdef = Single = "Single", pos = (401,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = ZOOMFACTOR
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (401,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               value =  9.0909090909090906E-001
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (402,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (402,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = SetZoom(Single;TPoint;TFormDocument);
         left =
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (402,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (402,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )

         )
         (callparan, resultdef = TPoint = "<record type>", pos = (402,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TPoint = "<record type>", pos = (402,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = MOUSEPOS
            )

         )
         (callparan, resultdef = Single = "Single", pos = (402,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = Single = "Single", pos = (402,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = ZOOMFACTOR
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
Image1MouseWheelDown(TObject;TShiftState;TPoint;var Boolean);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (401,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (401,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (401,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = ZOOMFACTOR
         )
         (muln, resultdef = Double = "Double", pos = (401,28), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2
            (typeconvn, resultdef = Double = "Double", pos = (401,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, convtype = tc_real_2_real, convnodeflags = []
               (loadn, resultdef = Single = "Single", pos = (401,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  nil
                  symbol = ZOOMFACTOR
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (401,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
               value =  9.0909090909090906E-001
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (402,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (402,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = SetZoom(Single;TPoint;TFormDocument);
         left =
         (callparan, resultdef = Single = "Single", pos = (402,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (loadn, resultdef = Single = "Single", pos = (402,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = ZOOMFACTOR
            )

         )
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (402,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (402,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )

         )
         (callparan, resultdef = TPoint = "<record type>", pos = (402,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TPoint = "<record type>", pos = (402,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = MOUSEPOS
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
Image1MouseWheelDown(TObject;TShiftState;TPoint;var Boolean);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDA00
   (statementn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FBF60
      (asmn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD6A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDCA0
      (asmn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDD00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDEE0
      (asmn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E13E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDF40
      (asmn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDE20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDE80
      (blockn, resultdef =  = "untyped", pos = (400,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 00000000933FACA0
         (statementn, resultdef =  = "untyped", pos = (401,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD940
            (assignn, resultdef =  = "untyped", pos = (401,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009339EA40
               (loadn, resultdef = Single = "Single", pos = (401,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093405260
                  nil
                  symbol = ZOOMFACTOR
               )
               (muln, resultdef = Double = "Double", pos = (401,28), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 00000000933FE1E0
                  (typeconvn, resultdef = Double = "Double", pos = (401,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 00000000933FE180, convtype = tc_real_2_real, convnodeflags = []
                     (loadn, resultdef = Single = "Single", pos = (401,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000934051A0
                        nil
                        symbol = ZOOMFACTOR
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (401,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 00000000933FE060
                     value =  9.0909090909090906E-001
                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (402,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD700
            (calln, resultdef =  = "untyped", pos = (402,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339F760
               proc = SetZoom(Single;TPoint;TFormDocument);
               left =
               (callparan, resultdef = Single = "Single", pos = (402,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FB000
                  (loadn, resultdef = Single = "Single", pos = (402,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FAEE0
                     nil
                     symbol = ZOOMFACTOR
                  )

               )
               (callparan, resultdef = TFormDocument = "TFormDocument", pos = (402,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933FE0C0
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (402,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FAF40
                     nil
                     symbol = self
                  )

               )
               (callparan, resultdef = TPoint = "<record type>", pos = (402,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933FE000
                  (loadn, resultdef = TPoint = "<record type>", pos = (402,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FDAC0
                     nil
                     symbol = MOUSEPOS
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (403,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD640
      (asmn, resultdef =  = "untyped", pos = (403,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB0C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (403,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDFA0
      (finalizetempsn, resultdef =  = "untyped", pos = (403,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB060
      )

   )
)

*******************************************************************************
after parsing
Image1MouseWheelUp(TObject;TShiftState;TPoint;var Boolean);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (408,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (408,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Single = "Single", pos = (408,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = ZOOMFACTOR
         )
         (muln, resultdef = Double = "Double", pos = (408,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (typeconvn, resultdef = Double = "Double", pos = (408,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_real_2_real, convnodeflags = []
               (loadn, resultdef = Single = "Single", pos = (408,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = ZOOMFACTOR
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (408,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               value =  1.1000000000000001E+000
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (409,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (409,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = SetZoom(Single;TPoint;TFormDocument);
         left =
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (409,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (409,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )

         )
         (callparan, resultdef = TPoint = "<record type>", pos = (409,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TPoint = "<record type>", pos = (409,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = MOUSEPOS
            )

         )
         (callparan, resultdef = Single = "Single", pos = (409,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = Single = "Single", pos = (409,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = ZOOMFACTOR
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
Image1MouseWheelUp(TObject;TShiftState;TPoint;var Boolean);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (408,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (408,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = Single = "Single", pos = (408,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = ZOOMFACTOR
         )
         (muln, resultdef = Double = "Double", pos = (408,28), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2
            (typeconvn, resultdef = Double = "Double", pos = (408,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, convtype = tc_real_2_real, convnodeflags = []
               (loadn, resultdef = Single = "Single", pos = (408,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  nil
                  symbol = ZOOMFACTOR
               )
            )
            (realconstn, resultdef = Double = "Double", pos = (408,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2
               value =  1.1000000000000001E+000
            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (409,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (409,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = SetZoom(Single;TPoint;TFormDocument);
         left =
         (callparan, resultdef = Single = "Single", pos = (409,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (loadn, resultdef = Single = "Single", pos = (409,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = ZOOMFACTOR
            )

         )
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (409,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (409,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )

         )
         (callparan, resultdef = TPoint = "<record type>", pos = (409,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TPoint = "<record type>", pos = (409,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = MOUSEPOS
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
Image1MouseWheelUp(TObject;TShiftState;TPoint;var Boolean);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDCA0
   (statementn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDD00
      (asmn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FBF60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD6A0
      (asmn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD100
      )

   )
   (statementn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB3C0
      (asmn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCBC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCF20
      (asmn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC560
      )

   )
   (statementn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCFE0
      (blockn, resultdef =  = "untyped", pos = (407,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 00000000933FACA0
         (statementn, resultdef =  = "untyped", pos = (408,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB060
            (assignn, resultdef =  = "untyped", pos = (408,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933FD640
               (loadn, resultdef = Single = "Single", pos = (408,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933FE0C0
                  nil
                  symbol = ZOOMFACTOR
               )
               (muln, resultdef = Double = "Double", pos = (408,28), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 00000000933FCEC0
                  (typeconvn, resultdef = Double = "Double", pos = (408,17), loc = LOC_INVALID, expectloc = LOC_MMREG, flags = [], cmplx = 2, optinfo = 00000000933FD0A0, convtype = tc_real_2_real, convnodeflags = []
                     (loadn, resultdef = Single = "Single", pos = (408,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FAF40
                        nil
                        symbol = ZOOMFACTOR
                     )
                  )
                  (realconstn, resultdef = Double = "Double", pos = (408,30), loc = LOC_INVALID, expectloc = LOC_CREF, flags = [], cmplx = 2, optinfo = 00000000933FCF80
                     value =  1.1000000000000001E+000
                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (409,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB0C0
            (calln, resultdef =  = "untyped", pos = (409,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD700
               proc = SetZoom(Single;TPoint;TFormDocument);
               left =
               (callparan, resultdef = Single = "Single", pos = (409,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009337FFC0
                  (loadn, resultdef = Single = "Single", pos = (409,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009339F760
                     nil
                     symbol = ZOOMFACTOR
                  )

               )
               (callparan, resultdef = TFormDocument = "TFormDocument", pos = (409,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933FD040
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (409,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FE000
                     nil
                     symbol = self
                  )

               )
               (callparan, resultdef = TPoint = "<record type>", pos = (409,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933E2BE0
                  (loadn, resultdef = TPoint = "<record type>", pos = (409,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FDAC0
                     nil
                     symbol = MOUSEPOS
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (410,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339F8E0
      (asmn, resultdef =  = "untyped", pos = (410,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339E140
      )

   )
   (statementn, resultdef =  = "untyped", pos = (410,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC080
      (finalizetempsn, resultdef =  = "untyped", pos = (410,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093402500
      )

   )
)

*******************************************************************************
after parsing
Image1Resize(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (419,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (419,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = MyResize(TPoint;TFormDocument);
         left =
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (419,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (419,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )

         )
         (callparan, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = Point(LongInt;LongInt):windows.TPoint;
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (419,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (419,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (419,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (419,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )

               )
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
Image1Resize(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (419,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (419,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = MyResize(TPoint;TFormDocument);
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (blockn, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_no_lvalue], cmplx = 5
               (statementn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (tempcreaten, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                     size = 8, temptypedef = TPoint = "<record type>", tempinfo = $0000000091B9DCF0
                     [ti_may_be_in_reg]
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (blockn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 4
                     (statementn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                        (assignn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9DCF0 flags = [ti_may_be_in_reg])
                                 )
                              )
                              field = X
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (419,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                              typedef = "LongInt"
                              value = 0
                           )
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                        (assignn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9DCF0 flags = [ti_may_be_in_reg])
                                 )
                              )
                              field = Y
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (419,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                              typedef = "LongInt"
                              value = 0
                           )
                        )

                     )
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (tempdeleten, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $0000000091B9DCF0
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_is_funcret], cmplx = 1
                     temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9DCF0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (419,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (419,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
Image1Resize(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FE0C0
   (statementn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCEC0
      (asmn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD0A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FAF40
      (asmn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCF80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCF20
      (asmn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC560
      )

   )
   (statementn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FB3C0
      (asmn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCBC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD6A0
      (blockn, resultdef =  = "untyped", pos = (418,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093402500
         (statementn, resultdef =  = "untyped", pos = (419,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339F8E0
            (calln, resultdef =  = "untyped", pos = (419,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339E140
               proc = MyResize(TPoint;TFormDocument);
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933FD100
                  (blockn, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_no_lvalue], cmplx = 5, optinfo = 00000000933FDD00
                     (statementn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5, optinfo = 00000000933FBF60
                        (tempcreaten, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 00000000933FDA00
                           size = 8, temptypedef = TPoint = "<record type>", tempinfo = $0000000091B9DCF0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5, optinfo = 000000009339FE20
                        (blockn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 4, optinfo = 000000009339E440
                           (statementn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4, optinfo = 00000000933F9920
                              (assignn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009337B340
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1, optinfo = 00000000933F9980
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, optinfo = 000000009339BE00, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 00000000933FB0C0
                                          temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9DCF0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                    field = X
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (419,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009339E5C0
                                    typedef = "LongInt"
                                    value = 0
                                 )
                              )

                           )
                           (statementn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933F99E0
                              (assignn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933F9A40
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1, optinfo = 000000009339F940
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, optinfo = 000000009337BB80, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 00000000933FD700
                                          temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9DCF0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                    field = Y
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (419,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009337A3E0
                                    typedef = "LongInt"
                                    value = 0
                                 )
                              )

                           )
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933E17A0
                        (tempdeleten, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933FAB80
                           release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $0000000091B9DCF0
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933FABE0
                        (temprefn, resultdef = TPoint = "<record type>", pos = (419,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_is_funcret], cmplx = 1, optinfo = 00000000933E2BE0
                           temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9DCF0 flags = [ti_may_be_in_reg])
                        )

                     )
                  )

               )
               (callparan, resultdef = TFormDocument = "TFormDocument", pos = (419,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933FAC40
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (419,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FDAC0
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (420,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339FF40
      (asmn, resultdef =  = "untyped", pos = (420,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FA460
      )

   )
   (statementn, resultdef =  = "untyped", pos = (420,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FA4C0
      (finalizetempsn, resultdef =  = "untyped", pos = (420,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FA520
      )

   )
)

*******************************************************************************
after parsing
ScrollBox1Resize(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (424,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (424,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = MyResize(TPoint;TFormDocument);
         left =
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (424,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (424,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )

         )
         (callparan, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (calln, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               proc = Point(LongInt;LongInt):windows.TPoint;
               left =
               (callparan, resultdef = LongInt = "LongInt", pos = (424,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (424,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (424,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (424,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )

               )
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
ScrollBox1Resize(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (424,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (424,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = MyResize(TPoint;TFormDocument);
         left =
         (callparan, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (blockn, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_no_lvalue], cmplx = 5
               (statementn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (tempcreaten, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                     size = 8, temptypedef = TPoint = "<record type>", tempinfo = $0000000091B9DBF0
                     [ti_may_be_in_reg]
                     tempinit =
                     nil
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (blockn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 4
                     (statementn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
                        (assignn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9DBF0 flags = [ti_may_be_in_reg])
                                 )
                              )
                              field = X
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (424,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                              typedef = "LongInt"
                              value = 0
                           )
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                        (assignn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1
                              (typeconvn, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                 (temprefn, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1
                                    temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9DBF0 flags = [ti_may_be_in_reg])
                                 )
                              )
                              field = Y
                           )
                           (ordconstn, resultdef = LongInt = "LongInt", pos = (424,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                              typedef = "LongInt"
                              value = 0
                           )
                        )

                     )
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                  (tempdeleten, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $0000000091B9DBF0
                  )

               )
               (statementn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                  (temprefn, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_is_funcret], cmplx = 1
                     temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9DBF0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (callparan, resultdef = TFormDocument = "TFormDocument", pos = (424,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TFormDocument = "TFormDocument", pos = (424,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
ScrollBox1Resize(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339FE20
   (statementn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339E440
      (asmn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F99E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F9A40
      (asmn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339F940
      )

   )
   (statementn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337BB80
      (asmn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD700
      )

   )
   (statementn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337A3E0
      (asmn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F9920
      )

   )
   (statementn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009337B340
      (blockn, resultdef =  = "untyped", pos = (423,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 00000000933FA520
         (statementn, resultdef =  = "untyped", pos = (424,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339FF40
            (calln, resultdef =  = "untyped", pos = (424,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FA460
               proc = MyResize(TPoint;TFormDocument);
               left =
               (callparan, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933F9980
                  (blockn, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_no_lvalue], cmplx = 5, optinfo = 000000009339BE00
                     (statementn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5, optinfo = 00000000933FB0C0
                        (tempcreaten, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 000000009339E5C0
                           size = 8, temptypedef = TPoint = "<record type>", tempinfo = $0000000091B9DBF0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5, optinfo = 00000000933FBF60
                        (blockn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 4, optinfo = 00000000933FDA00
                           (statementn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4, optinfo = 00000000933FB3C0
                              (assignn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933FCBC0
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1, optinfo = 00000000933FCF20
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, optinfo = 00000000933FC560, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009339F8E0
                                          temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9DBF0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                    field = X
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (424,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933FAF40
                                    typedef = "LongInt"
                                    value = 0
                                 )
                              )

                           )
                           (statementn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933FCF80
                              (assignn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933FCEC0
                                 (subscriptn, resultdef = LongInt = "LongInt", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CSSETREG, flags = [nf_write], cmplx = 1, optinfo = 00000000933FD0A0
                                    (typeconvn, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 1, optinfo = 00000000933FACA0, convtype = tc_equal, convnodeflags = []
                                       (temprefn, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 000000009339E140
                                          temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9DBF0 flags = [ti_may_be_in_reg])
                                       )
                                    )
                                    field = Y
                                 )
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (424,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000933E2220
                                    typedef = "LongInt"
                                    value = 0
                                 )
                              )

                           )
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 00000000933E03C0
                        (tempdeleten, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 00000000933F8C00
                           release_to_normal: TRUE, temptypedef = TPoint = "<record type>", temptype = tt_persistent, tempinfo = $0000000091B9DBF0
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 00000000933F8C60
                        (temprefn, resultdef = TPoint = "<record type>", pos = (424,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_is_funcret], cmplx = 1, optinfo = 00000000933FAC40
                           temptypedef = TPoint = "<record type>", (tempinfo = $0000000091B9DBF0 flags = [ti_may_be_in_reg])
                        )

                     )
                  )

               )
               (callparan, resultdef = TFormDocument = "TFormDocument", pos = (424,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000933F8CC0
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (424,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FDAC0
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8D20
      (asmn, resultdef =  = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8D80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8DE0
      (finalizetempsn, resultdef =  = "untyped", pos = (425,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8E40
      )

   )
)

*******************************************************************************
after parsing
MainPanelClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
MainPanelClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
MainPanelClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F9980
   (statementn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339BE00
      (asmn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8C60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FAC40
      (asmn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E03C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F8C00
      (asmn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FBF60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FDA00
      (asmn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCF80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FCEC0
      (blockn, resultdef =  = "untyped", pos = (429,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 00000000933F8E40
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (431,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FD0A0
      (asmn, resultdef =  = "untyped", pos = (431,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FACA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (431,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339E140
      (finalizetempsn, resultdef =  = "untyped", pos = (431,2), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E2220
      )

   )
)

*******************************************************************************
after parsing
$UNITFORMDOCUMENT_$$_init$; Register;
*******************************************************************************
nil

*******************************************************************************
after parsing
ToolButtonEllipseClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (222,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (222,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (222,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (222,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "<enumeration type>"
            value = 8
         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonEllipseClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 2
   (statementn, resultdef =  = "untyped", pos = (222,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef =  = "untyped", pos = (222,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (222,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (222,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "<enumeration type>"
            value = 8
         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonEllipseClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F6C0
   (statementn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F660
      (asmn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F540
      )

   )
   (statementn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F4E0
      (asmn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F480
      )

   )
   (statementn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F420
      (asmn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F3C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F360
      (asmn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F300
      )

   )
   (statementn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F2A0
      (blockn, resultdef =  = "untyped", pos = (221,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 2, optinfo = 0000000093490620
         (statementn, resultdef =  = "untyped", pos = (222,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000934903E0
            (assignn, resultdef =  = "untyped", pos = (222,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093490380
               (loadn, resultdef = TToolType = "<enumeration type>", pos = (222,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093490260
                  nil
                  symbol = HCTOOL
               )
               (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (222,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009348F240
                  typedef = "<enumeration type>"
                  value = 8
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (223,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F060
      (asmn, resultdef =  = "untyped", pos = (223,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F000
      )

   )
   (statementn, resultdef =  = "untyped", pos = (223,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348EF40
      (finalizetempsn, resultdef =  = "untyped", pos = (223,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348EEE0
      )

   )
)

*******************************************************************************
after parsing
ToolButtonOpenClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (236,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (ifn, resultdef =  = "untyped", pos = (230,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (calln, resultdef = Boolean = "Boolean", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            proc = Execute(<TCommonDialog>):System.Boolean;
            methodpointer =
            (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (230,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormMain = "TFormMain", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = self
               )
               field = OPENPICTUREDIALOG1
            )
            left =
            (callparan, resultdef = <nil>, pos = (230,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (230,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
         )
         (blockn, resultdef =  = "untyped", pos = (231,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (232,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (assignn, resultdef =  = "untyped", pos = (232,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (232,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = MYFORM
                  )
                  (calln, resultdef = TFormDocument = "TFormDocument", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (232,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typen, resultdef = TFormDocument = "TFormDocument", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (232,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typeconvn, resultdef = TComponent = "TComponent", pos = (232,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_equal, convnodeflags = []
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (232,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = self
                           )
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (232,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (232,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (232,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (232,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (233,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (assignn, resultdef =  = "untyped", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (subscriptn, resultdef = AnsiString = "AnsiString(0)", pos = (233,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = MYFORM
                     )
                     field = FILENAME
                  )
                  (subscriptn, resultdef = AnsiString = "AnsiString(0)", pos = (233,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                     (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (233,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (233,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           nil
                           symbol = self
                        )
                        field = OPENPICTUREDIALOG1
                     )
                     field = FFILENAME
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (235,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (235,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  proc = Show(<TCustomForm>);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (235,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = MYFORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (235,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (235,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonOpenClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (236,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef =  = "untyped", pos = (230,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (calln, resultdef = Boolean = "Boolean", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            proc = Execute(<TCommonDialog>):System.Boolean;
            methodpointer =
            (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (230,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormMain = "TFormMain", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = OPENPICTUREDIALOG1
            )
            vmt_entry =
            (subscriptn, resultdef = <no type symbol> = "<address of function:Boolean of object;Register>", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
               (derefn, resultdef = TOpenPictureDialog. = "<record type>", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
                  (typeconvn, resultdef = <no type symbol> = "^TOpenPictureDialog.<record type>", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                     (subscriptn, resultdef = Pointer = "^untyped", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                        (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (230,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = self
                           )
                           field = OPENPICTUREDIALOG1
                        )
                        field = hidden_vptr$TOBJECT
                     )
                  )
               )
               field = f68
            )
            left =
            (callparan, resultdef = <nil>, pos = (230,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
               (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (230,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = self
                  )
                  field = OPENPICTUREDIALOG1
               )

            )
         )
         (blockn, resultdef =  = "untyped", pos = (231,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (232,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (232,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (232,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = MYFORM
                  )
                  (calln, resultdef = TFormDocument = "TFormDocument", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                     proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (232,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (typen, resultdef = TFormDocument = "TFormDocument", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                     vmt_entry =
                     (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TForm of object;Register>", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        (derefn, resultdef = TFormDocument. = "<record type>", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (typeconvn, resultdef = <no type symbol> = "^TFormDocument.<record type>", pos = (232,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (232,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                 (typen, resultdef = TFormDocument = "TFormDocument", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )
                              )
                           )
                        )
                        field = f54
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (232,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (232,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                           (typen, resultdef = TFormDocument = "TFormDocument", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )
                        )

                     )
                     (callparan, resultdef = TComponent = "TComponent", pos = (232,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                        (typeconvn, resultdef = TComponent = "TComponent", pos = (232,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, convtype = tc_equal, convnodeflags = []
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (232,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = self
                           )
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (232,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (233,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  proc = $fpc_ansistr_assign(var Pointer;Pointer);
                  left =
                  (callparan, resultdef = Pointer = "^untyped", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (typeconvn, resultdef = Pointer = "^untyped", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit,nf_internal], cmplx = 4, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = AnsiString = "AnsiString(0)", pos = (233,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                           (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (233,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (233,42), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = self
                              )
                              field = OPENPICTUREDIALOG1
                           )
                           field = FFILENAME
                        )
                     )

                  )
                  (callparan, resultdef = Pointer = "^untyped", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (typeconvn, resultdef = Pointer = "^untyped", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit,nf_internal], cmplx = 2, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = AnsiString = "AnsiString(0)", pos = (233,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 2
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = MYFORM
                           )
                           field = FILENAME
                        )
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (235,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (235,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  proc = Show(<TCustomForm>);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (235,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = MYFORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (235,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (235,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = MYFORM
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonOpenClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEFC80
   (statementn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEFC20
      (asmn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEFB60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEFBC0
      (asmn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEFB00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEFAA0
      (asmn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEFA40
      )

   )
   (statementn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF9E0
      (asmn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF980
      )

   )
   (statementn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF920
      (blockn, resultdef =  = "untyped", pos = (228,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 000000009348F060
         (statementn, resultdef =  = "untyped", pos = (236,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934903E0
            (ifn, resultdef =  = "untyped", pos = (230,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093490380
               (calln, resultdef = Boolean = "Boolean", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CEF8C0
                  proc = Execute(<TCommonDialog>):System.Boolean;
                  methodpointer =
                  (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (230,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CEF860
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093490260
                        nil
                        symbol = self
                     )
                     field = OPENPICTUREDIALOG1
                  )
                  vmt_entry =
                  (subscriptn, resultdef = <no type symbol> = "<address of function:Boolean of object;Register>", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093CEF800
                     (derefn, resultdef = TOpenPictureDialog. = "<record type>", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093CEF7A0
                        (typeconvn, resultdef = <no type symbol> = "^TOpenPictureDialog.<record type>", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 0000000093CEF740, convtype = tc_equal, convnodeflags = []
                           (subscriptn, resultdef = Pointer = "^untyped", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093CEF680
                              (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (230,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CEF6E0
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009348F240
                                    nil
                                    symbol = self
                                 )
                                 field = OPENPICTUREDIALOG1
                              )
                              field = hidden_vptr$TOBJECT
                           )
                        )
                     )
                     field = f68
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (230,33), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CEF620
                     (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (230,6), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CEF5C0
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (230,24), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009348F360
                           nil
                           symbol = self
                        )
                        field = OPENPICTUREDIALOG1
                     )

                  )
               )
               (blockn, resultdef =  = "untyped", pos = (231,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F300
                  (statementn, resultdef =  = "untyped", pos = (232,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F420
                     (assignn, resultdef =  = "untyped", pos = (232,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F3C0
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (232,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CEFFE0
                           nil
                           symbol = MYFORM
                        )
                        (calln, resultdef = TFormDocument = "TFormDocument", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CEF560
                           proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                           methodpointer =
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (232,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CEF500
                              (typen, resultdef = TFormDocument = "TFormDocument", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CEF4A0
                              )
                           )
                           vmt_entry =
                           (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TForm of object;Register>", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CEF440
                              (derefn, resultdef = TFormDocument. = "<record type>", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CEF3E0
                                 (typeconvn, resultdef = <no type symbol> = "^TFormDocument.<record type>", pos = (232,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, optinfo = 0000000093CEF380, convtype = tc_equal, convnodeflags = []
                                    (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (232,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CEF320
                                       (typen, resultdef = TFormDocument = "TFormDocument", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CEF2C0
                                       )
                                    )
                                 )
                              )
                              field = f54
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (232,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CEF260
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (232,15), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CEF200
                                 (typen, resultdef = TFormDocument = "TFormDocument", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CEF1A0
                                 )
                              )

                           )
                           (callparan, resultdef = TComponent = "TComponent", pos = (232,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CEF140
                              (typeconvn, resultdef = TComponent = "TComponent", pos = (232,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CEF0E0, convtype = tc_equal, convnodeflags = []
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (232,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CEFF80
                                    nil
                                    symbol = self
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (232,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CEF080
                              (pointerconstn, resultdef = Pointer = "^untyped", pos = (232,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CEF020
                                 value = $0000000000000001
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (233,51), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F4E0
                     (calln, resultdef =  = "untyped", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F480
                        proc = $fpc_ansistr_assign(var Pointer;Pointer);
                        left =
                        (callparan, resultdef = Pointer = "^untyped", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CEEFC0
                           (typeconvn, resultdef = Pointer = "^untyped", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit,nf_internal], cmplx = 4, optinfo = 0000000093CEEF60, convtype = tc_equal, convnodeflags = []
                              (subscriptn, resultdef = AnsiString = "AnsiString(0)", pos = (233,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093CEEF00
                                 (subscriptn, resultdef = TOpenPictureDialog = "TOpenPictureDialog", pos = (233,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CEEE40
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (233,42), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009348B100
                                       nil
                                       symbol = self
                                    )
                                    field = OPENPICTUREDIALOG1
                                 )
                                 field = FFILENAME
                              )
                           )

                        )
                        (callparan, resultdef = Pointer = "^untyped", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CEEEA0
                           (typeconvn, resultdef = Pointer = "^untyped", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit,nf_internal], cmplx = 2, optinfo = 0000000093CEEDE0, convtype = tc_equal, convnodeflags = []
                              (subscriptn, resultdef = AnsiString = "AnsiString(0)", pos = (233,11), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 2, optinfo = 0000000093CEED80
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (233,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CF0040
                                    nil
                                    symbol = MYFORM
                                 )
                                 field = FILENAME
                              )
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (235,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F660
                     (calln, resultdef =  = "untyped", pos = (235,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F540
                        proc = Show(<TCustomForm>);
                        methodpointer =
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (235,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000934902C0
                           nil
                           symbol = MYFORM
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (235,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CEED20
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (235,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 000000009348B7C0
                              nil
                              symbol = MYFORM
                           )

                        )
                     )

                  )
               )
               nil
               nil
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEECC0
      (asmn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEEC60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEEC00
      (finalizetempsn, resultdef =  = "untyped", pos = (238,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEEBA0
      )

   )
)

*******************************************************************************
after parsing
ToolButtonPenClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (242,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (242,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "<enumeration type>"
            value = 0
         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonPenClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 2
   (statementn, resultdef =  = "untyped", pos = (242,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef =  = "untyped", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (242,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "<enumeration type>"
            value = 0
         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonPenClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF7A0
   (statementn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF740
      (asmn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF680
      )

   )
   (statementn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF6E0
      (asmn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F240
      )

   )
   (statementn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF860
      (asmn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093490260
      )

   )
   (statementn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F300
      (asmn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F660
      )

   )
   (statementn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F540
      (blockn, resultdef =  = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 2, optinfo = 0000000093CEEBA0
         (statementn, resultdef =  = "untyped", pos = (242,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093CEECC0
            (assignn, resultdef =  = "untyped", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093CEEC60
               (loadn, resultdef = TToolType = "<enumeration type>", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000934903E0
                  nil
                  symbol = HCTOOL
               )
               (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (242,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CEED20
                  typedef = "<enumeration type>"
                  value = 0
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (243,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348B7C0
      (asmn, resultdef =  = "untyped", pos = (243,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934902C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (243,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F4E0
      (finalizetempsn, resultdef =  = "untyped", pos = (243,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F480
      )

   )
)

*******************************************************************************
after parsing
ToolButtonLineClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (247,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (247,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (247,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (247,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "<enumeration type>"
            value = 3
         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonLineClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 2
   (statementn, resultdef =  = "untyped", pos = (247,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef =  = "untyped", pos = (247,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (247,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (247,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "<enumeration type>"
            value = 3
         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonLineClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093490260
   (statementn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF6E0
      (asmn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F240
      )

   )
   (statementn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF740
      (asmn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF680
      )

   )
   (statementn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F060
      (asmn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEAB20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEAB80
      (asmn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEAAC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEAA60
      (blockn, resultdef =  = "untyped", pos = (246,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 2, optinfo = 000000009348F480
         (statementn, resultdef =  = "untyped", pos = (247,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 000000009348B7C0
            (assignn, resultdef =  = "untyped", pos = (247,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000934902C0
               (loadn, resultdef = TToolType = "<enumeration type>", pos = (247,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093CEECC0
                  nil
                  symbol = HCTOOL
               )
               (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (247,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CEAA00
                  typedef = "<enumeration type>"
                  value = 3
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (249,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEA9A0
      (asmn, resultdef =  = "untyped", pos = (249,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEA940
      )

   )
   (statementn, resultdef =  = "untyped", pos = (249,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEA8E0
      (finalizetempsn, resultdef =  = "untyped", pos = (249,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEA880
      )

   )
)

*******************************************************************************
after parsing
ToolButtonPixelateClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
ToolButtonPixelateClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
ToolButtonPixelateClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEAB80
   (statementn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEAAC0
      (asmn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F060
      )

   )
   (statementn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEAB20
      (asmn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF740
      )

   )
   (statementn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF680
      (asmn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF6E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F240
      (asmn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEEBA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE9440
      (blockn, resultdef =  = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 0000000093CEA880
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (254,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE93E0
      (asmn, resultdef =  = "untyped", pos = (254,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE9380
      )

   )
   (statementn, resultdef =  = "untyped", pos = (254,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE9320
      (finalizetempsn, resultdef =  = "untyped", pos = (254,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE92C0
      )

   )
)

*******************************************************************************
after parsing
FormCreate(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (263,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (263,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = ApplyTheme(TForm);
         left =
         (callparan, resultdef = TForm = "TForm", pos = (263,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (typeconvn, resultdef = TForm = "TForm", pos = (263,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_equal, convnodeflags = []
               (loadn, resultdef = TFormMain = "TFormMain", pos = (263,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (271,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (271,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = LongInt = "LongInt", pos = (271,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = PENWIDTH
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (271,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "LongInt"
            value = 10
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (272,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TPageControl = "TPageControl", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormMain = "TFormMain", pos = (272,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = self
            )
            field = PAGECONTROL1
         )
         left =
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (272,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (272,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "<enumeration type>"
               value = 5
            )

         )
         (callparan, resultdef = <nil>, pos = (272,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (272,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (273,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = CreatePen(<TFPCustomCanvas>):FPCanvas.TFPCustomPen;
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (273,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
            proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
            methodpointer =
            (subscriptn, resultdef = TImage = "TImage", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormMain = "TFormMain", pos = (273,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = self
               )
               field = IMAGEWIDTH
            )
            left =
            (callparan, resultdef = <nil>, pos = (273,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (273,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (273,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (273,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (274,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = CreatePen(<TFPCustomCanvas>):FPCanvas.TFPCustomPen;
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (274,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
            proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
            methodpointer =
            (subscriptn, resultdef = TImage = "TImage", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormMain = "TFormMain", pos = (274,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = self
               )
               field = IMAGETRANSPARENCY
            )
            left =
            (callparan, resultdef = <nil>, pos = (274,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (274,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (274,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (274,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (275,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = CreatePen(<TFPCustomCanvas>):FPCanvas.TFPCustomPen;
         methodpointer =
         (calln, resultdef = TCanvas = "TCanvas", pos = (275,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
            proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
            methodpointer =
            (subscriptn, resultdef = TImage = "TImage", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormMain = "TFormMain", pos = (275,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = self
               )
               field = IMAGERADIUS
            )
            left =
            (callparan, resultdef = <nil>, pos = (275,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (275,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (275,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (275,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (276,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (276,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (276,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (276,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "Boolean"
               value = 1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (276,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (276,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "LongInt"
               value = -1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (276,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (276,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "LongInt"
               value = 25
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (276,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (276,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (typeconvn, resultdef = TObject = "TObject", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_equal, convnodeflags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = self
                  )
                  field = IMAGEWIDTH
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (277,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (277,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (277,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (277,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "Boolean"
               value = 1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (277,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (277,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "LongInt"
               value = -1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (277,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (277,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "LongInt"
               value = 40
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (277,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (277,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (277,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (typeconvn, resultdef = TObject = "TObject", pos = (277,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_equal, convnodeflags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (277,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (277,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = self
                  )
                  field = IMAGERADIUS
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (278,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (278,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (278,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (278,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "Boolean"
               value = 1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (278,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (278,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "LongInt"
               value = -1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (278,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (278,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "LongInt"
               value = 255
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (278,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (278,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (278,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (typeconvn, resultdef = TObject = "TObject", pos = (278,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_equal, convnodeflags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (278,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (278,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = self
                  )
                  field = IMAGETRANSPARENCY
               )
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
FormCreate(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (263,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (263,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = ApplyTheme(TForm);
         left =
         (callparan, resultdef = TForm = "TForm", pos = (263,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (typeconvn, resultdef = TForm = "TForm", pos = (263,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, convtype = tc_equal, convnodeflags = []
               (loadn, resultdef = TFormMain = "TFormMain", pos = (263,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (271,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (271,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = LongInt = "LongInt", pos = (271,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = PENWIDTH
         )
         (ordconstn, resultdef = LongInt = "LongInt", pos = (271,15), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "LongInt"
            value = 10
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (272,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
         proc = SetAlign(<TControl>;TAlign);
         methodpointer =
         (subscriptn, resultdef = TPageControl = "TPageControl", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
            (loadn, resultdef = TFormMain = "TFormMain", pos = (272,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )
            field = PAGECONTROL1
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure(TAlign) of object;Register>", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
            (derefn, resultdef = TPageControl. = "<record type>", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
               (typeconvn, resultdef = <no type symbol> = "^TPageControl.<record type>", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                     (subscriptn, resultdef = TPageControl = "TPageControl", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (272,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = PAGECONTROL1
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f70
         )
         left =
         (callparan, resultdef = <nil>, pos = (272,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (subscriptn, resultdef = TPageControl = "TPageControl", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormMain = "TFormMain", pos = (272,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = PAGECONTROL1
            )

         )
         (callparan, resultdef = TAlign = "<enumeration type>", pos = (272,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (272,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "<enumeration type>"
               value = 5
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (273,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = CreatePen(<TFPCustomCanvas>):FPCanvas.TFPCustomPen;
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091B9E8F0
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (273,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (273,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = IMAGEWIDTH
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (273,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                        (subscriptn, resultdef = TImage = "TImage", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (273,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = self
                           )
                           field = IMAGEWIDTH
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
            (statementn, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091B9E8F0
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (273,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (274,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = CreatePen(<TFPCustomCanvas>):FPCanvas.TFPCustomPen;
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9E670 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091B9E670
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9E670 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (274,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (274,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = IMAGETRANSPARENCY
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (274,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                        (subscriptn, resultdef = TImage = "TImage", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (274,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = self
                           )
                           field = IMAGETRANSPARENCY
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
            (statementn, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091B9E670
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (274,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9E670 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (275,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = CreatePen(<TFPCustomCanvas>):FPCanvas.TFPCustomPen;
         methodpointer =
         (temprefn, resultdef = TCanvas = "TCanvas", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
            temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
         )
         callinitblock =
         (blockn, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (tempcreaten, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091BB6F70
                  [ti_may_be_in_reg]
                  tempinit =
                  nil
               )

            )
            (statementn, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
                  )
                  (calln, resultdef = TCanvas = "TCanvas", pos = (275,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                     proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                     methodpointer =
                     (subscriptn, resultdef = TImage = "TImage", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (275,14), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = IMAGERADIUS
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (275,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                        (subscriptn, resultdef = TImage = "TImage", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (275,14), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = self
                           )
                           field = IMAGERADIUS
                        )

                     )
                  )
               )

            )
         )
         callcleanupblock =
         (blockn, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
            (statementn, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
               (tempdeleten, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                  release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091BB6F70
               )

            )
         )
         left =
         (callparan, resultdef = <nil>, pos = (275,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (temprefn, resultdef = TCanvas = "TCanvas", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
               temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (276,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (276,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (276,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (276,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "Boolean"
               value = 1
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (typeconvn, resultdef = TObject = "TObject", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, convtype = tc_equal, convnodeflags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = self
                  )
                  field = IMAGEWIDTH
               )
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (276,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (276,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               nil
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (276,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (276,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = -1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (276,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (276,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = 25
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (277,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (277,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (277,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (277,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "Boolean"
               value = 1
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (277,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (typeconvn, resultdef = TObject = "TObject", pos = (277,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, convtype = tc_equal, convnodeflags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (277,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (277,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = self
                  )
                  field = IMAGERADIUS
               )
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (277,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (277,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               nil
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (277,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (277,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = -1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (277,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (277,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = 40
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (278,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (278,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (278,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (278,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "Boolean"
               value = 1
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (278,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (typeconvn, resultdef = TObject = "TObject", pos = (278,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, convtype = tc_equal, convnodeflags = []
               (subscriptn, resultdef = TImage = "TImage", pos = (278,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (278,38), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = self
                  )
                  field = IMAGETRANSPARENCY
               )
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (278,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (278,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1
               nil
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (278,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (278,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = -1
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (278,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = LongInt = "LongInt", pos = (278,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = 255
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
FormCreate(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7220
   (statementn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE71C0
      (asmn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7160
      )

   )
   (statementn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7100
      (asmn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE70A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7040
      (asmn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6FE0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6F80
      (asmn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6F20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6EC0
      (blockn, resultdef =  = "untyped", pos = (258,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093CEF680
         (statementn, resultdef =  = "untyped", pos = (263,19), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF6E0
            (calln, resultdef =  = "untyped", pos = (263,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEAB20
               proc = ApplyTheme(TForm);
               left =
               (callparan, resultdef = TForm = "TForm", pos = (263,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CE6E60
                  (typeconvn, resultdef = TForm = "TForm", pos = (263,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE6E00, convtype = tc_equal, convnodeflags = []
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (263,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE74C0
                        nil
                        symbol = self
                     )
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (271,17), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEF740
            (assignn, resultdef =  = "untyped", pos = (271,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093CEAAC0
               (loadn, resultdef = LongInt = "LongInt", pos = (271,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093CE7520
                  nil
                  symbol = PENWIDTH
               )
               (ordconstn, resultdef = LongInt = "LongInt", pos = (271,15), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE6DA0
                  typedef = "LongInt"
                  value = 10
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (272,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348F060
            (calln, resultdef =  = "untyped", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009348F480
               proc = SetAlign(<TControl>;TAlign);
               methodpointer =
               (subscriptn, resultdef = TPageControl = "TPageControl", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE6D40
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (272,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7640
                     nil
                     symbol = self
                  )
                  field = PAGECONTROL1
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure(TAlign) of object;Register>", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093CE6CE0
                  (derefn, resultdef = TPageControl. = "<record type>", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093CE6C80
                     (typeconvn, resultdef = <no type symbol> = "^TPageControl.<record type>", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 0000000093CE6C20, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093CE6BC0
                           (subscriptn, resultdef = TPageControl = "TPageControl", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE6B60
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (272,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE75E0
                                 nil
                                 symbol = self
                              )
                              field = PAGECONTROL1
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f70
               )
               left =
               (callparan, resultdef = <nil>, pos = (272,22), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CE6B00
                  (subscriptn, resultdef = TPageControl = "TPageControl", pos = (272,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE6AA0
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (272,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7580
                        nil
                        symbol = self
                     )
                     field = PAGECONTROL1
                  )

               )
               (callparan, resultdef = TAlign = "<enumeration type>", pos = (272,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE6A40
                  (ordconstn, resultdef = TAlign = "<enumeration type>", pos = (272,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE69E0
                     typedef = "<enumeration type>"
                     value = 5
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (273,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE8180
            (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE80C0
               proc = CreatePen(<TFPCustomCanvas>):FPCanvas.TFPCustomPen;
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE7700
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6980
                  (statementn, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6920
                     (tempcreaten, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE68C0
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091B9E8F0
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6860
                     (assignn, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6800
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CE7820
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (273,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CE67A0
                           proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                           methodpointer =
                           (subscriptn, resultdef = TImage = "TImage", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE6740
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (273,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE77C0
                                 nil
                                 symbol = self
                              )
                              field = IMAGEWIDTH
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (273,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CE66E0
                              (subscriptn, resultdef = TImage = "TImage", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE6680
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (273,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7760
                                    nil
                                    symbol = self
                                 )
                                 field = IMAGEWIDTH
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE6620
                  (statementn, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE65C0
                     (tempdeleten, resultdef =  = "untyped", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE6560
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091B9E8F0
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (273,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CE6500
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (273,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE76A0
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (274,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE8120
            (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE8060
               proc = CreatePen(<TFPCustomCanvas>):FPCanvas.TFPCustomPen;
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE78E0
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9E670 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE64A0
                  (statementn, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6440
                     (tempcreaten, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE63E0
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091B9E670
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6380
                     (assignn, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6320
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CE7A00
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9E670 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (274,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CE62C0
                           proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                           methodpointer =
                           (subscriptn, resultdef = TImage = "TImage", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE6260
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (274,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE79A0
                                 nil
                                 symbol = self
                              )
                              field = IMAGETRANSPARENCY
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (274,27), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CE6200
                              (subscriptn, resultdef = TImage = "TImage", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE6140
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (274,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7940
                                    nil
                                    symbol = self
                                 )
                                 field = IMAGETRANSPARENCY
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE61A0
                  (statementn, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE60E0
                     (tempdeleten, resultdef =  = "untyped", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE6080
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091B9E670
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (274,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CE6020
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (274,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE7880
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091B9E670 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (275,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE8000
            (calln, resultdef = TFPCustomPen = "TFPCustomPen", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7FA0
               proc = CreatePen(<TFPCustomCanvas>):FPCanvas.TFPCustomPen;
               methodpointer =
               (temprefn, resultdef = TCanvas = "TCanvas", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE7AC0
                  temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
               )
               callinitblock =
               (blockn, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5FC0
                  (statementn, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5F60
                     (tempcreaten, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE5F00
                        size = 8, temptypedef = TCanvas = "TCanvas", tempinfo = $0000000091BB6F70
                        [ti_may_be_in_reg]
                        tempinit =
                        nil
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5EA0
                     (assignn, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5E40
                        (temprefn, resultdef = TCanvas = "TCanvas", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CE7BE0
                           temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
                        )
                        (calln, resultdef = TCanvas = "TCanvas", pos = (275,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CE5DE0
                           proc = GetCanvas(<TCustomImage>):Graphics.TCanvas;
                           methodpointer =
                           (subscriptn, resultdef = TImage = "TImage", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE5D80
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (275,14), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7B80
                                 nil
                                 symbol = self
                              )
                              field = IMAGERADIUS
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (275,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CE5D20
                              (subscriptn, resultdef = TImage = "TImage", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE5CC0
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (275,14), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7B20
                                    nil
                                    symbol = self
                                 )
                                 field = IMAGERADIUS
                              )

                           )
                        )
                     )

                  )
               )
               callcleanupblock =
               (blockn, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE5C60
                  (statementn, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE5C00
                     (tempdeleten, resultdef =  = "untyped", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE5BA0
                        release_to_normal: FALSE, temptypedef = TCanvas = "TCanvas", temptype = tt_persistent, tempinfo = $0000000091BB6F70
                     )

                  )
               )
               left =
               (callparan, resultdef = <nil>, pos = (275,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CE5B40
                  (temprefn, resultdef = TCanvas = "TCanvas", pos = (275,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE7A60
                     temptypedef = TCanvas = "TCanvas", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (276,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7F40
            (calln, resultdef =  = "untyped", pos = (276,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7EE0
               proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
               left =
               (callparan, resultdef = Boolean = "Boolean", pos = (276,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE5AE0
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (276,55), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE5A80
                     typedef = "Boolean"
                     value = 1
                  )

               )
               (callparan, resultdef = TObject = "TObject", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CE5A20
                  (typeconvn, resultdef = TObject = "TObject", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE59C0, convtype = tc_equal, convnodeflags = []
                     (subscriptn, resultdef = TImage = "TImage", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE5960
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7C40
                           nil
                           symbol = self
                        )
                        field = IMAGEWIDTH
                     )
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (276,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE5900
                  (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (276,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1, optinfo = 0000000093CE58A0
                     nil
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (276,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE5840
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (276,49), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE57E0
                     typedef = "LongInt"
                     value = -1
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (276,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE5780
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (276,45), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE5720
                     typedef = "LongInt"
                     value = 25
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (277,57), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7E80
            (calln, resultdef =  = "untyped", pos = (277,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7E20
               proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
               left =
               (callparan, resultdef = Boolean = "Boolean", pos = (277,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE56C0
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (277,56), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE5660
                     typedef = "Boolean"
                     value = 1
                  )

               )
               (callparan, resultdef = TObject = "TObject", pos = (277,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CE5600
                  (typeconvn, resultdef = TObject = "TObject", pos = (277,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE55A0, convtype = tc_equal, convnodeflags = []
                     (subscriptn, resultdef = TImage = "TImage", pos = (277,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE5540
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (277,32), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7CA0
                           nil
                           symbol = self
                        )
                        field = IMAGERADIUS
                     )
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (277,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE54E0
                  (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (277,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1, optinfo = 0000000093CE5480
                     nil
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (277,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE5420
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (277,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE53C0
                     typedef = "LongInt"
                     value = -1
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (277,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE5360
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (277,46), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE5300
                     typedef = "LongInt"
                     value = 40
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (278,64), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7DC0
            (calln, resultdef =  = "untyped", pos = (278,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7D60
               proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
               left =
               (callparan, resultdef = Boolean = "Boolean", pos = (278,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE52A0
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (278,63), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE5240
                     typedef = "Boolean"
                     value = 1
                  )

               )
               (callparan, resultdef = TObject = "TObject", pos = (278,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CE51E0
                  (typeconvn, resultdef = TObject = "TObject", pos = (278,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE5180, convtype = tc_equal, convnodeflags = []
                     (subscriptn, resultdef = TImage = "TImage", pos = (278,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CE5120
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (278,38), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7D00
                           nil
                           symbol = self
                        )
                        field = IMAGETRANSPARENCY
                     )
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (278,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE50C0
                  (setconstn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (278,48), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 1, optinfo = 0000000093CE5060
                     nil
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (278,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE5000
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (278,57), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE4FA0
                     typedef = "LongInt"
                     value = -1
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (278,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE4F40
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (278,53), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE4EE0
                     typedef = "LongInt"
                     value = 255
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (279,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE4E80
      (asmn, resultdef =  = "untyped", pos = (279,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE4E20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (279,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE4DC0
      (finalizetempsn, resultdef =  = "untyped", pos = (279,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE4D60
      )

   )
)

*******************************************************************************
after parsing
ApplyTheme(TForm);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (348,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (ifn, resultdef =  = "untyped", pos = (291,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (calln, resultdef = Boolean = "Boolean", pos = (291,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            proc = IsDarkTheme:System.Boolean;
         )
         (blockn, resultdef =  = "untyped", pos = (292,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (293,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (assignn, resultdef =  = "untyped", pos = (293,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TMainMenu = "TMainMenu", pos = (293,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = MM
                  )
                  (calln, resultdef = TMainMenu = "TMainMenu", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     proc = constructor Create(<TMainMenu>;<Class Of TMainMenu>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMainMenu", pos = (293,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typen, resultdef = TMainMenu = "TMainMenu", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (293,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (niln, resultdef = TComponent = "TComponent", pos = (293,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (293,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (293,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (293,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (293,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (294,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (assignn, resultdef =  = "untyped", pos = (294,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TMenuItem = "TMenuItem", pos = (294,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = MI
                  )
                  (calln, resultdef = TMenuItem = "TMenuItem", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     proc = constructor Create(<TMenuItem>;<Class Of TMenuItem>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMenuItem", pos = (294,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typen, resultdef = TMenuItem = "TMenuItem", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (294,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (niln, resultdef = TComponent = "TComponent", pos = (294,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (294,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (294,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (294,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (294,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (295,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (assignn, resultdef =  = "untyped", pos = (295,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TToolBar = "TToolBar", pos = (295,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = TB
                  )
                  (calln, resultdef = TToolBar = "TToolBar", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     proc = constructor Create(<TToolBar>;<Class Of TToolBar>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (295,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typen, resultdef = TToolBar = "TToolBar", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (295,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (niln, resultdef = TComponent = "TComponent", pos = (295,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (295,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (295,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (295,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (295,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (296,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (assignn, resultdef =  = "untyped", pos = (296,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = TToolButton = "TToolButton", pos = (296,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = TBT
                  )
                  (calln, resultdef = TToolButton = "TToolButton", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     proc = constructor Create(<TToolButton>;<Class Of TToolButton>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (296,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typen, resultdef = TToolButton = "TToolButton", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (296,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (niln, resultdef = TComponent = "TComponent", pos = (296,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (296,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (296,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (296,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (296,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (297,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetColor(<TControl>;TColor);
                  methodpointer =
                  (loadn, resultdef = TForm = "TForm", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = FORM
                  )
                  left =
                  (callparan, resultdef = TColor = "LongInt", pos = (297,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (ordconstn, resultdef = TColor = "LongInt", pos = (297,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "LongInt"
                        value = 2105376
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (297,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (297,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (298,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (298,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetColor(<TFont>;TColor);
                  methodpointer =
                  (subscriptn, resultdef = TFont = "TFont", pos = (298,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                     (loadn, resultdef = TForm = "TForm", pos = (298,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = FORM
                     )
                     field = FFONT
                  )
                  left =
                  (callparan, resultdef = TColor = "LongInt", pos = (298,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (ordconstn, resultdef = TColor = "LongInt", pos = (298,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "LongInt"
                        value = 12632256
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (298,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (298,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (299,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetColor(<TControl>;TColor);
                  methodpointer =
                  (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (299,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = FORMMAIN
                     )
                     field = HEXACOLORPICKER1
                  )
                  left =
                  (callparan, resultdef = TColor = "LongInt", pos = (299,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (subscriptn, resultdef = TColor = "LongInt", pos = (299,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        (loadn, resultdef = TForm = "TForm", pos = (299,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           nil
                           symbol = FORM
                        )
                        field = FCOLOR
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (299,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (299,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (307,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (forn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (300,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (300,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (300,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                     (subn, resultdef = Int64 = "Int64", pos = (300,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typeconvn, resultdef = Int64 = "Int64", pos = (300,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (300,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                              proc = GetControlCount(<TWinControl>):System.LongInt;
                              methodpointer =
                              (subscriptn, resultdef = TPanel = "TPanel", pos = (300,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (300,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    nil
                                    symbol = FORMMAIN
                                 )
                                 field = FLOWPANEL1
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (300,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (nothingn, resultdef =  = "untyped", pos = (300,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (300,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           typedef = "Int64"
                           value = 1
                        )
                     )
                  )
                  (blockn, resultdef =  = "untyped", pos = (301,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (statementn, resultdef = <nil>, pos = (306,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (ifn, resultdef =  = "untyped", pos = (302,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (isn, resultdef = Boolean = "Boolean", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (calln, resultdef = TControl = "TControl", pos = (302,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                 proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                 methodpointer =
                                 (subscriptn, resultdef = TPanel = "TPanel", pos = (302,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (302,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = FORMMAIN
                                    )
                                    field = FLOWPANEL1
                                 )
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (302,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (302,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = I
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (302,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (nothingn, resultdef =  = "untyped", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    )

                                 )
                              )
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (302,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (typen, resultdef = TWinControl = "TWinControl", pos = (302,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )
                              )
                           )
                           (blockn, resultdef =  = "untyped", pos = (303,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (statementn, resultdef = <nil>, pos = (304,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (calln, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                                    proc = SetColor(<TControl>;TColor);
                                    methodpointer =
                                    (calln, resultdef = TControl = "TControl", pos = (304,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                       methodpointer =
                                       (subscriptn, resultdef = TPanel = "TPanel", pos = (304,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORMMAIN
                                          )
                                          field = FLOWPANEL1
                                       )
                                       left =
                                       (callparan, resultdef = LongInt = "LongInt", pos = (304,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (304,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = I
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (304,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (nothingn, resultdef =  = "untyped", pos = (304,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (304,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (304,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          (loadn, resultdef = TForm = "TForm", pos = (304,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORM
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (304,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (nothingn, resultdef =  = "untyped", pos = (304,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (305,70), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (calln, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                                    proc = SetColor(<TFont>;TColor);
                                    methodpointer =
                                    (subscriptn, resultdef = TFont = "TFont", pos = (305,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       (calln, resultdef = TControl = "TControl", pos = (305,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                          methodpointer =
                                          (subscriptn, resultdef = TPanel = "TPanel", pos = (305,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = FORMMAIN
                                             )
                                             field = FLOWPANEL1
                                          )
                                          left =
                                          (callparan, resultdef = LongInt = "LongInt", pos = (305,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (305,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = I
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (305,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (nothingn, resultdef =  = "untyped", pos = (305,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             )

                                          )
                                       )
                                       field = FFONT
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (305,70), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (305,70), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          (subscriptn, resultdef = TFont = "TFont", pos = (305,64), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                             (loadn, resultdef = TForm = "TForm", pos = (305,55), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = FORM
                                             )
                                             field = FFONT
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (305,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (nothingn, resultdef =  = "untyped", pos = (305,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )

                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (315,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (forn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (308,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (308,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (308,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                     (subn, resultdef = Int64 = "Int64", pos = (308,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typeconvn, resultdef = Int64 = "Int64", pos = (308,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (308,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                              proc = GetControlCount(<TWinControl>):System.LongInt;
                              methodpointer =
                              (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (308,44), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (308,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    nil
                                    symbol = FORMMAIN
                                 )
                                 field = ANCHORDOCKPANEL1
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (308,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (nothingn, resultdef =  = "untyped", pos = (308,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (308,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           typedef = "Int64"
                           value = 1
                        )
                     )
                  )
                  (blockn, resultdef =  = "untyped", pos = (309,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (statementn, resultdef = <nil>, pos = (314,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (ifn, resultdef =  = "untyped", pos = (310,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (isn, resultdef = Boolean = "Boolean", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (calln, resultdef = TControl = "TControl", pos = (310,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                 proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                 methodpointer =
                                 (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (310,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (310,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = FORMMAIN
                                    )
                                    field = ANCHORDOCKPANEL1
                                 )
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (310,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (310,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = I
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (310,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (nothingn, resultdef =  = "untyped", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    )

                                 )
                              )
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (310,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (typen, resultdef = TWinControl = "TWinControl", pos = (310,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )
                              )
                           )
                           (blockn, resultdef =  = "untyped", pos = (311,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (statementn, resultdef = <nil>, pos = (312,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (calln, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                                    proc = SetColor(<TControl>;TColor);
                                    methodpointer =
                                    (calln, resultdef = TControl = "TControl", pos = (312,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                       methodpointer =
                                       (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (312,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORMMAIN
                                          )
                                          field = ANCHORDOCKPANEL1
                                       )
                                       left =
                                       (callparan, resultdef = LongInt = "LongInt", pos = (312,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (312,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = I
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (312,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (nothingn, resultdef =  = "untyped", pos = (312,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (312,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (312,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          (loadn, resultdef = TForm = "TForm", pos = (312,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORM
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (312,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (nothingn, resultdef =  = "untyped", pos = (312,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (313,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (calln, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                                    proc = SetColor(<TFont>;TColor);
                                    methodpointer =
                                    (subscriptn, resultdef = TFont = "TFont", pos = (313,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       (calln, resultdef = TControl = "TControl", pos = (313,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                          methodpointer =
                                          (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (313,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = FORMMAIN
                                             )
                                             field = ANCHORDOCKPANEL1
                                          )
                                          left =
                                          (callparan, resultdef = LongInt = "LongInt", pos = (313,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (313,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = I
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (313,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (nothingn, resultdef =  = "untyped", pos = (313,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             )

                                          )
                                       )
                                       field = FFONT
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (313,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (313,76), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          (subscriptn, resultdef = TFont = "TFont", pos = (313,70), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                             (loadn, resultdef = TForm = "TForm", pos = (313,61), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = FORM
                                             )
                                             field = FFONT
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (313,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (nothingn, resultdef =  = "untyped", pos = (313,58), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )

                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (323,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (forn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (316,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (316,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (316,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                     (subn, resultdef = Int64 = "Int64", pos = (316,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typeconvn, resultdef = Int64 = "Int64", pos = (316,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (316,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                              proc = GetControlCount(<TWinControl>):System.LongInt;
                              methodpointer =
                              (subscriptn, resultdef = TPanel = "TPanel", pos = (316,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (316,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    nil
                                    symbol = FORMMAIN
                                 )
                                 field = PANEL2
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (316,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (nothingn, resultdef =  = "untyped", pos = (316,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (316,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           typedef = "Int64"
                           value = 1
                        )
                     )
                  )
                  (blockn, resultdef =  = "untyped", pos = (317,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (statementn, resultdef = <nil>, pos = (322,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (ifn, resultdef =  = "untyped", pos = (318,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (isn, resultdef = Boolean = "Boolean", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (calln, resultdef = TControl = "TControl", pos = (318,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                 proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                 methodpointer =
                                 (subscriptn, resultdef = TPanel = "TPanel", pos = (318,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (318,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = FORMMAIN
                                    )
                                    field = PANEL2
                                 )
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (318,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (318,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = I
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (318,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (nothingn, resultdef =  = "untyped", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    )

                                 )
                              )
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (318,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (typen, resultdef = TWinControl = "TWinControl", pos = (318,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )
                              )
                           )
                           (blockn, resultdef =  = "untyped", pos = (319,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (statementn, resultdef = <nil>, pos = (320,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (calln, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                                    proc = SetColor(<TControl>;TColor);
                                    methodpointer =
                                    (calln, resultdef = TControl = "TControl", pos = (320,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                       methodpointer =
                                       (subscriptn, resultdef = TPanel = "TPanel", pos = (320,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORMMAIN
                                          )
                                          field = PANEL2
                                       )
                                       left =
                                       (callparan, resultdef = LongInt = "LongInt", pos = (320,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (320,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = I
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (320,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (nothingn, resultdef =  = "untyped", pos = (320,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (320,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (320,56), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          (loadn, resultdef = TForm = "TForm", pos = (320,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORM
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (320,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (nothingn, resultdef =  = "untyped", pos = (320,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (321,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (calln, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                                    proc = SetColor(<TFont>;TColor);
                                    methodpointer =
                                    (subscriptn, resultdef = TFont = "TFont", pos = (321,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       (calln, resultdef = TControl = "TControl", pos = (321,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                          methodpointer =
                                          (subscriptn, resultdef = TPanel = "TPanel", pos = (321,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = FORMMAIN
                                             )
                                             field = PANEL2
                                          )
                                          left =
                                          (callparan, resultdef = LongInt = "LongInt", pos = (321,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (321,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = I
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (321,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (nothingn, resultdef =  = "untyped", pos = (321,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             )

                                          )
                                       )
                                       field = FFONT
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (321,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (321,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          (subscriptn, resultdef = TFont = "TFont", pos = (321,60), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                             (loadn, resultdef = TForm = "TForm", pos = (321,51), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = FORM
                                             )
                                             field = FFONT
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (321,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (nothingn, resultdef =  = "untyped", pos = (321,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )

                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (341,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (forn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = LongInt = "LongInt", pos = (324,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (324,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "LongInt"
                     value = 0
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (324,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                     (subn, resultdef = Int64 = "Int64", pos = (324,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (typeconvn, resultdef = Int64 = "Int64", pos = (324,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (324,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                              proc = GetControlCount(<TWinControl>):System.LongInt;
                              methodpointer =
                              (loadn, resultdef = TForm = "TForm", pos = (324,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = FORM
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (324,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (nothingn, resultdef =  = "untyped", pos = (324,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (324,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           typedef = "Int64"
                           value = 1
                        )
                     )
                  )
                  (blockn, resultdef =  = "untyped", pos = (325,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (statementn, resultdef = <nil>, pos = (340,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (ifn, resultdef =  = "untyped", pos = (326,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (isn, resultdef = Boolean = "Boolean", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (calln, resultdef = TControl = "TControl", pos = (326,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                 proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                 methodpointer =
                                 (loadn, resultdef = TForm = "TForm", pos = (326,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    nil
                                    symbol = FORM
                                 )
                                 left =
                                 (callparan, resultdef = LongInt = "LongInt", pos = (326,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (326,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = I
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (326,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (nothingn, resultdef =  = "untyped", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    )

                                 )
                              )
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (326,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (typen, resultdef = TWinControl = "TWinControl", pos = (326,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )
                              )
                           )
                           (blockn, resultdef =  = "untyped", pos = (327,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (statementn, resultdef = <nil>, pos = (328,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (calln, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                                    proc = SetColor(<TControl>;TColor);
                                    methodpointer =
                                    (asn, resultdef = TWinControl = "TWinControl", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (calln, resultdef = TControl = "TControl", pos = (328,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                          methodpointer =
                                          (loadn, resultdef = TForm = "TForm", pos = (328,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORM
                                          )
                                          left =
                                          (callparan, resultdef = LongInt = "LongInt", pos = (328,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (328,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = I
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (328,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (nothingn, resultdef =  = "untyped", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             )

                                          )
                                       )
                                       (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (328,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (typen, resultdef = TWinControl = "TWinControl", pos = (328,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          )
                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (328,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (328,62), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          (loadn, resultdef = TForm = "TForm", pos = (328,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORM
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (328,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (nothingn, resultdef =  = "untyped", pos = (328,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (329,72), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (calln, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                                    proc = SetColor(<TFont>;TColor);
                                    methodpointer =
                                    (subscriptn, resultdef = TFont = "TFont", pos = (329,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       (asn, resultdef = TWinControl = "TWinControl", pos = (329,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (calln, resultdef = TControl = "TControl", pos = (329,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                             proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                             methodpointer =
                                             (loadn, resultdef = TForm = "TForm", pos = (329,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = FORM
                                             )
                                             left =
                                             (callparan, resultdef = LongInt = "LongInt", pos = (329,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                (loadn, resultdef = LongInt = "LongInt", pos = (329,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                   nil
                                                   symbol = I
                                                )

                                             )
                                             (callparan, resultdef = <nil>, pos = (329,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                (nothingn, resultdef =  = "untyped", pos = (329,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                )

                                             )
                                          )
                                          (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (329,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (typen, resultdef = TWinControl = "TWinControl", pos = (329,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             )
                                          )
                                       )
                                       field = FFONT
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (329,72), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (329,72), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          (subscriptn, resultdef = TFont = "TFont", pos = (329,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                             (loadn, resultdef = TForm = "TForm", pos = (329,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = FORM
                                             )
                                             field = FFONT
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (329,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (nothingn, resultdef =  = "untyped", pos = (329,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (331,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (ifn, resultdef =  = "untyped", pos = (330,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (isn, resultdef = Boolean = "Boolean", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (calln, resultdef = TControl = "TControl", pos = (330,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                          proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                          methodpointer =
                                          (loadn, resultdef = TForm = "TForm", pos = (330,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = FORM
                                          )
                                          left =
                                          (callparan, resultdef = LongInt = "LongInt", pos = (330,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (loadn, resultdef = LongInt = "LongInt", pos = (330,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = I
                                             )

                                          )
                                          (callparan, resultdef = <nil>, pos = (330,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (nothingn, resultdef =  = "untyped", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             )

                                          )
                                       )
                                       (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (330,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (typen, resultdef = TToolBar = "TToolBar", pos = (330,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          )
                                       )
                                    )
                                    (assignn, resultdef =  = "untyped", pos = (331,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (loadn, resultdef = TToolBar = "TToolBar", pos = (331,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                                          nil
                                          symbol = TB
                                       )
                                       (asn, resultdef = TToolBar = "TToolBar", pos = (331,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (calln, resultdef = TControl = "TControl", pos = (331,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                             proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                             methodpointer =
                                             (loadn, resultdef = TForm = "TForm", pos = (331,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                nil
                                                symbol = FORM
                                             )
                                             left =
                                             (callparan, resultdef = LongInt = "LongInt", pos = (331,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                (loadn, resultdef = LongInt = "LongInt", pos = (331,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                   nil
                                                   symbol = I
                                                )

                                             )
                                             (callparan, resultdef = <nil>, pos = (331,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                (nothingn, resultdef =  = "untyped", pos = (331,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                )

                                             )
                                          )
                                          (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (331,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (typen, resultdef = TToolBar = "TToolBar", pos = (331,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             )
                                          )
                                       )
                                    )
                                    nil
                                    nil
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (339,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (blockn, resultdef =  = "untyped", pos = (332,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (statementn, resultdef = <nil>, pos = (338,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (forn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (333,15), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                                             nil
                                             symbol = J
                                          )
                                          (ordconstn, resultdef = LongInt = "LongInt", pos = (333,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             typedef = "LongInt"
                                             value = 0
                                          )
                                          (typeconvn, resultdef = LongInt = "LongInt", pos = (333,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                                             (subn, resultdef = Int64 = "Int64", pos = (333,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                (typeconvn, resultdef = Int64 = "Int64", pos = (333,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_int_2_int, convnodeflags = []
                                                   (calln, resultdef = LongInt = "LongInt", pos = (333,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                                      proc = GetControlCount(<TWinControl>):System.LongInt;
                                                      methodpointer =
                                                      (loadn, resultdef = TToolBar = "TToolBar", pos = (333,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                         nil
                                                         symbol = TB
                                                      )
                                                      left =
                                                      (callparan, resultdef = <nil>, pos = (333,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                         (nothingn, resultdef =  = "untyped", pos = (333,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                         )

                                                      )
                                                   )
                                                )
                                                (ordconstn, resultdef = Int64 = "Int64", pos = (333,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                   typedef = "Int64"
                                                   value = 1
                                                )
                                             )
                                          )
                                          (blockn, resultdef =  = "untyped", pos = (334,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             (statementn, resultdef = <nil>, pos = (335,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                (assignn, resultdef =  = "untyped", pos = (335,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                   (loadn, resultdef = TToolButton = "TToolButton", pos = (335,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                                                      nil
                                                      symbol = TBT
                                                   )
                                                   (asn, resultdef = TToolButton = "TToolButton", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      (calln, resultdef = TControl = "TControl", pos = (335,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                                         proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                         methodpointer =
                                                         (loadn, resultdef = TToolBar = "TToolBar", pos = (335,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            nil
                                                            symbol = TB
                                                         )
                                                         left =
                                                         (callparan, resultdef = LongInt = "LongInt", pos = (335,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            (loadn, resultdef = LongInt = "LongInt", pos = (335,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                               nil
                                                               symbol = J
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (335,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            (nothingn, resultdef =  = "untyped", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            )

                                                         )
                                                      )
                                                      (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (335,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                         (typen, resultdef = TToolButton = "TToolButton", pos = (335,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                         )
                                                      )
                                                   )
                                                )

                                             )
                                             (statementn, resultdef = <nil>, pos = (336,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                (calln, resultdef =  = "untyped", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                                                   proc = SetColor(<TControl>;TColor);
                                                   methodpointer =
                                                   (loadn, resultdef = TToolButton = "TToolButton", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      nil
                                                      symbol = TBT
                                                   )
                                                   left =
                                                   (callparan, resultdef = TColor = "LongInt", pos = (336,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      (subscriptn, resultdef = TColor = "LongInt", pos = (336,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                                         (loadn, resultdef = TForm = "TForm", pos = (336,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            nil
                                                            symbol = FORM
                                                         )
                                                         field = FCOLOR
                                                      )

                                                   )
                                                   (callparan, resultdef = <nil>, pos = (336,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      (nothingn, resultdef =  = "untyped", pos = (336,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      )

                                                   )
                                                )

                                             )
                                             (statementn, resultdef = <nil>, pos = (337,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                (calln, resultdef =  = "untyped", pos = (337,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                                                   proc = SetColor(<TFont>;TColor);
                                                   methodpointer =
                                                   (subscriptn, resultdef = TFont = "TFont", pos = (337,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                                      (loadn, resultdef = TToolButton = "TToolButton", pos = (337,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                         nil
                                                         symbol = TBT
                                                      )
                                                      field = FFONT
                                                   )
                                                   left =
                                                   (callparan, resultdef = TColor = "LongInt", pos = (337,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      (subscriptn, resultdef = TColor = "LongInt", pos = (337,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                                         (loadn, resultdef = TForm = "TForm", pos = (337,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                            nil
                                                            symbol = FORM
                                                         )
                                                         field = FCOLOR
                                                      )

                                                   )
                                                   (callparan, resultdef = <nil>, pos = (337,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      (nothingn, resultdef =  = "untyped", pos = (337,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                      )

                                                   )
                                                )

                                             )
                                          )
                                       )

                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
         )
         (blockn, resultdef =  = "untyped", pos = (344,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (346,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetColor(<TControl>;TColor);
                  methodpointer =
                  (loadn, resultdef = TForm = "TForm", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = FORM
                  )
                  left =
                  (callparan, resultdef = TColor = "LongInt", pos = (346,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (ordconstn, resultdef = TColor = "LongInt", pos = (346,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "LongInt"
                        value = -2147483617
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (346,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (346,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (347,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (347,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetColor(<TFont>;TColor);
                  methodpointer =
                  (subscriptn, resultdef = TFont = "TFont", pos = (347,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                     (loadn, resultdef = TForm = "TForm", pos = (347,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = FORM
                     )
                     field = FFONT
                  )
                  left =
                  (callparan, resultdef = TColor = "LongInt", pos = (347,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (ordconstn, resultdef = TColor = "LongInt", pos = (347,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "LongInt"
                        value = -2147483630
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (347,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (347,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
         )
         nil
      )

   )
)

*******************************************************************************
after the firstpass
ApplyTheme(TForm);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (348,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef =  = "untyped", pos = (291,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (calln, resultdef = Boolean = "Boolean", pos = (291,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            proc = IsDarkTheme:System.Boolean;
         )
         (blockn, resultdef =  = "untyped", pos = (292,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (293,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (293,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = TMainMenu = "TMainMenu", pos = (293,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = MM
                  )
                  (calln, resultdef = TMainMenu = "TMainMenu", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                     proc = constructor Create(<TMainMenu>;<Class Of TMainMenu>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMainMenu", pos = (293,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (typen, resultdef = TMainMenu = "TMainMenu", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                     vmt_entry =
                     (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TMainMenu of object;Register>", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        (derefn, resultdef = TMainMenu. = "<record type>", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (typeconvn, resultdef = <no type symbol> = "^TMainMenu.<record type>", pos = (293,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMainMenu", pos = (293,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                 (typen, resultdef = TMainMenu = "TMainMenu", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )
                              )
                           )
                        )
                        field = f54
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (293,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMainMenu", pos = (293,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                           (typen, resultdef = TMainMenu = "TMainMenu", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )
                        )

                     )
                     (callparan, resultdef = TComponent = "TComponent", pos = (293,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                        (niln, resultdef = TComponent = "TComponent", pos = (293,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (293,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (294,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (294,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = TMenuItem = "TMenuItem", pos = (294,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = MI
                  )
                  (calln, resultdef = TMenuItem = "TMenuItem", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                     proc = constructor Create(<TMenuItem>;<Class Of TMenuItem>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMenuItem", pos = (294,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (typen, resultdef = TMenuItem = "TMenuItem", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                     vmt_entry =
                     (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TMenuItem of object;Register>", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        (derefn, resultdef = TMenuItem. = "<record type>", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (typeconvn, resultdef = <no type symbol> = "^TMenuItem.<record type>", pos = (294,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMenuItem", pos = (294,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                 (typen, resultdef = TMenuItem = "TMenuItem", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )
                              )
                           )
                        )
                        field = f54
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (294,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMenuItem", pos = (294,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                           (typen, resultdef = TMenuItem = "TMenuItem", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )
                        )

                     )
                     (callparan, resultdef = TComponent = "TComponent", pos = (294,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                        (niln, resultdef = TComponent = "TComponent", pos = (294,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (294,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (295,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (295,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = TToolBar = "TToolBar", pos = (295,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = TB
                  )
                  (calln, resultdef = TToolBar = "TToolBar", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                     proc = constructor Create(<TToolBar>;<Class Of TToolBar>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (295,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (typen, resultdef = TToolBar = "TToolBar", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                     vmt_entry =
                     (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TToolBar of object;Register>", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        (derefn, resultdef = TToolBar. = "<record type>", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (typeconvn, resultdef = <no type symbol> = "^TToolBar.<record type>", pos = (295,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (295,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                 (typen, resultdef = TToolBar = "TToolBar", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )
                              )
                           )
                        )
                        field = f54
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (295,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (295,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                           (typen, resultdef = TToolBar = "TToolBar", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )
                        )

                     )
                     (callparan, resultdef = TComponent = "TComponent", pos = (295,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                        (niln, resultdef = TComponent = "TComponent", pos = (295,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (295,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (296,35), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (296,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = TToolButton = "TToolButton", pos = (296,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = TBT
                  )
                  (calln, resultdef = TToolButton = "TToolButton", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                     proc = constructor Create(<TToolButton>;<Class Of TToolButton>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (296,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (typen, resultdef = TToolButton = "TToolButton", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                     vmt_entry =
                     (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TToolButton of object;Register>", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        (derefn, resultdef = TToolButton. = "<record type>", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (typeconvn, resultdef = <no type symbol> = "^TToolButton.<record type>", pos = (296,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (296,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                 (typen, resultdef = TToolButton = "TToolButton", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )
                              )
                           )
                        )
                        field = f54
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (296,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (296,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                           (typen, resultdef = TToolButton = "TToolButton", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )
                        )

                     )
                     (callparan, resultdef = TComponent = "TComponent", pos = (296,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                        (niln, resultdef = TComponent = "TComponent", pos = (296,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (296,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (297,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TControl>;TColor);
                  methodpointer =
                  (loadn, resultdef = TForm = "TForm", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = FORM
                  )
                  vmt_entry =
                  (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                     (derefn, resultdef = TForm. = "<record type>", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                        (typeconvn, resultdef = <no type symbol> = "^TForm.<record type>", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, convtype = tc_equal, convnodeflags = []
                           (subscriptn, resultdef = Pointer = "^untyped", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TForm = "TForm", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = FORM
                              )
                              field = hidden_vptr$TOBJECT
                           )
                        )
                     )
                     field = f142
                  )
                  left =
                  (callparan, resultdef = TColor = "LongInt", pos = (297,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                     (ordconstn, resultdef = TColor = "LongInt", pos = (297,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        typedef = "LongInt"
                        value = 2105376
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (297,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (loadn, resultdef = TForm = "TForm", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = FORM
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (298,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (298,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TFont>;TColor);
                  methodpointer =
                  (subscriptn, resultdef = TFont = "TFont", pos = (298,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                     (loadn, resultdef = TForm = "TForm", pos = (298,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = FORM
                     )
                     field = FFONT
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (298,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (subscriptn, resultdef = TFont = "TFont", pos = (298,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                        (loadn, resultdef = TForm = "TForm", pos = (298,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = FORM
                        )
                        field = FFONT
                     )

                  )
                  (callparan, resultdef = TColor = "LongInt", pos = (298,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                     (ordconstn, resultdef = TColor = "LongInt", pos = (298,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        typedef = "LongInt"
                        value = 12632256
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (299,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TControl>;TColor);
                  methodpointer =
                  (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (299,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        nil
                        symbol = FORMMAIN
                     )
                     field = HEXACOLORPICKER1
                  )
                  vmt_entry =
                  (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                     (derefn, resultdef = THexaColorPicker. = "<record type>", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6
                        (typeconvn, resultdef = <no type symbol> = "^THexaColorPicker.<record type>", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 5, convtype = tc_equal, convnodeflags = []
                           (subscriptn, resultdef = Pointer = "^untyped", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
                              (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (299,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                    nil
                                    symbol = FORMMAIN
                                 )
                                 field = HEXACOLORPICKER1
                              )
                              field = hidden_vptr$TOBJECT
                           )
                        )
                     )
                     field = f142
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (299,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (299,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           nil
                           symbol = FORMMAIN
                        )
                        field = HEXACOLORPICKER1
                     )

                  )
                  (callparan, resultdef = TColor = "LongInt", pos = (299,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (subscriptn, resultdef = TColor = "LongInt", pos = (299,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                        (loadn, resultdef = TForm = "TForm", pos = (299,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = FORM
                        )
                        field = FCOLOR
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (307,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (forn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (300,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (300,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                     typedef = "LongInt"
                     value = 0
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (300,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (subn, resultdef = Int64 = "Int64", pos = (300,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                        (typeconvn, resultdef = Int64 = "Int64", pos = (300,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (300,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetControlCount(<TWinControl>):System.LongInt;
                              methodpointer =
                              (subscriptn, resultdef = TPanel = "TPanel", pos = (300,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (300,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                    nil
                                    symbol = FORMMAIN
                                 )
                                 field = FLOWPANEL1
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (300,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                 (subscriptn, resultdef = TPanel = "TPanel", pos = (300,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (300,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       nil
                                       symbol = FORMMAIN
                                    )
                                    field = FLOWPANEL1
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (300,54), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                           typedef = "Int64"
                           value = 1
                        )
                     )
                  )
                  (blockn, resultdef =  = "untyped", pos = (301,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (statementn, resultdef =  = "untyped", pos = (306,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (ifn, resultdef =  = "untyped", pos = (302,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (calln, resultdef = Boolean = "Boolean", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                              proc = $fpc_do_is(TClass;TObject):System.Boolean;
                              left =
                              (callparan, resultdef = TObject = "TObject", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                 (typeconvn, resultdef = TObject = "TObject", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                    (calln, resultdef = TControl = "TControl", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                       methodpointer =
                                       (subscriptn, resultdef = TPanel = "TPanel", pos = (302,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (302,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                             nil
                                             symbol = FORMMAIN
                                          )
                                          field = FLOWPANEL1
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                          (subscriptn, resultdef = TPanel = "TPanel", pos = (302,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (302,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                nil
                                                symbol = FORMMAIN
                                             )
                                             field = FLOWPANEL1
                                          )

                                       )
                                       (callparan, resultdef = LongInt = "LongInt", pos = (302,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (302,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                             nil
                                             symbol = I
                                          )

                                       )
                                    )
                                 )

                              )
                              (callparan, resultdef = TClass = "Class Of TObject", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                 (typeconvn, resultdef = TClass = "Class Of TObject", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                    (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_ignore_for_wpo], cmplx = 1
                                       (typen, resultdef = TWinControl = "TWinControl", pos = (302,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )
                                    )
                                 )

                              )
                           )
                           (blockn, resultdef =  = "untyped", pos = (303,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (statementn, resultdef =  = "untyped", pos = (304,60), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (calln, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TControl>;TColor);
                                    methodpointer =
                                    (temprefn, resultdef = TControl = "TControl", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                       temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
                                    )
                                    vmt_entry =
                                    (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       (derefn, resultdef = TControl. = "<record type>", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                          (typeconvn, resultdef = <no type symbol> = "^TControl.<record type>", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                             (subscriptn, resultdef = Pointer = "^untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                (temprefn, resultdef = TControl = "TControl", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                   temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
                                                )
                                                field = hidden_vptr$TOBJECT
                                             )
                                          )
                                       )
                                       field = f142
                                    )
                                    callinitblock =
                                    (blockn, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (statementn, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (tempcreaten, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             size = 8, temptypedef = TControl = "TControl", tempinfo = $0000000091BB6F70
                                             [ti_may_be_in_reg]
                                             tempinit =
                                             nil
                                          )

                                       )
                                       (statementn, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (assignn, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (temprefn, resultdef = TControl = "TControl", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
                                             )
                                             (calln, resultdef = TControl = "TControl", pos = (304,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                methodpointer =
                                                (subscriptn, resultdef = TPanel = "TPanel", pos = (304,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                   (loadn, resultdef = TFormMain = "TFormMain", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                      nil
                                                      symbol = FORMMAIN
                                                   )
                                                   field = FLOWPANEL1
                                                )
                                                left =
                                                (callparan, resultdef = <nil>, pos = (304,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                   (subscriptn, resultdef = TPanel = "TPanel", pos = (304,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                      (loadn, resultdef = TFormMain = "TFormMain", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                         nil
                                                         symbol = FORMMAIN
                                                      )
                                                      field = FLOWPANEL1
                                                   )

                                                )
                                                (callparan, resultdef = LongInt = "LongInt", pos = (304,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (304,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                      nil
                                                      symbol = I
                                                   )

                                                )
                                             )
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (statementn, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          (tempdeleten, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             release_to_normal: FALSE, temptypedef = TControl = "TControl", temptype = tt_persistent, tempinfo = $0000000091BB6F70
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (304,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (304,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                          (loadn, resultdef = TForm = "TForm", pos = (304,50), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                             nil
                                             symbol = FORM
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (304,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                       (temprefn, resultdef = TControl = "TControl", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                          temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (305,70), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (calln, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TFont>;TColor);
                                    methodpointer =
                                    (temprefn, resultdef = TFont = "TFont", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                       temptypedef = TFont = "TFont", (tempinfo = $0000000091B9E670 flags = [ti_may_be_in_reg])
                                    )
                                    callinitblock =
                                    (blockn, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (statementn, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (tempcreaten, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             size = 8, temptypedef = TFont = "TFont", tempinfo = $0000000091B9E670
                                             [ti_may_be_in_reg]
                                             tempinit =
                                             nil
                                          )

                                       )
                                       (statementn, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (assignn, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (temprefn, resultdef = TFont = "TFont", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                temptypedef = TFont = "TFont", (tempinfo = $0000000091B9E670 flags = [ti_may_be_in_reg])
                                             )
                                             (subscriptn, resultdef = TFont = "TFont", pos = (305,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                (calln, resultdef = TControl = "TControl", pos = (305,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                   proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                   methodpointer =
                                                   (subscriptn, resultdef = TPanel = "TPanel", pos = (305,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                      (loadn, resultdef = TFormMain = "TFormMain", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                         nil
                                                         symbol = FORMMAIN
                                                      )
                                                      field = FLOWPANEL1
                                                   )
                                                   left =
                                                   (callparan, resultdef = <nil>, pos = (305,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                      (subscriptn, resultdef = TPanel = "TPanel", pos = (305,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                         (loadn, resultdef = TFormMain = "TFormMain", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                            nil
                                                            symbol = FORMMAIN
                                                         )
                                                         field = FLOWPANEL1
                                                      )

                                                   )
                                                   (callparan, resultdef = LongInt = "LongInt", pos = (305,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                      (loadn, resultdef = LongInt = "LongInt", pos = (305,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                         nil
                                                         symbol = I
                                                      )

                                                   )
                                                )
                                                field = FFONT
                                             )
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (statementn, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          (tempdeleten, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $0000000091B9E670
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (305,70), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (305,70), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                          (subscriptn, resultdef = TFont = "TFont", pos = (305,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                             (loadn, resultdef = TForm = "TForm", pos = (305,55), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                nil
                                                symbol = FORM
                                             )
                                             field = FFONT
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (305,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                       (temprefn, resultdef = TFont = "TFont", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                          temptypedef = TFont = "TFont", (tempinfo = $0000000091B9E670 flags = [ti_may_be_in_reg])
                                       )

                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (315,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (forn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (308,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (308,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                     typedef = "LongInt"
                     value = 0
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (308,58), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (subn, resultdef = Int64 = "Int64", pos = (308,58), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                        (typeconvn, resultdef = Int64 = "Int64", pos = (308,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (308,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetControlCount(<TWinControl>):System.LongInt;
                              methodpointer =
                              (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (308,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (308,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                    nil
                                    symbol = FORMMAIN
                                 )
                                 field = ANCHORDOCKPANEL1
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (308,58), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                 (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (308,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (308,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       nil
                                       symbol = FORMMAIN
                                    )
                                    field = ANCHORDOCKPANEL1
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (308,60), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                           typedef = "Int64"
                           value = 1
                        )
                     )
                  )
                  (blockn, resultdef =  = "untyped", pos = (309,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (statementn, resultdef =  = "untyped", pos = (314,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (ifn, resultdef =  = "untyped", pos = (310,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (calln, resultdef = Boolean = "Boolean", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                              proc = $fpc_do_is(TClass;TObject):System.Boolean;
                              left =
                              (callparan, resultdef = TObject = "TObject", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                 (typeconvn, resultdef = TObject = "TObject", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                    (calln, resultdef = TControl = "TControl", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                       methodpointer =
                                       (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (310,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (310,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                             nil
                                             symbol = FORMMAIN
                                          )
                                          field = ANCHORDOCKPANEL1
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                          (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (310,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (310,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                nil
                                                symbol = FORMMAIN
                                             )
                                             field = ANCHORDOCKPANEL1
                                          )

                                       )
                                       (callparan, resultdef = LongInt = "LongInt", pos = (310,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (310,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                             nil
                                             symbol = I
                                          )

                                       )
                                    )
                                 )

                              )
                              (callparan, resultdef = TClass = "Class Of TObject", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                 (typeconvn, resultdef = TClass = "Class Of TObject", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                    (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_ignore_for_wpo], cmplx = 1
                                       (typen, resultdef = TWinControl = "TWinControl", pos = (310,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )
                                    )
                                 )

                              )
                           )
                           (blockn, resultdef =  = "untyped", pos = (311,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (statementn, resultdef =  = "untyped", pos = (312,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (calln, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TControl>;TColor);
                                    methodpointer =
                                    (temprefn, resultdef = TControl = "TControl", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                       temptypedef = TControl = "TControl", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
                                    )
                                    vmt_entry =
                                    (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       (derefn, resultdef = TControl. = "<record type>", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                          (typeconvn, resultdef = <no type symbol> = "^TControl.<record type>", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                             (subscriptn, resultdef = Pointer = "^untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                (temprefn, resultdef = TControl = "TControl", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                   temptypedef = TControl = "TControl", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
                                                )
                                                field = hidden_vptr$TOBJECT
                                             )
                                          )
                                       )
                                       field = f142
                                    )
                                    callinitblock =
                                    (blockn, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (statementn, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (tempcreaten, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             size = 8, temptypedef = TControl = "TControl", tempinfo = $0000000091B9E8F0
                                             [ti_may_be_in_reg]
                                             tempinit =
                                             nil
                                          )

                                       )
                                       (statementn, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (assignn, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (temprefn, resultdef = TControl = "TControl", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                temptypedef = TControl = "TControl", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
                                             )
                                             (calln, resultdef = TControl = "TControl", pos = (312,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                methodpointer =
                                                (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (312,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                   (loadn, resultdef = TFormMain = "TFormMain", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                      nil
                                                      symbol = FORMMAIN
                                                   )
                                                   field = ANCHORDOCKPANEL1
                                                )
                                                left =
                                                (callparan, resultdef = <nil>, pos = (312,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                   (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (312,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                      (loadn, resultdef = TFormMain = "TFormMain", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                         nil
                                                         symbol = FORMMAIN
                                                      )
                                                      field = ANCHORDOCKPANEL1
                                                   )

                                                )
                                                (callparan, resultdef = LongInt = "LongInt", pos = (312,45), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (312,45), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                      nil
                                                      symbol = I
                                                   )

                                                )
                                             )
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (statementn, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          (tempdeleten, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             release_to_normal: FALSE, temptypedef = TControl = "TControl", temptype = tt_persistent, tempinfo = $0000000091B9E8F0
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (312,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (312,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                          (loadn, resultdef = TForm = "TForm", pos = (312,56), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                             nil
                                             symbol = FORM
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (312,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                       (temprefn, resultdef = TControl = "TControl", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                          temptypedef = TControl = "TControl", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (313,76), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (calln, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TFont>;TColor);
                                    methodpointer =
                                    (temprefn, resultdef = TFont = "TFont", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                       temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6EF0 flags = [ti_may_be_in_reg])
                                    )
                                    callinitblock =
                                    (blockn, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (statementn, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (tempcreaten, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             size = 8, temptypedef = TFont = "TFont", tempinfo = $0000000091BB6EF0
                                             [ti_may_be_in_reg]
                                             tempinit =
                                             nil
                                          )

                                       )
                                       (statementn, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (assignn, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (temprefn, resultdef = TFont = "TFont", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6EF0 flags = [ti_may_be_in_reg])
                                             )
                                             (subscriptn, resultdef = TFont = "TFont", pos = (313,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                (calln, resultdef = TControl = "TControl", pos = (313,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                   proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                   methodpointer =
                                                   (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (313,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                      (loadn, resultdef = TFormMain = "TFormMain", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                         nil
                                                         symbol = FORMMAIN
                                                      )
                                                      field = ANCHORDOCKPANEL1
                                                   )
                                                   left =
                                                   (callparan, resultdef = <nil>, pos = (313,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                      (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (313,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                         (loadn, resultdef = TFormMain = "TFormMain", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                            nil
                                                            symbol = FORMMAIN
                                                         )
                                                         field = ANCHORDOCKPANEL1
                                                      )

                                                   )
                                                   (callparan, resultdef = LongInt = "LongInt", pos = (313,45), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                      (loadn, resultdef = LongInt = "LongInt", pos = (313,45), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                         nil
                                                         symbol = I
                                                      )

                                                   )
                                                )
                                                field = FFONT
                                             )
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (statementn, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          (tempdeleten, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $0000000091BB6EF0
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (313,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (313,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                          (subscriptn, resultdef = TFont = "TFont", pos = (313,70), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                             (loadn, resultdef = TForm = "TForm", pos = (313,61), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                nil
                                                symbol = FORM
                                             )
                                             field = FFONT
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (313,58), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                       (temprefn, resultdef = TFont = "TFont", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                          temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6EF0 flags = [ti_may_be_in_reg])
                                       )

                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (323,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (forn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (316,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (316,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                     typedef = "LongInt"
                     value = 0
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (316,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (subn, resultdef = Int64 = "Int64", pos = (316,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                        (typeconvn, resultdef = Int64 = "Int64", pos = (316,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (316,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetControlCount(<TWinControl>):System.LongInt;
                              methodpointer =
                              (subscriptn, resultdef = TPanel = "TPanel", pos = (316,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (316,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                    nil
                                    symbol = FORMMAIN
                                 )
                                 field = PANEL2
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (316,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                 (subscriptn, resultdef = TPanel = "TPanel", pos = (316,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (316,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       nil
                                       symbol = FORMMAIN
                                    )
                                    field = PANEL2
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (316,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                           typedef = "Int64"
                           value = 1
                        )
                     )
                  )
                  (blockn, resultdef =  = "untyped", pos = (317,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (statementn, resultdef =  = "untyped", pos = (322,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (ifn, resultdef =  = "untyped", pos = (318,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (calln, resultdef = Boolean = "Boolean", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                              proc = $fpc_do_is(TClass;TObject):System.Boolean;
                              left =
                              (callparan, resultdef = TObject = "TObject", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                 (typeconvn, resultdef = TObject = "TObject", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                    (calln, resultdef = TControl = "TControl", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                       methodpointer =
                                       (subscriptn, resultdef = TPanel = "TPanel", pos = (318,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (318,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                             nil
                                             symbol = FORMMAIN
                                          )
                                          field = PANEL2
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                          (subscriptn, resultdef = TPanel = "TPanel", pos = (318,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (318,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                nil
                                                symbol = FORMMAIN
                                             )
                                             field = PANEL2
                                          )

                                       )
                                       (callparan, resultdef = LongInt = "LongInt", pos = (318,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (318,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                             nil
                                             symbol = I
                                          )

                                       )
                                    )
                                 )

                              )
                              (callparan, resultdef = TClass = "Class Of TObject", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                 (typeconvn, resultdef = TClass = "Class Of TObject", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                    (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_ignore_for_wpo], cmplx = 1
                                       (typen, resultdef = TWinControl = "TWinControl", pos = (318,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )
                                    )
                                 )

                              )
                           )
                           (blockn, resultdef =  = "untyped", pos = (319,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (statementn, resultdef =  = "untyped", pos = (320,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (calln, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TControl>;TColor);
                                    methodpointer =
                                    (temprefn, resultdef = TControl = "TControl", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                       temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6E70 flags = [ti_may_be_in_reg])
                                    )
                                    vmt_entry =
                                    (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       (derefn, resultdef = TControl. = "<record type>", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                          (typeconvn, resultdef = <no type symbol> = "^TControl.<record type>", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                             (subscriptn, resultdef = Pointer = "^untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                (temprefn, resultdef = TControl = "TControl", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                   temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6E70 flags = [ti_may_be_in_reg])
                                                )
                                                field = hidden_vptr$TOBJECT
                                             )
                                          )
                                       )
                                       field = f142
                                    )
                                    callinitblock =
                                    (blockn, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (statementn, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (tempcreaten, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             size = 8, temptypedef = TControl = "TControl", tempinfo = $0000000091BB6E70
                                             [ti_may_be_in_reg]
                                             tempinit =
                                             nil
                                          )

                                       )
                                       (statementn, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (assignn, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (temprefn, resultdef = TControl = "TControl", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6E70 flags = [ti_may_be_in_reg])
                                             )
                                             (calln, resultdef = TControl = "TControl", pos = (320,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                methodpointer =
                                                (subscriptn, resultdef = TPanel = "TPanel", pos = (320,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                   (loadn, resultdef = TFormMain = "TFormMain", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                      nil
                                                      symbol = FORMMAIN
                                                   )
                                                   field = PANEL2
                                                )
                                                left =
                                                (callparan, resultdef = <nil>, pos = (320,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                   (subscriptn, resultdef = TPanel = "TPanel", pos = (320,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                      (loadn, resultdef = TFormMain = "TFormMain", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                         nil
                                                         symbol = FORMMAIN
                                                      )
                                                      field = PANEL2
                                                   )

                                                )
                                                (callparan, resultdef = LongInt = "LongInt", pos = (320,35), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (320,35), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                      nil
                                                      symbol = I
                                                   )

                                                )
                                             )
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (statementn, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          (tempdeleten, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             release_to_normal: FALSE, temptypedef = TControl = "TControl", temptype = tt_persistent, tempinfo = $0000000091BB6E70
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (320,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (320,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                          (loadn, resultdef = TForm = "TForm", pos = (320,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                             nil
                                             symbol = FORM
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (320,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                       (temprefn, resultdef = TControl = "TControl", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                          temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6E70 flags = [ti_may_be_in_reg])
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (321,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (calln, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TFont>;TColor);
                                    methodpointer =
                                    (temprefn, resultdef = TFont = "TFont", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                       temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6DF0 flags = [ti_may_be_in_reg])
                                    )
                                    callinitblock =
                                    (blockn, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (statementn, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (tempcreaten, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             size = 8, temptypedef = TFont = "TFont", tempinfo = $0000000091BB6DF0
                                             [ti_may_be_in_reg]
                                             tempinit =
                                             nil
                                          )

                                       )
                                       (statementn, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (assignn, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (temprefn, resultdef = TFont = "TFont", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6DF0 flags = [ti_may_be_in_reg])
                                             )
                                             (subscriptn, resultdef = TFont = "TFont", pos = (321,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                (calln, resultdef = TControl = "TControl", pos = (321,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                   proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                   methodpointer =
                                                   (subscriptn, resultdef = TPanel = "TPanel", pos = (321,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                      (loadn, resultdef = TFormMain = "TFormMain", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                         nil
                                                         symbol = FORMMAIN
                                                      )
                                                      field = PANEL2
                                                   )
                                                   left =
                                                   (callparan, resultdef = <nil>, pos = (321,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                      (subscriptn, resultdef = TPanel = "TPanel", pos = (321,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                         (loadn, resultdef = TFormMain = "TFormMain", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                            nil
                                                            symbol = FORMMAIN
                                                         )
                                                         field = PANEL2
                                                      )

                                                   )
                                                   (callparan, resultdef = LongInt = "LongInt", pos = (321,35), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                      (loadn, resultdef = LongInt = "LongInt", pos = (321,35), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                         nil
                                                         symbol = I
                                                      )

                                                   )
                                                )
                                                field = FFONT
                                             )
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (statementn, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          (tempdeleten, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $0000000091BB6DF0
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (321,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (321,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                          (subscriptn, resultdef = TFont = "TFont", pos = (321,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                             (loadn, resultdef = TForm = "TForm", pos = (321,51), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                nil
                                                symbol = FORM
                                             )
                                             field = FFONT
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (321,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                       (temprefn, resultdef = TFont = "TFont", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                          temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6DF0 flags = [ti_may_be_in_reg])
                                       )

                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (341,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (forn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = LongInt = "LongInt", pos = (324,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (324,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                     typedef = "LongInt"
                     value = 0
                  )
                  (typeconvn, resultdef = LongInt = "LongInt", pos = (324,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                     (subn, resultdef = Int64 = "Int64", pos = (324,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                        (typeconvn, resultdef = Int64 = "Int64", pos = (324,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                           (calln, resultdef = LongInt = "LongInt", pos = (324,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetControlCount(<TWinControl>):System.LongInt;
                              methodpointer =
                              (loadn, resultdef = TForm = "TForm", pos = (324,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = FORM
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (324,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                 (loadn, resultdef = TForm = "TForm", pos = (324,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                    nil
                                    symbol = FORM
                                 )

                              )
                           )
                        )
                        (ordconstn, resultdef = Int64 = "Int64", pos = (324,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                           typedef = "Int64"
                           value = 1
                        )
                     )
                  )
                  (blockn, resultdef =  = "untyped", pos = (325,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (statementn, resultdef =  = "untyped", pos = (340,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (ifn, resultdef =  = "untyped", pos = (326,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (calln, resultdef = Boolean = "Boolean", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                              proc = $fpc_do_is(TClass;TObject):System.Boolean;
                              left =
                              (callparan, resultdef = TObject = "TObject", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                 (typeconvn, resultdef = TObject = "TObject", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                    (calln, resultdef = TControl = "TControl", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                       proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                       methodpointer =
                                       (loadn, resultdef = TForm = "TForm", pos = (326,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                          nil
                                          symbol = FORM
                                       )
                                       left =
                                       (callparan, resultdef = LongInt = "LongInt", pos = (326,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                          (loadn, resultdef = LongInt = "LongInt", pos = (326,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                             nil
                                             symbol = I
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (326,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                          (loadn, resultdef = TForm = "TForm", pos = (326,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                             nil
                                             symbol = FORM
                                          )

                                       )
                                    )
                                 )

                              )
                              (callparan, resultdef = TClass = "Class Of TObject", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                 (typeconvn, resultdef = TClass = "Class Of TObject", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                    (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_ignore_for_wpo], cmplx = 1
                                       (typen, resultdef = TWinControl = "TWinControl", pos = (326,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )
                                    )
                                 )

                              )
                           )
                           (blockn, resultdef =  = "untyped", pos = (327,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (statementn, resultdef =  = "untyped", pos = (328,62), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (calln, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TControl>;TColor);
                                    methodpointer =
                                    (temprefn, resultdef = TWinControl = "TWinControl", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                       temptypedef = TWinControl = "TWinControl", (tempinfo = $0000000091BB6D70 flags = [ti_may_be_in_reg])
                                    )
                                    vmt_entry =
                                    (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       (derefn, resultdef = TWinControl. = "<record type>", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                          (typeconvn, resultdef = <no type symbol> = "^TWinControl.<record type>", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                             (subscriptn, resultdef = Pointer = "^untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                (temprefn, resultdef = TWinControl = "TWinControl", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                                   temptypedef = TWinControl = "TWinControl", (tempinfo = $0000000091BB6D70 flags = [ti_may_be_in_reg])
                                                )
                                                field = hidden_vptr$TOBJECT
                                             )
                                          )
                                       )
                                       field = f142
                                    )
                                    callinitblock =
                                    (blockn, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (statementn, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (tempcreaten, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             size = 8, temptypedef = TWinControl = "TWinControl", tempinfo = $0000000091BB6D70
                                             [ti_may_be_in_reg]
                                             tempinit =
                                             nil
                                          )

                                       )
                                       (statementn, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (assignn, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (temprefn, resultdef = TWinControl = "TWinControl", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                temptypedef = TWinControl = "TWinControl", (tempinfo = $0000000091BB6D70 flags = [ti_may_be_in_reg])
                                             )
                                             (asn, resultdef = TWinControl = "TWinControl", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                nil
                                                nil
                                             )
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (statementn, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          (tempdeleten, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             release_to_normal: FALSE, temptypedef = TWinControl = "TWinControl", temptype = tt_persistent, tempinfo = $0000000091BB6D70
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (328,62), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (328,62), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                          (loadn, resultdef = TForm = "TForm", pos = (328,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                             nil
                                             symbol = FORM
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (328,49), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                       (temprefn, resultdef = TWinControl = "TWinControl", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                          temptypedef = TWinControl = "TWinControl", (tempinfo = $0000000091BB6D70 flags = [ti_may_be_in_reg])
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (329,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (calln, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                                    proc = SetColor(<TFont>;TColor);
                                    methodpointer =
                                    (temprefn, resultdef = TFont = "TFont", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                       temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6CF0 flags = [ti_may_be_in_reg])
                                    )
                                    callinitblock =
                                    (blockn, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (statementn, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (tempcreaten, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             size = 8, temptypedef = TFont = "TFont", tempinfo = $0000000091BB6CF0
                                             [ti_may_be_in_reg]
                                             tempinit =
                                             nil
                                          )

                                       )
                                       (statementn, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (assignn, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (temprefn, resultdef = TFont = "TFont", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                                                temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6CF0 flags = [ti_may_be_in_reg])
                                             )
                                             (subscriptn, resultdef = TFont = "TFont", pos = (329,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                (asn, resultdef = TWinControl = "TWinControl", pos = (329,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                   nil
                                                   nil
                                                )
                                                field = FFONT
                                             )
                                          )

                                       )
                                    )
                                    callcleanupblock =
                                    (blockn, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                       (statementn, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          (tempdeleten, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                             release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $0000000091BB6CF0
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = TColor = "LongInt", pos = (329,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                       (subscriptn, resultdef = TColor = "LongInt", pos = (329,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                          (subscriptn, resultdef = TFont = "TFont", pos = (329,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                             (loadn, resultdef = TForm = "TForm", pos = (329,57), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                nil
                                                symbol = FORM
                                             )
                                             field = FFONT
                                          )
                                          field = FCOLOR
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (329,54), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                       (temprefn, resultdef = TFont = "TFont", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                                          temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6CF0 flags = [ti_may_be_in_reg])
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (331,45), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (ifn, resultdef =  = "untyped", pos = (330,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (calln, resultdef = Boolean = "Boolean", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                       proc = $fpc_do_is(TClass;TObject):System.Boolean;
                                       left =
                                       (callparan, resultdef = TObject = "TObject", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                          (typeconvn, resultdef = TObject = "TObject", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_equal, convnodeflags = []
                                             (calln, resultdef = TControl = "TControl", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                methodpointer =
                                                (loadn, resultdef = TForm = "TForm", pos = (330,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                   nil
                                                   symbol = FORM
                                                )
                                                left =
                                                (callparan, resultdef = LongInt = "LongInt", pos = (330,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (330,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                      nil
                                                      symbol = I
                                                   )

                                                )
                                                (callparan, resultdef = <nil>, pos = (330,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                   (loadn, resultdef = TForm = "TForm", pos = (330,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                      nil
                                                      symbol = FORM
                                                   )

                                                )
                                             )
                                          )

                                       )
                                       (callparan, resultdef = TClass = "Class Of TObject", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                          (typeconvn, resultdef = TClass = "Class Of TObject", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                             (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_ignore_for_wpo], cmplx = 1
                                                (typen, resultdef = TToolBar = "TToolBar", pos = (330,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                                )
                                             )
                                          )

                                       )
                                    )
                                    (assignn, resultdef =  = "untyped", pos = (331,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (loadn, resultdef = TToolBar = "TToolBar", pos = (331,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                                          nil
                                          symbol = TB
                                       )
                                       (asn, resultdef = TToolBar = "TToolBar", pos = (331,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                          nil
                                          nil
                                       )
                                    )
                                    nil
                                    nil
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (338,14), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (forn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (loadn, resultdef = LongInt = "LongInt", pos = (333,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                                       nil
                                       symbol = J
                                    )
                                    (ordconstn, resultdef = LongInt = "LongInt", pos = (333,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                       typedef = "LongInt"
                                       value = 0
                                    )
                                    (typeconvn, resultdef = LongInt = "LongInt", pos = (333,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                       (subn, resultdef = Int64 = "Int64", pos = (333,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                          (typeconvn, resultdef = Int64 = "Int64", pos = (333,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, convtype = tc_int_2_int, convnodeflags = []
                                             (calln, resultdef = LongInt = "LongInt", pos = (333,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                                proc = GetControlCount(<TWinControl>):System.LongInt;
                                                methodpointer =
                                                (loadn, resultdef = TToolBar = "TToolBar", pos = (333,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                   nil
                                                   symbol = TB
                                                )
                                                left =
                                                (callparan, resultdef = <nil>, pos = (333,41), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                   (loadn, resultdef = TToolBar = "TToolBar", pos = (333,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                      nil
                                                      symbol = TB
                                                   )

                                                )
                                             )
                                          )
                                          (ordconstn, resultdef = Int64 = "Int64", pos = (333,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                             typedef = "Int64"
                                             value = 1
                                          )
                                       )
                                    )
                                    (blockn, resultdef =  = "untyped", pos = (334,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (statementn, resultdef =  = "untyped", pos = (335,49), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (assignn, resultdef =  = "untyped", pos = (335,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (loadn, resultdef = TToolButton = "TToolButton", pos = (335,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                                                nil
                                                symbol = TBT
                                             )
                                             (asn, resultdef = TToolButton = "TToolButton", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                                nil
                                                nil
                                             )
                                          )

                                       )
                                       (statementn, resultdef =  = "untyped", pos = (336,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (calln, resultdef =  = "untyped", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                                             proc = SetColor(<TControl>;TColor);
                                             methodpointer =
                                             (loadn, resultdef = TToolButton = "TToolButton", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                nil
                                                symbol = TBT
                                             )
                                             vmt_entry =
                                             (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                (derefn, resultdef = TToolButton. = "<record type>", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                                                   (typeconvn, resultdef = <no type symbol> = "^TToolButton.<record type>", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, convtype = tc_equal, convnodeflags = []
                                                      (subscriptn, resultdef = Pointer = "^untyped", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                         (loadn, resultdef = TToolButton = "TToolButton", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                            nil
                                                            symbol = TBT
                                                         )
                                                         field = hidden_vptr$TOBJECT
                                                      )
                                                   )
                                                )
                                                field = f142
                                             )
                                             left =
                                             (callparan, resultdef = TColor = "LongInt", pos = (336,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                (subscriptn, resultdef = TColor = "LongInt", pos = (336,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                                   (loadn, resultdef = TForm = "TForm", pos = (336,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                      nil
                                                      symbol = FORM
                                                   )
                                                   field = FCOLOR
                                                )

                                             )
                                             (callparan, resultdef = <nil>, pos = (336,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                                (loadn, resultdef = TToolButton = "TToolButton", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                   nil
                                                   symbol = TBT
                                                )

                                             )
                                          )

                                       )
                                       (statementn, resultdef =  = "untyped", pos = (337,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (calln, resultdef =  = "untyped", pos = (337,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                                             proc = SetColor(<TFont>;TColor);
                                             methodpointer =
                                             (subscriptn, resultdef = TFont = "TFont", pos = (337,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                                (loadn, resultdef = TToolButton = "TToolButton", pos = (337,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                   nil
                                                   symbol = TBT
                                                )
                                                field = FFONT
                                             )
                                             left =
                                             (callparan, resultdef = TColor = "LongInt", pos = (337,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                (subscriptn, resultdef = TColor = "LongInt", pos = (337,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                                   (loadn, resultdef = TForm = "TForm", pos = (337,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                      nil
                                                      symbol = FORM
                                                   )
                                                   field = FCOLOR
                                                )

                                             )
                                             (callparan, resultdef = <nil>, pos = (337,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                (subscriptn, resultdef = TFont = "TFont", pos = (337,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                                                   (loadn, resultdef = TToolButton = "TToolButton", pos = (337,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                      nil
                                                      symbol = TBT
                                                   )
                                                   field = FFONT
                                                )

                                             )
                                          )

                                       )
                                    )
                                 )

                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
         )
         (blockn, resultdef =  = "untyped", pos = (344,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (346,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TControl>;TColor);
                  methodpointer =
                  (loadn, resultdef = TForm = "TForm", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = FORM
                  )
                  vmt_entry =
                  (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                     (derefn, resultdef = TForm. = "<record type>", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                        (typeconvn, resultdef = <no type symbol> = "^TForm.<record type>", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, convtype = tc_equal, convnodeflags = []
                           (subscriptn, resultdef = Pointer = "^untyped", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TForm = "TForm", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = FORM
                              )
                              field = hidden_vptr$TOBJECT
                           )
                        )
                     )
                     field = f142
                  )
                  left =
                  (callparan, resultdef = TColor = "LongInt", pos = (346,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                     (ordconstn, resultdef = TColor = "LongInt", pos = (346,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        typedef = "LongInt"
                        value = -2147483617
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (346,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (loadn, resultdef = TForm = "TForm", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = FORM
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (347,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (347,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetColor(<TFont>;TColor);
                  methodpointer =
                  (subscriptn, resultdef = TFont = "TFont", pos = (347,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                     (loadn, resultdef = TForm = "TForm", pos = (347,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = FORM
                     )
                     field = FFONT
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (347,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (subscriptn, resultdef = TFont = "TFont", pos = (347,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
                        (loadn, resultdef = TForm = "TForm", pos = (347,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = FORM
                        )
                        field = FFONT
                     )

                  )
                  (callparan, resultdef = TColor = "LongInt", pos = (347,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                     (ordconstn, resultdef = TColor = "LongInt", pos = (347,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        typedef = "LongInt"
                        value = -2147483630
                     )

                  )
               )

            )
         )
         nil
      )

   )
)

*******************************************************************************
right before code generation
ApplyTheme(TForm);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA260
   (statementn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA1A0
      (asmn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA200
      )

   )
   (statementn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA140
      (asmn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA0E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA080
      (asmn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA020
      )

   )
   (statementn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9FC0
      (asmn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9F60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9DE0
      (blockn, resultdef =  = "untyped", pos = (289,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093CE4D60
         (statementn, resultdef =  = "untyped", pos = (348,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE4E80
            (ifn, resultdef =  = "untyped", pos = (291,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7DC0
               (calln, resultdef = Boolean = "Boolean", pos = (291,6), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD9D80
                  proc = IsDarkTheme:System.Boolean;
               )
               (blockn, resultdef =  = "untyped", pos = (292,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7D60
                  (statementn, resultdef =  = "untyped", pos = (293,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE52A0
                     (assignn, resultdef =  = "untyped", pos = (293,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5240
                        (loadn, resultdef = TMainMenu = "TMainMenu", pos = (293,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDCF60
                           nil
                           symbol = MM
                        )
                        (calln, resultdef = TMainMenu = "TMainMenu", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD9D20
                           proc = constructor Create(<TMainMenu>;<Class Of TMainMenu>;TComponent);
                           methodpointer =
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMainMenu", pos = (293,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD9CC0
                              (typen, resultdef = TMainMenu = "TMainMenu", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD9C60
                              )
                           )
                           vmt_entry =
                           (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TMainMenu of object;Register>", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD9C00
                              (derefn, resultdef = TMainMenu. = "<record type>", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD9BA0
                                 (typeconvn, resultdef = <no type symbol> = "^TMainMenu.<record type>", pos = (293,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, optinfo = 0000000093CD9B40, convtype = tc_equal, convnodeflags = []
                                    (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMainMenu", pos = (293,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD9AE0
                                       (typen, resultdef = TMainMenu = "TMainMenu", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD9A80
                                       )
                                    )
                                 )
                              )
                              field = f54
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (293,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD9A20
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMainMenu", pos = (293,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD99C0
                                 (typen, resultdef = TMainMenu = "TMainMenu", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD9960
                                 )
                              )

                           )
                           (callparan, resultdef = TComponent = "TComponent", pos = (293,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD9900
                              (niln, resultdef = TComponent = "TComponent", pos = (293,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD98A0
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (293,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD9840
                              (pointerconstn, resultdef = Pointer = "^untyped", pos = (293,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD97E0
                                 value = $0000000000000001
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (294,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE4F40
                     (assignn, resultdef =  = "untyped", pos = (294,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE4EE0
                        (loadn, resultdef = TMenuItem = "TMenuItem", pos = (294,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDCFC0
                           nil
                           symbol = MI
                        )
                        (calln, resultdef = TMenuItem = "TMenuItem", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD9780
                           proc = constructor Create(<TMenuItem>;<Class Of TMenuItem>;TComponent);
                           methodpointer =
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMenuItem", pos = (294,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD9720
                              (typen, resultdef = TMenuItem = "TMenuItem", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD96C0
                              )
                           )
                           vmt_entry =
                           (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TMenuItem of object;Register>", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD9660
                              (derefn, resultdef = TMenuItem. = "<record type>", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD9600
                                 (typeconvn, resultdef = <no type symbol> = "^TMenuItem.<record type>", pos = (294,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, optinfo = 0000000093CD95A0, convtype = tc_equal, convnodeflags = []
                                    (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMenuItem", pos = (294,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD9540
                                       (typen, resultdef = TMenuItem = "TMenuItem", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD94E0
                                       )
                                    )
                                 )
                              )
                              field = f54
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (294,32), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD9480
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TMenuItem", pos = (294,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD9420
                                 (typen, resultdef = TMenuItem = "TMenuItem", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD93C0
                                 )
                              )

                           )
                           (callparan, resultdef = TComponent = "TComponent", pos = (294,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD9360
                              (niln, resultdef = TComponent = "TComponent", pos = (294,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD9300
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (294,32), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD92A0
                              (pointerconstn, resultdef = Pointer = "^untyped", pos = (294,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD9240
                                 value = $0000000000000001
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (295,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5000
                     (assignn, resultdef =  = "untyped", pos = (295,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE4FA0
                        (loadn, resultdef = TToolBar = "TToolBar", pos = (295,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDD020
                           nil
                           symbol = TB
                        )
                        (calln, resultdef = TToolBar = "TToolBar", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD91E0
                           proc = constructor Create(<TToolBar>;<Class Of TToolBar>;TComponent);
                           methodpointer =
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (295,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD9180
                              (typen, resultdef = TToolBar = "TToolBar", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD9120
                              )
                           )
                           vmt_entry =
                           (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TToolBar of object;Register>", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD90C0
                              (derefn, resultdef = TToolBar. = "<record type>", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD9060
                                 (typeconvn, resultdef = <no type symbol> = "^TToolBar.<record type>", pos = (295,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, optinfo = 0000000093CD9000, convtype = tc_equal, convnodeflags = []
                                    (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (295,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD8FA0
                                       (typen, resultdef = TToolBar = "TToolBar", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD8F40
                                       )
                                    )
                                 )
                              )
                              field = f54
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (295,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD8EE0
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (295,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD8E80
                                 (typen, resultdef = TToolBar = "TToolBar", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD8E20
                                 )
                              )

                           )
                           (callparan, resultdef = TComponent = "TComponent", pos = (295,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD8DC0
                              (niln, resultdef = TComponent = "TComponent", pos = (295,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD8D60
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (295,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD8D00
                              (pointerconstn, resultdef = Pointer = "^untyped", pos = (295,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD8CA0
                                 value = $0000000000000001
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (296,35), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE50C0
                     (assignn, resultdef =  = "untyped", pos = (296,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5060
                        (loadn, resultdef = TToolButton = "TToolButton", pos = (296,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDD080
                           nil
                           symbol = TBT
                        )
                        (calln, resultdef = TToolButton = "TToolButton", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD8C40
                           proc = constructor Create(<TToolButton>;<Class Of TToolButton>;TComponent);
                           methodpointer =
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (296,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD8BE0
                              (typen, resultdef = TToolButton = "TToolButton", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD8B80
                              )
                           )
                           vmt_entry =
                           (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TToolButton of object;Register>", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD8B20
                              (derefn, resultdef = TToolButton. = "<record type>", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD8AC0
                                 (typeconvn, resultdef = <no type symbol> = "^TToolButton.<record type>", pos = (296,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, optinfo = 0000000093CD8A60, convtype = tc_equal, convnodeflags = []
                                    (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (296,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD8A00
                                       (typen, resultdef = TToolButton = "TToolButton", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD89A0
                                       )
                                    )
                                 )
                              )
                              field = f54
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (296,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD8940
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolButton", pos = (296,12), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD88E0
                                 (typen, resultdef = TToolButton = "TToolButton", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD8880
                                 )
                              )

                           )
                           (callparan, resultdef = TComponent = "TComponent", pos = (296,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD8820
                              (niln, resultdef = TComponent = "TComponent", pos = (296,34), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD87C0
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (296,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD8760
                              (pointerconstn, resultdef = Pointer = "^untyped", pos = (296,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD8700
                                 value = $0000000000000001
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (297,28), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE51E0
                     (calln, resultdef =  = "untyped", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CE5180
                        proc = SetColor(<TControl>;TColor);
                        methodpointer =
                        (loadn, resultdef = TForm = "TForm", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD1A0
                           nil
                           symbol = FORM
                        )
                        vmt_entry =
                        (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD86A0
                           (derefn, resultdef = TForm. = "<record type>", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD8640
                              (typeconvn, resultdef = <no type symbol> = "^TForm.<record type>", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, optinfo = 0000000093CD85E0, convtype = tc_equal, convnodeflags = []
                                 (subscriptn, resultdef = Pointer = "^untyped", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CD8580
                                    (loadn, resultdef = TForm = "TForm", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD140
                                       nil
                                       symbol = FORM
                                    )
                                    field = hidden_vptr$TOBJECT
                                 )
                              )
                           )
                           field = f142
                        )
                        left =
                        (callparan, resultdef = TColor = "LongInt", pos = (297,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD8520
                           (ordconstn, resultdef = TColor = "LongInt", pos = (297,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD84C0
                              typedef = "LongInt"
                              value = 2105376
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (297,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD8460
                           (loadn, resultdef = TForm = "TForm", pos = (297,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD0E0
                              nil
                              symbol = FORM
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (298,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5120
                     (calln, resultdef =  = "untyped", pos = (298,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CE7D00
                        proc = SetColor(<TFont>;TColor);
                        methodpointer =
                        (subscriptn, resultdef = TFont = "TFont", pos = (298,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD8400
                           (loadn, resultdef = TForm = "TForm", pos = (298,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD260
                              nil
                              symbol = FORM
                           )
                           field = FFONT
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (298,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD83A0
                           (subscriptn, resultdef = TFont = "TFont", pos = (298,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD8340
                              (loadn, resultdef = TForm = "TForm", pos = (298,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD200
                                 nil
                                 symbol = FORM
                              )
                              field = FFONT
                           )

                        )
                        (callparan, resultdef = TColor = "LongInt", pos = (298,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD82E0
                           (ordconstn, resultdef = TColor = "LongInt", pos = (298,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD8280
                              typedef = "LongInt"
                              value = 12632256
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (299,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7E80
                     (calln, resultdef =  = "untyped", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CE7E20
                        proc = SetColor(<TControl>;TColor);
                        methodpointer =
                        (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (299,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD8220
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDD3E0
                              nil
                              symbol = FORMMAIN
                           )
                           field = HEXACOLORPICKER1
                        )
                        vmt_entry =
                        (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6, optinfo = 0000000093CD81C0
                           (derefn, resultdef = THexaColorPicker. = "<record type>", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 6, optinfo = 0000000093CD8160
                              (typeconvn, resultdef = <no type symbol> = "^THexaColorPicker.<record type>", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 5, optinfo = 0000000093CD8100, convtype = tc_equal, convnodeflags = []
                                 (subscriptn, resultdef = Pointer = "^untyped", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093CD80A0
                                    (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (299,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD8040
                                       (loadn, resultdef = TFormMain = "TFormMain", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDD380
                                          nil
                                          symbol = FORMMAIN
                                       )
                                       field = HEXACOLORPICKER1
                                    )
                                    field = hidden_vptr$TOBJECT
                                 )
                              )
                           )
                           field = f142
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (299,37), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD7FE0
                           (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (299,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD7F80
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (299,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDD320
                                 nil
                                 symbol = FORMMAIN
                              )
                              field = HEXACOLORPICKER1
                           )

                        )
                        (callparan, resultdef = TColor = "LongInt", pos = (299,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD7F20
                           (subscriptn, resultdef = TColor = "LongInt", pos = (299,50), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD7EC0
                              (loadn, resultdef = TForm = "TForm", pos = (299,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD2C0
                                 nil
                                 symbol = FORM
                              )
                              field = FCOLOR
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (307,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE56C0
                     (blockn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE8000
                        (statementn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5B40
                           (tempcreaten, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE5C60
                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000091BB6C70
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7A60
                           (assignn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 255, optinfo = 0000000093CE7FA0
                              (temprefn, resultdef = LongInt = "LongInt", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CDA6E0
                                 temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6C70 flags = [ti_may_be_in_reg])
                              )
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (300,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD7E60, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (300,52), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD7E00
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (300,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD7DA0, convtype = tc_int_2_int, convnodeflags = []
                                       (calln, resultdef = LongInt = "LongInt", pos = (300,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD7D40
                                          proc = GetControlCount(<TWinControl>):System.LongInt;
                                          methodpointer =
                                          (subscriptn, resultdef = TPanel = "TPanel", pos = (300,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD7CE0
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (300,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDA620
                                                nil
                                                symbol = FORMMAIN
                                             )
                                             field = FLOWPANEL1
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (300,52), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD7C80
                                             (subscriptn, resultdef = TPanel = "TPanel", pos = (300,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD7C20
                                                (loadn, resultdef = TFormMain = "TFormMain", pos = (300,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDA680
                                                   nil
                                                   symbol = FORMMAIN
                                                )
                                                field = FLOWPANEL1
                                             )

                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (300,54), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD7BC0
                                       typedef = "Int64"
                                       value = 1
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5C00
                           (ifn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5480
                              (lten, resultdef = Boolean = "Boolean", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD7B60
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (300,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD7B00
                                    typedef = "LongInt"
                                    value = 0
                                 )
                                 (temprefn, resultdef = LongInt = "LongInt", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDAC20
                                    temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6C70 flags = [ti_may_be_in_reg])
                                 )
                              )
                              (blockn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDAB60
                                 (statementn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDABC0
                                    (assignn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CDAB00
                                       (loadn, resultdef = LongInt = "LongInt", pos = (300,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDA740
                                          nil
                                          symbol = I
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit,nf_internal], cmplx = 0, optinfo = 0000000093CD7AA0
                                          typedef = "LongInt"
                                          value = -1
                                       )
                                    )

                                 )
                                 (statementn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDAAA0
                                    (whilerepeatn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDAA40
                                       (gten, resultdef = Boolean = "Boolean", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD6720
                                          (loadn, resultdef = LongInt = "LongInt", pos = (300,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDA9E0
                                             nil
                                             symbol = I
                                          )
                                          (temprefn, resultdef = LongInt = "LongInt", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDA980
                                             temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6C70 flags = [ti_may_be_in_reg])
                                          )
                                       )
                                       (blockn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA920
                                          (statementn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA8C0
                                             (assignn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 2, optinfo = 0000000093CDA860
                                                (loadn, resultdef = LongInt = "LongInt", pos = (300,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDA800
                                                   nil
                                                   symbol = I
                                                )
                                                (inlinen, resultdef = LongInt = "LongInt", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD7A40, inlinenumber = in_succ_x
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (300,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDA7A0
                                                      nil
                                                      symbol = I
                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (306,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDDD40
                                             (ifn, resultdef =  = "untyped", pos = (302,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDDCE0
                                                (calln, resultdef = Boolean = "Boolean", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD79E0
                                                   proc = $fpc_do_is(TClass;TObject):System.Boolean;
                                                   left =
                                                   (callparan, resultdef = TObject = "TObject", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD7980
                                                      (typeconvn, resultdef = TObject = "TObject", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD7920, convtype = tc_equal, convnodeflags = []
                                                         (calln, resultdef = TControl = "TControl", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD78C0
                                                            proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                            methodpointer =
                                                            (subscriptn, resultdef = TPanel = "TPanel", pos = (302,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD7860
                                                               (loadn, resultdef = TFormMain = "TFormMain", pos = (302,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDDC80
                                                                  nil
                                                                  symbol = FORMMAIN
                                                               )
                                                               field = FLOWPANEL1
                                                            )
                                                            left =
                                                            (callparan, resultdef = <nil>, pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD7800
                                                               (subscriptn, resultdef = TPanel = "TPanel", pos = (302,29), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD77A0
                                                                  (loadn, resultdef = TFormMain = "TFormMain", pos = (302,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDDC20
                                                                     nil
                                                                     symbol = FORMMAIN
                                                                  )
                                                                  field = FLOWPANEL1
                                                               )

                                                            )
                                                            (callparan, resultdef = LongInt = "LongInt", pos = (302,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD7740
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (302,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDDBC0
                                                                  nil
                                                                  symbol = I
                                                               )

                                                            )
                                                         )
                                                      )

                                                   )
                                                   (callparan, resultdef = TClass = "Class Of TObject", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD76E0
                                                      (typeconvn, resultdef = TClass = "Class Of TObject", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD7680, convtype = tc_equal, convnodeflags = []
                                                         (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (302,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_ignore_for_wpo], cmplx = 1, optinfo = 0000000093CD7620
                                                            (typen, resultdef = TWinControl = "TWinControl", pos = (302,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD75C0
                                                            )
                                                         )
                                                      )

                                                   )
                                                )
                                                (blockn, resultdef =  = "untyped", pos = (303,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDDB60
                                                   (statementn, resultdef =  = "untyped", pos = (304,60), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDDB00
                                                      (calln, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CDDAA0
                                                         proc = SetColor(<TControl>;TColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TControl = "TControl", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDD560
                                                            temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
                                                         )
                                                         vmt_entry =
                                                         (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD71A0
                                                            (derefn, resultdef = TControl. = "<record type>", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD7140
                                                               (typeconvn, resultdef = <no type symbol> = "^TControl.<record type>", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, optinfo = 0000000093CD70E0, convtype = tc_equal, convnodeflags = []
                                                                  (subscriptn, resultdef = Pointer = "^untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD7080
                                                                     (temprefn, resultdef = TControl = "TControl", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDD500
                                                                        temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
                                                                     )
                                                                     field = hidden_vptr$TOBJECT
                                                                  )
                                                               )
                                                            )
                                                            field = f142
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7560
                                                            (statementn, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7500
                                                               (tempcreaten, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD74A0
                                                                  size = 8, temptypedef = TControl = "TControl", tempinfo = $0000000091BB6F70
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7440
                                                               (assignn, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD73E0
                                                                  (temprefn, resultdef = TControl = "TControl", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CDD6E0
                                                                     temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (calln, resultdef = TControl = "TControl", pos = (304,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD7380
                                                                     proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                                     methodpointer =
                                                                     (subscriptn, resultdef = TPanel = "TPanel", pos = (304,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD7320
                                                                        (loadn, resultdef = TFormMain = "TFormMain", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDD680
                                                                           nil
                                                                           symbol = FORMMAIN
                                                                        )
                                                                        field = FLOWPANEL1
                                                                     )
                                                                     left =
                                                                     (callparan, resultdef = <nil>, pos = (304,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD72C0
                                                                        (subscriptn, resultdef = TPanel = "TPanel", pos = (304,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD7260
                                                                           (loadn, resultdef = TFormMain = "TFormMain", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDD620
                                                                              nil
                                                                              symbol = FORMMAIN
                                                                           )
                                                                           field = FLOWPANEL1
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = LongInt = "LongInt", pos = (304,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD7200
                                                                        (loadn, resultdef = LongInt = "LongInt", pos = (304,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD5C0
                                                                           nil
                                                                           symbol = I
                                                                        )

                                                                     )
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD7020
                                                            (statementn, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD6FC0
                                                               (tempdeleten, resultdef =  = "untyped", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD6F60
                                                                  release_to_normal: FALSE, temptypedef = TControl = "TControl", temptype = tt_persistent, tempinfo = $0000000091BB6F70
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TColor = "LongInt", pos = (304,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD6F00
                                                            (subscriptn, resultdef = TColor = "LongInt", pos = (304,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD6EA0
                                                               (loadn, resultdef = TForm = "TForm", pos = (304,50), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD4A0
                                                                  nil
                                                                  symbol = FORM
                                                               )
                                                               field = FCOLOR
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (304,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD6E40
                                                            (temprefn, resultdef = TControl = "TControl", pos = (304,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDD440
                                                               temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6F70 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (305,70), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDDA40
                                                      (calln, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CDD9E0
                                                         proc = SetColor(<TFont>;TColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TFont = "TFont", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDD800
                                                            temptypedef = TFont = "TFont", (tempinfo = $0000000091B9E670 flags = [ti_may_be_in_reg])
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6DE0
                                                            (statementn, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6D80
                                                               (tempcreaten, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD6D20
                                                                  size = 8, temptypedef = TFont = "TFont", tempinfo = $0000000091B9E670
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6CC0
                                                               (assignn, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6C60
                                                                  (temprefn, resultdef = TFont = "TFont", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CDD980
                                                                     temptypedef = TFont = "TFont", (tempinfo = $0000000091B9E670 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (subscriptn, resultdef = TFont = "TFont", pos = (305,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD6C00
                                                                     (calln, resultdef = TControl = "TControl", pos = (305,40), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD6BA0
                                                                        proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                                        methodpointer =
                                                                        (subscriptn, resultdef = TPanel = "TPanel", pos = (305,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD6B40
                                                                           (loadn, resultdef = TFormMain = "TFormMain", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDD920
                                                                              nil
                                                                              symbol = FORMMAIN
                                                                           )
                                                                           field = FLOWPANEL1
                                                                        )
                                                                        left =
                                                                        (callparan, resultdef = <nil>, pos = (305,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD6AE0
                                                                           (subscriptn, resultdef = TPanel = "TPanel", pos = (305,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD6A80
                                                                              (loadn, resultdef = TFormMain = "TFormMain", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDD8C0
                                                                                 nil
                                                                                 symbol = FORMMAIN
                                                                              )
                                                                              field = FLOWPANEL1
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = LongInt = "LongInt", pos = (305,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD6A20
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (305,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD860
                                                                              nil
                                                                              symbol = I
                                                                           )

                                                                        )
                                                                     )
                                                                     field = FFONT
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD69C0
                                                            (statementn, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD6960
                                                               (tempdeleten, resultdef =  = "untyped", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD6900
                                                                  release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $0000000091B9E670
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TColor = "LongInt", pos = (305,70), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD68A0
                                                            (subscriptn, resultdef = TColor = "LongInt", pos = (305,70), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093CD6840
                                                               (subscriptn, resultdef = TFont = "TFont", pos = (305,64), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD67E0
                                                                  (loadn, resultdef = TForm = "TForm", pos = (305,55), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD740
                                                                     nil
                                                                     symbol = FORM
                                                                  )
                                                                  field = FFONT
                                                               )
                                                               field = FCOLOR
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (305,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD6780
                                                            (temprefn, resultdef = TFont = "TFont", pos = (305,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDD7A0
                                                               temptypedef = TFont = "TFont", (tempinfo = $0000000091B9E670 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                )
                                                nil
                                                nil
                                             )

                                          )
                                       )
                                       nil
                                       nil
                                    )

                                 )
                              )
                              nil
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE55A0
                           (tempdeleten, resultdef =  = "untyped", pos = (300,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE7CA0
                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000091BB6C70
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (315,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5360
                     (blockn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5540
                        (statementn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5600
                           (tempcreaten, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE7F40
                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000091BB6BF0
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE53C0
                           (assignn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 255, optinfo = 0000000093CE6980
                              (temprefn, resultdef = LongInt = "LongInt", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CDAD40
                                 temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6BF0 flags = [ti_may_be_in_reg])
                              )
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (308,58), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD66C0, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (308,58), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD6660
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (308,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD6600, convtype = tc_int_2_int, convnodeflags = []
                                       (calln, resultdef = LongInt = "LongInt", pos = (308,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD65A0
                                          proc = GetControlCount(<TWinControl>):System.LongInt;
                                          methodpointer =
                                          (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (308,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD6540
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (308,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDACE0
                                                nil
                                                symbol = FORMMAIN
                                             )
                                             field = ANCHORDOCKPANEL1
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (308,58), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD64E0
                                             (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (308,44), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD6480
                                                (loadn, resultdef = TFormMain = "TFormMain", pos = (308,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDAC80
                                                   nil
                                                   symbol = FORMMAIN
                                                )
                                                field = ANCHORDOCKPANEL1
                                             )

                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (308,60), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD6420
                                       typedef = "Int64"
                                       value = 1
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6800
                           (ifn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6860
                              (lten, resultdef = Boolean = "Boolean", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD63C0
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (308,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD6360
                                    typedef = "LongInt"
                                    value = 0
                                 )
                                 (temprefn, resultdef = LongInt = "LongInt", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDB280
                                    temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6BF0 flags = [ti_may_be_in_reg])
                                 )
                              )
                              (blockn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB220
                                 (statementn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB1C0
                                    (assignn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CDB160
                                       (loadn, resultdef = LongInt = "LongInt", pos = (308,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDADA0
                                          nil
                                          symbol = I
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit,nf_internal], cmplx = 0, optinfo = 0000000093CD6300
                                          typedef = "LongInt"
                                          value = -1
                                       )
                                    )

                                 )
                                 (statementn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB100
                                    (whilerepeatn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB040
                                       (gten, resultdef = Boolean = "Boolean", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD4F80
                                          (loadn, resultdef = LongInt = "LongInt", pos = (308,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDB0A0
                                             nil
                                             symbol = I
                                          )
                                          (temprefn, resultdef = LongInt = "LongInt", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDAFE0
                                             temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6BF0 flags = [ti_may_be_in_reg])
                                          )
                                       )
                                       (blockn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDAF80
                                          (statementn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDAF20
                                             (assignn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 2, optinfo = 0000000093CDAEC0
                                                (loadn, resultdef = LongInt = "LongInt", pos = (308,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDAE60
                                                   nil
                                                   symbol = I
                                                )
                                                (inlinen, resultdef = LongInt = "LongInt", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD62A0, inlinenumber = in_succ_x
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (308,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDAE00
                                                      nil
                                                      symbol = I
                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (314,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6E60
                                             (ifn, resultdef =  = "untyped", pos = (310,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6E00
                                                (calln, resultdef = Boolean = "Boolean", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD6240
                                                   proc = $fpc_do_is(TClass;TObject):System.Boolean;
                                                   left =
                                                   (callparan, resultdef = TObject = "TObject", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD61E0
                                                      (typeconvn, resultdef = TObject = "TObject", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD6180, convtype = tc_equal, convnodeflags = []
                                                         (calln, resultdef = TControl = "TControl", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD6120
                                                            proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                            methodpointer =
                                                            (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (310,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD60C0
                                                               (loadn, resultdef = TFormMain = "TFormMain", pos = (310,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CE74C0
                                                                  nil
                                                                  symbol = FORMMAIN
                                                               )
                                                               field = ANCHORDOCKPANEL1
                                                            )
                                                            left =
                                                            (callparan, resultdef = <nil>, pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD6060
                                                               (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (310,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD6000
                                                                  (loadn, resultdef = TFormMain = "TFormMain", pos = (310,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CE6F80
                                                                     nil
                                                                     symbol = FORMMAIN
                                                                  )
                                                                  field = ANCHORDOCKPANEL1
                                                               )

                                                            )
                                                            (callparan, resultdef = LongInt = "LongInt", pos = (310,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD5FA0
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (310,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE6F20
                                                                  nil
                                                                  symbol = I
                                                               )

                                                            )
                                                         )
                                                      )

                                                   )
                                                   (callparan, resultdef = TClass = "Class Of TObject", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD5F40
                                                      (typeconvn, resultdef = TClass = "Class Of TObject", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD5EE0, convtype = tc_equal, convnodeflags = []
                                                         (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (310,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_ignore_for_wpo], cmplx = 1, optinfo = 0000000093CD5E80
                                                            (typen, resultdef = TWinControl = "TWinControl", pos = (310,63), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD5E20
                                                            )
                                                         )
                                                      )

                                                   )
                                                )
                                                (blockn, resultdef =  = "untyped", pos = (311,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7040
                                                   (statementn, resultdef =  = "untyped", pos = (312,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6FE0
                                                      (calln, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CE7100
                                                         proc = SetColor(<TControl>;TColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TControl = "TControl", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDFA20
                                                            temptypedef = TControl = "TControl", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
                                                         )
                                                         vmt_entry =
                                                         (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD5A00
                                                            (derefn, resultdef = TControl. = "<record type>", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD59A0
                                                               (typeconvn, resultdef = <no type symbol> = "^TControl.<record type>", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, optinfo = 0000000093CD5940, convtype = tc_equal, convnodeflags = []
                                                                  (subscriptn, resultdef = Pointer = "^untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD58E0
                                                                     (temprefn, resultdef = TControl = "TControl", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDFA80
                                                                        temptypedef = TControl = "TControl", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
                                                                     )
                                                                     field = hidden_vptr$TOBJECT
                                                                  )
                                                               )
                                                            )
                                                            field = f142
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD5DC0
                                                            (statementn, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD5D60
                                                               (tempcreaten, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD5D00
                                                                  size = 8, temptypedef = TControl = "TControl", tempinfo = $0000000091B9E8F0
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD5CA0
                                                               (assignn, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD5C40
                                                                  (temprefn, resultdef = TControl = "TControl", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CE4640
                                                                     temptypedef = TControl = "TControl", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (calln, resultdef = TControl = "TControl", pos = (312,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD5BE0
                                                                     proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                                     methodpointer =
                                                                     (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (312,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD5B80
                                                                        (loadn, resultdef = TFormMain = "TFormMain", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDFC00
                                                                           nil
                                                                           symbol = FORMMAIN
                                                                        )
                                                                        field = ANCHORDOCKPANEL1
                                                                     )
                                                                     left =
                                                                     (callparan, resultdef = <nil>, pos = (312,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD5B20
                                                                        (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (312,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD5AC0
                                                                           (loadn, resultdef = TFormMain = "TFormMain", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CE46A0
                                                                              nil
                                                                              symbol = FORMMAIN
                                                                           )
                                                                           field = ANCHORDOCKPANEL1
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = LongInt = "LongInt", pos = (312,45), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD5A60
                                                                        (loadn, resultdef = LongInt = "LongInt", pos = (312,45), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDFB40
                                                                           nil
                                                                           symbol = I
                                                                        )

                                                                     )
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD5880
                                                            (statementn, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD5820
                                                               (tempdeleten, resultdef =  = "untyped", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD57C0
                                                                  release_to_normal: FALSE, temptypedef = TControl = "TControl", temptype = tt_persistent, tempinfo = $0000000091B9E8F0
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TColor = "LongInt", pos = (312,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD5760
                                                            (subscriptn, resultdef = TColor = "LongInt", pos = (312,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD5700
                                                               (loadn, resultdef = TForm = "TForm", pos = (312,56), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE4BE0
                                                                  nil
                                                                  symbol = FORM
                                                               )
                                                               field = FCOLOR
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (312,53), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD56A0
                                                            (temprefn, resultdef = TControl = "TControl", pos = (312,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE4CA0
                                                               temptypedef = TControl = "TControl", (tempinfo = $0000000091B9E8F0 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (313,76), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE70A0
                                                      (calln, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CE71C0
                                                         proc = SetColor(<TFont>;TColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TFont = "TFont", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE4580
                                                            temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6EF0 flags = [ti_may_be_in_reg])
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD5640
                                                            (statementn, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD55E0
                                                               (tempcreaten, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD5580
                                                                  size = 8, temptypedef = TFont = "TFont", tempinfo = $0000000091BB6EF0
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD5520
                                                               (assignn, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD54C0
                                                                  (temprefn, resultdef = TFont = "TFont", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CE7160
                                                                     temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6EF0 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (subscriptn, resultdef = TFont = "TFont", pos = (313,51), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD5460
                                                                     (calln, resultdef = TControl = "TControl", pos = (313,46), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD5400
                                                                        proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                                        methodpointer =
                                                                        (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (313,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD53A0
                                                                           (loadn, resultdef = TFormMain = "TFormMain", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CEEBA0
                                                                              nil
                                                                              symbol = FORMMAIN
                                                                           )
                                                                           field = ANCHORDOCKPANEL1
                                                                        )
                                                                        left =
                                                                        (callparan, resultdef = <nil>, pos = (313,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD5340
                                                                           (subscriptn, resultdef = TAnchorDockPanel = "TAnchorDockPanel", pos = (313,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD52E0
                                                                              (loadn, resultdef = TFormMain = "TFormMain", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDF900
                                                                                 nil
                                                                                 symbol = FORMMAIN
                                                                              )
                                                                              field = ANCHORDOCKPANEL1
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = LongInt = "LongInt", pos = (313,45), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD5280
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (313,45), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE4520
                                                                              nil
                                                                              symbol = I
                                                                           )

                                                                        )
                                                                     )
                                                                     field = FFONT
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD5220
                                                            (statementn, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD51C0
                                                               (tempdeleten, resultdef =  = "untyped", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD5160
                                                                  release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $0000000091BB6EF0
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TColor = "LongInt", pos = (313,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD5100
                                                            (subscriptn, resultdef = TColor = "LongInt", pos = (313,76), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093CD50A0
                                                               (subscriptn, resultdef = TFont = "TFont", pos = (313,70), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD5040
                                                                  (loadn, resultdef = TForm = "TForm", pos = (313,61), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE45E0
                                                                     nil
                                                                     symbol = FORM
                                                                  )
                                                                  field = FFONT
                                                               )
                                                               field = FCOLOR
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (313,58), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD4FE0
                                                            (temprefn, resultdef = TFont = "TFont", pos = (313,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDF9C0
                                                               temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6EF0 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                )
                                                nil
                                                nil
                                             )

                                          )
                                       )
                                       nil
                                       nil
                                    )

                                 )
                              )
                              nil
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE6560
                           (tempdeleten, resultdef =  = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE7820
                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000091BB6BF0
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (323,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5420
                     (blockn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5300
                        (statementn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7520
                           (tempcreaten, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CEF6E0
                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000091BB6B70
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6DA0
                           (assignn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 255, optinfo = 0000000093CEAAC0
                              (temprefn, resultdef = LongInt = "LongInt", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CDB3A0
                                 temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6B70 flags = [ti_may_be_in_reg])
                              )
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (316,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD4F20, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (316,48), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD4EC0
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (316,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD4E60, convtype = tc_int_2_int, convnodeflags = []
                                       (calln, resultdef = LongInt = "LongInt", pos = (316,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD4E00
                                          proc = GetControlCount(<TWinControl>):System.LongInt;
                                          methodpointer =
                                          (subscriptn, resultdef = TPanel = "TPanel", pos = (316,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD4DA0
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (316,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDB340
                                                nil
                                                symbol = FORMMAIN
                                             )
                                             field = PANEL2
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (316,48), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD4D40
                                             (subscriptn, resultdef = TPanel = "TPanel", pos = (316,34), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD4CE0
                                                (loadn, resultdef = TFormMain = "TFormMain", pos = (316,19), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDB2E0
                                                   nil
                                                   symbol = FORMMAIN
                                                )
                                                field = PANEL2
                                             )

                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (316,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD4C80
                                       typedef = "Int64"
                                       value = 1
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CEAB20
                           (ifn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5660
                              (lten, resultdef = Boolean = "Boolean", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD4C20
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (316,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD4BC0
                                    typedef = "LongInt"
                                    value = 0
                                 )
                                 (temprefn, resultdef = LongInt = "LongInt", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDB8E0
                                    temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6B70 flags = [ti_may_be_in_reg])
                                 )
                              )
                              (blockn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB880
                                 (statementn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB820
                                    (assignn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CDB7C0
                                       (loadn, resultdef = LongInt = "LongInt", pos = (316,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDB400
                                          nil
                                          symbol = I
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit,nf_internal], cmplx = 0, optinfo = 0000000093CD4B60
                                          typedef = "LongInt"
                                          value = -1
                                       )
                                    )

                                 )
                                 (statementn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB760
                                    (whilerepeatn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB700
                                       (gten, resultdef = Boolean = "Boolean", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD37E0
                                          (loadn, resultdef = LongInt = "LongInt", pos = (316,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDB6A0
                                             nil
                                             symbol = I
                                          )
                                          (temprefn, resultdef = LongInt = "LongInt", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDB640
                                             temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6B70 flags = [ti_may_be_in_reg])
                                          )
                                       )
                                       (blockn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB5E0
                                          (statementn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB520
                                             (assignn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 2, optinfo = 0000000093CDB580
                                                (loadn, resultdef = LongInt = "LongInt", pos = (316,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDB4C0
                                                   nil
                                                   symbol = I
                                                )
                                                (inlinen, resultdef = LongInt = "LongInt", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD4B00, inlinenumber = in_succ_x
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (316,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDB460
                                                      nil
                                                      symbol = I
                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (322,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE67A0
                                             (ifn, resultdef =  = "untyped", pos = (318,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE66E0
                                                (calln, resultdef = Boolean = "Boolean", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD4AA0
                                                   proc = $fpc_do_is(TClass;TObject):System.Boolean;
                                                   left =
                                                   (callparan, resultdef = TObject = "TObject", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD4A40
                                                      (typeconvn, resultdef = TObject = "TObject", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD49E0, convtype = tc_equal, convnodeflags = []
                                                         (calln, resultdef = TControl = "TControl", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD4980
                                                            proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                            methodpointer =
                                                            (subscriptn, resultdef = TPanel = "TPanel", pos = (318,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD4920
                                                               (loadn, resultdef = TFormMain = "TFormMain", pos = (318,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CE6680
                                                                  nil
                                                                  symbol = FORMMAIN
                                                               )
                                                               field = PANEL2
                                                            )
                                                            left =
                                                            (callparan, resultdef = <nil>, pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD48C0
                                                               (subscriptn, resultdef = TPanel = "TPanel", pos = (318,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD4860
                                                                  (loadn, resultdef = TFormMain = "TFormMain", pos = (318,10), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CE7760
                                                                     nil
                                                                     symbol = FORMMAIN
                                                                  )
                                                                  field = PANEL2
                                                               )

                                                            )
                                                            (callparan, resultdef = LongInt = "LongInt", pos = (318,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD4800
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (318,36), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE6740
                                                                  nil
                                                                  symbol = I
                                                               )

                                                            )
                                                         )
                                                      )

                                                   )
                                                   (callparan, resultdef = TClass = "Class Of TObject", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD47A0
                                                      (typeconvn, resultdef = TClass = "Class Of TObject", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD4740, convtype = tc_equal, convnodeflags = []
                                                         (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (318,38), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_ignore_for_wpo], cmplx = 1, optinfo = 0000000093CD46E0
                                                            (typen, resultdef = TWinControl = "TWinControl", pos = (318,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD4680
                                                            )
                                                         )
                                                      )

                                                   )
                                                )
                                                (blockn, resultdef =  = "untyped", pos = (319,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE77C0
                                                   (statementn, resultdef =  = "untyped", pos = (320,56), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6920
                                                      (calln, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CE68C0
                                                         proc = SetColor(<TControl>;TColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TControl = "TControl", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE75E0
                                                            temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6E70 flags = [ti_may_be_in_reg])
                                                         )
                                                         vmt_entry =
                                                         (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD4260
                                                            (derefn, resultdef = TControl. = "<record type>", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD4200
                                                               (typeconvn, resultdef = <no type symbol> = "^TControl.<record type>", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, optinfo = 0000000093CD41A0, convtype = tc_equal, convnodeflags = []
                                                                  (subscriptn, resultdef = Pointer = "^untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD4140
                                                                     (temprefn, resultdef = TControl = "TControl", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE6D40
                                                                        temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6E70 flags = [ti_may_be_in_reg])
                                                                     )
                                                                     field = hidden_vptr$TOBJECT
                                                                  )
                                                               )
                                                            )
                                                            field = f142
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD4620
                                                            (statementn, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD45C0
                                                               (tempcreaten, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD4560
                                                                  size = 8, temptypedef = TControl = "TControl", tempinfo = $0000000091BB6E70
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD4500
                                                               (assignn, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD44A0
                                                                  (temprefn, resultdef = TControl = "TControl", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CE6C80
                                                                     temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6E70 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (calln, resultdef = TControl = "TControl", pos = (320,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD4440
                                                                     proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                                     methodpointer =
                                                                     (subscriptn, resultdef = TPanel = "TPanel", pos = (320,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD43E0
                                                                        (loadn, resultdef = TFormMain = "TFormMain", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CE6C20
                                                                           nil
                                                                           symbol = FORMMAIN
                                                                        )
                                                                        field = PANEL2
                                                                     )
                                                                     left =
                                                                     (callparan, resultdef = <nil>, pos = (320,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD4380
                                                                        (subscriptn, resultdef = TPanel = "TPanel", pos = (320,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD4320
                                                                           (loadn, resultdef = TFormMain = "TFormMain", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CE6BC0
                                                                              nil
                                                                              symbol = FORMMAIN
                                                                           )
                                                                           field = PANEL2
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = LongInt = "LongInt", pos = (320,35), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD42C0
                                                                        (loadn, resultdef = LongInt = "LongInt", pos = (320,35), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE6B60
                                                                           nil
                                                                           symbol = I
                                                                        )

                                                                     )
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD40E0
                                                            (statementn, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD4080
                                                               (tempdeleten, resultdef =  = "untyped", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD4020
                                                                  release_to_normal: FALSE, temptypedef = TControl = "TControl", temptype = tt_persistent, tempinfo = $0000000091BB6E70
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TColor = "LongInt", pos = (320,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD3FC0
                                                            (subscriptn, resultdef = TColor = "LongInt", pos = (320,56), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD3F60
                                                               (loadn, resultdef = TForm = "TForm", pos = (320,46), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7640
                                                                  nil
                                                                  symbol = FORM
                                                               )
                                                               field = FCOLOR
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (320,43), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD3F00
                                                            (temprefn, resultdef = TControl = "TControl", pos = (320,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CEF740
                                                               temptypedef = TControl = "TControl", (tempinfo = $0000000091BB6E70 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (321,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7700
                                                      (calln, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 000000009348F060
                                                         proc = SetColor(<TFont>;TColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TFont = "TFont", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE6AA0
                                                            temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6DF0 flags = [ti_may_be_in_reg])
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD3EA0
                                                            (statementn, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD3E40
                                                               (tempcreaten, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD3DE0
                                                                  size = 8, temptypedef = TFont = "TFont", tempinfo = $0000000091BB6DF0
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD3D80
                                                               (assignn, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD3D20
                                                                  (temprefn, resultdef = TFont = "TFont", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 000000009348F480
                                                                     temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6DF0 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (subscriptn, resultdef = TFont = "TFont", pos = (321,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD3CC0
                                                                     (calln, resultdef = TControl = "TControl", pos = (321,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD3C60
                                                                        proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                                        methodpointer =
                                                                        (subscriptn, resultdef = TPanel = "TPanel", pos = (321,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD3C00
                                                                           (loadn, resultdef = TFormMain = "TFormMain", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CE6A40
                                                                              nil
                                                                              symbol = FORMMAIN
                                                                           )
                                                                           field = PANEL2
                                                                        )
                                                                        left =
                                                                        (callparan, resultdef = <nil>, pos = (321,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD3BA0
                                                                           (subscriptn, resultdef = TPanel = "TPanel", pos = (321,24), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD3B40
                                                                              (loadn, resultdef = TFormMain = "TFormMain", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CE69E0
                                                                                 nil
                                                                                 symbol = FORMMAIN
                                                                              )
                                                                              field = PANEL2
                                                                           )

                                                                        )
                                                                        (callparan, resultdef = LongInt = "LongInt", pos = (321,35), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD3AE0
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (321,35), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE6B00
                                                                              nil
                                                                              symbol = I
                                                                           )

                                                                        )
                                                                     )
                                                                     field = FFONT
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD3A80
                                                            (statementn, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD3A20
                                                               (tempdeleten, resultdef =  = "untyped", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD39C0
                                                                  release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $0000000091BB6DF0
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TColor = "LongInt", pos = (321,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD3960
                                                            (subscriptn, resultdef = TColor = "LongInt", pos = (321,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093CD3900
                                                               (subscriptn, resultdef = TFont = "TFont", pos = (321,60), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD38A0
                                                                  (loadn, resultdef = TForm = "TForm", pos = (321,51), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7580
                                                                     nil
                                                                     symbol = FORM
                                                                  )
                                                                  field = FFONT
                                                               )
                                                               field = FCOLOR
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (321,48), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD3840
                                                            (temprefn, resultdef = TFont = "TFont", pos = (321,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE6CE0
                                                               temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6DF0 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                )
                                                nil
                                                nil
                                             )

                                          )
                                       )
                                       nil
                                       nil
                                    )

                                 )
                              )
                              nil
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CDFDE0
                           (tempdeleten, resultdef =  = "untyped", pos = (316,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CDFF00
                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000091BB6B70
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (341,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE54E0
                     (blockn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDFEA0
                        (statementn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDFCC0
                           (tempcreaten, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE72E0
                              size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000091BB6AF0
                              [ti_may_be_in_reg]
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDCB40
                           (assignn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 255, optinfo = 0000000093CDCAE0
                              (temprefn, resultdef = LongInt = "LongInt", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CDBA00
                                 temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6AF0 flags = [ti_may_be_in_reg])
                              )
                              (typeconvn, resultdef = LongInt = "LongInt", pos = (324,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD3780, convtype = tc_int_2_int, convnodeflags = []
                                 (subn, resultdef = Int64 = "Int64", pos = (324,37), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD3720
                                    (typeconvn, resultdef = Int64 = "Int64", pos = (324,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD36C0, convtype = tc_int_2_int, convnodeflags = []
                                       (calln, resultdef = LongInt = "LongInt", pos = (324,23), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD3660
                                          proc = GetControlCount(<TWinControl>):System.LongInt;
                                          methodpointer =
                                          (loadn, resultdef = TForm = "TForm", pos = (324,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDB9A0
                                             nil
                                             symbol = FORM
                                          )
                                          left =
                                          (callparan, resultdef = <nil>, pos = (324,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD3600
                                             (loadn, resultdef = TForm = "TForm", pos = (324,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDB940
                                                nil
                                                symbol = FORM
                                             )

                                          )
                                       )
                                    )
                                    (ordconstn, resultdef = Int64 = "Int64", pos = (324,39), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD35A0
                                       typedef = "Int64"
                                       value = 1
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDCA80
                           (ifn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDCA20
                              (lten, resultdef = Boolean = "Boolean", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD3540
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (324,14), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD34E0
                                    typedef = "LongInt"
                                    value = 0
                                 )
                                 (temprefn, resultdef = LongInt = "LongInt", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDC8A0
                                    temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6AF0 flags = [ti_may_be_in_reg])
                                 )
                              )
                              (blockn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC900
                                 (statementn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC840
                                    (assignn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CDC7E0
                                       (loadn, resultdef = LongInt = "LongInt", pos = (324,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDBA60
                                          nil
                                          symbol = I
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit,nf_internal], cmplx = 0, optinfo = 0000000093CD3480
                                          typedef = "LongInt"
                                          value = -1
                                       )
                                    )

                                 )
                                 (statementn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC780
                                    (whilerepeatn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC720
                                       (gten, resultdef = Boolean = "Boolean", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD0780
                                          (loadn, resultdef = LongInt = "LongInt", pos = (324,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDC6C0
                                             nil
                                             symbol = I
                                          )
                                          (temprefn, resultdef = LongInt = "LongInt", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDC660
                                             temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6AF0 flags = [ti_may_be_in_reg])
                                          )
                                       )
                                       (blockn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC600
                                          (statementn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC5A0
                                             (assignn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 2, optinfo = 0000000093CDC540
                                                (loadn, resultdef = LongInt = "LongInt", pos = (324,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDBB20
                                                   nil
                                                   symbol = I
                                                )
                                                (inlinen, resultdef = LongInt = "LongInt", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD3420, inlinenumber = in_succ_x
                                                   (loadn, resultdef = LongInt = "LongInt", pos = (324,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDBAC0
                                                      nil
                                                      symbol = I
                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (340,10), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7EE0
                                             (ifn, resultdef =  = "untyped", pos = (326,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5AE0
                                                (calln, resultdef = Boolean = "Boolean", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD33C0
                                                   proc = $fpc_do_is(TClass;TObject):System.Boolean;
                                                   left =
                                                   (callparan, resultdef = TObject = "TObject", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD3360
                                                      (typeconvn, resultdef = TObject = "TObject", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD3300, convtype = tc_equal, convnodeflags = []
                                                         (calln, resultdef = TControl = "TControl", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD32A0
                                                            proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                            methodpointer =
                                                            (loadn, resultdef = TForm = "TForm", pos = (326,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE5A80
                                                               nil
                                                               symbol = FORM
                                                            )
                                                            left =
                                                            (callparan, resultdef = LongInt = "LongInt", pos = (326,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD3240
                                                               (loadn, resultdef = LongInt = "LongInt", pos = (326,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE5780
                                                                  nil
                                                                  symbol = I
                                                               )

                                                            )
                                                            (callparan, resultdef = <nil>, pos = (326,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD31E0
                                                               (loadn, resultdef = TForm = "TForm", pos = (326,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE5720
                                                                  nil
                                                                  symbol = FORM
                                                               )

                                                            )
                                                         )
                                                      )

                                                   )
                                                   (callparan, resultdef = TClass = "Class Of TObject", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD3180
                                                      (typeconvn, resultdef = TClass = "Class Of TObject", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD3120, convtype = tc_equal, convnodeflags = []
                                                         (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TWinControl", pos = (326,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_ignore_for_wpo], cmplx = 1, optinfo = 0000000093CD30C0
                                                            (typen, resultdef = TWinControl = "TWinControl", pos = (326,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD3060
                                                            )
                                                         )
                                                      )

                                                   )
                                                )
                                                (blockn, resultdef =  = "untyped", pos = (327,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5840
                                                   (statementn, resultdef =  = "untyped", pos = (328,62), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE57E0
                                                      (calln, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CE5900
                                                         proc = SetColor(<TControl>;TColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TWinControl = "TWinControl", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE6500
                                                            temptypedef = TWinControl = "TWinControl", (tempinfo = $0000000091BB6D70 flags = [ti_may_be_in_reg])
                                                         )
                                                         vmt_entry =
                                                         (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD2A00
                                                            (derefn, resultdef = TWinControl. = "<record type>", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD29A0
                                                               (typeconvn, resultdef = <no type symbol> = "^TWinControl.<record type>", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 1, optinfo = 0000000093CD2940, convtype = tc_equal, convnodeflags = []
                                                                  (subscriptn, resultdef = Pointer = "^untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD28E0
                                                                     (temprefn, resultdef = TWinControl = "TWinControl", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE76A0
                                                                        temptypedef = TWinControl = "TWinControl", (tempinfo = $0000000091BB6D70 flags = [ti_may_be_in_reg])
                                                                     )
                                                                     field = hidden_vptr$TOBJECT
                                                                  )
                                                               )
                                                            )
                                                            field = f142
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD3000
                                                            (statementn, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD2FA0
                                                               (tempcreaten, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD2F40
                                                                  size = 8, temptypedef = TWinControl = "TWinControl", tempinfo = $0000000091BB6D70
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD2EE0
                                                               (assignn, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD2E80
                                                                  (temprefn, resultdef = TWinControl = "TWinControl", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CE63E0
                                                                     temptypedef = TWinControl = "TWinControl", (tempinfo = $0000000091BB6D70 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (asn, resultdef = TWinControl = "TWinControl", pos = (328,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD2E20
                                                                     nil
                                                                     nil
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD2880
                                                            (statementn, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD2820
                                                               (tempdeleten, resultdef =  = "untyped", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD27C0
                                                                  release_to_normal: FALSE, temptypedef = TWinControl = "TWinControl", temptype = tt_persistent, tempinfo = $0000000091BB6D70
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TColor = "LongInt", pos = (328,62), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD2760
                                                            (subscriptn, resultdef = TColor = "LongInt", pos = (328,62), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD2700
                                                               (loadn, resultdef = TForm = "TForm", pos = (328,52), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE6620
                                                                  nil
                                                                  symbol = FORM
                                                               )
                                                               field = FCOLOR
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (328,49), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD26A0
                                                            (temprefn, resultdef = TWinControl = "TWinControl", pos = (328,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE65C0
                                                               temptypedef = TWinControl = "TWinControl", (tempinfo = $0000000091BB6D70 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (329,72), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE58A0
                                                      (calln, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CE5A20
                                                         proc = SetColor(<TFont>;TColor);
                                                         methodpointer =
                                                         (temprefn, resultdef = TFont = "TFont", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE6260
                                                            temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6CF0 flags = [ti_may_be_in_reg])
                                                         )
                                                         callinitblock =
                                                         (blockn, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD2640
                                                            (statementn, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD25E0
                                                               (tempcreaten, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD2580
                                                                  size = 8, temptypedef = TFont = "TFont", tempinfo = $0000000091BB6CF0
                                                                  [ti_may_be_in_reg]
                                                                  tempinit =
                                                                  nil
                                                               )

                                                            )
                                                            (statementn, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD2520
                                                               (assignn, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD24C0
                                                                  (temprefn, resultdef = TFont = "TFont", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CE62C0
                                                                     temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6CF0 flags = [ti_may_be_in_reg])
                                                                  )
                                                                  (subscriptn, resultdef = TFont = "TFont", pos = (329,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD2460
                                                                     (asn, resultdef = TWinControl = "TWinControl", pos = (329,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD2400
                                                                        nil
                                                                        nil
                                                                     )
                                                                     field = FFONT
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         callcleanupblock =
                                                         (blockn, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD1EC0
                                                            (statementn, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD1E60
                                                               (tempdeleten, resultdef =  = "untyped", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD1E00
                                                                  release_to_normal: FALSE, temptypedef = TFont = "TFont", temptype = tt_persistent, tempinfo = $0000000091BB6CF0
                                                               )

                                                            )
                                                         )
                                                         left =
                                                         (callparan, resultdef = TColor = "LongInt", pos = (329,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD1DA0
                                                            (subscriptn, resultdef = TColor = "LongInt", pos = (329,72), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093CD1D40
                                                               (subscriptn, resultdef = TFont = "TFont", pos = (329,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD1CE0
                                                                  (loadn, resultdef = TForm = "TForm", pos = (329,57), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE79A0
                                                                     nil
                                                                     symbol = FORM
                                                                  )
                                                                  field = FFONT
                                                               )
                                                               field = FCOLOR
                                                            )

                                                         )
                                                         (callparan, resultdef = <nil>, pos = (329,54), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD1C80
                                                            (temprefn, resultdef = TFont = "TFont", pos = (329,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CE6440
                                                               temptypedef = TFont = "TFont", (tempinfo = $0000000091BB6CF0 flags = [ti_may_be_in_reg])
                                                            )

                                                         )
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (331,45), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE59C0
                                                      (ifn, resultdef =  = "untyped", pos = (330,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5960
                                                         (calln, resultdef = Boolean = "Boolean", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD1C20
                                                            proc = $fpc_do_is(TClass;TObject):System.Boolean;
                                                            left =
                                                            (callparan, resultdef = TObject = "TObject", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD1BC0
                                                               (typeconvn, resultdef = TObject = "TObject", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD1B60, convtype = tc_equal, convnodeflags = []
                                                                  (calln, resultdef = TControl = "TControl", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD1B00
                                                                     proc = GetControl(<TWinControl>;const LongInt):Controls.TControl;
                                                                     methodpointer =
                                                                     (loadn, resultdef = TForm = "TForm", pos = (330,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7880
                                                                        nil
                                                                        symbol = FORM
                                                                     )
                                                                     left =
                                                                     (callparan, resultdef = LongInt = "LongInt", pos = (330,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD1AA0
                                                                        (loadn, resultdef = LongInt = "LongInt", pos = (330,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE61A0
                                                                           nil
                                                                           symbol = I
                                                                        )

                                                                     )
                                                                     (callparan, resultdef = <nil>, pos = (330,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD1A40
                                                                        (loadn, resultdef = TForm = "TForm", pos = (330,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE60E0
                                                                           nil
                                                                           symbol = FORM
                                                                        )

                                                                     )
                                                                  )
                                                               )

                                                            )
                                                            (callparan, resultdef = TClass = "Class Of TObject", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD19E0
                                                               (typeconvn, resultdef = TClass = "Class Of TObject", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD1980, convtype = tc_equal, convnodeflags = []
                                                                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TToolBar", pos = (330,29), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_ignore_for_wpo], cmplx = 1, optinfo = 0000000093CD1920
                                                                     (typen, resultdef = TToolBar = "TToolBar", pos = (330,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD18C0
                                                                     )
                                                                  )
                                                               )

                                                            )
                                                         )
                                                         (assignn, resultdef =  = "untyped", pos = (331,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6080
                                                            (loadn, resultdef = TToolBar = "TToolBar", pos = (331,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CE64A0
                                                               nil
                                                               symbol = TB
                                                            )
                                                            (asn, resultdef = TToolBar = "TToolBar", pos = (331,34), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD1860
                                                               nil
                                                               nil
                                                            )
                                                         )
                                                         nil
                                                         nil
                                                      )

                                                   )
                                                   (statementn, resultdef =  = "untyped", pos = (338,14), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7C40
                                                      (blockn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC4E0
                                                         (statementn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC480
                                                            (tempcreaten, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CDC3C0
                                                               size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000091BB6A70
                                                               [ti_may_be_in_reg]
                                                               tempinit =
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC420
                                                            (assignn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 255, optinfo = 0000000093CDC360
                                                               (temprefn, resultdef = LongInt = "LongInt", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 0000000093CDBC40
                                                                  temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6A70 flags = [ti_may_be_in_reg])
                                                               )
                                                               (typeconvn, resultdef = LongInt = "LongInt", pos = (333,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD1440, convtype = tc_int_2_int, convnodeflags = []
                                                                  (subn, resultdef = Int64 = "Int64", pos = (333,41), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD13E0
                                                                     (typeconvn, resultdef = Int64 = "Int64", pos = (333,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD1380, convtype = tc_int_2_int, convnodeflags = []
                                                                        (calln, resultdef = LongInt = "LongInt", pos = (333,27), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD1320
                                                                           proc = GetControlCount(<TWinControl>):System.LongInt;
                                                                           methodpointer =
                                                                           (loadn, resultdef = TToolBar = "TToolBar", pos = (333,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDBBE0
                                                                              nil
                                                                              symbol = TB
                                                                           )
                                                                           left =
                                                                           (callparan, resultdef = <nil>, pos = (333,41), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD12C0
                                                                              (loadn, resultdef = TToolBar = "TToolBar", pos = (333,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDBB80
                                                                                 nil
                                                                                 symbol = TB
                                                                              )

                                                                           )
                                                                        )
                                                                     )
                                                                     (ordconstn, resultdef = Int64 = "Int64", pos = (333,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD1260
                                                                        typedef = "Int64"
                                                                        value = 1
                                                                     )
                                                                  )
                                                               )
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC300
                                                            (ifn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC2A0
                                                               (lten, resultdef = Boolean = "Boolean", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD1200
                                                                  (ordconstn, resultdef = LongInt = "LongInt", pos = (333,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD11A0
                                                                     typedef = "LongInt"
                                                                     value = 0
                                                                  )
                                                                  (temprefn, resultdef = LongInt = "LongInt", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDC180
                                                                     temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6A70 flags = [ti_may_be_in_reg])
                                                                  )
                                                               )
                                                               (blockn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC120
                                                                  (statementn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC0C0
                                                                     (assignn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CDC060
                                                                        (loadn, resultdef = LongInt = "LongInt", pos = (333,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDBCA0
                                                                           nil
                                                                           symbol = J
                                                                        )
                                                                        (ordconstn, resultdef = LongInt = "LongInt", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit,nf_internal], cmplx = 0, optinfo = 0000000093CD1140
                                                                           typedef = "LongInt"
                                                                           value = -1
                                                                        )
                                                                     )

                                                                  )
                                                                  (statementn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC000
                                                                     (whilerepeatn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDBFA0
                                                                        (gten, resultdef = Boolean = "Boolean", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD07E0
                                                                           (loadn, resultdef = LongInt = "LongInt", pos = (333,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDBEE0
                                                                              nil
                                                                              symbol = J
                                                                           )
                                                                           (temprefn, resultdef = LongInt = "LongInt", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093CDBF40
                                                                              temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6A70 flags = [ti_may_be_in_reg])
                                                                           )
                                                                        )
                                                                        (blockn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDBE80
                                                                           (statementn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDBE20
                                                                              (assignn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_internal], cmplx = 2, optinfo = 0000000093CDBDC0
                                                                                 (loadn, resultdef = LongInt = "LongInt", pos = (333,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDBD60
                                                                                    nil
                                                                                    symbol = J
                                                                                 )
                                                                                 (inlinen, resultdef = LongInt = "LongInt", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_internal], cmplx = 1, optinfo = 0000000093CD10E0, inlinenumber = in_succ_x
                                                                                    (loadn, resultdef = LongInt = "LongInt", pos = (333,15), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDBD00
                                                                                       nil
                                                                                       symbol = J
                                                                                    )
                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (335,49), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5BA0
                                                                              (assignn, resultdef =  = "untyped", pos = (335,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5FC0
                                                                                 (loadn, resultdef = TToolButton = "TToolButton", pos = (335,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CE7AC0
                                                                                    nil
                                                                                    symbol = TBT
                                                                                 )
                                                                                 (asn, resultdef = TToolButton = "TToolButton", pos = (335,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD1080
                                                                                    nil
                                                                                    nil
                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (336,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5EA0
                                                                              (calln, resultdef =  = "untyped", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CE5E40
                                                                                 proc = SetColor(<TControl>;TColor);
                                                                                 methodpointer =
                                                                                 (loadn, resultdef = TToolButton = "TToolButton", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE5D80
                                                                                    nil
                                                                                    symbol = TBT
                                                                                 )
                                                                                 vmt_entry =
                                                                                 (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD0C60
                                                                                    (derefn, resultdef = TToolButton. = "<record type>", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD0C00
                                                                                       (typeconvn, resultdef = <no type symbol> = "^TToolButton.<record type>", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, optinfo = 0000000093CD0BA0, convtype = tc_equal, convnodeflags = []
                                                                                          (subscriptn, resultdef = Pointer = "^untyped", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CD0B40
                                                                                             (loadn, resultdef = TToolButton = "TToolButton", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7B80
                                                                                                nil
                                                                                                symbol = TBT
                                                                                             )
                                                                                             field = hidden_vptr$TOBJECT
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                    field = f142
                                                                                 )
                                                                                 left =
                                                                                 (callparan, resultdef = TColor = "LongInt", pos = (336,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD0AE0
                                                                                    (subscriptn, resultdef = TColor = "LongInt", pos = (336,36), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD0A80
                                                                                       (loadn, resultdef = TForm = "TForm", pos = (336,26), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE5F60
                                                                                          nil
                                                                                          symbol = FORM
                                                                                       )
                                                                                       field = FCOLOR
                                                                                    )

                                                                                 )
                                                                                 (callparan, resultdef = <nil>, pos = (336,23), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD0A20
                                                                                    (loadn, resultdef = TToolButton = "TToolButton", pos = (336,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE5F00
                                                                                       nil
                                                                                       symbol = TBT
                                                                                    )

                                                                                 )
                                                                              )

                                                                           )
                                                                           (statementn, resultdef =  = "untyped", pos = (337,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7BE0
                                                                              (calln, resultdef =  = "untyped", pos = (337,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CE5DE0
                                                                                 proc = SetColor(<TFont>;TColor);
                                                                                 methodpointer =
                                                                                 (subscriptn, resultdef = TFont = "TFont", pos = (337,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD09C0
                                                                                    (loadn, resultdef = TToolButton = "TToolButton", pos = (337,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE5D20
                                                                                       nil
                                                                                       symbol = TBT
                                                                                    )
                                                                                    field = FFONT
                                                                                 )
                                                                                 left =
                                                                                 (callparan, resultdef = TColor = "LongInt", pos = (337,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD0960
                                                                                    (subscriptn, resultdef = TColor = "LongInt", pos = (337,41), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD0900
                                                                                       (loadn, resultdef = TForm = "TForm", pos = (337,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE5CC0
                                                                                          nil
                                                                                          symbol = FORM
                                                                                       )
                                                                                       field = FCOLOR
                                                                                    )

                                                                                 )
                                                                                 (callparan, resultdef = <nil>, pos = (337,28), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD08A0
                                                                                    (subscriptn, resultdef = TFont = "TFont", pos = (337,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD0840
                                                                                       (loadn, resultdef = TToolButton = "TToolButton", pos = (337,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE7B20
                                                                                          nil
                                                                                          symbol = TBT
                                                                                       )
                                                                                       field = FFONT
                                                                                    )

                                                                                 )
                                                                              )

                                                                           )
                                                                        )
                                                                        nil
                                                                        nil
                                                                     )

                                                                  )
                                                               )
                                                               nil
                                                               nil
                                                            )

                                                         )
                                                         (statementn, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CDC240
                                                            (tempdeleten, resultdef =  = "untyped", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CDC1E0
                                                               release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000091BB6A70
                                                            )

                                                         )
                                                      )

                                                   )
                                                )
                                                nil
                                                nil
                                             )

                                          )
                                       )
                                       nil
                                       nil
                                    )

                                 )
                              )
                              nil
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CDC9C0
                           (tempdeleten, resultdef =  = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CDC960
                              release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000091BB6AF0
                           )

                        )
                     )

                  )
               )
               (blockn, resultdef =  = "untyped", pos = (344,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDCF00
                  (statementn, resultdef =  = "untyped", pos = (346,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDCEA0
                     (calln, resultdef =  = "untyped", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CDCE40
                        proc = SetColor(<TControl>;TColor);
                        methodpointer =
                        (loadn, resultdef = TForm = "TForm", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDCC60
                           nil
                           symbol = FORM
                        )
                        vmt_entry =
                        (subscriptn, resultdef = <no type symbol> = "<address of procedure(TColor) of object;Register>", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD0720
                           (derefn, resultdef = TForm. = "<record type>", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD06C0
                              (typeconvn, resultdef = <no type symbol> = "^TForm.<record type>", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, optinfo = 0000000093CD0660, convtype = tc_equal, convnodeflags = []
                                 (subscriptn, resultdef = Pointer = "^untyped", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CD0600
                                    (loadn, resultdef = TForm = "TForm", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDCC00
                                       nil
                                       symbol = FORM
                                    )
                                    field = hidden_vptr$TOBJECT
                                 )
                              )
                           )
                           field = f142
                        )
                        left =
                        (callparan, resultdef = TColor = "LongInt", pos = (346,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD05A0
                           (ordconstn, resultdef = TColor = "LongInt", pos = (346,25), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD0540
                              typedef = "LongInt"
                              value = -2147483617
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (346,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD04E0
                           (loadn, resultdef = TForm = "TForm", pos = (346,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDCBA0
                              nil
                              symbol = FORM
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (347,33), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDCDE0
                     (calln, resultdef =  = "untyped", pos = (347,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CDCD80
                        proc = SetColor(<TFont>;TColor);
                        methodpointer =
                        (subscriptn, resultdef = TFont = "TFont", pos = (347,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD0480
                           (loadn, resultdef = TForm = "TForm", pos = (347,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDCD20
                              nil
                              symbol = FORM
                           )
                           field = FFONT
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (347,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD0420
                           (subscriptn, resultdef = TFont = "TFont", pos = (347,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CD03C0
                              (loadn, resultdef = TForm = "TForm", pos = (347,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDCCC0
                                 nil
                                 symbol = FORM
                              )
                              field = FFONT
                           )

                        )
                        (callparan, resultdef = TColor = "LongInt", pos = (347,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD0360
                           (ordconstn, resultdef = TColor = "LongInt", pos = (347,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD0300
                              typedef = "LongInt"
                              value = -2147483630
                           )

                        )
                     )

                  )
               )
               nil
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD02A0
      (asmn, resultdef =  = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD0240
      )

   )
   (statementn, resultdef =  = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD01E0
      (finalizetempsn, resultdef =  = "untyped", pos = (349,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD0180
      )

   )
)

*******************************************************************************
after parsing
IsDarkTheme:System.Boolean;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (359,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (359,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = TRegistry = "TRegistry", pos = (359,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = REG
         )
         (calln, resultdef = TRegistry = "TRegistry", pos = (359,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            proc = constructor Create(<TRegistry>;<Class Of TRegistry>;LongWord);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TRegistry", pos = (359,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (typen, resultdef = TRegistry = "TRegistry", pos = (359,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )
            )
            left =
            (callparan, resultdef = LongWord = "DWord", pos = (359,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (ordconstn, resultdef = LongWord = "DWord", pos = (359,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  typedef = "DWord"
                  value = 131097
               )

            )
            (callparan, resultdef = <nil>, pos = (359,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (359,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
            (callparan, resultdef = <nil>, pos = (359,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (359,36), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (376,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (tryfinallyn, resultdef =  = "untyped", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (blockn, resultdef =  = "untyped", pos = (374,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (361,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetRootKey(<TRegistry>;QWord);
                  methodpointer =
                  (loadn, resultdef = TRegistry = "TRegistry", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = REG
                  )
                  left =
                  (callparan, resultdef = QWord = "QWord", pos = (361,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (ordconstn, resultdef = QWord = "QWord", pos = (361,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "QWord"
                        value = 18446744071562067969
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (361,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (361,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (373,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (ifn, resultdef =  = "untyped", pos = (362,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (calln, resultdef = Boolean = "Boolean", pos = (362,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     proc = OpenKeyReadOnly(<TRegistry>;const AnsiString):System.Boolean;
                     methodpointer =
                     (loadn, resultdef = TRegistry = "TRegistry", pos = (362,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = REG
                     )
                     left =
                     (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (362,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (362,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           value = "Software\Microsoft\Windows\CurrentVersion\Themes\Personalize"
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (362,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (362,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                  )
                  (blockn, resultdef =  = "untyped", pos = (363,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (statementn, resultdef = <nil>, pos = (370,24), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (ifn, resultdef =  = "untyped", pos = (364,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (calln, resultdef = Boolean = "Boolean", pos = (364,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              proc = ValueExists(<TRegistry>;const AnsiString):System.Boolean;
                              methodpointer =
                              (loadn, resultdef = TRegistry = "TRegistry", pos = (364,10), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = REG
                              )
                              left =
                              (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (364,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (364,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    value = "AppsUseLightTheme"
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (364,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (nothingn, resultdef =  = "untyped", pos = (364,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )

                              )
                           )
                           (blockn, resultdef =  = "untyped", pos = (365,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (statementn, resultdef = <nil>, pos = (366,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (assignn, resultdef =  = "untyped", pos = (366,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (loadn, resultdef = LongInt = "LongInt", pos = (366,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                                       nil
                                       symbol = VALUE
                                    )
                                    (calln, resultdef = LongInt = "LongInt", pos = (366,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       proc = ReadInteger(<TRegistry>;const AnsiString):System.LongInt;
                                       methodpointer =
                                       (loadn, resultdef = TRegistry = "TRegistry", pos = (366,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          nil
                                          symbol = REG
                                       )
                                       left =
                                       (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             value = "AppsUseLightTheme"
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (366,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (nothingn, resultdef =  = "untyped", pos = (366,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          )

                                       )
                                    )
                                 )

                              )
                              (statementn, resultdef = <nil>, pos = (367,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (assignn, resultdef =  = "untyped", pos = (367,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    (typeconvn, resultdef = Boolean = "Boolean", pos = (367,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_absolute], convtype = tc_equal, convnodeflags = []
                                       (loadn, resultdef = Boolean = "Boolean", pos = (367,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                                          nil
                                          symbol = result
                                       )
                                    )
                                    (equaln, resultdef = Boolean = "Boolean", pos = (367,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (loadn, resultdef = LongInt = "LongInt", pos = (367,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          nil
                                          symbol = VALUE
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (367,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          typedef = "LongInt"
                                          value = 0
                                       )
                                    )
                                 )

                              )
                           )
                           (assignn, resultdef =  = "untyped", pos = (370,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (typeconvn, resultdef = Boolean = "Boolean", pos = (370,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_absolute], convtype = tc_equal, convnodeflags = []
                                 (loadn, resultdef = Boolean = "Boolean", pos = (370,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                                    nil
                                    symbol = result
                                 )
                              )
                              (ordconstn, resultdef = Boolean = "Boolean", pos = (370,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 typedef = "Boolean"
                                 value = 0
                              )
                           )
                           nil
                        )

                     )
                  )
                  (assignn, resultdef =  = "untyped", pos = (373,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (typeconvn, resultdef = Boolean = "Boolean", pos = (373,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_absolute], convtype = tc_equal, convnodeflags = []
                        (loadn, resultdef = Boolean = "Boolean", pos = (373,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                           nil
                           symbol = result
                        )
                     )
                     (ordconstn, resultdef = Boolean = "Boolean", pos = (373,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "Boolean"
                        value = 0
                     )
                  )
                  nil
               )

            )
         )
         (blockn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (375,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  proc = Free(<TObject>);
                  methodpointer =
                  (loadn, resultdef = TRegistry = "TRegistry", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = REG
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (375,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
         )
         nil
      )

   )
)

*******************************************************************************
after the firstpass
IsDarkTheme:System.Boolean;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (359,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (359,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (loadn, resultdef = TRegistry = "TRegistry", pos = (359,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
            nil
            symbol = REG
         )
         (calln, resultdef = TRegistry = "TRegistry", pos = (359,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            proc = constructor Create(<TRegistry>;<Class Of TRegistry>;LongWord);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TRegistry", pos = (359,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (typen, resultdef = TRegistry = "TRegistry", pos = (359,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )
            )
            left =
            (callparan, resultdef = <nil>, pos = (359,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TRegistry", pos = (359,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (typen, resultdef = TRegistry = "TRegistry", pos = (359,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )
               )

            )
            (callparan, resultdef = LongWord = "DWord", pos = (359,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
               (ordconstn, resultdef = LongWord = "DWord", pos = (359,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                  typedef = "DWord"
                  value = 131097
               )

            )
            (callparan, resultdef = <nil>, pos = (359,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
               (pointerconstn, resultdef = Pointer = "^untyped", pos = (359,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                  value = $0000000000000001
               )

            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (376,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tryfinallyn, resultdef =  = "untyped", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (blockn, resultdef =  = "untyped", pos = (374,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (361,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetRootKey(<TRegistry>;QWord);
                  methodpointer =
                  (loadn, resultdef = TRegistry = "TRegistry", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = REG
                  )
                  left =
                  (callparan, resultdef = QWord = "QWord", pos = (361,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                     (ordconstn, resultdef = QWord = "QWord", pos = (361,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        typedef = "QWord"
                        value = 18446744071562067969
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (361,17), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (loadn, resultdef = TRegistry = "TRegistry", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = REG
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (373,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (ifn, resultdef =  = "untyped", pos = (362,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (calln, resultdef = Boolean = "Boolean", pos = (362,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                     proc = OpenKeyReadOnly(<TRegistry>;const AnsiString):System.Boolean;
                     methodpointer =
                     (loadn, resultdef = TRegistry = "TRegistry", pos = (362,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = REG
                     )
                     left =
                     (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (362,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                        (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (362,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                           value = "Software\Microsoft\Windows\CurrentVersion\Themes\Personalize"
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (362,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                        (loadn, resultdef = TRegistry = "TRegistry", pos = (362,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = REG
                        )

                     )
                  )
                  (blockn, resultdef =  = "untyped", pos = (363,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (statementn, resultdef =  = "untyped", pos = (370,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (ifn, resultdef =  = "untyped", pos = (364,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (calln, resultdef = Boolean = "Boolean", pos = (364,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                              proc = ValueExists(<TRegistry>;const AnsiString):System.Boolean;
                              methodpointer =
                              (loadn, resultdef = TRegistry = "TRegistry", pos = (364,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = REG
                              )
                              left =
                              (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (364,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                 (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (364,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                    value = "AppsUseLightTheme"
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (364,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                 (loadn, resultdef = TRegistry = "TRegistry", pos = (364,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                    nil
                                    symbol = REG
                                 )

                              )
                           )
                           (blockn, resultdef =  = "untyped", pos = (365,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              (statementn, resultdef =  = "untyped", pos = (366,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                 (assignn, resultdef =  = "untyped", pos = (366,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                    (loadn, resultdef = LongInt = "LongInt", pos = (366,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                                       nil
                                       symbol = VALUE
                                    )
                                    (calln, resultdef = LongInt = "LongInt", pos = (366,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                                       proc = ReadInteger(<TRegistry>;const AnsiString):System.LongInt;
                                       methodpointer =
                                       (loadn, resultdef = TRegistry = "TRegistry", pos = (366,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                          nil
                                          symbol = REG
                                       )
                                       left =
                                       (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                          (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                             value = "AppsUseLightTheme"
                                          )

                                       )
                                       (callparan, resultdef = <nil>, pos = (366,54), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                                          (loadn, resultdef = TRegistry = "TRegistry", pos = (366,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                             nil
                                             symbol = REG
                                          )

                                       )
                                    )
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (367,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                                 (assignn, resultdef =  = "untyped", pos = (367,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                                    (typeconvn, resultdef = Boolean = "Boolean", pos = (367,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 0, convtype = tc_equal, convnodeflags = []
                                       (loadn, resultdef = Boolean = "Boolean", pos = (367,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                                          nil
                                          symbol = result
                                       )
                                    )
                                    (equaln, resultdef = Boolean = "Boolean", pos = (367,19), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 1
                                       (loadn, resultdef = LongInt = "LongInt", pos = (367,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                          nil
                                          symbol = VALUE
                                       )
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (367,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                          typedef = "LongInt"
                                          value = 0
                                       )
                                    )
                                 )

                              )
                           )
                           (assignn, resultdef =  = "untyped", pos = (370,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                              (typeconvn, resultdef = Boolean = "Boolean", pos = (370,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 0, convtype = tc_equal, convnodeflags = []
                                 (loadn, resultdef = Boolean = "Boolean", pos = (370,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                                    nil
                                    symbol = result
                                 )
                              )
                              (ordconstn, resultdef = Boolean = "Boolean", pos = (370,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                 typedef = "Boolean"
                                 value = 0
                              )
                           )
                           nil
                        )

                     )
                  )
                  (assignn, resultdef =  = "untyped", pos = (373,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                     (typeconvn, resultdef = Boolean = "Boolean", pos = (373,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 0, convtype = tc_equal, convnodeflags = []
                        (loadn, resultdef = Boolean = "Boolean", pos = (373,14), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                           nil
                           symbol = result
                        )
                     )
                     (ordconstn, resultdef = Boolean = "Boolean", pos = (373,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        typedef = "Boolean"
                        value = 0
                     )
                  )
                  nil
               )

            )
         )
         (calln, resultdef =  = "untyped", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            proc = $fin$00000155(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef =  = "^untyped", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
               (loadparentfpn, resultdef =  = "^untyped", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  nil
               )

            )
         )
         nil
      )

   )
)

*******************************************************************************
right before code generation
IsDarkTheme:System.Boolean;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD33C0
   (statementn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD3180
      (asmn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD3120
      )

   )
   (statementn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD30C0
      (asmn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD3060
      )

   )
   (statementn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD3360
      (asmn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD3300
      )

   )
   (statementn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD32A0
      (asmn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD31E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5720
      (blockn, resultdef =  = "untyped", pos = (358,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093CD3240
         (statementn, resultdef =  = "untyped", pos = (359,36), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5780
            (assignn, resultdef =  = "untyped", pos = (359,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5A80
               (loadn, resultdef = TRegistry = "TRegistry", pos = (359,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CE5840
                  nil
                  symbol = REG
               )
               (calln, resultdef = TRegistry = "TRegistry", pos = (359,19), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CE7C40
                  proc = constructor Create(<TRegistry>;<Class Of TRegistry>;LongWord);
                  methodpointer =
                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TRegistry", pos = (359,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CDC4E0
                     (typen, resultdef = TRegistry = "TRegistry", pos = (359,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CDC240
                     )
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (359,36), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CDC1E0
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TRegistry", pos = (359,10), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CDC300
                        (typen, resultdef = TRegistry = "TRegistry", pos = (359,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CDC2A0
                        )
                     )

                  )
                  (callparan, resultdef = LongWord = "DWord", pos = (359,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD1200
                     (ordconstn, resultdef = LongWord = "DWord", pos = (359,35), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CDC180
                        typedef = "DWord"
                        value = 131097
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (359,36), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD11A0
                     (pointerconstn, resultdef = Pointer = "^untyped", pos = (359,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CDC120
                        value = $0000000000000001
                     )

                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (376,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC000
            (tryfinallyn, resultdef =  = "untyped", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDBFA0
               (blockn, resultdef =  = "untyped", pos = (374,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD07E0
                  (statementn, resultdef =  = "untyped", pos = (361,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDBF40
                     (calln, resultdef =  = "untyped", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CDBEE0
                        proc = SetRootKey(<TRegistry>;QWord);
                        methodpointer =
                        (loadn, resultdef = TRegistry = "TRegistry", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDBE80
                           nil
                           symbol = REG
                        )
                        left =
                        (callparan, resultdef = QWord = "QWord", pos = (361,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CE7BE0
                           (ordconstn, resultdef = QWord = "QWord", pos = (361,37), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE5DE0
                              typedef = "QWord"
                              value = 18446744071562067969
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (361,17), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD08A0
                           (loadn, resultdef = TRegistry = "TRegistry", pos = (361,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD0840
                              nil
                              symbol = REG
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (373,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7B20
                     (ifn, resultdef =  = "untyped", pos = (362,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD0960
                        (calln, resultdef = Boolean = "Boolean", pos = (362,11), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD0900
                           proc = OpenKeyReadOnly(<TRegistry>;const AnsiString):System.Boolean;
                           methodpointer =
                           (loadn, resultdef = TRegistry = "TRegistry", pos = (362,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE5CC0
                              nil
                              symbol = REG
                           )
                           left =
                           (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (362,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD09C0
                              (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (362,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CE5D20
                                 value = "Software\Microsoft\Windows\CurrentVersion\Themes\Personalize"
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (362,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CE5EA0
                              (loadn, resultdef = TRegistry = "TRegistry", pos = (362,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE5E40
                                 nil
                                 symbol = REG
                              )

                           )
                        )
                        (blockn, resultdef =  = "untyped", pos = (363,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD0A20
                           (statementn, resultdef =  = "untyped", pos = (370,24), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5F00
                              (ifn, resultdef =  = "untyped", pos = (364,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD0AE0
                                 (calln, resultdef = Boolean = "Boolean", pos = (364,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD0A80
                                    proc = ValueExists(<TRegistry>;const AnsiString):System.Boolean;
                                    methodpointer =
                                    (loadn, resultdef = TRegistry = "TRegistry", pos = (364,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE5F60
                                       nil
                                       symbol = REG
                                    )
                                    left =
                                    (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (364,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD0C60
                                       (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (364,45), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD0C00
                                          value = "AppsUseLightTheme"
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (364,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD0BA0
                                       (loadn, resultdef = TRegistry = "TRegistry", pos = (364,10), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD0B40
                                          nil
                                          symbol = REG
                                       )

                                    )
                                 )
                                 (blockn, resultdef =  = "untyped", pos = (365,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7B80
                                    (statementn, resultdef =  = "untyped", pos = (366,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5D80
                                       (assignn, resultdef =  = "untyped", pos = (366,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5BA0
                                          (loadn, resultdef = LongInt = "LongInt", pos = (366,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CE5FC0
                                             nil
                                             symbol = VALUE
                                          )
                                          (calln, resultdef = LongInt = "LongInt", pos = (366,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CE7AC0
                                             proc = ReadInteger(<TRegistry>;const AnsiString):System.LongInt;
                                             methodpointer =
                                             (loadn, resultdef = TRegistry = "TRegistry", pos = (366,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD1080
                                                nil
                                                symbol = REG
                                             )
                                             left =
                                             (callparan, resultdef = AnsiString = "AnsiString(0)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD1020
                                                (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (366,53), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD0DE0
                                                   value = "AppsUseLightTheme"
                                                )

                                             )
                                             (callparan, resultdef = <nil>, pos = (366,54), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD0D80
                                                (loadn, resultdef = TRegistry = "TRegistry", pos = (366,18), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD0D20
                                                   nil
                                                   symbol = REG
                                                )

                                             )
                                          )
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (367,30), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093CD0CC0
                                       (assignn, resultdef =  = "untyped", pos = (367,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093CD0FC0
                                          (typeconvn, resultdef = Boolean = "Boolean", pos = (367,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 0, optinfo = 0000000093CD0F60, convtype = tc_equal, convnodeflags = []
                                             (loadn, resultdef = Boolean = "Boolean", pos = (367,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CD0F00
                                                nil
                                                symbol = result
                                             )
                                          )
                                          (equaln, resultdef = Boolean = "Boolean", pos = (367,19), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 1, optinfo = 0000000093CD0E40
                                             (loadn, resultdef = LongInt = "LongInt", pos = (367,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE6020
                                                nil
                                                symbol = VALUE
                                             )
                                             (ordconstn, resultdef = LongInt = "LongInt", pos = (367,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD0EA0
                                                typedef = "LongInt"
                                                value = 0
                                             )
                                          )
                                       )

                                    )
                                 )
                                 (assignn, resultdef =  = "untyped", pos = (370,9), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093CE8060
                                    (typeconvn, resultdef = Boolean = "Boolean", pos = (370,9), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 0, optinfo = 0000000093CE8120, convtype = tc_equal, convnodeflags = []
                                       (loadn, resultdef = Boolean = "Boolean", pos = (370,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDBE20
                                          nil
                                          symbol = result
                                       )
                                    )
                                    (ordconstn, resultdef = Boolean = "Boolean", pos = (370,19), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CDBDC0
                                       typedef = "Boolean"
                                       value = 0
                                    )
                                 )
                                 nil
                              )

                           )
                        )
                        (assignn, resultdef =  = "untyped", pos = (373,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093CDBD60
                           (typeconvn, resultdef = Boolean = "Boolean", pos = (373,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_absolute], cmplx = 0, optinfo = 0000000093CD10E0, convtype = tc_equal, convnodeflags = []
                              (loadn, resultdef = Boolean = "Boolean", pos = (373,14), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDBD00
                                 nil
                                 symbol = result
                              )
                           )
                           (ordconstn, resultdef = Boolean = "Boolean", pos = (373,17), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CDC0C0
                              typedef = "Boolean"
                              value = 0
                           )
                        )
                        nil
                     )

                  )
               )
               (calln, resultdef =  = "untyped", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC060
                  proc = $fin$00000155(<^untyped>) is nested; Register;
                  left =
                  (callparan, resultdef =  = "^untyped", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CDBCA0
                     (loadparentfpn, resultdef =  = "^untyped", pos = (360,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD1140
                        nil
                     )

                  )
               )
               nil
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (377,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC420
      (asmn, resultdef =  = "untyped", pos = (377,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDC360
      )

   )
   (statementn, resultdef =  = "untyped", pos = (377,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDBC40
      (finalizetempsn, resultdef =  = "untyped", pos = (377,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD1440
      )

   )
)

*******************************************************************************
after the firstpass
$fin$00000155 is nested; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Free(<TObject>);
         methodpointer =
         (loadn, resultdef = TRegistry = "TRegistry", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = REG
         )
         left =
         (callparan, resultdef = <nil>, pos = (375,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TRegistry = "TRegistry", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = REG
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
$fin$00000155 is nested; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB700
   (statementn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD37E0
      (asmn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB640
      )

   )
   (statementn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB6A0
      (asmn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDB5E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE67A0
      (asmn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE66E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD4AA0
      (asmn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD47A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD4740
      (blockn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093CD46E0
         (statementn, resultdef =  = "untyped", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD4680
            (calln, resultdef =  = "untyped", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD4A40
               proc = Free(<TObject>);
               methodpointer =
               (loadn, resultdef = TRegistry = "TRegistry", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD49E0
                  nil
                  symbol = REG
               )
               left =
               (callparan, resultdef = <nil>, pos = (375,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD4980
                  (loadn, resultdef = TRegistry = "TRegistry", pos = (375,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD4800
                     nil
                     symbol = REG
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (376,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE6740
      (asmn, resultdef =  = "untyped", pos = (376,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD48C0
      )

   )
)

*******************************************************************************
after parsing
ToolButtonFillClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (393,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (393,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (393,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (393,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "<enumeration type>"
            value = 11
         )
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonFillClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 2
   (statementn, resultdef =  = "untyped", pos = (393,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
      (assignn, resultdef =  = "untyped", pos = (393,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = TToolType = "<enumeration type>", pos = (393,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = HCTOOL
         )
         (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (393,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "<enumeration type>"
            value = 11
         )
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonFillClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5E40
   (statementn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD09C0
      (asmn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5D20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD0240
      (asmn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5CC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD0A20
      (asmn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5F00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD0AE0
      (asmn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD0A80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD0BA0
      (blockn, resultdef =  = "untyped", pos = (392,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 2, optinfo = 0000000093CD1440
         (statementn, resultdef =  = "untyped", pos = (393,22), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093CDC420
            (assignn, resultdef =  = "untyped", pos = (393,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093CDC360
               (loadn, resultdef = TToolType = "<enumeration type>", pos = (393,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093CDC000
                  nil
                  symbol = HCTOOL
               )
               (ordconstn, resultdef = TToolType = "<enumeration type>", pos = (393,13), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD0B40
                  typedef = "<enumeration type>"
                  value = 11
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD0C60
      (asmn, resultdef =  = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD0C00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5F60
      (finalizetempsn, resultdef =  = "untyped", pos = (394,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7B80
      )

   )
)

*******************************************************************************
after parsing
ToolButtonNewClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (403,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (403,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (403,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = DIALOGFORM
         )
         (calln, resultdef = TFormNewImage = "TFormNewImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (403,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )
            )
            left =
            (callparan, resultdef = TComponent = "TComponent", pos = (403,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (niln, resultdef = TComponent = "TComponent", pos = (403,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
            (callparan, resultdef = <nil>, pos = (403,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (403,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
            (callparan, resultdef = <nil>, pos = (403,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (403,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (427,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (tryfinallyn, resultdef =  = "untyped", pos = (404,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (blockn, resultdef = LongInt = "LongInt", pos = (407,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (405,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef = LongInt = "LongInt", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  proc = ShowModal(<TCustomForm>):System.LongInt;
                  methodpointer =
                  (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = DIALOGFORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (405,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (405,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
         )
         (blockn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (423,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (ifn, resultdef =  = "untyped", pos = (408,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (equaln, resultdef = Boolean = "Boolean", pos = (408,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (408,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (408,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           nil
                           symbol = DIALOGFORM
                        )
                        field = FMODALRESULT
                     )
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (408,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "LongInt"
                        value = 1
                     )
                  )
                  (blockn, resultdef =  = "untyped", pos = (409,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (statementn, resultdef = <nil>, pos = (410,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (assignn, resultdef =  = "untyped", pos = (410,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (410,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                              nil
                              symbol = NEWPAGE
                           )
                           (calln, resultdef = TTabSheet = "TTabSheet", pos = (410,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              proc = AddTabSheet(<TPageControl>):ComCtrls.TTabSheet;
                              methodpointer =
                              (subscriptn, resultdef = TPageControl = "TPageControl", pos = (410,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (410,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    nil
                                    symbol = self
                                 )
                                 field = PAGECONTROL1
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (410,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (nothingn, resultdef =  = "untyped", pos = (410,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (411,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (assignn, resultdef =  = "untyped", pos = (411,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (411,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                              nil
                              symbol = NEWDOC
                           )
                           (calln, resultdef = TFormDocument = "TFormDocument", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                              methodpointer =
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (411,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (typen, resultdef = TFormDocument = "TFormDocument", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )
                              )
                              left =
                              (callparan, resultdef = TComponent = "TComponent", pos = (411,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (typeconvn, resultdef = TComponent = "TComponent", pos = (411,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_equal, convnodeflags = []
                                    (loadn, resultdef = TApplication = "TApplication", pos = (411,49), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       nil
                                       symbol = APPLICATION
                                    )
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (411,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (nothingn, resultdef =  = "untyped", pos = (411,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (411,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (nothingn, resultdef =  = "untyped", pos = (411,50), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (412,52), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (assignn, resultdef =  = "untyped", pos = (412,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (412,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (412,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = NEWDOC
                              )
                              field = IMAGEWIDTH
                           )
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (412,38), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (412,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = DIALOGFORM
                              )
                              field = NEWIMAGEWIDTH
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (413,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (assignn, resultdef =  = "untyped", pos = (413,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (413,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (413,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = NEWDOC
                              )
                              field = IMAGEHEIGHT
                           )
                           (subscriptn, resultdef = LongInt = "LongInt", pos = (413,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (413,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = DIALOGFORM
                              )
                              field = NEWIMAGEHEIGHT
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (414,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (calln, resultdef =  = "untyped", pos = (414,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                           proc = SetText(<TControl>;const TTranslateString);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (414,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = TTranslateString = "AnsiString(0)", pos = (414,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (414,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 value = "NewImage"
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (414,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (nothingn, resultdef =  = "untyped", pos = (414,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (415,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (assignn, resultdef =  = "untyped", pos = (415,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = Boolean = "Boolean", pos = (415,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (415,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = NEWDOC
                              )
                              field = EMPTYIMAGE
                           )
                           (ordconstn, resultdef = Boolean = "Boolean", pos = (415,28), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              typedef = "Boolean"
                              value = 1
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (416,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (calln, resultdef =  = "untyped", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                           proc = SetParent(<TControl>;TWinControl);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = TWinControl = "TWinControl", pos = (416,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (typeconvn, resultdef = TWinControl = "TWinControl", pos = (416,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_equal, convnodeflags = []
                                 (loadn, resultdef = TTabSheet = "TTabSheet", pos = (416,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    nil
                                    symbol = NEWPAGE
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (416,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (nothingn, resultdef =  = "untyped", pos = (416,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (418,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (calln, resultdef =  = "untyped", pos = (418,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                           proc = SetText(<TControl>;const TTranslateString);
                           methodpointer =
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (418,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = NEWPAGE
                           )
                           left =
                           (callparan, resultdef = TTranslateString = "AnsiString(0)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (addn, resultdef = TTranslateString = "AnsiString(0)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (418,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    value = "Image"
                                 )
                                 (calln, resultdef = AnsiString = "AnsiString(0)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                    proc = ToString(<var LongInt>;<var AnsiString>):System.AnsiString;
                                    methodpointer =
                                    (calln, resultdef = LongInt = "LongInt", pos = (418,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                                       proc = GetPageCount(<TCustomTabControl>):System.LongInt;
                                       methodpointer =
                                       (subscriptn, resultdef = TPageControl = "TPageControl", pos = (418,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                             nil
                                             symbol = self
                                          )
                                          field = PAGECONTROL1
                                       )
                                       left =
                                       (callparan, resultdef = <nil>, pos = (418,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          (nothingn, resultdef =  = "untyped", pos = (418,57), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                          )

                                       )
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (418,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (nothingn, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )

                                    )
                                    (callparan, resultdef = <nil>, pos = (418,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       (nothingn, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                       )

                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (418,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (nothingn, resultdef =  = "untyped", pos = (418,22), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (419,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (assignn, resultdef =  = "untyped", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (subscriptn, resultdef = AnsiString = "AnsiString(0)", pos = (419,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = NEWDOC
                              )
                              field = FILENAME
                           )
                           (calln, resultdef = AnsiString = "AnsiString(0)", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                              proc = GetText(<TControl>;<var TTranslateString>):LCLType.TTranslateString;
                              methodpointer =
                              (loadn, resultdef = TTabSheet = "TTabSheet", pos = (419,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = NEWPAGE
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (419,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (nothingn, resultdef =  = "untyped", pos = (419,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )

                              )
                              (callparan, resultdef = <nil>, pos = (419,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 (nothingn, resultdef =  = "untyped", pos = (419,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (420,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (calln, resultdef =  = "untyped", pos = (420,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           proc = Show(<TCustomForm>);
                           methodpointer =
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (420,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = NEWDOC
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (420,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (nothingn, resultdef =  = "untyped", pos = (420,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (421,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (calln, resultdef =  = "untyped", pos = (421,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                           proc = SetActiveTabSheet(<TPageControl>;const TTabSheet);
                           methodpointer =
                           (subscriptn, resultdef = TPageControl = "TPageControl", pos = (421,7), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (421,19), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = self
                              )
                              field = PAGECONTROL1
                           )
                           left =
                           (callparan, resultdef = TTabSheet = "TTabSheet", pos = (421,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (loadn, resultdef = TTabSheet = "TTabSheet", pos = (421,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 nil
                                 symbol = NEWPAGE
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (421,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              (nothingn, resultdef =  = "untyped", pos = (421,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              )

                           )
                        )

                     )
                  )
                  nil
                  nil
               )

            )
            (statementn, resultdef = <nil>, pos = (425,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (425,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  proc = Free(<TObject>);
                  methodpointer =
                  (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (425,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = DIALOGFORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (425,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (425,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
         )
         nil
      )

   )
)

*******************************************************************************
after the firstpass
ToolButtonNewClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (403,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (403,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (403,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
            nil
            symbol = DIALOGFORM
         )
         (calln, resultdef = TFormNewImage = "TFormNewImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (403,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )
            )
            vmt_entry =
            (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TForm of object;Register>", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               (derefn, resultdef = TFormNewImage. = "<record type>", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  (typeconvn, resultdef = <no type symbol> = "^TFormNewImage.<record type>", pos = (403,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (403,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                  )
               )
               field = f54
            )
            left =
            (callparan, resultdef = <nil>, pos = (403,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (403,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )
               )

            )
            (callparan, resultdef = TComponent = "TComponent", pos = (403,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
               (niln, resultdef = TComponent = "TComponent", pos = (403,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (403,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
               (pointerconstn, resultdef = Pointer = "^untyped", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                  value = $0000000000000001
               )

            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (427,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tryfinallyn, resultdef =  = "untyped", pos = (404,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (blockn, resultdef = LongInt = "LongInt", pos = (407,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (405,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = LongInt = "LongInt", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  proc = ShowModal(<TCustomForm>):System.LongInt;
                  methodpointer =
                  (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = DIALOGFORM
                  )
                  vmt_entry =
                  (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                     (derefn, resultdef = TFormNewImage. = "<record type>", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                        (typeconvn, resultdef = <no type symbol> = "^TFormNewImage.<record type>", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, convtype = tc_equal, convnodeflags = []
                           (subscriptn, resultdef = Pointer = "^untyped", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = DIALOGFORM
                              )
                              field = hidden_vptr$TOBJECT
                           )
                        )
                     )
                     field = f322
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (405,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = DIALOGFORM
                     )

                  )
               )

            )
         )
         (calln, resultdef =  = "untyped", pos = (404,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            proc = $fin$00000156(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef =  = "^untyped", pos = (404,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
               (loadparentfpn, resultdef =  = "^untyped", pos = (404,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  nil
               )

            )
         )
         nil
      )

   )
)

*******************************************************************************
right before code generation
ToolButtonNewClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE56C0
   (statementn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE8000
      (asmn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE55A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7CA0
      (asmn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5C00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE5480
      (asmn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7B60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDAC20
      (asmn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7B00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDAB60
      (tryfinallyn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDAAA0
         (blockn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDAA40
            (statementn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6720
               (blockn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093CDA980
                  (statementn, resultdef =  = "untyped", pos = (403,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA9E0
                     (assignn, resultdef =  = "untyped", pos = (403,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA920
                        (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (403,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDDD40
                           nil
                           symbol = DIALOGFORM
                        )
                        (calln, resultdef = TFormNewImage = "TFormNewImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CDDCE0
                           proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                           methodpointer =
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (403,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD79E0
                              (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD76E0
                              )
                           )
                           vmt_entry =
                           (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TForm of object;Register>", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD7680
                              (derefn, resultdef = TFormNewImage. = "<record type>", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD7620
                                 (typeconvn, resultdef = <no type symbol> = "^TFormNewImage.<record type>", pos = (403,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, optinfo = 0000000093CD75C0, convtype = tc_equal, convnodeflags = []
                                    (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (403,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD7980
                                       (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD7920
                                       )
                                    )
                                 )
                              )
                              field = f54
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (403,42), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD78C0
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (403,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD7740
                                 (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CDDBC0
                                 )
                              )

                           )
                           (callparan, resultdef = TComponent = "TComponent", pos = (403,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD7800
                              (niln, resultdef = TComponent = "TComponent", pos = (403,41), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD77A0
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (403,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CDDC20
                              (pointerconstn, resultdef = Pointer = "^untyped", pos = (403,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD7860
                                 value = $0000000000000001
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (427,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDDC80
                     (tryfinallyn, resultdef =  = "untyped", pos = (404,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDDB60
                        (blockn, resultdef = LongInt = "LongInt", pos = (407,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDDA40
                           (statementn, resultdef =  = "untyped", pos = (405,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDD9E0
                              (calln, resultdef = LongInt = "LongInt", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6780
                                 proc = ShowModal(<TCustomForm>):System.LongInt;
                                 methodpointer =
                                 (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD7A0
                                    nil
                                    symbol = DIALOGFORM
                                 )
                                 vmt_entry =
                                 (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD68A0
                                    (derefn, resultdef = TFormNewImage. = "<record type>", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD6840
                                       (typeconvn, resultdef = <no type symbol> = "^TFormNewImage.<record type>", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, optinfo = 0000000093CD67E0, convtype = tc_equal, convnodeflags = []
                                          (subscriptn, resultdef = Pointer = "^untyped", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CDD740
                                             (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD69C0
                                                nil
                                                symbol = DIALOGFORM
                                             )
                                             field = hidden_vptr$TOBJECT
                                          )
                                       )
                                    )
                                    field = f322
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (405,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD6960
                                    (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (405,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD6900
                                       nil
                                       symbol = DIALOGFORM
                                    )

                                 )
                              )

                           )
                        )
                        (calln, resultdef =  = "untyped", pos = (404,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6DE0
                           proc = $fin$00000156(<^untyped>) is nested; Register;
                           left =
                           (callparan, resultdef =  = "^untyped", pos = (404,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD6CC0
                              (loadparentfpn, resultdef =  = "^untyped", pos = (404,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD6C60
                                 nil
                              )

                           )
                        )
                        nil
                     )

                  )
               )

            )
         )
         (calln, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDD980
            proc = $fin$00000157(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef =  = "^untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD6C00
               (loadparentfpn, resultdef =  = "^untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD6BA0
                  nil
               )

            )
         )
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6A20
      (asmn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDD860
      )

   )
)

*******************************************************************************
after the firstpass
$fin$00000156 is nested; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef =  = "untyped", pos = (408,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (equaln, resultdef = Boolean = "Boolean", pos = (408,31), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 3
            (subscriptn, resultdef = LongInt = "LongInt", pos = (408,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
               (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (408,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = DIALOGFORM
               )
               field = FMODALRESULT
            )
            (ordconstn, resultdef = LongInt = "LongInt", pos = (408,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = 1
            )
         )
         (blockn, resultdef =  = "untyped", pos = (409,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (410,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (410,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = TTabSheet = "TTabSheet", pos = (410,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = NEWPAGE
                  )
                  (calln, resultdef = TTabSheet = "TTabSheet", pos = (410,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                     proc = AddTabSheet(<TPageControl>):ComCtrls.TTabSheet;
                     methodpointer =
                     (subscriptn, resultdef = TPageControl = "TPageControl", pos = (410,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (410,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = PAGECONTROL1
                     )
                     left =
                     (callparan, resultdef = <nil>, pos = (410,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                        (subscriptn, resultdef = TPageControl = "TPageControl", pos = (410,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (410,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = self
                           )
                           field = PAGECONTROL1
                        )

                     )
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (411,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (411,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (411,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
                     nil
                     symbol = NEWDOC
                  )
                  (calln, resultdef = TFormDocument = "TFormDocument", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
                     proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                     methodpointer =
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (411,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (typen, resultdef = TFormDocument = "TFormDocument", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                     vmt_entry =
                     (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TForm of object;Register>", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        (derefn, resultdef = TFormDocument. = "<record type>", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (typeconvn, resultdef = <no type symbol> = "^TFormDocument.<record type>", pos = (411,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (411,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                 (typen, resultdef = TFormDocument = "TFormDocument", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                                 )
                              )
                           )
                        )
                        field = f54
                     )
                     left =
                     (callparan, resultdef = TComponent = "TComponent", pos = (411,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                        (typeconvn, resultdef = TComponent = "TComponent", pos = (411,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
                           (loadn, resultdef = TApplication = "TApplication", pos = (411,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              nil
                              symbol = APPLICATION
                           )
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (411,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                        (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (411,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                           (typen, resultdef = TFormDocument = "TFormDocument", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           )
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (411,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                        (pointerconstn, resultdef = Pointer = "^untyped", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                           value = $0000000000000001
                        )

                     )
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (412,52), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (412,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (412,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (412,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = NEWDOC
                     )
                     field = IMAGEWIDTH
                  )
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (412,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (412,28), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = DIALOGFORM
                     )
                     field = NEWIMAGEWIDTH
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (413,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (413,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (413,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (413,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = NEWDOC
                     )
                     field = IMAGEHEIGHT
                  )
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (413,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (413,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = DIALOGFORM
                     )
                     field = NEWIMAGEHEIGHT
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (414,35), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (414,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetText(<TControl>;const TTranslateString);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (414,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = TTranslateString = "AnsiString(0)", pos = (414,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                     (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (414,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        value = "NewImage"
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (414,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (414,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = NEWDOC
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (415,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (415,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3
                  (subscriptn, resultdef = Boolean = "Boolean", pos = (415,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 2
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (415,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = NEWDOC
                     )
                     field = EMPTYIMAGE
                  )
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (415,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                     typedef = "Boolean"
                     value = 1
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (416,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetParent(<TControl>;TWinControl);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = NEWDOC
                  )
                  vmt_entry =
                  (subscriptn, resultdef = <no type symbol> = "<address of procedure(TWinControl) of object;Register>", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                     (derefn, resultdef = TFormDocument. = "<record type>", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                        (typeconvn, resultdef = <no type symbol> = "^TFormDocument.<record type>", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, convtype = tc_equal, convnodeflags = []
                           (subscriptn, resultdef = Pointer = "^untyped", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormDocument = "TFormDocument", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = NEWDOC
                              )
                              field = hidden_vptr$TOBJECT
                           )
                        )
                     )
                     field = f145
                  )
                  left =
                  (callparan, resultdef = TWinControl = "TWinControl", pos = (416,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (typeconvn, resultdef = TWinControl = "TWinControl", pos = (416,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, convtype = tc_equal, convnodeflags = []
                        (loadn, resultdef = TTabSheet = "TTabSheet", pos = (416,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = NEWPAGE
                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (416,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = NEWDOC
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (418,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetText(<TControl>;const TTranslateString);
                  methodpointer =
                  (loadn, resultdef = TTabSheet = "TTabSheet", pos = (418,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = NEWPAGE
                  )
                  left =
                  (callparan, resultdef = TTranslateString = "AnsiString(0)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (blockn, resultdef = TTranslateString = "AnsiString(0)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                        (statementn, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (tempcreaten, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              size = 8, temptypedef = TTranslateString = "AnsiString(0)", tempinfo = $0000000091BB6CF0
                              []
                              tempinit =
                              nil
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (calln, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                              proc = $fpc_ansistr_concat(var RawByteString;const RawByteString;const RawByteString;Word);
                              left =
                              (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                 (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255
                                    (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (tempcreaten, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000091BB6D70
                                          []
                                          tempinit =
                                          nil
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (assignn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                          (temprefn, resultdef = LongInt = "LongInt", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                                             temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6D70 flags = [])
                                          )
                                          (calln, resultdef = LongInt = "LongInt", pos = (418,57), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                                             proc = GetPageCount(<TCustomTabControl>):System.LongInt;
                                             methodpointer =
                                             (subscriptn, resultdef = TPageControl = "TPageControl", pos = (418,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                (loadn, resultdef = TFormMain = "TFormMain", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                   nil
                                                   symbol = self
                                                )
                                                field = PAGECONTROL1
                                             )
                                             vmt_entry =
                                             (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (418,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
                                                (derefn, resultdef = TPageControl. = "<record type>", pos = (418,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
                                                   (typeconvn, resultdef = <no type symbol> = "^TPageControl.<record type>", pos = (418,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                                                      (subscriptn, resultdef = Pointer = "^untyped", pos = (418,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                                                         (subscriptn, resultdef = TPageControl = "TPageControl", pos = (418,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                            (loadn, resultdef = TFormMain = "TFormMain", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                               nil
                                                               symbol = self
                                                            )
                                                            field = PAGECONTROL1
                                                         )
                                                         field = hidden_vptr$TOBJECT
                                                      )
                                                   )
                                                )
                                                field = f309
                                             )
                                             left =
                                             (callparan, resultdef = <nil>, pos = (418,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                (subscriptn, resultdef = TPageControl = "TPageControl", pos = (418,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                                   (loadn, resultdef = TFormMain = "TFormMain", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                                      nil
                                                      symbol = self
                                                   )
                                                   field = PAGECONTROL1
                                                )

                                             )
                                          )
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (tempcreaten, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                                          size = 8, temptypedef = AnsiString = "AnsiString(0)", tempinfo = $0000000091BB6B70
                                          [ti_nofini]
                                          tempinit =
                                          nil
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (tempcreaten, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091BB6DF0
                                          []
                                          tempinit =
                                          nil
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                       (blockn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255
                                          (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (calln, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                intrinsiccode = in_str_x_string
                                                left =
                                                (callparan, resultdef = OpenString = "ShortString[0]", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                   (temprefn, resultdef = ShortString = "ShortString[255]", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                                                      temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091BB6DF0 flags = [])
                                                   )

                                                )
                                                (callparan, resultdef = Int64 = "Int64", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                                   (typeconvn, resultdef = Int64 = "Int64", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_int_2_int, convnodeflags = []
                                                      (temprefn, resultdef = LongInt = "LongInt", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                         temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6D70 flags = [])
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = Int64 = "Int64", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                   (ordconstn, resultdef = Int64 = "Int64", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0
                                                      typedef = "Int64"
                                                      value = 255
                                                   )

                                                )
                                                (callparan, resultdef = Int64 = "Int64", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                   (ordconstn, resultdef = Int64 = "Int64", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                      typedef = "Int64"
                                                      value = -1
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                             (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255
                                                proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                left =
                                                (callparan, resultdef = ShortString = "ShortString[255]", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                   (temprefn, resultdef = ShortString = "ShortString[255]", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                                      temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091BB6DF0 flags = [])
                                                   )

                                                )
                                                (callparan, resultdef = <nil>, pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                   (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                      (temprefn, resultdef = AnsiString = "AnsiString(0)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                         temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091BB6B70 flags = [ti_nofini])
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = Word = "Word", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                   (ordconstn, resultdef = Word = "Word", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                      typedef = "Word"
                                                      value = 0
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                             (calln, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                                                proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                left =
                                                (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                                   (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, convtype = tc_equal, convnodeflags = []
                                                      (temprefn, resultdef = AnsiString = "AnsiString(0)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1
                                                         temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091BB6B70 flags = [ti_nofini])
                                                      )
                                                   )

                                                )
                                                (callparan, resultdef = Boolean = "Boolean", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                   (ordconstn, resultdef = Boolean = "Boolean", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                      typedef = "Boolean"
                                                      value = 0
                                                   )

                                                )
                                                (callparan, resultdef = Word = "Word", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                                   (ordconstn, resultdef = Word = "Word", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                                      typedef = "Word"
                                                      value = 0
                                                   )

                                                )
                                             )

                                          )
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                       (tempdeleten, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091BB6DF0
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                       (tempdeleten, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000091BB6D70
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                                       (tempdeleten, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                          release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString(0)", temptype = tt_persistent, tempinfo = $0000000091BB6B70
                                       )

                                    )
                                    (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                       (temprefn, resultdef = AnsiString = "AnsiString(0)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                                          temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091BB6B70 flags = [ti_nofini])
                                       )

                                    )
                                 )

                              )
                              (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
                                 (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                                    value = "Image"
                                 )

                              )
                              (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                 (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                                    temptypedef = TTranslateString = "AnsiString(0)", (tempinfo = $0000000091BB6CF0 flags = [])
                                 )

                              )
                              (callparan, resultdef = Word = "Word", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                 (ordconstn, resultdef = Word = "Word", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                    typedef = "Word"
                                    value = 0
                                 )

                              )
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1
                           (tempdeleten, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              release_to_normal: TRUE, temptypedef = TTranslateString = "AnsiString(0)", temptype = tt_persistent, tempinfo = $0000000091BB6CF0
                           )

                        )
                        (statementn, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                           (temprefn, resultdef = TTranslateString = "AnsiString(0)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                              temptypedef = TTranslateString = "AnsiString(0)", (tempinfo = $0000000091BB6CF0 flags = [])
                           )

                        )
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (418,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (loadn, resultdef = TTabSheet = "TTabSheet", pos = (418,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = NEWPAGE
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (419,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  proc = $fpc_ansistr_assign(var Pointer;Pointer);
                  left =
                  (callparan, resultdef = Pointer = "^untyped", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (typeconvn, resultdef = Pointer = "^untyped", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit,nf_internal], cmplx = 255, convtype = tc_equal, convnodeflags = []
                        (calln, resultdef = AnsiString = "AnsiString(0)", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                           proc = GetText(<TControl>;<var TTranslateString>):LCLType.TTranslateString;
                           methodpointer =
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (419,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = NEWPAGE
                           )
                           funcretnode =
                           (temprefn, resultdef = AnsiString = "AnsiString(0)", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                              temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091BB6A70 flags = [ti_nofini])
                           )
                           callinitblock =
                           (blockn, resultdef =  = "untyped", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (statementn, resultdef =  = "untyped", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (tempcreaten, resultdef =  = "untyped", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0
                                    size = 8, temptypedef = AnsiString = "AnsiString(0)", tempinfo = $0000000091BB6A70
                                    [ti_nofini]
                                    tempinit =
                                    nil
                                 )

                              )
                           )
                           callcleanupblock =
                           (blockn, resultdef =  = "untyped", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                              (statementn, resultdef =  = "untyped", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                 (tempdeleten, resultdef =  = "untyped", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                                    release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString(0)", temptype = tt_persistent, tempinfo = $0000000091BB6A70
                                 )

                              )
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (419,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                              (temprefn, resultdef = AnsiString = "AnsiString(0)", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1
                                 temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091BB6A70 flags = [ti_nofini])
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (419,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                              (loadn, resultdef = TTabSheet = "TTabSheet", pos = (419,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = NEWPAGE
                              )

                           )
                        )
                     )

                  )
                  (callparan, resultdef = Pointer = "^untyped", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (typeconvn, resultdef = Pointer = "^untyped", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit,nf_internal], cmplx = 2, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = AnsiString = "AnsiString(0)", pos = (419,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 2
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                              nil
                              symbol = NEWDOC
                           )
                           field = FILENAME
                        )
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (420,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (420,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  proc = Show(<TCustomForm>);
                  methodpointer =
                  (loadn, resultdef = TFormDocument = "TFormDocument", pos = (420,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = NEWDOC
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (420,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (loadn, resultdef = TFormDocument = "TFormDocument", pos = (420,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = NEWDOC
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (421,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (421,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetActiveTabSheet(<TPageControl>;const TTabSheet);
                  methodpointer =
                  (subscriptn, resultdef = TPageControl = "TPageControl", pos = (421,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (421,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = self
                     )
                     field = PAGECONTROL1
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (421,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (subscriptn, resultdef = TPageControl = "TPageControl", pos = (421,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (421,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = PAGECONTROL1
                     )

                  )
                  (callparan, resultdef = TTabSheet = "TTabSheet", pos = (421,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (loadn, resultdef = TTabSheet = "TTabSheet", pos = (421,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = NEWPAGE
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (425,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (425,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Free(<TObject>);
         methodpointer =
         (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (425,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = DIALOGFORM
         )
         left =
         (callparan, resultdef = <nil>, pos = (425,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (425,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = DIALOGFORM
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
$fin$00000156 is nested; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7A60
   (statementn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7AA0
      (asmn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7FA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA6E0
      (asmn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7E60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7E00
      (asmn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7DA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7D40
      (asmn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7C80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7C20
      (blockn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093CDA680
         (statementn, resultdef =  = "untyped", pos = (423,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7CE0
            (ifn, resultdef =  = "untyped", pos = (408,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA620
               (equaln, resultdef = Boolean = "Boolean", pos = (408,31), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 3, optinfo = 0000000093CD7BC0
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (408,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093CE5B40
                     (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (408,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE5C60
                        nil
                        symbol = DIALOGFORM
                     )
                     field = FMODALRESULT
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (408,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CE7E80
                     typedef = "LongInt"
                     value = 1
                  )
               )
               (blockn, resultdef =  = "untyped", pos = (409,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE7E20
                  (statementn, resultdef =  = "untyped", pos = (410,42), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7F20
                     (assignn, resultdef =  = "untyped", pos = (410,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD7EC0
                        (loadn, resultdef = TTabSheet = "TTabSheet", pos = (410,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDD2C0
                           nil
                           symbol = NEWPAGE
                        )
                        (calln, resultdef = TTabSheet = "TTabSheet", pos = (410,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD7FE0
                           proc = AddTabSheet(<TPageControl>):ComCtrls.TTabSheet;
                           methodpointer =
                           (subscriptn, resultdef = TPageControl = "TPageControl", pos = (410,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CD7F80
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (410,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD320
                                 nil
                                 symbol = self
                              )
                              field = PAGECONTROL1
                           )
                           left =
                           (callparan, resultdef = <nil>, pos = (410,42), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD81C0
                              (subscriptn, resultdef = TPageControl = "TPageControl", pos = (410,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CD8160
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (410,30), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD8100
                                    nil
                                    symbol = self
                                 )
                                 field = PAGECONTROL1
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (411,50), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD80A0
                     (assignn, resultdef =  = "untyped", pos = (411,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD8040
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (411,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093CDD380
                           nil
                           symbol = NEWDOC
                        )
                        (calln, resultdef = TFormDocument = "TFormDocument", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093CD8220
                           proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                           methodpointer =
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (411,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CDD3E0
                              (typen, resultdef = TFormDocument = "TFormDocument", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CE5120
                              )
                           )
                           vmt_entry =
                           (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TForm of object;Register>", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CE7D00
                              (derefn, resultdef = TFormDocument. = "<record type>", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD82E0
                                 (typeconvn, resultdef = <no type symbol> = "^TFormDocument.<record type>", pos = (411,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, optinfo = 0000000093CD8280, convtype = tc_equal, convnodeflags = []
                                    (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (411,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD83A0
                                       (typen, resultdef = TFormDocument = "TFormDocument", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD8340
                                       )
                                    )
                                 )
                              )
                              field = f54
                           )
                           left =
                           (callparan, resultdef = TComponent = "TComponent", pos = (411,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CDD200
                              (typeconvn, resultdef = TComponent = "TComponent", pos = (411,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD8400, convtype = tc_equal, convnodeflags = []
                                 (loadn, resultdef = TApplication = "TApplication", pos = (411,49), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDD260
                                    nil
                                    symbol = APPLICATION
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (411,50), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CE51E0
                              (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormDocument", pos = (411,17), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CE5180
                                 (typen, resultdef = TFormDocument = "TFormDocument", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093CD8460
                                 )
                              )

                           )
                           (callparan, resultdef = <nil>, pos = (411,50), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CDD0E0
                              (pointerconstn, resultdef = Pointer = "^untyped", pos = (411,30), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD8520
                                 value = $0000000000000001
                              )

                           )
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (412,52), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD84C0
                     (assignn, resultdef =  = "untyped", pos = (412,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5, optinfo = 0000000093CD86A0
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (412,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 2, optinfo = 0000000093CD8640
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (412,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD85E0
                              nil
                              symbol = NEWDOC
                           )
                           field = IMAGEWIDTH
                        )
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (412,38), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CD8580
                           (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (412,28), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD140
                              nil
                              symbol = DIALOGFORM
                           )
                           field = NEWIMAGEWIDTH
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (413,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDD1A0
                     (assignn, resultdef =  = "untyped", pos = (413,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 5, optinfo = 0000000093CE50C0
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (413,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 2, optinfo = 0000000093CE5060
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (413,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CDD080
                              nil
                              symbol = NEWDOC
                           )
                           field = IMAGEHEIGHT
                        )
                        (subscriptn, resultdef = LongInt = "LongInt", pos = (413,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CD8C40
                           (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (413,29), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD8760
                              nil
                              symbol = DIALOGFORM
                           )
                           field = NEWIMAGEHEIGHT
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (414,35), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD8700
                     (calln, resultdef =  = "untyped", pos = (414,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CD8820
                        proc = SetText(<TControl>;const TTranslateString);
                        methodpointer =
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (414,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD87C0
                           nil
                           symbol = NEWDOC
                        )
                        left =
                        (callparan, resultdef = TTranslateString = "AnsiString(0)", pos = (414,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD8940
                           (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (414,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD88E0
                              value = "NewImage"
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (414,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD8880
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (414,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD8B20
                              nil
                              symbol = NEWDOC
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (415,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD8AC0
                     (assignn, resultdef =  = "untyped", pos = (415,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 3, optinfo = 0000000093CD8A60
                        (subscriptn, resultdef = Boolean = "Boolean", pos = (415,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 2, optinfo = 0000000093CD8A00
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (415,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD89A0
                              nil
                              symbol = NEWDOC
                           )
                           field = EMPTYIMAGE
                        )
                        (ordconstn, resultdef = Boolean = "Boolean", pos = (415,28), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD8BE0
                           typedef = "Boolean"
                           value = 1
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (416,31), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD8B80
                     (calln, resultdef =  = "untyped", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CE5000
                        proc = SetParent(<TControl>;TWinControl);
                        methodpointer =
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE4FA0
                           nil
                           symbol = NEWDOC
                        )
                        vmt_entry =
                        (subscriptn, resultdef = <no type symbol> = "<address of procedure(TWinControl) of object;Register>", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CDD020
                           (derefn, resultdef = TFormDocument. = "<record type>", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093CD91E0
                              (typeconvn, resultdef = <no type symbol> = "^TFormDocument.<record type>", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, optinfo = 0000000093CD8D00, convtype = tc_equal, convnodeflags = []
                                 (subscriptn, resultdef = Pointer = "^untyped", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CD8CA0
                                    (loadn, resultdef = TFormDocument = "TFormDocument", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD8DC0
                                       nil
                                       symbol = NEWDOC
                                    )
                                    field = hidden_vptr$TOBJECT
                                 )
                              )
                           )
                           field = f145
                        )
                        left =
                        (callparan, resultdef = TWinControl = "TWinControl", pos = (416,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD8D60
                           (typeconvn, resultdef = TWinControl = "TWinControl", pos = (416,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD8EE0, convtype = tc_equal, convnodeflags = []
                              (loadn, resultdef = TTabSheet = "TTabSheet", pos = (416,31), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD8E80
                                 nil
                                 symbol = NEWPAGE
                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (416,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CD8E20
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (416,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD90C0
                              nil
                              symbol = NEWDOC
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9060
                     (calln, resultdef =  = "untyped", pos = (418,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CD9000
                        proc = SetText(<TControl>;const TTranslateString);
                        methodpointer =
                        (loadn, resultdef = TTabSheet = "TTabSheet", pos = (418,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD8FA0
                           nil
                           symbol = NEWPAGE
                        )
                        left =
                        (callparan, resultdef = TTranslateString = "AnsiString(0)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD8F40
                           (blockn, resultdef = TTranslateString = "AnsiString(0)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 0000000093CD9180
                              (statementn, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9120
                                 (tempcreaten, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CE4F40
                                    size = 8, temptypedef = TTranslateString = "AnsiString(0)", tempinfo = $0000000091BB6CF0
                                    []
                                    tempinit =
                                    nil
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CE4EE0
                                 (calln, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDCFC0
                                    proc = $fpc_ansistr_concat(var RawByteString;const RawByteString;const RawByteString;Word);
                                    left =
                                    (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD9780
                                       (blockn, resultdef = RawByteString = "AnsiString(65535)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD92A0
                                          (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9240
                                             (tempcreaten, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD9360
                                                size = 4, temptypedef = LongInt = "LongInt", tempinfo = $0000000091BB6D70
                                                []
                                                tempinit =
                                                nil
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9300
                                             (assignn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9480
                                                (temprefn, resultdef = LongInt = "LongInt", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093CD9420
                                                   temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6D70 flags = [])
                                                )
                                                (calln, resultdef = LongInt = "LongInt", pos = (418,57), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CD93C0
                                                   proc = GetPageCount(<TCustomTabControl>):System.LongInt;
                                                   methodpointer =
                                                   (subscriptn, resultdef = TPageControl = "TPageControl", pos = (418,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CD9660
                                                      (loadn, resultdef = TFormMain = "TFormMain", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD9600
                                                         nil
                                                         symbol = self
                                                      )
                                                      field = PAGECONTROL1
                                                   )
                                                   vmt_entry =
                                                   (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (418,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093CD95A0
                                                      (derefn, resultdef = TPageControl. = "<record type>", pos = (418,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093CD9540
                                                         (typeconvn, resultdef = <no type symbol> = "^TPageControl.<record type>", pos = (418,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 0000000093CD94E0, convtype = tc_equal, convnodeflags = []
                                                            (subscriptn, resultdef = Pointer = "^untyped", pos = (418,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093CD9720
                                                               (subscriptn, resultdef = TPageControl = "TPageControl", pos = (418,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CD96C0
                                                                  (loadn, resultdef = TFormMain = "TFormMain", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CE52A0
                                                                     nil
                                                                     symbol = self
                                                                  )
                                                                  field = PAGECONTROL1
                                                               )
                                                               field = hidden_vptr$TOBJECT
                                                            )
                                                         )
                                                      )
                                                      field = f309
                                                   )
                                                   left =
                                                   (callparan, resultdef = <nil>, pos = (418,57), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CE5240
                                                      (subscriptn, resultdef = TPageControl = "TPageControl", pos = (418,35), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CDCF60
                                                         (loadn, resultdef = TFormMain = "TFormMain", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD9D20
                                                            nil
                                                            symbol = self
                                                         )
                                                         field = PAGECONTROL1
                                                      )

                                                   )
                                                )
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9840
                                             (tempcreaten, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 0000000093CD97E0
                                                size = 8, temptypedef = AnsiString = "AnsiString(0)", tempinfo = $0000000091BB6B70
                                                [ti_nofini]
                                                tempinit =
                                                nil
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9900
                                             (tempcreaten, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD98A0
                                                size = 256, temptypedef = ShortString = "ShortString[255]", tempinfo = $0000000091BB6DF0
                                                []
                                                tempinit =
                                                nil
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9A20
                                             (blockn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_block_with_exit], cmplx = 255, optinfo = 0000000093CD99C0
                                                (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9960
                                                   (calln, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9C00
                                                      proc = $fpc_shortstr_sint(Int64;Int64;out OpenString;<const Int64>);
                                                      intrinsiccode = in_str_x_string
                                                      left =
                                                      (callparan, resultdef = OpenString = "ShortString[0]", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD9BA0
                                                         (temprefn, resultdef = ShortString = "ShortString[255]", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093CD9B40
                                                            temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091BB6DF0 flags = [])
                                                         )

                                                      )
                                                      (callparan, resultdef = Int64 = "Int64", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CD9AE0
                                                         (typeconvn, resultdef = Int64 = "Int64", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CD9A80, convtype = tc_int_2_int, convnodeflags = []
                                                            (temprefn, resultdef = LongInt = "LongInt", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD9CC0
                                                               temptypedef = LongInt = "LongInt", (tempinfo = $0000000091BB6D70 flags = [])
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = Int64 = "Int64", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD9C60
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [nf_explicit], cmplx = 0, optinfo = 0000000093CDCF00
                                                            typedef = "Int64"
                                                            value = 255
                                                         )

                                                      )
                                                      (callparan, resultdef = Int64 = "Int64", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CDCDE0
                                                         (ordconstn, resultdef = Int64 = "Int64", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CDCD80
                                                            typedef = "Int64"
                                                            value = -1
                                                         )

                                                      )
                                                   )

                                                )
                                                (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 0000000093CD0360
                                                   (calln, resultdef = RawByteString = "AnsiString(65535)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 255, optinfo = 0000000093CD0300
                                                      proc = $fpc_shortstr_to_ansistr(<var RawByteString>;const ShortString;Word):System.RawByteString;
                                                      left =
                                                      (callparan, resultdef = ShortString = "ShortString[255]", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD0420
                                                         (temprefn, resultdef = ShortString = "ShortString[255]", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CD03C0
                                                            temptypedef = ShortString = "ShortString[255]", (tempinfo = $0000000091BB6DF0 flags = [])
                                                         )

                                                      )
                                                      (callparan, resultdef = <nil>, pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CDCCC0
                                                         (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret,nf_absolute], cmplx = 1, optinfo = 0000000093CD0480, convtype = tc_equal, convnodeflags = []
                                                            (temprefn, resultdef = AnsiString = "AnsiString(0)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 0000000093CDCD20
                                                               temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091BB6B70 flags = [ti_nofini])
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = Word = "Word", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CDCEA0
                                                         (ordconstn, resultdef = Word = "Word", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CDCE40
                                                            typedef = "Word"
                                                            value = 0
                                                         )

                                                      )
                                                   )

                                                )
                                                (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD04E0
                                                   (calln, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDCBA0
                                                      proc = SetCodePage(var RawByteString;Word;Boolean=`TRUE`);
                                                      left =
                                                      (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CD05A0
                                                         (typeconvn, resultdef = RawByteString = "AnsiString(65535)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_modify,nf_address_taken,nf_absolute], cmplx = 1, optinfo = 0000000093CD0540, convtype = tc_equal, convnodeflags = []
                                                            (temprefn, resultdef = AnsiString = "AnsiString(0)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_is_funcret], cmplx = 1, optinfo = 0000000093CD0720
                                                               temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091BB6B70 flags = [ti_nofini])
                                                            )
                                                         )

                                                      )
                                                      (callparan, resultdef = Boolean = "Boolean", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD06C0
                                                         (ordconstn, resultdef = Boolean = "Boolean", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CD0660
                                                            typedef = "Boolean"
                                                            value = 0
                                                         )

                                                      )
                                                      (callparan, resultdef = Word = "Word", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CD0600
                                                         (ordconstn, resultdef = Word = "Word", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CDCC00
                                                            typedef = "Word"
                                                            value = 0
                                                         )

                                                      )
                                                   )

                                                )
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093CDCC60
                                             (tempdeleten, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CD9FC0
                                                release_to_normal: FALSE, temptypedef = ShortString = "ShortString[255]", temptype = tt_persistent, tempinfo = $0000000091BB6DF0
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093CD9F60
                                             (tempdeleten, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CDA080
                                                release_to_normal: FALSE, temptypedef = LongInt = "LongInt", temptype = tt_persistent, tempinfo = $0000000091BB6D70
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093CDA020
                                             (tempdeleten, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CDA140
                                                release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString(0)", temptype = tt_persistent, tempinfo = $0000000091BB6B70
                                             )

                                          )
                                          (statementn, resultdef =  = "untyped", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CDA0E0
                                             (temprefn, resultdef = AnsiString = "AnsiString(0)", pos = (418,47), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 0000000093CDA1A0
                                                temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091BB6B70 flags = [ti_nofini])
                                             )

                                          )
                                       )

                                    )
                                    (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093CDA200
                                       (stringconstn, resultdef = AnsiString = "AnsiString(0)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093CE4E20
                                          value = "Image"
                                       )

                                    )
                                    (callparan, resultdef = RawByteString = "AnsiString(65535)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CC83E0
                                       (temprefn, resultdef = RawByteString = "AnsiString(65535)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CC8920
                                          temptypedef = TTranslateString = "AnsiString(0)", (tempinfo = $0000000091BB6CF0 flags = [])
                                       )

                                    )
                                    (callparan, resultdef = Word = "Word", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093CC8980
                                       (ordconstn, resultdef = Word = "Word", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093CC8A40
                                          typedef = "Word"
                                          value = 0
                                       )

                                    )
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 1, optinfo = 0000000093CB31A0
                                 (tempdeleten, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CC8AA0
                                    release_to_normal: TRUE, temptypedef = TTranslateString = "AnsiString(0)", temptype = tt_persistent, tempinfo = $0000000091BB6CF0
                                 )

                              )
                              (statementn, resultdef =  = "untyped", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CB3140
                                 (temprefn, resultdef = TTranslateString = "AnsiString(0)", pos = (418,66), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093CC93A0
                                    temptypedef = TTranslateString = "AnsiString(0)", (tempinfo = $0000000091BB6CF0 flags = [])
                                 )

                              )
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (418,22), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CC94C0
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (418,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CC95E0
                              nil
                              symbol = NEWPAGE
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (419,40), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CB3440
                     (calln, resultdef =  = "untyped", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CC9640
                        proc = $fpc_ansistr_assign(var Pointer;Pointer);
                        left =
                        (callparan, resultdef = Pointer = "^untyped", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CB35C0
                           (typeconvn, resultdef = Pointer = "^untyped", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit,nf_internal], cmplx = 255, optinfo = 0000000093CC96A0, convtype = tc_equal, convnodeflags = []
                              (calln, resultdef = AnsiString = "AnsiString(0)", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093CB3500
                                 proc = GetText(<TControl>;<var TTranslateString>):LCLType.TTranslateString;
                                 methodpointer =
                                 (loadn, resultdef = TTabSheet = "TTabSheet", pos = (419,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CB3680
                                    nil
                                    symbol = NEWPAGE
                                 )
                                 funcretnode =
                                 (temprefn, resultdef = AnsiString = "AnsiString(0)", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 0000000093CB3740
                                    temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091BB6A70 flags = [ti_nofini])
                                 )
                                 callinitblock =
                                 (blockn, resultdef =  = "untyped", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CB34A0
                                    (statementn, resultdef =  = "untyped", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CB3980
                                       (tempcreaten, resultdef =  = "untyped", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_is_funcret], cmplx = 0, optinfo = 0000000093CB39E0
                                          size = 8, temptypedef = AnsiString = "AnsiString(0)", tempinfo = $0000000091BB6A70
                                          [ti_nofini]
                                          tempinit =
                                          nil
                                       )

                                    )
                                 )
                                 callcleanupblock =
                                 (blockn, resultdef =  = "untyped", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CC9700
                                    (statementn, resultdef =  = "untyped", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CC9C40
                                       (tempdeleten, resultdef =  = "untyped", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093CC9CA0
                                          release_to_normal: TRUE, temptypedef = AnsiString = "AnsiString(0)", temptype = tt_persistent, tempinfo = $0000000091BB6A70
                                       )

                                    )
                                 )
                                 left =
                                 (callparan, resultdef = <nil>, pos = (419,40), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CC9D60
                                    (temprefn, resultdef = AnsiString = "AnsiString(0)", pos = (419,32), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_is_funcret], cmplx = 1, optinfo = 0000000093CB3800
                                       temptypedef = AnsiString = "AnsiString(0)", (tempinfo = $0000000091BB6A70 flags = [ti_nofini])
                                    )

                                 )
                                 (callparan, resultdef = <nil>, pos = (419,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CC9DC0
                                    (loadn, resultdef = TTabSheet = "TTabSheet", pos = (419,25), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CB36E0
                                       nil
                                       symbol = NEWPAGE
                                    )

                                 )
                              )
                           )

                        )
                        (callparan, resultdef = Pointer = "^untyped", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CB3AA0
                           (typeconvn, resultdef = Pointer = "^untyped", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit,nf_internal], cmplx = 2, optinfo = 0000000093CCA000, convtype = tc_equal, convnodeflags = []
                              (subscriptn, resultdef = AnsiString = "AnsiString(0)", pos = (419,13), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 2, optinfo = 0000000093CCA4E0
                                 (loadn, resultdef = TFormDocument = "TFormDocument", pos = (419,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CCA540
                                    nil
                                    symbol = NEWDOC
                                 )
                                 field = FILENAME
                              )
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (420,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CCA600
                     (calln, resultdef =  = "untyped", pos = (420,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CB3C80
                        proc = Show(<TCustomForm>);
                        methodpointer =
                        (loadn, resultdef = TFormDocument = "TFormDocument", pos = (420,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CCA660
                           nil
                           symbol = NEWDOC
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (420,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CB3B00
                           (loadn, resultdef = TFormDocument = "TFormDocument", pos = (420,7), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CB3B60
                              nil
                              symbol = NEWDOC
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (421,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CB3BC0
                     (calln, resultdef =  = "untyped", pos = (421,7), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093CB3CE0
                        proc = SetActiveTabSheet(<TPageControl>;const TTabSheet);
                        methodpointer =
                        (subscriptn, resultdef = TPageControl = "TPageControl", pos = (421,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CB3DA0
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (421,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CCAD20
                              nil
                              symbol = self
                           )
                           field = PAGECONTROL1
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (421,30), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093CCAD80
                           (subscriptn, resultdef = TPageControl = "TPageControl", pos = (421,7), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093CCAE40
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (421,19), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CB3EC0
                                 nil
                                 symbol = self
                              )
                              field = PAGECONTROL1
                           )

                        )
                        (callparan, resultdef = TTabSheet = "TTabSheet", pos = (421,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CCAEA0
                           (loadn, resultdef = TTabSheet = "TTabSheet", pos = (421,39), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CB3E00
                              nil
                              symbol = NEWPAGE
                           )

                        )
                     )

                  )
               )
               nil
               nil
            )

         )
         (statementn, resultdef =  = "untyped", pos = (425,20), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CB4520
            (calln, resultdef =  = "untyped", pos = (425,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CB4100
               proc = Free(<TObject>);
               methodpointer =
               (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (425,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CB4160
                  nil
                  symbol = DIALOGFORM
               )
               left =
               (callparan, resultdef = <nil>, pos = (425,20), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093CB41C0
                  (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (425,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CB4220
                     nil
                     symbol = DIALOGFORM
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (427,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CB4280
      (asmn, resultdef =  = "untyped", pos = (427,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CCBA40
      )

   )
)

*******************************************************************************
after the firstpass
$fin$00000157 is nested; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (finalizetempsn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      )

   )
)

*******************************************************************************
right before code generation
$fin$00000157 is nested; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093CB36E0
   (statementn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CC9D60
      (asmn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CB3800
      )

   )
   (statementn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CB3740
      (asmn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CC9700
      )

   )
   (statementn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CC9C40
      (asmn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CC9CA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CB34A0
      (asmn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CB3980
      )

   )
   (statementn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CB39E0
      (finalizetempsn, resultdef =  = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CB3680
      )

   )
   (statementn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9060
      (asmn, resultdef =  = "untyped", pos = (401,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD9000
      )

   )
)

*******************************************************************************
after parsing
ToolButtonBlurClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
ToolButtonBlurClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
ToolButtonBlurClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDD9E0
   (statementn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6780
      (asmn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6960
      )

   )
   (statementn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6900
      (asmn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD68A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6840
      (asmn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD67E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDD740
      (asmn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD69C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDD7A0
      (blockn, resultdef =  = "untyped", pos = (445,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 0000000093CDD860
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (447,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6DE0
      (asmn, resultdef =  = "untyped", pos = (447,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6CC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (447,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6C60
      (finalizetempsn, resultdef =  = "untyped", pos = (447,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDA9E0
      )

   )
)

*******************************************************************************
after parsing
HexaColorPicker1Change(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (451,48), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (451,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = TColor = "LongInt", pos = (451,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = FORECOLOR
         )
         (subscriptn, resultdef = TColor = "LongInt", pos = (451,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
            (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (451,17), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (loadn, resultdef = TFormMain = "TFormMain", pos = (451,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  nil
                  symbol = self
               )
               field = HEXACOLORPICKER1
            )
            field = FCURRENTCOLOR
         )
      )

   )
)

*******************************************************************************
after the firstpass
HexaColorPicker1Change(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 6
   (statementn, resultdef =  = "untyped", pos = (451,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
      (assignn, resultdef =  = "untyped", pos = (451,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6
         (loadn, resultdef = TColor = "LongInt", pos = (451,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = FORECOLOR
         )
         (subscriptn, resultdef = TColor = "LongInt", pos = (451,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
            (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (451,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
               (loadn, resultdef = TFormMain = "TFormMain", pos = (451,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = self
               )
               field = HEXACOLORPICKER1
            )
            field = FCURRENTCOLOR
         )
      )

   )
)

*******************************************************************************
right before code generation
HexaColorPicker1Change(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6720
   (statementn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348B6A0
      (asmn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348B040
      )

   )
   (statementn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348AF20
      (asmn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348AFE0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348AF80
      (asmn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348A2C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348A1A0
      (asmn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348A260
      )

   )
   (statementn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348A200
      (blockn, resultdef =  = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 6, optinfo = 0000000093CDA9E0
         (statementn, resultdef =  = "untyped", pos = (451,48), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6, optinfo = 0000000093CD6DE0
            (assignn, resultdef =  = "untyped", pos = (451,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 6, optinfo = 0000000093CD6CC0
               (loadn, resultdef = TColor = "LongInt", pos = (451,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093CDD740
                  nil
                  symbol = FORECOLOR
               )
               (subscriptn, resultdef = TColor = "LongInt", pos = (451,16), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000934898A0
                  (subscriptn, resultdef = THexaColorPicker = "THexaColorPicker", pos = (451,17), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093489780
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (451,33), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093CD69C0
                        nil
                        symbol = self
                     )
                     field = HEXACOLORPICKER1
                  )
                  field = FCURRENTCOLOR
               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093489840
      (asmn, resultdef =  = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934897E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093488EE0
      (finalizetempsn, resultdef =  = "untyped", pos = (452,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093488DC0
      )

   )
)

*******************************************************************************
after parsing
BCMaterialProgressBarMarquee1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
BCMaterialProgressBarMarquee1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
BCMaterialProgressBarMarquee1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093489780
   (statementn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD69C0
      (asmn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348A1A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348A260
      (asmn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348AF80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348A2C0
      (asmn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348AF20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348AFE0
      (asmn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348B6A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009348B040
      (blockn, resultdef =  = "untyped", pos = (457,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 0000000093488DC0
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (459,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CDD860
      (asmn, resultdef =  = "untyped", pos = (459,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009341E7C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (459,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009341E760
      (finalizetempsn, resultdef =  = "untyped", pos = (459,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009341E640
      )

   )
)

*******************************************************************************
after parsing
BCTrackbarUpdown1Change(TObject;Boolean);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
BCTrackbarUpdown1Change(TObject;Boolean);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
BCTrackbarUpdown1Change(TObject;Boolean);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093CD6720
   (statementn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009340C640
      (asmn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009340C5E0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009340C580
      (asmn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009340C460
      )

   )
   (statementn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009340C820
      (asmn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E3000
      )

   )
   (statementn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E2FA0
      (asmn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E2D00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E2CA0
      (blockn, resultdef =  = "untyped", pos = (462,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 0000000093CDD860
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (464,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1E60
      (asmn, resultdef =  = "untyped", pos = (464,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1DA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (464,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093399C40
      (finalizetempsn, resultdef =  = "untyped", pos = (464,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093399BE0
      )

   )
)

*******************************************************************************
after parsing
CheckBoxWebSafeChange(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
CheckBoxWebSafeChange(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
CheckBoxWebSafeChange(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009340C580
   (statementn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009340C460
      (asmn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009340C640
      )

   )
   (statementn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009340C5E0
      (asmn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009341E640
      )

   )
   (statementn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347C820
      (asmn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347C580
      )

   )
   (statementn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347C340
      (asmn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347C160
      )

   )
   (statementn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347BF20
      (blockn, resultdef =  = "untyped", pos = (467,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 0000000093399BE0
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (469,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347BD40
      (asmn, resultdef =  = "untyped", pos = (469,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347BB00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (469,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B920
      (finalizetempsn, resultdef =  = "untyped", pos = (469,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B6E0
      )

   )
)

*******************************************************************************
after parsing
ImageColorBoxMouseUp(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
ImageColorBoxMouseUp(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
ImageColorBoxMouseUp(TObject;TMouseButton;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347BAA0
   (statementn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B9E0
      (asmn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B980
      )

   )
   (statementn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347BA40
      (asmn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B680
      )

   )
   (statementn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B5C0
      (asmn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B560
      )

   )
   (statementn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B620
      (asmn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B1A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B0E0
      (blockn, resultdef =  = "untyped", pos = (476,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 0000000093399BE0
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (478,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B080
      (asmn, resultdef =  = "untyped", pos = (478,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B140
      )

   )
   (statementn, resultdef =  = "untyped", pos = (478,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347AD80
      (finalizetempsn, resultdef =  = "untyped", pos = (478,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347ACC0
      )

   )
)

*******************************************************************************
after parsing
Label1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
Label1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
Label1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B560
   (statementn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347BA40
      (asmn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B680
      )

   )
   (statementn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B9E0
      (asmn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B980
      )

   )
   (statementn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009340C580
      (asmn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093477BA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934777E0
      (asmn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093477720
      )

   )
   (statementn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093477600
      (blockn, resultdef =  = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 0000000093399BE0
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (483,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093477780
      (asmn, resultdef =  = "untyped", pos = (483,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093477300
      )

   )
   (statementn, resultdef =  = "untyped", pos = (483,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093477240
      (finalizetempsn, resultdef =  = "untyped", pos = (483,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093477120
      )

   )
)

*******************************************************************************
after parsing
MainPanelClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
MainPanelClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
MainPanelClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093477BA0
   (statementn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B9E0
      (asmn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B980
      )

   )
   (statementn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347BA40
      (asmn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B680
      )

   )
   (statementn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009347B0E0
      (asmn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093487C20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093487B60
      (asmn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093487AA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934879E0
      (blockn, resultdef =  = "untyped", pos = (486,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 0000000093399BE0
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (488,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093487980
      (asmn, resultdef =  = "untyped", pos = (488,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093487920
      )

   )
   (statementn, resultdef =  = "untyped", pos = (488,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934878C0
      (finalizetempsn, resultdef =  = "untyped", pos = (488,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093487800
      )

   )
)

*******************************************************************************
after parsing
MenuItemCanvasSizeClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (495,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (495,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = MYFORM
         )
         (calln, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormSetCanvasSize", pos = (495,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (typen, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )
            )
            left =
            (callparan, resultdef = TComponent = "TComponent", pos = (495,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (niln, resultdef = TComponent = "TComponent", pos = (495,42), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
            (callparan, resultdef = <nil>, pos = (495,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (495,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
            (callparan, resultdef = <nil>, pos = (495,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (nothingn, resultdef =  = "untyped", pos = (495,43), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (507,6), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (tryfinallyn, resultdef =  = "untyped", pos = (496,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (blockn, resultdef = LongInt = "LongInt", pos = (499,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (497,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef = LongInt = "LongInt", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  proc = ShowModal(<TCustomForm>):System.LongInt;
                  methodpointer =
                  (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = MYFORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (497,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (497,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
         )
         (blockn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (503,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (ifn, resultdef =  = "untyped", pos = (500,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (equaln, resultdef = Boolean = "Boolean", pos = (500,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (subscriptn, resultdef = LongInt = "LongInt", pos = (500,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (500,8), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           nil
                           symbol = MYFORM
                        )
                        field = FMODALRESULT
                     )
                     (ordconstn, resultdef = LongInt = "LongInt", pos = (500,29), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "LongInt"
                        value = 1
                     )
                  )
                  (blockn, resultdef =  = "untyped", pos = (501,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                  )
                  nil
                  nil
               )

            )
            (statementn, resultdef = <nil>, pos = (505,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (505,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  proc = Free(<TObject>);
                  methodpointer =
                  (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (505,5), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     nil
                     symbol = MYFORM
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (505,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (505,16), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
         )
         nil
      )

   )
)

*******************************************************************************
after the firstpass
MenuItemCanvasSizeClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (495,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (495,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0
            nil
            symbol = MYFORM
         )
         (calln, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255
            proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
            methodpointer =
            (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormSetCanvasSize", pos = (495,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
               (typen, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               )
            )
            vmt_entry =
            (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TForm of object;Register>", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               (derefn, resultdef = TFormSetCanvasSize. = "<record type>", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                  (typeconvn, resultdef = <no type symbol> = "^TFormSetCanvasSize.<record type>", pos = (495,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, convtype = tc_equal, convnodeflags = []
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormSetCanvasSize", pos = (495,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                        (typen, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )
                     )
                  )
               )
               field = f54
            )
            left =
            (callparan, resultdef = <nil>, pos = (495,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormSetCanvasSize", pos = (495,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (typen, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )
               )

            )
            (callparan, resultdef = TComponent = "TComponent", pos = (495,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
               (niln, resultdef = TComponent = "TComponent", pos = (495,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               )

            )
            (callparan, resultdef = <nil>, pos = (495,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
               (pointerconstn, resultdef = Pointer = "^untyped", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                  value = $0000000000000001
               )

            )
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (507,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (tryfinallyn, resultdef =  = "untyped", pos = (496,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (blockn, resultdef = LongInt = "LongInt", pos = (499,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (497,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef = LongInt = "LongInt", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                  proc = ShowModal(<TCustomForm>):System.LongInt;
                  methodpointer =
                  (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                     nil
                     symbol = MYFORM
                  )
                  vmt_entry =
                  (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                     (derefn, resultdef = TFormSetCanvasSize. = "<record type>", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                        (typeconvn, resultdef = <no type symbol> = "^TFormSetCanvasSize.<record type>", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, convtype = tc_equal, convnodeflags = []
                           (subscriptn, resultdef = Pointer = "^untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                              (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                 nil
                                 symbol = MYFORM
                              )
                              field = hidden_vptr$TOBJECT
                           )
                        )
                     )
                     field = f322
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (497,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = MYFORM
                     )

                  )
               )

            )
         )
         (calln, resultdef =  = "untyped", pos = (496,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            proc = $fin$00000158(<^untyped>) is nested; Register;
            left =
            (callparan, resultdef =  = "^untyped", pos = (496,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
               (loadparentfpn, resultdef =  = "^untyped", pos = (496,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  nil
               )

            )
         )
         nil
      )

   )
)

*******************************************************************************
right before code generation
MenuItemCanvasSizeClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485DC0
   (statementn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485D00
      (asmn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485C40
      )

   )
   (statementn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485BE0
      (asmn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485B80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485AC0
      (asmn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485A60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485A00
      (asmn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934859A0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485940
      (blockn, resultdef =  = "untyped", pos = (493,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 00000000934858E0
         (statementn, resultdef =  = "untyped", pos = (495,43), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485820
            (assignn, resultdef =  = "untyped", pos = (495,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934857C0
               (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 0, optinfo = 0000000093485700
                  nil
                  symbol = MYFORM
               )
               (calln, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 255, optinfo = 0000000093485640
                  proc = constructor Create(<TForm>;<Class Of TForm>;TComponent);
                  methodpointer =
                  (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormSetCanvasSize", pos = (495,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093485580
                     (typen, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093485520
                     )
                  )
                  vmt_entry =
                  (subscriptn, resultdef = <no type symbol> = "<address of function(TComponent):TForm of object;Register>", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093485460
                     (derefn, resultdef = TFormSetCanvasSize. = "<record type>", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000934853A0
                        (typeconvn, resultdef = <no type symbol> = "^TFormSetCanvasSize.<record type>", pos = (495,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_explicit], cmplx = 1, optinfo = 0000000093485340, convtype = tc_equal, convnodeflags = []
                           (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormSetCanvasSize", pos = (495,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000934852E0
                              (typen, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093485220
                              )
                           )
                        )
                     )
                     field = f54
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (495,43), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 0000000093485160
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormSetCanvasSize", pos = (495,13), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093485100
                        (typen, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 0000000093485040
                        )
                     )

                  )
                  (callparan, resultdef = TComponent = "TComponent", pos = (495,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093484F80
                     (niln, resultdef = TComponent = "TComponent", pos = (495,42), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093484EC0
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (495,43), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093484E60
                     (pointerconstn, resultdef = Pointer = "^untyped", pos = (495,31), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093484E00
                        value = $0000000000000001
                     )

                  )
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (507,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484D40
            (tryfinallyn, resultdef =  = "untyped", pos = (496,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484C80
               (blockn, resultdef = LongInt = "LongInt", pos = (499,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484C20
                  (statementn, resultdef =  = "untyped", pos = (497,21), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484BC0
                     (calln, resultdef = LongInt = "LongInt", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484B60
                        proc = ShowModal(<TCustomForm>):System.LongInt;
                        methodpointer =
                        (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093484B00
                           nil
                           symbol = MYFORM
                        )
                        vmt_entry =
                        (subscriptn, resultdef = <no type symbol> = "<address of function:LongInt of object;Register>", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093484AA0
                           (derefn, resultdef = TFormSetCanvasSize. = "<record type>", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 0000000093484A40
                              (typeconvn, resultdef = <no type symbol> = "^TFormSetCanvasSize.<record type>", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 2, optinfo = 00000000934849E0, convtype = tc_equal, convnodeflags = []
                                 (subscriptn, resultdef = Pointer = "^untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093484980
                                    (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093484920
                                       nil
                                       symbol = MYFORM
                                    )
                                    field = hidden_vptr$TOBJECT
                                 )
                              )
                           )
                           field = f322
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (497,21), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000934848C0
                           (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093484860
                              nil
                              symbol = MYFORM
                           )

                        )
                     )

                  )
               )
               (calln, resultdef =  = "untyped", pos = (496,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484800
                  proc = $fin$00000158(<^untyped>) is nested; Register;
                  left =
                  (callparan, resultdef =  = "^untyped", pos = (496,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 00000000934847A0
                     (loadparentfpn, resultdef =  = "^untyped", pos = (496,3), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 0000000093484740
                        nil
                     )

                  )
               )
               nil
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (509,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484680
      (asmn, resultdef =  = "untyped", pos = (509,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934845C0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (509,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484500
      (finalizetempsn, resultdef =  = "untyped", pos = (509,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484440
      )

   )
)

*******************************************************************************
after the firstpass
$fin$00000158 is nested; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef =  = "untyped", pos = (500,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (equaln, resultdef = Boolean = "Boolean", pos = (500,27), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 3
            (subscriptn, resultdef = LongInt = "LongInt", pos = (500,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2
               (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (500,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                  nil
                  symbol = MYFORM
               )
               field = FMODALRESULT
            )
            (ordconstn, resultdef = LongInt = "LongInt", pos = (500,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "LongInt"
               value = 1
            )
         )
         (blockn, resultdef =  = "untyped", pos = (501,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
            nil
         )
         nil
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (505,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (505,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Free(<TObject>);
         methodpointer =
         (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (505,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = MYFORM
         )
         left =
         (callparan, resultdef = <nil>, pos = (505,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (505,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = MYFORM
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
$fin$00000158 is nested; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093482BE0
   (statementn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093482B20
      (asmn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093482AC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093482A60
      (asmn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093482A00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934829A0
      (asmn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093482940
      )

   )
   (statementn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934828E0
      (asmn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093482880
      )

   )
   (statementn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934827C0
      (blockn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093482760
         (statementn, resultdef =  = "untyped", pos = (503,8), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934826A0
            (ifn, resultdef =  = "untyped", pos = (500,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934825E0
               (equaln, resultdef = Boolean = "Boolean", pos = (500,27), loc = LOC_INVALID, expectloc = LOC_FLAGS, flags = [], cmplx = 3, optinfo = 0000000093482580
                  (subscriptn, resultdef = LongInt = "LongInt", pos = (500,14), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 2, optinfo = 0000000093482520
                     (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (500,8), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000934824C0
                        nil
                        symbol = MYFORM
                     )
                     field = FMODALRESULT
                  )
                  (ordconstn, resultdef = LongInt = "LongInt", pos = (500,29), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093482460
                     typedef = "LongInt"
                     value = 1
                  )
               )
               (blockn, resultdef =  = "untyped", pos = (501,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093482400
                  nil
               )
               nil
               nil
            )

         )
         (statementn, resultdef =  = "untyped", pos = (505,16), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093482340
            (calln, resultdef =  = "untyped", pos = (505,5), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934822E0
               proc = Free(<TObject>);
               methodpointer =
               (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (505,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093482280
                  nil
                  symbol = MYFORM
               )
               left =
               (callparan, resultdef = <nil>, pos = (505,16), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093482220
                  (loadn, resultdef = TFormSetCanvasSize = "TFormSetCanvasSize", pos = (505,5), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000934821C0
                     nil
                     symbol = MYFORM
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (507,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093482100
      (asmn, resultdef =  = "untyped", pos = (507,6), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093482040
      )

   )
)

*******************************************************************************
after parsing
ImageWidthMouseMove(TObject;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (520,41), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (520,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (520,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (520,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               typedef = "Boolean"
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (520,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = LongInt = "LongInt", pos = (520,40), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = Y
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (520,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = LongInt = "LongInt", pos = (520,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = X
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (520,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (520,34), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = SHIFT
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (520,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TObject = "TObject", pos = (520,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = SENDER
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
ImageWidthMouseMove(TObject;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (520,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (520,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
         left =
         (callparan, resultdef = Boolean = "Boolean", pos = (520,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
            (ordconstn, resultdef = Boolean = "Boolean", pos = (520,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
               typedef = "Boolean"
               value = 0
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (520,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = LongInt = "LongInt", pos = (520,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = Y
            )

         )
         (callparan, resultdef = LongInt = "LongInt", pos = (520,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = LongInt = "LongInt", pos = (520,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = X
            )

         )
         (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (520,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (520,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = SHIFT
            )

         )
         (callparan, resultdef = TObject = "TObject", pos = (520,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TObject = "TObject", pos = (520,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = SENDER
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
ImageWidthMouseMove(TObject;TShiftState;LongInt;LongInt);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934857C0
   (statementn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485700
      (asmn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485640
      )

   )
   (statementn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484E60
      (asmn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484E00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484F80
      (asmn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484EC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485160
      (asmn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485100
      )

   )
   (statementn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485040
      (blockn, resultdef =  = "untyped", pos = (517,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093484440
         (statementn, resultdef =  = "untyped", pos = (520,41), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484680
            (calln, resultdef =  = "untyped", pos = (520,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934845C0
               proc = HCSlider(TObject;TShiftState;LongInt;LongInt;Boolean=`FALSE`);
               left =
               (callparan, resultdef = Boolean = "Boolean", pos = (520,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 0000000093485460
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (520,3), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000934853A0
                     typedef = "Boolean"
                     value = 0
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (520,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093485340
                  (loadn, resultdef = LongInt = "LongInt", pos = (520,40), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093484D40
                     nil
                     symbol = Y
                  )

               )
               (callparan, resultdef = LongInt = "LongInt", pos = (520,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 00000000934852E0
                  (loadn, resultdef = LongInt = "LongInt", pos = (520,37), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093484C80
                     nil
                     symbol = X
                  )

               )
               (callparan, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (520,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093485220
                  (loadn, resultdef = TShiftState = "Set Of TShiftStateEnum", pos = (520,34), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093484C20
                     nil
                     symbol = SHIFT
                  )

               )
               (callparan, resultdef = TObject = "TObject", pos = (520,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093485580
                  (loadn, resultdef = TObject = "TObject", pos = (520,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093484BC0
                     nil
                     symbol = SENDER
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (521,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485520
      (asmn, resultdef =  = "untyped", pos = (521,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485A00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (521,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934859A0
      (finalizetempsn, resultdef =  = "untyped", pos = (521,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485AC0
      )

   )
)

*******************************************************************************
after parsing
MenuItemExitClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (525,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (525,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = Close(<TCustomForm>);
         methodpointer =
         (loadn, resultdef = TFormMain = "TFormMain", pos = (525,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = <nil>, pos = (525,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (525,13), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
MenuItemExitClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (525,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (525,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Close(<TCustomForm>);
         methodpointer =
         (loadn, resultdef = TFormMain = "TFormMain", pos = (525,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = <nil>, pos = (525,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
            (loadn, resultdef = TFormMain = "TFormMain", pos = (525,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
               nil
               symbol = self
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
MenuItemExitClick(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934852E0
   (statementn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484C80
      (asmn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485340
      )

   )
   (statementn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484D40
      (asmn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485160
      )

   )
   (statementn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485100
      (asmn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484F80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484EC0
      (asmn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484E60
      )

   )
   (statementn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484E00
      (blockn, resultdef =  = "untyped", pos = (524,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093485AC0
         (statementn, resultdef =  = "untyped", pos = (525,13), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485520
            (calln, resultdef =  = "untyped", pos = (525,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485A00
               proc = Close(<TCustomForm>);
               methodpointer =
               (loadn, resultdef = TFormMain = "TFormMain", pos = (525,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093484680
                  nil
                  symbol = self
               )
               left =
               (callparan, resultdef = <nil>, pos = (525,13), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093485700
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (525,3), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000934845C0
                     nil
                     symbol = self
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (526,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485640
      (asmn, resultdef =  = "untyped", pos = (526,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485DC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (526,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093404180
      (finalizetempsn, resultdef =  = "untyped", pos = (526,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093404120
      )

   )
)

*******************************************************************************
after parsing
ScrollBox1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   nil
)

*******************************************************************************
after the firstpass
ScrollBox1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0
   nil
)

*******************************************************************************
right before code generation
ScrollBox1Click(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934845C0
   (statementn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484680
      (asmn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484EC0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484E60
      (asmn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485100
      )

   )
   (statementn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484F80
      (asmn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484D40
      )

   )
   (statementn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485160
      (asmn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484C80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485340
      (blockn, resultdef =  = "untyped", pos = (529,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 0, optinfo = 0000000093485AC0
         nil
      )

   )
   (statementn, resultdef =  = "untyped", pos = (531,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484440
      (asmn, resultdef =  = "untyped", pos = (531,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FBA20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (531,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FC440
      (finalizetempsn, resultdef =  = "untyped", pos = (531,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FBC00
      )

   )
)

*******************************************************************************
after parsing
TimerStatusTimer(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (541,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (ifn, resultdef =  = "untyped", pos = (535,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Boolean = "Boolean", pos = (535,4), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = STATUS
         )
         (blockn, resultdef =  = "untyped", pos = (536,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (statementn, resultdef = <nil>, pos = (537,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetText(<TStatusPanel>;const TTranslateString);
                  methodpointer =
                  (calln, resultdef = TStatusPanel = "TStatusPanel", pos = (537,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                     proc = GetItem(<TStatusPanels>;LongInt):ComCtrls.TStatusPanel;
                     methodpointer =
                     (subscriptn, resultdef = TStatusPanels = "TStatusPanels", pos = (537,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty,nf_no_lvalue]
                        (subscriptn, resultdef = TStatusBar = "TStatusBar", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (537,11), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                              nil
                              symbol = self
                           )
                           field = STATUSBAR1
                        )
                        field = FPANELS
                     )
                     left =
                     (callparan, resultdef = LongInt = "LongInt", pos = (537,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (ordconstn, resultdef = LongInt = "LongInt", pos = (537,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                           typedef = "LongInt"
                           value = 0
                        )

                     )
                     (callparan, resultdef = <nil>, pos = (537,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        (nothingn, resultdef =  = "untyped", pos = (537,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = TTranslateString = "AnsiString(0)", pos = (537,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TTranslateString = "AnsiString(0)", pos = (537,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = STATUSTEXT
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (537,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (537,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (538,14), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (assignn, resultdef =  = "untyped", pos = (538,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (loadn, resultdef = Boolean = "Boolean", pos = (538,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
                     nil
                     symbol = STATUS
                  )
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (538,9), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     typedef = "Boolean"
                     value = 0
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (539,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               (calln, resultdef =  = "untyped", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_isproperty]
                  proc = SetEnabled(<TCustomTimer>;Boolean);
                  methodpointer =
                  (subscriptn, resultdef = TTimer = "TTimer", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (539,12), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        nil
                        symbol = self
                     )
                     field = TIMERSTATUS
                  )
                  left =
                  (callparan, resultdef = Boolean = "Boolean", pos = (539,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (ordconstn, resultdef = Boolean = "Boolean", pos = (539,26), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                        typedef = "Boolean"
                        value = 1
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (539,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     (nothingn, resultdef =  = "untyped", pos = (539,20), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
after the firstpass
TimerStatusTimer(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (541,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (ifn, resultdef =  = "untyped", pos = (535,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         (loadn, resultdef = Boolean = "Boolean", pos = (535,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
            nil
            symbol = STATUS
         )
         (blockn, resultdef =  = "untyped", pos = (536,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
            (statementn, resultdef =  = "untyped", pos = (537,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetText(<TStatusPanel>;const TTranslateString);
                  methodpointer =
                  (temprefn, resultdef = TStatusPanel = "TStatusPanel", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                     temptypedef = TStatusPanel = "TStatusPanel", (tempinfo = $0000000091BB6EF0 flags = [ti_may_be_in_reg])
                  )
                  callinitblock =
                  (blockn, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                     (statementn, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (tempcreaten, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           size = 8, temptypedef = TStatusPanel = "TStatusPanel", tempinfo = $0000000091BB6EF0
                           [ti_may_be_in_reg]
                           tempinit =
                           nil
                        )

                     )
                     (statementn, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                        (assignn, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
                           (temprefn, resultdef = TStatusPanel = "TStatusPanel", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1
                              temptypedef = TStatusPanel = "TStatusPanel", (tempinfo = $0000000091BB6EF0 flags = [ti_may_be_in_reg])
                           )
                           (calln, resultdef = TStatusPanel = "TStatusPanel", pos = (537,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255
                              proc = GetItem(<TStatusPanels>;LongInt):ComCtrls.TStatusPanel;
                              methodpointer =
                              (subscriptn, resultdef = TStatusPanels = "TStatusPanels", pos = (537,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                 (subscriptn, resultdef = TStatusBar = "TStatusBar", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                    (loadn, resultdef = TFormMain = "TFormMain", pos = (537,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                       nil
                                       symbol = self
                                    )
                                    field = STATUSBAR1
                                 )
                                 field = FPANELS
                              )
                              left =
                              (callparan, resultdef = <nil>, pos = (537,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                                 (subscriptn, resultdef = TStatusPanels = "TStatusPanels", pos = (537,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4
                                    (subscriptn, resultdef = TStatusBar = "TStatusBar", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                       (loadn, resultdef = TFormMain = "TFormMain", pos = (537,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                          nil
                                          symbol = self
                                       )
                                       field = STATUSBAR1
                                    )
                                    field = FPANELS
                                 )

                              )
                              (callparan, resultdef = LongInt = "LongInt", pos = (537,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                                 (ordconstn, resultdef = LongInt = "LongInt", pos = (537,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                                    typedef = "LongInt"
                                    value = 0
                                 )

                              )
                           )
                        )

                     )
                  )
                  callcleanupblock =
                  (blockn, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                     (statementn, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                        (tempdeleten, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0
                           release_to_normal: FALSE, temptypedef = TStatusPanel = "TStatusPanel", temptype = tt_persistent, tempinfo = $0000000091BB6EF0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = TTranslateString = "AnsiString(0)", pos = (537,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (loadn, resultdef = TTranslateString = "AnsiString(0)", pos = (537,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        nil
                        symbol = STATUSTEXT
                     )

                  )
                  (callparan, resultdef = <nil>, pos = (537,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = []
                     (temprefn, resultdef = TStatusPanel = "TStatusPanel", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1
                        temptypedef = TStatusPanel = "TStatusPanel", (tempinfo = $0000000091BB6EF0 flags = [ti_may_be_in_reg])
                     )

                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (538,14), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (assignn, resultdef =  = "untyped", pos = (538,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
                  (loadn, resultdef = Boolean = "Boolean", pos = (538,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
                     nil
                     symbol = STATUS
                  )
                  (ordconstn, resultdef = Boolean = "Boolean", pos = (538,9), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                     typedef = "Boolean"
                     value = 0
                  )
               )

            )
            (statementn, resultdef =  = "untyped", pos = (539,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
               (calln, resultdef =  = "untyped", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255
                  proc = SetEnabled(<TCustomTimer>;Boolean);
                  methodpointer =
                  (subscriptn, resultdef = TTimer = "TTimer", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                     (loadn, resultdef = TFormMain = "TFormMain", pos = (539,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                        nil
                        symbol = self
                     )
                     field = TIMERSTATUS
                  )
                  vmt_entry =
                  (subscriptn, resultdef = <no type symbol> = "<address of procedure(Boolean) of object;Register>", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
                     (derefn, resultdef = TTimer. = "<record type>", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5
                        (typeconvn, resultdef = <no type symbol> = "^TTimer.<record type>", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, convtype = tc_equal, convnodeflags = []
                           (subscriptn, resultdef = Pointer = "^untyped", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
                              (subscriptn, resultdef = TTimer = "TTimer", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                                 (loadn, resultdef = TFormMain = "TFormMain", pos = (539,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                                    nil
                                    symbol = self
                                 )
                                 field = TIMERSTATUS
                              )
                              field = hidden_vptr$TOBJECT
                           )
                        )
                     )
                     field = f59
                  )
                  left =
                  (callparan, resultdef = <nil>, pos = (539,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
                     (subscriptn, resultdef = TTimer = "TTimer", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2
                        (loadn, resultdef = TFormMain = "TFormMain", pos = (539,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0
                           nil
                           symbol = self
                        )
                        field = TIMERSTATUS
                     )

                  )
                  (callparan, resultdef = Boolean = "Boolean", pos = (539,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = []
                     (ordconstn, resultdef = Boolean = "Boolean", pos = (539,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
                        typedef = "Boolean"
                        value = 1
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
right before code generation
TimerStatusTimer(TObject);
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400C40
   (statementn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400BE0
      (asmn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400B80
      )

   )
   (statementn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093399A60
      (asmn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400B20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400AC0
      (asmn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400D00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400CA0
      (asmn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E1AA0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400E80
      (blockn, resultdef =  = "untyped", pos = (534,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 0000000093485AC0
         (statementn, resultdef =  = "untyped", pos = (541,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FBC00
            (ifn, resultdef =  = "untyped", pos = (535,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484440
               (loadn, resultdef = Boolean = "Boolean", pos = (535,4), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FBA20
                  nil
                  symbol = STATUS
               )
               (blockn, resultdef =  = "untyped", pos = (536,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485160
                  (statementn, resultdef =  = "untyped", pos = (537,39), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484C80
                     (calln, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093484F80
                        proc = SetText(<TStatusPanel>;const TTranslateString);
                        methodpointer =
                        (temprefn, resultdef = TStatusPanel = "TStatusPanel", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 000000009339E800
                           temptypedef = TStatusPanel = "TStatusPanel", (tempinfo = $0000000091BB6EF0 flags = [ti_may_be_in_reg])
                        )
                        callinitblock =
                        (blockn, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400E20
                           (statementn, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933E0E40
                              (tempcreaten, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093400DC0
                                 size = 8, temptypedef = TStatusPanel = "TStatusPanel", tempinfo = $0000000091BB6EF0
                                 [ti_may_be_in_reg]
                                 tempinit =
                                 nil
                              )

                           )
                           (statementn, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400D60
                              (assignn, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093404FC0
                                 (temprefn, resultdef = TStatusPanel = "TStatusPanel", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [nf_write], cmplx = 1, optinfo = 00000000933FD9A0
                                    temptypedef = TStatusPanel = "TStatusPanel", (tempinfo = $0000000091BB6EF0 flags = [ti_may_be_in_reg])
                                 )
                                 (calln, resultdef = TStatusPanel = "TStatusPanel", pos = (537,21), loc = LOC_INVALID, expectloc = LOC_REG, flags = [nf_isproperty,nf_no_lvalue], cmplx = 255, optinfo = 0000000093405080
                                    proc = GetItem(<TStatusPanels>;LongInt):ComCtrls.TStatusPanel;
                                    methodpointer =
                                    (subscriptn, resultdef = TStatusPanels = "TStatusPanels", pos = (537,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 0000000093405140
                                       (subscriptn, resultdef = TStatusBar = "TStatusBar", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000934028C0
                                          (loadn, resultdef = TFormMain = "TFormMain", pos = (537,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093402080
                                             nil
                                             symbol = self
                                          )
                                          field = STATUSBAR1
                                       )
                                       field = FPANELS
                                    )
                                    left =
                                    (callparan, resultdef = <nil>, pos = (537,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093403C40
                                       (subscriptn, resultdef = TStatusPanels = "TStatusPanels", pos = (537,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_isproperty,nf_no_lvalue], cmplx = 4, optinfo = 00000000934023E0
                                          (subscriptn, resultdef = TStatusBar = "TStatusBar", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093402AA0
                                             (loadn, resultdef = TFormMain = "TFormMain", pos = (537,11), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093402020
                                                nil
                                                symbol = self
                                             )
                                             field = STATUSBAR1
                                          )
                                          field = FPANELS
                                       )

                                    )
                                    (callparan, resultdef = LongInt = "LongInt", pos = (537,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000934010C0
                                       (ordconstn, resultdef = LongInt = "LongInt", pos = (537,20), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093401060
                                          typedef = "LongInt"
                                          value = 0
                                       )

                                    )
                                 )
                              )

                           )
                        )
                        callcleanupblock =
                        (blockn, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009339E080
                           (statementn, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 0000000093401420
                              (tempdeleten, resultdef =  = "untyped", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 0, optinfo = 000000009339F580
                                 release_to_normal: FALSE, temptypedef = TStatusPanel = "TStatusPanel", temptype = tt_persistent, tempinfo = $0000000091BB6EF0
                              )

                           )
                        )
                        left =
                        (callparan, resultdef = TTranslateString = "AnsiString(0)", pos = (537,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000934014E0
                           (loadn, resultdef = TTranslateString = "AnsiString(0)", pos = (537,39), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000934020E0
                              nil
                              symbol = STATUSTEXT
                           )

                        )
                        (callparan, resultdef = <nil>, pos = (537,27), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], optinfo = 0000000093401480
                           (temprefn, resultdef = TStatusPanel = "TStatusPanel", pos = (537,1), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 1, optinfo = 0000000093401CC0
                              temptypedef = TStatusPanel = "TStatusPanel", (tempinfo = $0000000091BB6EF0 flags = [ti_may_be_in_reg])
                           )

                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (538,14), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093484D40
                     (assignn, resultdef =  = "untyped", pos = (538,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 0000000093484E60
                        (loadn, resultdef = Boolean = "Boolean", pos = (538,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933FC1A0
                           nil
                           symbol = STATUS
                        )
                        (ordconstn, resultdef = Boolean = "Boolean", pos = (538,9), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000934015A0
                           typedef = "Boolean"
                           value = 0
                        )
                     )

                  )
                  (statementn, resultdef =  = "untyped", pos = (539,26), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093485100
                     (calln, resultdef =  = "untyped", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_isproperty], cmplx = 255, optinfo = 0000000093484680
                        proc = SetEnabled(<TCustomTimer>;Boolean);
                        methodpointer =
                        (subscriptn, resultdef = TTimer = "TTimer", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093401540
                           (loadn, resultdef = TFormMain = "TFormMain", pos = (539,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093484EC0
                              nil
                              symbol = self
                           )
                           field = TIMERSTATUS
                        )
                        vmt_entry =
                        (subscriptn, resultdef = <no type symbol> = "<address of procedure(Boolean) of object;Register>", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 00000000934013C0
                           (derefn, resultdef = TTimer. = "<record type>", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 5, optinfo = 0000000093401360
                              (typeconvn, resultdef = <no type symbol> = "^TTimer.<record type>", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 4, optinfo = 00000000933E0D20, convtype = tc_equal, convnodeflags = []
                                 (subscriptn, resultdef = Pointer = "^untyped", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093401720
                                    (subscriptn, resultdef = TTimer = "TTimer", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 00000000934016C0
                                       (loadn, resultdef = TFormMain = "TFormMain", pos = (539,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 0000000093484E00
                                          nil
                                          symbol = self
                                       )
                                       field = TIMERSTATUS
                                    )
                                    field = hidden_vptr$TOBJECT
                                 )
                              )
                           )
                           field = f59
                        )
                        left =
                        (callparan, resultdef = <nil>, pos = (539,20), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000934017E0
                           (subscriptn, resultdef = TTimer = "TTimer", pos = (539,1), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 2, optinfo = 0000000093401780
                              (loadn, resultdef = TFormMain = "TFormMain", pos = (539,12), loc = LOC_INVALID, expectloc = LOC_CREG, flags = [], cmplx = 0, optinfo = 00000000933FC140
                                 nil
                                 symbol = self
                              )
                              field = TIMERSTATUS
                           )

                        )
                        (callparan, resultdef = Boolean = "Boolean", pos = (539,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], optinfo = 00000000934018A0
                           (ordconstn, resultdef = Boolean = "Boolean", pos = (539,26), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 0000000093401840
                              typedef = "Boolean"
                              value = 1
                           )

                        )
                     )

                  )
               )
               nil
               nil
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (541,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093401660
      (asmn, resultdef =  = "untyped", pos = (541,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093401600
      )

   )
   (statementn, resultdef =  = "untyped", pos = (541,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093401000
      (finalizetempsn, resultdef =  = "untyped", pos = (541,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400FA0
      )

   )
)

*******************************************************************************
after parsing
$UNITFORMMAIN_$$_init$; Register;
*******************************************************************************
nil

*******************************************************************************
after parsing
$main; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
   (statementn, resultdef = <nil>, pos = (17,37), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (17,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (loadn, resultdef = Boolean = "Boolean", pos = (17,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
            nil
            symbol = REQUIREDERIVEDFORMRESOURCE
         )
         (ordconstn, resultdef = Boolean = "Boolean", pos = (17,33), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "Boolean"
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (18,27), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (assignn, resultdef =  = "untyped", pos = (18,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         (subscriptn, resultdef = Boolean = "Boolean", pos = (18,21), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write,nf_isproperty]
            (loadn, resultdef = TApplication = "TApplication", pos = (18,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
               nil
               symbol = APPLICATION
            )
            field = FSCALED
         )
         (ordconstn, resultdef = Boolean = "Boolean", pos = (18,23), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            typedef = "Boolean"
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (19,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = Initialize(<TApplication>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = <nil>, pos = (19,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (19,25), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (20,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef =  = "<Formal type>", pos = (20,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormMain = "TFormMain", pos = (20,45), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
               nil
               symbol = FORMMAIN
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormMain", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typen, resultdef = TFormMain = "TFormMain", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (20,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (20,46), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (21,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef =  = "<Formal type>", pos = (21,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (21,53), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [nf_write]
               nil
               symbol = FORMNEWIMAGE
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (21,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (21,54), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (22,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
      (calln, resultdef =  = "untyped", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
         proc = Run(<TApplication>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = <nil>, pos = (22,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            (nothingn, resultdef =  = "untyped", pos = (22,18), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
            )

         )
      )

   )
)

*******************************************************************************
after the firstpass
$main; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255
   (statementn, resultdef =  = "untyped", pos = (17,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (17,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2
         (loadn, resultdef = Boolean = "Boolean", pos = (17,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
            nil
            symbol = REQUIREDERIVEDFORMRESOURCE
         )
         (ordconstn, resultdef = Boolean = "Boolean", pos = (17,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "Boolean"
            value = 1
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (18,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (assignn, resultdef =  = "untyped", pos = (18,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4
         (subscriptn, resultdef = Boolean = "Boolean", pos = (18,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_isproperty], cmplx = 3
            (loadn, resultdef = TApplication = "TApplication", pos = (18,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = APPLICATION
            )
            field = FSCALED
         )
         (ordconstn, resultdef = Boolean = "Boolean", pos = (18,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0
            typedef = "Boolean"
            value = 1
         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (19,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Initialize(<TApplication>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         vmt_entry =
         (subscriptn, resultdef = <no type symbol> = "<address of procedure of object;Register>", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
            (derefn, resultdef = TApplication. = "<record type>", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4
               (typeconvn, resultdef = <no type symbol> = "^TApplication.<record type>", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 3, convtype = tc_equal, convnodeflags = []
                  (subscriptn, resultdef = Pointer = "^untyped", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3
                     (loadn, resultdef = TApplication = "TApplication", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
                        nil
                        symbol = APPLICATION
                     )
                     field = hidden_vptr$TOBJECT
                  )
               )
            )
            field = f67
         )
         left =
         (callparan, resultdef = <nil>, pos = (19,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (loadn, resultdef = TApplication = "TApplication", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (20,46), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef =  = "<Formal type>", pos = (20,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (loadn, resultdef = TFormMain = "TFormMain", pos = (20,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
               nil
               symbol = FORMMAIN
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormMain", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (typen, resultdef = TFormMain = "TFormMain", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (20,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (loadn, resultdef = TApplication = "TApplication", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (21,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef =  = "<Formal type>", pos = (21,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (21,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1
               nil
               symbol = FORMNEWIMAGE
            )

         )
         (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = []
            (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, convtype = tc_equal, convnodeflags = []
               (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1
                  (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = []
                  )
               )
            )

         )
         (callparan, resultdef = <nil>, pos = (21,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (22,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
      (calln, resultdef =  = "untyped", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255
         proc = Run(<TApplication>);
         methodpointer =
         (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = <nil>, pos = (22,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = []
            (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1
               nil
               symbol = APPLICATION
            )

         )
      )

   )
)

*******************************************************************************
right before code generation
$main; Register;
*******************************************************************************
(blockn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FE780
   (statementn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FED80
      (asmn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FEDE0
      )

   )
   (statementn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FF020
      (asmn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FEF00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933FEF60
      (asmn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093400A00
      )

   )
   (statementn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000934001C0
      (asmn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093403100
      )

   )
   (statementn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093401AE0
      (blockn, resultdef =  = "untyped", pos = (16,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [nf_usercode_entry], cmplx = 255, optinfo = 00000000933F6200
         (statementn, resultdef =  = "untyped", pos = (17,37), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 00000000933F12E0
            (assignn, resultdef =  = "untyped", pos = (17,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 2, optinfo = 00000000933F1340
               (loadn, resultdef = Boolean = "Boolean", pos = (17,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 00000000933FF0E0
                  nil
                  symbol = REQUIREDERIVEDFORMRESOURCE
               )
               (ordconstn, resultdef = Boolean = "Boolean", pos = (17,33), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 00000000934033A0
                  typedef = "Boolean"
                  value = 1
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (18,27), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093468120
            (assignn, resultdef =  = "untyped", pos = (18,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 4, optinfo = 0000000093468180
               (subscriptn, resultdef = Boolean = "Boolean", pos = (18,21), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write,nf_isproperty], cmplx = 3, optinfo = 0000000093401B40
                  (loadn, resultdef = TApplication = "TApplication", pos = (18,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FF080
                     nil
                     symbol = APPLICATION
                  )
                  field = FSCALED
               )
               (ordconstn, resultdef = Boolean = "Boolean", pos = (18,23), loc = LOC_INVALID, expectloc = LOC_CONST, flags = [], cmplx = 0, optinfo = 000000009339F460
                  typedef = "Boolean"
                  value = 1
               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (19,25), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093468FC0
            (calln, resultdef =  = "untyped", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093469080
               proc = Initialize(<TApplication>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FF260
                  nil
                  symbol = APPLICATION
               )
               vmt_entry =
               (subscriptn, resultdef = <no type symbol> = "<address of procedure of object;Register>", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 0000000093400760
                  (derefn, resultdef = TApplication. = "<record type>", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 4, optinfo = 00000000933FFB60
                     (typeconvn, resultdef = <no type symbol> = "^TApplication.<record type>", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_explicit], cmplx = 3, optinfo = 0000000093400520, convtype = tc_equal, convnodeflags = []
                        (subscriptn, resultdef = Pointer = "^untyped", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 3, optinfo = 00000000933FF320
                           (loadn, resultdef = TApplication = "TApplication", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FF140
                              nil
                              symbol = APPLICATION
                           )
                           field = hidden_vptr$TOBJECT
                        )
                     )
                  )
                  field = f67
               )
               left =
               (callparan, resultdef = <nil>, pos = (19,25), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 000000009339E920
                  (loadn, resultdef = TApplication = "TApplication", pos = (19,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FF1A0
                     nil
                     symbol = APPLICATION
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (20,46), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093469680
            (calln, resultdef =  = "untyped", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093469740
               proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 000000009347E920
                  nil
                  symbol = APPLICATION
               )
               left =
               (callparan, resultdef =  = "<Formal type>", pos = (20,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FF3E0
                  (loadn, resultdef = TFormMain = "TFormMain", pos = (20,45), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 000000009339E8C0
                     nil
                     symbol = FORMMAIN
                  )

               )
               (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 00000000933FF680
                  (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933FF860, convtype = tc_equal, convnodeflags = []
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormMain", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933FE600
                        (typen, resultdef = TFormMain = "TFormMain", pos = (20,35), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 000000009339F040
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (20,46), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FE480
                  (loadn, resultdef = TApplication = "TApplication", pos = (20,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000933FF200
                     nil
                     symbol = APPLICATION
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (21,54), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009346A400
            (calln, resultdef =  = "untyped", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009346A460
               proc = CreateForm(<TApplication>;TComponentClass;out <Formal type>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000934072A0
                  nil
                  symbol = APPLICATION
               )
               left =
               (callparan, resultdef =  = "<Formal type>", pos = (21,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FFDA0
                  (loadn, resultdef = TFormNewImage = "TFormNewImage", pos = (21,53), loc = LOC_INVALID, expectloc = LOC_REF, flags = [nf_write], cmplx = 1, optinfo = 0000000093407300
                     nil
                     symbol = FORMNEWIMAGE
                  )

               )
               (callparan, resultdef = TComponentClass = "Class Of TComponent", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], optinfo = 00000000933FE3C0
                  (typeconvn, resultdef = TComponentClass = "Class Of TComponent", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933FFD40, convtype = tc_equal, convnodeflags = []
                     (loadvmtaddrn, resultdef = <no type symbol> = "Class Of TFormNewImage", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_REG, flags = [], cmplx = 1, optinfo = 00000000933FE5A0
                        (typen, resultdef = TFormNewImage = "TFormNewImage", pos = (21,39), loc = LOC_INVALID, expectloc = LOC_INVALID, flags = [], optinfo = 00000000933FFE60
                        )
                     )
                  )

               )
               (callparan, resultdef = <nil>, pos = (21,54), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 00000000933FFE00
                  (loadn, resultdef = TApplication = "TApplication", pos = (21,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000934073C0
                     nil
                     symbol = APPLICATION
                  )

               )
            )

         )
         (statementn, resultdef =  = "untyped", pos = (22,18), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093407120
            (calln, resultdef =  = "untyped", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093407180
               proc = Run(<TApplication>);
               methodpointer =
               (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 00000000934071E0
                  nil
                  symbol = APPLICATION
               )
               left =
               (callparan, resultdef = <nil>, pos = (22,18), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], optinfo = 0000000093400940
                  (loadn, resultdef = TApplication = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_REF, flags = [], cmplx = 1, optinfo = 0000000093407240
                     nil
                     symbol = APPLICATION
                  )

               )
            )

         )
      )

   )
   (statementn, resultdef =  = "untyped", pos = (23,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 000000009339F6A0
      (asmn, resultdef =  = "untyped", pos = (23,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093404A20
      )

   )
   (statementn, resultdef =  = "untyped", pos = (23,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093403700
      (finalizetempsn, resultdef =  = "untyped", pos = (23,1), loc = LOC_INVALID, expectloc = LOC_VOID, flags = [], cmplx = 255, optinfo = 0000000093405440
      )

   )
)
